; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\spifi\qqueue.o --asm_dir=.\ --list_dir=.\ --depend=.\spifi\qqueue.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\spifi\qqueue.crf ..\..\common\qqueue.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _ZN6QqueueC2Ev                  ; Alternate entry point ; Qqueue::Qqueue__sub_object()
                  _ZN6QqueueC1Ev PROC ; Qqueue::Qqueue()
;;;21     
;;;22     Qqueue::Qqueue()
;;;23     {
;;;24     #ifdef PIXY
;;;25         m_fields = (QqueueFields *)QQ_LOC;
;;;26     #else
;;;27         m_fields = (QqueueFields *)(new uint8_t[QQ_SIZE]);
;;;28     #endif
;;;29         memset((void *)m_fields, 0, sizeof(QqueueFields));
;;;30     }
;;;31     
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
000004  4846              LDR      r0,|L1.288|
000006  6020              STR      r0,[r4,#0]
000008  2110              MOVS     r1,#0x10
00000a  6820              LDR      r0,[r4,#0]
00000c  f7fffffe          BL       __aeabi_memclr
000010  4620              MOV      r0,r4
000012  bd10              POP      {r4,pc}
                          ENDP

                  _ZN6QqueueD2Ev                  ; Alternate entry point ; Qqueue::~Qqueue__sub_object()
                  _ZN6QqueueD1Ev PROC ; Qqueue::~Qqueue()
;;;32     Qqueue::~Qqueue()
;;;33     {
;;;34     #ifdef PIXY
;;;35     #else
;;;36         delete [] m_fields;
;;;37     #endif
;;;38     }
;;;39     
000014  4770              BX       lr
                          ENDP

                  _ZN6Qqueue7dequeueEP4Qval PROC ; Qqueue::dequeue(Qval*)
;;;40     uint32_t Qqueue::dequeue(Qval *val)
000016  b530              PUSH     {r4,r5,lr}
;;;41     {
000018  4602              MOV      r2,r0
;;;42         uint16_t len = m_fields->produced - m_fields->consumed;
00001a  6810              LDR      r0,[r2,#0]
00001c  8880              LDRH     r0,[r0,#4]
00001e  6814              LDR      r4,[r2,#0]
000020  88e4              LDRH     r4,[r4,#6]
000022  1b00              SUBS     r0,r0,r4
000024  b283              UXTH     r3,r0
;;;43         if (len)
000026  b1e3              CBZ      r3,|L1.98|
;;;44         {
;;;45             *val = m_fields->data[m_fields->readIndex++];
000028  6810              LDR      r0,[r2,#0]
00002a  8804              LDRH     r4,[r0,#0]
00002c  1c60              ADDS     r0,r4,#1
00002e  6815              LDR      r5,[r2,#0]
000030  8028              STRH     r0,[r5,#0]
000032  6810              LDR      r0,[r2,#0]
000034  3008              ADDS     r0,r0,#8
000036  eb0000c4          ADD      r0,r0,r4,LSL #3
00003a  6804              LDR      r4,[r0,#0]
00003c  600c              STR      r4,[r1,#0]
00003e  6840              LDR      r0,[r0,#4]
000040  6048              STR      r0,[r1,#4]
;;;46             m_fields->consumed++;
000042  6810              LDR      r0,[r2,#0]
000044  88c0              LDRH     r0,[r0,#6]
000046  1c40              ADDS     r0,r0,#1
000048  6814              LDR      r4,[r2,#0]
00004a  80e0              STRH     r0,[r4,#6]
;;;47             if (m_fields->readIndex==QQ_MEM_SIZE)
00004c  6810              LDR      r0,[r2,#0]
00004e  8800              LDRH     r0,[r0,#0]
000050  f240747f          MOV      r4,#0x77f
000054  42a0              CMP      r0,r4
000056  d102              BNE      |L1.94|
;;;48                 m_fields->readIndex = 0;
000058  2000              MOVS     r0,#0
00005a  6814              LDR      r4,[r2,#0]
00005c  8020              STRH     r0,[r4,#0]
                  |L1.94|
;;;49             return 1;
00005e  2001              MOVS     r0,#1
                  |L1.96|
;;;50         }
;;;51         return 0;
;;;52     }
000060  bd30              POP      {r4,r5,pc}
                  |L1.98|
000062  2000              MOVS     r0,#0                 ;51
000064  e7fc              B        |L1.96|
;;;53     
                          ENDP

                  _ZN6Qqueue7readAllEP4Qvalj PROC ; Qqueue::readAll(Qval*, unsigned)
;;;72     
;;;73     uint32_t Qqueue::readAll(Qval *mem, uint32_t size)
000066  b5f0              PUSH     {r4-r7,lr}
;;;74     {
000068  4603              MOV      r3,r0
00006a  460c              MOV      r4,r1
;;;75         uint16_t len = m_fields->produced - m_fields->consumed;
00006c  681e              LDR      r6,[r3,#0]
00006e  88b6              LDRH     r6,[r6,#4]
000070  681f              LDR      r7,[r3,#0]
000072  88ff              LDRH     r7,[r7,#6]
000074  1bf6              SUBS     r6,r6,r7
000076  b2b1              UXTH     r1,r6
;;;76         uint16_t i, j;
;;;77     
;;;78         for (i=0, j=m_fields->readIndex; i<len && i<size; i++)
000078  2000              MOVS     r0,#0
00007a  681e              LDR      r6,[r3,#0]
00007c  8835              LDRH     r5,[r6,#0]
00007e  e017              B        |L1.176|
                  |L1.128|
;;;79         {
;;;80             mem[i] = m_fields->data[j++];
000080  681e              LDR      r6,[r3,#0]
000082  3608              ADDS     r6,r6,#8
000084  462f              MOV      r7,r5
000086  f1050c01          ADD      r12,r5,#1
00008a  fa1ff58c          UXTH     r5,r12
00008e  eb0606c7          ADD      r6,r6,r7,LSL #3
000092  eb0407c0          ADD      r7,r4,r0,LSL #3
000096  f8d6c000          LDR      r12,[r6,#0]
00009a  f8c7c000          STR      r12,[r7,#0]
00009e  6876              LDR      r6,[r6,#4]
0000a0  607e              STR      r6,[r7,#4]
;;;81             if (j==QQ_MEM_SIZE)
0000a2  f240767f          MOV      r6,#0x77f
0000a6  42b5              CMP      r5,r6
0000a8  d100              BNE      |L1.172|
;;;82                 j = 0;
0000aa  2500              MOVS     r5,#0
                  |L1.172|
0000ac  1c46              ADDS     r6,r0,#1              ;78
0000ae  b2b0              UXTH     r0,r6                 ;78
                  |L1.176|
0000b0  4288              CMP      r0,r1                 ;78
0000b2  da01              BGE      |L1.184|
0000b4  4290              CMP      r0,r2                 ;78
0000b6  d3e3              BCC      |L1.128|
                  |L1.184|
;;;83         }
;;;84         // flush the rest
;;;85         m_fields->consumed += len;
0000b8  681e              LDR      r6,[r3,#0]
0000ba  88f6              LDRH     r6,[r6,#6]
0000bc  440e              ADD      r6,r6,r1
0000be  681f              LDR      r7,[r3,#0]
0000c0  80fe              STRH     r6,[r7,#6]
;;;86         m_fields->readIndex += len;
0000c2  681e              LDR      r6,[r3,#0]
0000c4  8836              LDRH     r6,[r6,#0]
0000c6  440e              ADD      r6,r6,r1
0000c8  681f              LDR      r7,[r3,#0]
0000ca  803e              STRH     r6,[r7,#0]
;;;87         if (m_fields->readIndex>=QQ_MEM_SIZE)
0000cc  681e              LDR      r6,[r3,#0]
0000ce  8836              LDRH     r6,[r6,#0]
0000d0  f240777f          MOV      r7,#0x77f
0000d4  42be              CMP      r6,r7
0000d6  d305              BCC      |L1.228|
;;;88             m_fields->readIndex -= QQ_MEM_SIZE;
0000d8  681e              LDR      r6,[r3,#0]
0000da  8836              LDRH     r6,[r6,#0]
0000dc  f2a6767f          SUB      r6,r6,#0x77f
0000e0  681f              LDR      r7,[r3,#0]
0000e2  803e              STRH     r6,[r7,#0]
                  |L1.228|
;;;89     
;;;90         return i;
;;;91     }
0000e4  bdf0              POP      {r4-r7,pc}
;;;92     
                          ENDP

                  _ZN6Qqueue5flushEv PROC ; Qqueue::flush()
;;;93     void Qqueue::flush()
0000e6  6802              LDR      r2,[r0,#0]
;;;94     {
;;;95         uint16_t len = m_fields->produced - m_fields->consumed;
0000e8  8892              LDRH     r2,[r2,#4]
0000ea  6803              LDR      r3,[r0,#0]
0000ec  88db              LDRH     r3,[r3,#6]
0000ee  1ad2              SUBS     r2,r2,r3
0000f0  b291              UXTH     r1,r2
;;;96     
;;;97         m_fields->consumed += len;
0000f2  6802              LDR      r2,[r0,#0]
0000f4  88d2              LDRH     r2,[r2,#6]
0000f6  440a              ADD      r2,r2,r1
0000f8  6803              LDR      r3,[r0,#0]
0000fa  80da              STRH     r2,[r3,#6]
;;;98         m_fields->readIndex += len;
0000fc  6802              LDR      r2,[r0,#0]
0000fe  8812              LDRH     r2,[r2,#0]
000100  440a              ADD      r2,r2,r1
000102  6803              LDR      r3,[r0,#0]
000104  801a              STRH     r2,[r3,#0]
;;;99         if (m_fields->readIndex>=QQ_MEM_SIZE)
000106  6802              LDR      r2,[r0,#0]
000108  8812              LDRH     r2,[r2,#0]
00010a  f240737f          MOV      r3,#0x77f
00010e  429a              CMP      r2,r3
000110  d305              BCC      |L1.286|
;;;100            m_fields->readIndex -= QQ_MEM_SIZE;
000112  6802              LDR      r2,[r0,#0]
000114  8812              LDRH     r2,[r2,#0]
000116  f2a2727f          SUB      r2,r2,#0x77f
00011a  6803              LDR      r3,[r0,#0]
00011c  801a              STRH     r2,[r3,#0]
                  |L1.286|
;;;101    }
00011e  4770              BX       lr
;;;102    
                          ENDP

                  |L1.288|
                          DCD      0x2000c000

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001
