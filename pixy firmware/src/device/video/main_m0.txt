; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\m0\main_m0.o --asm_dir=.\ --list_dir=.\ --depend=.\m0\main_m0.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DCORE_M0 -DIPC_SLAVE -DPIXY --omf_browse=.\m0\main_m0.crf main_m0.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;24     
;;;25     int main(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	//CTIMER_DECLARE();
;;;28     #if 0
;;;29     	uint32_t memory = SRAM1_LOC;
;;;30     	uint32_t lut = SRAM1_LOC;
;;;31     
;;;32     	//while(1);
;;;33     	memset((void *)QQ_LOC, 0x01, 0x3000);
;;;34     	g_qqueue->writeIndex = 0;
;;;35     	g_qqueue->produced = 0;
;;;36     	g_qqueue->consumed = 0;
;;;37     
;;;38      	while(1)
;;;39      		getRLSFrame(&memory, &lut); 
;;;40     #endif
;;;41     #if 0
;;;42     	int i = 0x12345678;
;;;43     	foo(&i);
;;;44     	printf("%d\n", i);
;;;45     	while(1);
;;;46     #endif
;;;47     #if 0
;;;48     	int i;
;;;49     	uint32_t lut = SRAM1_LOC;
;;;50      	uint32_t memory = SRAM1_LOC+0x1000;
;;;51     	uint8_t *plut = (uint8_t *)lut;
;;;52     	for (i=0; i<0x4000; i++)
;;;53     		plut[i] = i%5==0 ? 1 : 0;
;;;54     	
;;;55      	while(1)
;;;56      		getRLSFrame(&memory, &lut); 
;;;57     
;;;58     #endif
;;;59     #if 1
;;;60     	printf("M0 start\n");
000002  a007              ADR      r0,|L1.32|
000004  f7fffffe          BL       __2printf
;;;61     
;;;62     	chirpOpen();
000008  f7fffffe          BL       chirpOpen
;;;63     	exec_init();
00000c  f7fffffe          BL       exec_init
;;;64     	frame_init();
000010  f7fffffe          BL       frame_init
;;;65     	rls_init();
000014  f7fffffe          BL       rls_init
;;;66     
;;;67     	//printf("M0 ready\n");
;;;68     	exec_loop();
000018  f7fffffe          BL       exec_loop
;;;69     #endif
;;;70     #if 0
;;;71     	while(1)
;;;72     	{
;;;73     		CTIMER_START();
;;;74     		syncM1((uint32_t *)&LPC_GPIO_PORT->PIN[1], 0x2000);
;;;75     		CTIMER_STOP();
;;;76     		
;;;77     		printf("%d\n", CTIMER_GET());
;;;78     	}	
;;;79     #endif
;;;80     #if 0
;;;81     {
;;;82     	uint32_t i;
;;;83     	uint8_t *lut = (uint8_t *)SRAM1_LOC + 0x10000;
;;;84     	uint32_t memory = SRAM1_LOC;
;;;85     	uint32_t size = SRAM1_SIZE/2;
;;;86     	for (i=0; i<0x10000; i++)
;;;87     		lut[i] = 0;
;;;88     	lut[0xb400] = 0;
;;;89     	lut[0xb401] = 1;
;;;90     	lut[0xb402] = 1;
;;;91     	lut[0xb403] = 1;
;;;92     	lut[0xb404] = 0;
;;;93     	lut[0xb405] = 1;
;;;94     	lut[0xb406] = 1;
;;;95     	lut[0xb407] = 0;
;;;96     	lut[0xb408] = 0;
;;;97     	lut[0xb409] = 0;
;;;98     
;;;99     	while(1)
;;;100     		getRLSFrame(&memory, &size); //, (uint32_t *)&lut);
;;;101    }
;;;102    #endif
;;;103    }
00001c  2000              MOVS     r0,#0
00001e  bd10              POP      {r4,pc}
                          ENDP

                  |L1.32|
000020  4d302073          DCB      "M0 start\n",0
000024  74617274
000028  0a00    
00002a  00                DCB      0
00002b  00                DCB      0

;*** Start embedded assembler ***

#line 1 "main_m0.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_main_m0_c_main____REV16|
#line 130 "..\\libpixy\\core_cmInstr.h"
|__asm___9_main_m0_c_main____REV16| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_main_m0_c_main____REVSH|
#line 144
|__asm___9_main_m0_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
