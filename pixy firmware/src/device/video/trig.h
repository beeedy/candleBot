#ifndef TRIG_H
#define TRIG_H

#define SINE_CALL(arg) (sinLUT[(uint16_t)((arg)*163)]/32768)
#define TAN_CALL(arg) (tanLUT[(uint16_t)((arg)*652 + 512)]/2472)
#define ATAN_CALL(arg) (arctanLUT[(uint16_t)((arg)*2 + 5)]/6)

	// 0 - 100. Input (1/2) Iy to get theta_ph
	float atan_lut[] = {
		-24, 
		-23, 
		-23, 
		-22, 
		-22, 
		-21, 
		-21, 
		-21, 
		-20, 
		-20, 
		-19, 
		-19, 
		-18, 
		-18, 
		-17, 
		-17, 
		-16, 
		-16, 
		-16, 
		-15, 
		-15, 
		-14, 
		-14, 
		-13, 
		-13, 
		-12, 
		-12, 
		-11, 
		-11, 
		-10, 
		-10, 
		-9, 
		-9, 
		-8, 
		-8, 
		-7, 
		-7, 
		-6, 
		-6, 
		-5, 
		-5, 
		-4, 
		-4, 
		-3, 
		-3, 
		-2, 
		-2, 
		-1, 
		-1, 
		0, 
		0, 
		0, 
		1, 
		1, 
		2, 
		2, 
		3, 
		3, 
		4, 
		4, 
		5, 
		5, 
		6, 
		6, 
		7, 
		7, 
		8, 
		8, 
		9, 
		9, 
		10, 
		10, 
		11, 
		11, 
		12, 
		12, 
		13, 
		13, 
		14, 
		14, 
		15, 
		15, 
		16, 
		16, 
		16, 
		17, 
		17, 
		18, 
		18, 
		19, 
		19, 
		20, 
		20, 
		21, 
		21, 
		21, 
		22, 
		22, 
		23, 
		23, 
		24 };

	
	// Input: (theta_input) + 24 
	// Output: output bitshift right 7 when completely done with all calcs
	float cos_lut[] = {29935, 
30163, 
30382, 
30592, 
30792, 
30983, 
31164, 
31336, 
31499, 
31651, 
31795, 
31928, 
32052, 
32166, 
32270, 
32365, 
32449, 
32524, 
32588, 
32643, 
32688, 
32723, 
32748, 
32763, 
32767, 
32763, 
32748, 
32723, 
32688, 
32643, 
32588, 
32524, 
32449, 
32365, 
32270, 
32166, 
32052, 
31928, 
31795, 
31651, 
31499, 
31336, 
31164, 
30983, 
30792, 
30592, 
30382, 
30163, 
29935, 
29698, 
29452, 
29197, 
28932, 
28660, 
28378, 
28088, 
27789, 
27482, 
27166, 
26842, 
26510, 
26170, 
25822, 
25466, 
25102, 
24730, 
24351, 
23965, 
23571, 
23170, 
22763, 
22348, 
21926, 
21498, 
21063, 
20622, 
20174, 
19720, 
19261, 
18795, 
18324, 
17847, 
17364, 
16877, 
16384, 
15886, 
15384, 
14876, 
14365, 
13848, 
13328, 
12803, 
12275, 
11743, 
11207, 
10668, 
10126, 
9580, 
9032, 
8481, 
7927, 
7371, 
6813, 
6252, 
5690, 
5126, 
4560, 
3993, 
3425, 
2856, 
2286, 
1715, 
1144, 
572, 
0, 
-572, 
-1144, 
-1715, 
-2286, 
-2856, 
-3425, 
-3993, 
-4560, 
-5126, 
-5690, 
-6252, 
-6813, 
-7371, 
-7927, 
-8481, 
-9032, 
-9580, 
-10126, 
-10668, 
-11207, 
-11743, 
-12275, 
-12803, 
-13328, 
-13848, 
-14365, 
-14876, 
-15384, 
-15886, 
-16384, 
-16877, 
-17364, 
-17847, 
-18324, 
-18795, 
-19261, 
-19720, 
-20174, 
-20622, 
-21063, 
-21498, 
-21926, 
-22348, 
-22763, 
-23170, 
-23571, 
-23965, 
-24351, 
-24730, 
-25102, 
-25466, 
-25822, 
-26170, 
-26510, 
-26842, 
-27166, 
-27482, 
-27789, 
-28088, 
-28378, 
-28660, 
-28932, 
-29197, 
-29452, 
-29698, 
-29935, 
-30163, 
-30382, 
-30592
};
	

	
	// Input: (theta_input) - 21  
	// Output: output bitshift right 9 when completely done with all calcs
	float tan_lut[] = {
		197, 
		207, 
		217, 
		228, 
		239, 
		250, 
		261, 
		272, 
		284, 
		296, 
		308, 
		320, 
		332, 
		345, 
		359, 
		372, 
		386, 
		400, 
		415, 
		430, 
		445, 
		461, 
		477, 
		494, 
		512, 
		530, 
		549, 
		569, 
		589, 
		610, 
		632, 
		655, 
		679, 
		705, 
		731, 
		759, 
		788, 
		819, 
		852, 
		887, 
		924, 
		963, 
		1005, 
		1050, 
		1098, 
		1150, 
		1206, 
		1267, 
		1334, 
		1407, 
		1487, 
		1576, 
		1675, 
		1786, 
		1911, 
		2054, 
		2218, 
		2409, 
		2634, 
		2904, 
		3233, 
		3643, 
		4170, 
		4871, 
		5852, 
		7322, 
		9770, 
		14662, 
		29332, 
		32767, 
		-29332, 
		-14662, 
		-9770, 
		-7322, 
		-5852, 
		-4871, 
		-4170, 
		-3643, 
		-3233, 
		-2904, 
		-2634, 
		-2409, 
		-2218, 
		-2054, 
		-1911, 
		-1786, 
		-1675, 
		-1576, 
		-1487, 
		-1407, 
		-1334, 
		-1267, 
		-1206, 
		-1150, 
		-1098, 
		-1050, 
		-1005, 
		-963, 
		-924, 
		-887, 
		-852, 
		-819, 
		-788, 
		-759, 
		-731, 
		-705, 
		-679, 
		-655, 
		-632, 
		-610, 
		-589, 
		-569, 
		-549, 
		-530, 
		-512, 
		-494, 
		-477, 
		-461, 
		-445, 
		-430, 
		-415, 
		-400, 
		-386, 
		-372, 
		-359, 
		-345, 
		-332, 
		-320, 
		-308, 
		-296, 
		-284, 
		-272, 
		-261, 
		-250, 
		-239, 
		-228, 
		-217, 
		-207, 
		-197, 
		-186, 
		-176 };
	
#endif
