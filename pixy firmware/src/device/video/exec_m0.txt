; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\m0\exec_m0.o --asm_dir=.\ --list_dir=.\ --depend=.\m0\exec_m0.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DCORE_M0 -DIPC_SLAVE -DPIXY --omf_browse=.\m0\exec_m0.crf ..\libpixy\exec_m0.c]
                          THUMB

                          AREA ||i.exec_init||, CODE, READONLY, ALIGN=2

                  exec_init PROC
;;;24     
;;;25     int exec_init(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	chirpSetProc("run", (ProcPtr)exec_run);
000002  4907              LDR      r1,|L1.32|
000004  a007              ADR      r0,|L1.36|
000006  f7fffffe          BL       chirpSetProc
;;;28     	chirpSetProc("stop", (ProcPtr)exec_stop);
00000a  4907              LDR      r1,|L1.40|
00000c  a007              ADR      r0,|L1.44|
00000e  f7fffffe          BL       chirpSetProc
;;;29     	chirpSetProc("running", (ProcPtr)exec_running);
000012  4908              LDR      r1,|L1.52|
000014  a008              ADR      r0,|L1.56|
000016  f7fffffe          BL       chirpSetProc
;;;30     		
;;;31     	return 0;	
00001a  2000              MOVS     r0,#0
;;;32     }
00001c  bd10              POP      {r4,pc}
;;;33     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      exec_run
                  |L1.36|
000024  72756e00          DCB      "run",0
                  |L1.40|
                          DCD      exec_stop
                  |L1.44|
00002c  73746f70          DCB      "stop",0
000030  00      
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0
                  |L1.52|
                          DCD      exec_running
                  |L1.56|
000038  72756e6e          DCB      "running",0
00003c  696e6700

                          AREA ||i.exec_loop||, CODE, READONLY, ALIGN=2

                  exec_loop PROC
;;;67     
;;;68     void exec_loop(void)
000000  e013              B        |L2.42|
                  |L2.2|
;;;69     {
;;;70     	while(1)
;;;71     	{
;;;72     		while(!g_run)
000002  e001              B        |L2.8|
                  |L2.4|
;;;73     			chirpService();
000004  f7fffffe          BL       chirpService
                  |L2.8|
000008  4808              LDR      r0,|L2.44|
00000a  7800              LDRB     r0,[r0,#0]            ;72  ; g_run
00000c  2800              CMP      r0,#0                 ;72
00000e  d0f9              BEQ      |L2.4|
;;;74     		 	
;;;75     		setup0();
000010  f7fffffe          BL       setup0
;;;76     		while(g_run)
000014  e003              B        |L2.30|
                  |L2.22|
;;;77     		{
;;;78     			loop0();
000016  f7fffffe          BL       loop0
;;;79     			chirpService();
00001a  f7fffffe          BL       chirpService
                  |L2.30|
00001e  4803              LDR      r0,|L2.44|
000020  7800              LDRB     r0,[r0,#0]            ;76  ; g_run
000022  2800              CMP      r0,#0                 ;76
000024  d1f7              BNE      |L2.22|
;;;80     		}
;;;81     		// set variable to indicate we've stopped
;;;82     		g_running = 0;
000026  4902              LDR      r1,|L2.48|
000028  7008              STRB     r0,[r1,#0]
                  |L2.42|
00002a  e7ea              B        |L2.2|
;;;83     	}
;;;84     }
                          ENDP

                  |L2.44|
                          DCD      g_run
                  |L2.48|
                          DCD      g_running

                          AREA ||i.exec_run||, CODE, READONLY, ALIGN=2

                  exec_run PROC
;;;44     
;;;45     int32_t exec_run(uint8_t *prog)
000000  4601              MOV      r1,r0
;;;46     {
;;;47     	g_program = *prog;
000002  7808              LDRB     r0,[r1,#0]
000004  b240              SXTB     r0,r0
000006  4a04              LDR      r2,|L3.24|
000008  7010              STRB     r0,[r2,#0]
;;;48     	g_run = 1;
00000a  2001              MOVS     r0,#1
00000c  4a03              LDR      r2,|L3.28|
00000e  7010              STRB     r0,[r2,#0]
;;;49     	g_running = 1;		
000010  4a03              LDR      r2,|L3.32|
000012  7010              STRB     r0,[r2,#0]
;;;50     	return 0;
000014  2000              MOVS     r0,#0
;;;51     }
000016  4770              BX       lr
;;;52     
                          ENDP

                  |L3.24|
                          DCD      g_program
                  |L3.28|
                          DCD      g_run
                  |L3.32|
                          DCD      g_running

                          AREA ||i.exec_running||, CODE, READONLY, ALIGN=2

                  exec_running PROC
;;;33     
;;;34     uint32_t exec_running(void)
000000  4801              LDR      r0,|L4.8|
;;;35     {
;;;36     	return (uint32_t)g_running;
000002  7800              LDRB     r0,[r0,#0]  ; g_running
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      g_running

                          AREA ||i.exec_stop||, CODE, READONLY, ALIGN=2

                  exec_stop PROC
;;;38     
;;;39     int32_t exec_stop(void)
000000  2000              MOVS     r0,#0
;;;40     {
;;;41     	g_run = 0;
000002  4901              LDR      r1,|L5.8|
000004  7008              STRB     r0,[r1,#0]
;;;42     	return 0;
;;;43     }
000006  4770              BX       lr
;;;44     
                          ENDP

                  |L5.8|
                          DCD      g_run

                          AREA ||i.loop0||, CODE, READONLY, ALIGN=2

                  loop0 PROC
;;;61     
;;;62     void loop0()
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	getRLSFrame(&g_m0mem, &g_lut);	
000002  4902              LDR      r1,|L6.12|
000004  4802              LDR      r0,|L6.16|
000006  f7fffffe          BL       getRLSFrame
;;;65     }
00000a  bd10              POP      {r4,pc}
;;;66     
                          ENDP

                  |L6.12|
                          DCD      g_lut
                  |L6.16|
                          DCD      g_m0mem

                          AREA ||i.setup0||, CODE, READONLY, ALIGN=1

                  setup0 PROC
;;;54     
;;;55     void setup0()
000000  4770              BX       lr
;;;56     {
;;;57     }
;;;58     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  g_running
000000  00                DCB      0x00
                  g_run
000001  00                DCB      0x00
                  g_program
000002  ff00              DCB      0xff,0x00
                  g_m0mem
                          DCD      0x10090000
                  g_lut
                          DCD      0x10091000
