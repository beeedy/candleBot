; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\spifi\analogdig.o --asm_dir=.\ --list_dir=.\ --depend=.\spifi\analogdig.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\spifi\analogdig.crf ..\libpixy\analogdig.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _ZN9AnalogDigC2Ev                  ; Alternate entry point ; AnalogDig::AnalogDig__sub_object()
                  _ZN9AnalogDigC1Ev PROC ; AnalogDig::AnalogDig()
;;;24     
;;;25     AnalogDig::AnalogDig()
;;;26     {
;;;27     	m_x = true;
;;;28     	m_lastDetect = false;
;;;29     }
;;;30     
000000  493d              LDR      r1,|L1.248|
000002  493e              LDR      r1,|L1.252|
000004  6001              STR      r1,[r0,#0]
000006  2101              MOVS     r1,#1
000008  7101              STRB     r1,[r0,#4]
00000a  2100              MOVS     r1,#0
00000c  7141              STRB     r1,[r0,#5]
00000e  4770              BX       lr
                          ENDP

                  _Z7ad_initv PROC ; ad_init()
;;;99     
;;;100    void ad_init()
000010  b510              PUSH     {r4,lr}
;;;101    {
;;;102    	g_ad = new AnalogDig;
000012  2008              MOVS     r0,#8
000014  f7fffffe          BL       _Znwj ; operator new(unsigned)
000018  0004              MOVS     r4,r0
00001a  d004              BEQ      |L1.38|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       _ZN9AnalogDigC1Ev ; AnalogDig::AnalogDig()
000022  4604              MOV      r4,r0
000024  e000              B        |L1.40|
                  |L1.38|
000026  2000              MOVS     r0,#0
                  |L1.40|
000028  4935              LDR      r1,|L1.256|
00002a  6008              STR      r0,[r1,#0]  ; g_ad
;;;103    }
00002c  bd10              POP      {r4,pc}
;;;104    
                          ENDP

                  _ZN9AnalogDig12setDirectionEb PROC ; AnalogDig::setDirection(bool)
;;;30     
;;;31     void AnalogDig:: setDirection(bool x)
00002e  7101              STRB     r1,[r0,#4]
;;;32     {
;;;33     	m_x = x;
;;;34     }
000030  4770              BX       lr
;;;35     
                          ENDP

                  _ZN9AnalogDig4openEv PROC ; AnalogDig::open()
;;;36     int AnalogDig::open()
000032  b510              PUSH     {r4,lr}
;;;37     {
000034  4604              MOV      r4,r0
;;;38     	// set pin 1 on I/O connector to output	(Use SGPIO because GPIO interferes with pixel sync)
;;;39     	scu_pinmux(0x1, 3, (MD_PLN | MD_EZI | MD_ZI | MD_EHS), FUNC2); //SGPIO10
000036  2302              MOVS     r3,#2
000038  22f0              MOVS     r2,#0xf0
00003a  2103              MOVS     r1,#3
00003c  2001              MOVS     r0,#1
00003e  f7fffffe          BL       scu_pinmux
;;;40     	LPC_SGPIO->OUT_MUX_CFG10 = 4;
000042  2004              MOVS     r0,#4
000044  492f              LDR      r1,|L1.260|
000046  6288              STR      r0,[r1,#0x28]
;;;41     	LPC_SGPIO->GPIO_OENREG = 1<<10;
000048  0200              LSLS     r0,r0,#8
00004a  492f              LDR      r1,|L1.264|
00004c  6008              STR      r0,[r1,#0]
;;;42     	LPC_DAC->CTRL =	(1<<3); // enable dac output
00004e  2008              MOVS     r0,#8
000050  492e              LDR      r1,|L1.268|
000052  6048              STR      r0,[r1,#4]
;;;43     
;;;44     	return 0;	
000054  2000              MOVS     r0,#0
;;;45     }
000056  bd10              POP      {r4,pc}
;;;46     
                          ENDP

                  _ZN9AnalogDig5closeEv PROC ; AnalogDig::close()
;;;47     int AnalogDig::close()
000058  b510              PUSH     {r4,lr}
;;;48     {
00005a  4604              MOV      r4,r0
;;;49     	LPC_DAC->CTRL = 0; // disable dac output	
00005c  2000              MOVS     r0,#0
00005e  492b              LDR      r1,|L1.268|
000060  6048              STR      r0,[r1,#4]
;;;50     	// set back to MOSI (input)
;;;51     	scu_pinmux(0x1, 3, (MD_PLN | MD_EZI | MD_ZI | MD_EHS), FUNC5); // SSP1_MOSI	 
000062  2305              MOVS     r3,#5
000064  22f0              MOVS     r2,#0xf0
000066  2103              MOVS     r1,#3
000068  2001              MOVS     r0,#1
00006a  f7fffffe          BL       scu_pinmux
;;;52     
;;;53     	return 0;	
00006e  2000              MOVS     r0,#0
;;;54     }
000070  bd10              POP      {r4,pc}
;;;55     
                          ENDP

                  _ZN9AnalogDig6updateEv PROC ; AnalogDig::update()
;;;56     
;;;57     int AnalogDig::update()
000072  b570              PUSH     {r4-r6,lr}
;;;58     {
000074  4606              MOV      r6,r0
;;;59     	uint32_t val;
;;;60     	BlobA *blob;
;;;61     
;;;62     	blob = (BlobA *)g_blobs->getMaxBlob();
000076  2100              MOVS     r1,#0
000078  4825              LDR      r0,|L1.272|
00007a  6800              LDR      r0,[r0,#0]  ; g_blobs
00007c  f7fffffe          BL       _ZN5Blobs10getMaxBlobEt ; Blobs::getMaxBlob(unsigned short)
000080  4604              MOV      r4,r0
;;;63     	if (blob)
000082  b35c              CBZ      r4,|L1.220|
;;;64     	{
;;;65     		if (m_x)
000084  7930              LDRB     r0,[r6,#4]
000086  b160              CBZ      r0,|L1.162|
;;;66     		{
;;;67     			val = blob->m_left+(blob->m_right-blob->m_left)/2;
000088  88a1              LDRH     r1,[r4,#4]
00008a  8862              LDRH     r2,[r4,#2]
00008c  1a88              SUBS     r0,r1,r2
00008e  eb0071d0          ADD      r1,r0,r0,LSR #31
000092  eb020561          ADD      r5,r2,r1,ASR #1
;;;68     			val *= (1<<16);
000096  042d              LSLS     r5,r5,#16
;;;69     			val /= CAM_RES2_WIDTH;
000098  f44f70a0          MOV      r0,#0x140
00009c  fbb5f5f0          UDIV     r5,r5,r0
0000a0  e00c              B        |L1.188|
                  |L1.162|
;;;70     		}
;;;71     		else
;;;72     		{
;;;73     			val = CAM_RES2_HEIGHT-(blob->m_top+(blob->m_bottom-blob->m_top)/2);
0000a2  8921              LDRH     r1,[r4,#8]
0000a4  88e2              LDRH     r2,[r4,#6]
0000a6  1a88              SUBS     r0,r1,r2
0000a8  eb0071d0          ADD      r1,r0,r0,LSR #31
0000ac  eb020161          ADD      r1,r2,r1,ASR #1
0000b0  f1c105c8          RSB      r5,r1,#0xc8
;;;74     			val *= (1<<16);
0000b4  042d              LSLS     r5,r5,#16
;;;75     			val /= CAM_RES2_HEIGHT;
0000b6  20c8              MOVS     r0,#0xc8
0000b8  fbb5f5f0          UDIV     r5,r5,r0
                  |L1.188|
;;;76     		}
;;;77     		val &= 0x0000ffc0; // mask other bits (because datasheet instructs us to do so)
0000bc  f64f70c0          MOV      r0,#0xffc0
0000c0  4005              ANDS     r5,r5,r0
;;;78     
;;;79     		// write dac val
;;;80     		LPC_DAC->CR = val;
0000c2  4812              LDR      r0,|L1.268|
0000c4  6005              STR      r5,[r0,#0]
;;;81     
;;;82     		// delay to let DAC settle before asserting pin 1
;;;83     		if (m_lastDetect==false)
0000c6  7970              LDRB     r0,[r6,#5]
0000c8  b910              CBNZ     r0,|L1.208|
;;;84     			delayus(100);
0000ca  2064              MOVS     r0,#0x64
0000cc  f7fffffe          BL       delayus
                  |L1.208|
;;;85     		// assert digital output
;;;86     		LPC_SGPIO->GPIO_OUTREG = 1<<10;
0000d0  f44f6080          MOV      r0,#0x400
0000d4  490c              LDR      r1,|L1.264|
0000d6  1f09              SUBS     r1,r1,#4
0000d8  6008              STR      r0,[r1,#0]
0000da  e005              B        |L1.232|
                  |L1.220|
;;;87     
;;;88     	}
;;;89     	else // negate digital output
;;;90     	{
;;;91     		LPC_SGPIO->GPIO_OUTREG = 0;
0000dc  2000              MOVS     r0,#0
0000de  490a              LDR      r1,|L1.264|
0000e0  1f09              SUBS     r1,r1,#4
0000e2  6008              STR      r0,[r1,#0]
;;;92     		// zero dac output
;;;93     		LPC_DAC->CR = 0;
0000e4  4909              LDR      r1,|L1.268|
0000e6  6008              STR      r0,[r1,#0]
                  |L1.232|
;;;94     	}
;;;95     
;;;96     	m_lastDetect = blob!=0;
0000e8  b10c              CBZ      r4,|L1.238|
0000ea  2001              MOVS     r0,#1
0000ec  e000              B        |L1.240|
                  |L1.238|
0000ee  2000              MOVS     r0,#0
                  |L1.240|
0000f0  7170              STRB     r0,[r6,#5]
;;;97     	return 0;
0000f2  2000              MOVS     r0,#0
;;;98     }
0000f4  bd70              POP      {r4-r6,pc}
;;;99     
                          ENDP

0000f6  0000              DCW      0x0000
                  |L1.248|
                          DCD      _ZTV7Iserial+0x8 ; vtable for Iserial
                  |L1.252|
                          DCD      _ZTV9AnalogDig+0x8 ; vtable for AnalogDig
                  |L1.256|
                          DCD      g_ad
                  |L1.260|
                          DCD      0x40101000
                  |L1.264|
                          DCD      0x40101218
                  |L1.268|
                          DCD      0x400e1000
                  |L1.272|
                          DCD      g_blobs

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001

                          AREA ||.data||, DATA, ALIGN=2

                  g_ad
                          DCD      0x00000000

                          AREA ||.constdata__ZTV9AnalogDig||, COMGROUP=_ZTV9AnalogDig, DATA, READONLY, ALIGN=2

                  _ZTV9AnalogDig ; vtable for AnalogDig
                          DCD      0x00000000
                          DCD      _ZTI9AnalogDig ; typeinfo for AnalogDig
                          DCD      _ZN9AnalogDig4openEv ; AnalogDig::open()
                          DCD      _ZN9AnalogDig5closeEv ; AnalogDig::close()
                          DCD      _ZN7Iserial7receiveEPhj ; Iserial::receive(unsigned char*, unsigned)
                          DCD      _ZN7Iserial10receiveLenEv ; Iserial::receiveLen()
                          DCD      _ZN9AnalogDig6updateEv ; AnalogDig::update()

                          AREA ||i._ZN7Iserial7receiveEPhj||, COMGROUP=_ZN7Iserial7receiveEPhj, CODE, READONLY, ALIGN=1

                  _ZN7Iserial7receiveEPhj PROC ; Iserial::receive(unsigned char*, unsigned)
;;;139    	}
;;;140    	virtual int receive(uint8_t *buf, uint32_t len)
000000  4603              MOV      r3,r0
;;;141    	{
;;;142    		return 0;
000002  2000              MOVS     r0,#0
;;;143    	}
000004  4770              BX       lr
;;;144    	virtual int receiveLen()
                          ENDP


                          AREA ||area_number.21||, COMGROUP=_ZN7Iserial7receiveEPhj, LINKORDER=||i._ZN7Iserial7receiveEPhj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7Iserial7receiveEPhj||
                          DCD      0x00000001

                          AREA ||i._ZN7Iserial10receiveLenEv||, COMGROUP=_ZN7Iserial10receiveLenEv, CODE, READONLY, ALIGN=1

                  _ZN7Iserial10receiveLenEv PROC ; Iserial::receiveLen()
;;;143    	}
;;;144    	virtual int receiveLen()
000000  4601              MOV      r1,r0
;;;145    	{
;;;146    		return 0;
000002  2000              MOVS     r0,#0
;;;147    	}
000004  4770              BX       lr
;;;148    	virtual int update()
                          ENDP


                          AREA ||area_number.28||, COMGROUP=_ZN7Iserial10receiveLenEv, LINKORDER=||i._ZN7Iserial10receiveLenEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7Iserial10receiveLenEv||
                          DCD      0x00000001

                          AREA ||.constdata__ZTV7Iserial||, COMGROUP=_ZTV7Iserial, DATA, READONLY, ALIGN=2

                  _ZTV7Iserial ; vtable for Iserial
                          DCD      0x00000000
                          DCD      _ZTI7Iserial ; typeinfo for Iserial
                          DCD      _ZN7Iserial4openEv ; Iserial::open()
                          DCD      _ZN7Iserial5closeEv ; Iserial::close()
                          DCD      _ZN7Iserial7receiveEPhj ; Iserial::receive(unsigned char*, unsigned)
                          DCD      _ZN7Iserial10receiveLenEv ; Iserial::receiveLen()
                          DCD      _ZN7Iserial6updateEv ; Iserial::update()

                          AREA ||.constdata__ZTI9AnalogDig||, COMGROUP=_ZTI9AnalogDig, DATA, READONLY, ALIGN=2

                  _ZTI9AnalogDig ; typeinfo for AnalogDig
                          DCD      _ZTVN10__cxxabiv120__si_class_type_infoE+0x8 ; vtable for __cxxabiv1::__si_class_type_info
                          DCD      _ZTS9AnalogDig ; typeinfo name for AnalogDig
                          DCD      _ZTI7Iserial ; typeinfo for Iserial

                          AREA ||.constdata__ZTI7Iserial||, COMGROUP=_ZTI7Iserial, DATA, READONLY, ALIGN=2

                  _ZTI7Iserial ; typeinfo for Iserial
                          DCD      _ZTVN10__cxxabiv117__class_type_infoE+0x8 ; vtable for __cxxabiv1::__class_type_info
                          DCD      _ZTS7Iserial ; typeinfo name for Iserial

                          AREA ||.constdata__ZTS9AnalogDig||, COMGROUP=_ZTS9AnalogDig, DATA, READONLY, ALIGN=0

                  _ZTS9AnalogDig ; typeinfo name for AnalogDig
000000  39416e61          DCB      0x39,0x41,0x6e,0x61
000004  6c6f6744          DCB      0x6c,0x6f,0x67,0x44
000008  696700            DCB      0x69,0x67,0x00

                          AREA ||.constdata__ZTS7Iserial||, COMGROUP=_ZTS7Iserial, DATA, READONLY, ALIGN=0

                  _ZTS7Iserial ; typeinfo name for Iserial
000000  37497365          DCB      0x37,0x49,0x73,0x65
000004  7269616c          DCB      0x72,0x69,0x61,0x6c
000008  00                DCB      0x00

                          AREA ||i._ZN7Iserial4openEv||, COMGROUP=_ZN7Iserial4openEv, CODE, READONLY, ALIGN=1

                  _ZN7Iserial4openEv PROC ; Iserial::open()
;;;131    public:
;;;132    	virtual int open()
000000  4601              MOV      r1,r0
;;;133    	{
;;;134    		return 0;
000002  2000              MOVS     r0,#0
;;;135    	}
000004  4770              BX       lr
;;;136    	virtual int close()
                          ENDP


                          AREA ||area_number.46||, COMGROUP=_ZN7Iserial4openEv, LINKORDER=||i._ZN7Iserial4openEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.46||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7Iserial4openEv||
                          DCD      0x00000001

                          AREA ||i._ZN7Iserial5closeEv||, COMGROUP=_ZN7Iserial5closeEv, CODE, READONLY, ALIGN=1

                  _ZN7Iserial5closeEv PROC ; Iserial::close()
;;;135    	}
;;;136    	virtual int close()
000000  4601              MOV      r1,r0
;;;137    	{
;;;138    		return 0;
000002  2000              MOVS     r0,#0
;;;139    	}
000004  4770              BX       lr
;;;140    	virtual int receive(uint8_t *buf, uint32_t len)
                          ENDP


                          AREA ||area_number.53||, COMGROUP=_ZN7Iserial5closeEv, LINKORDER=||i._ZN7Iserial5closeEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.53||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7Iserial5closeEv||
                          DCD      0x00000001

                          AREA ||i._ZN7Iserial6updateEv||, COMGROUP=_ZN7Iserial6updateEv, CODE, READONLY, ALIGN=1

                  _ZN7Iserial6updateEv PROC ; Iserial::update()
;;;147    	}
;;;148    	virtual int update()
000000  4601              MOV      r1,r0
;;;149    	{
;;;150    		return 0;
000002  2000              MOVS     r0,#0
;;;151    	}
000004  4770              BX       lr
;;;152    };
                          ENDP


                          AREA ||area_number.60||, COMGROUP=_ZN7Iserial6updateEv, LINKORDER=||i._ZN7Iserial6updateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.60||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7Iserial6updateEv||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\libpixy\\analogdig.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___13_analogdig_cpp_g_ad___Z7__REV16j|
#line 130 "..\\libpixy\\core_cmInstr.h"
|__asm___13_analogdig_cpp_g_ad___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___13_analogdig_cpp_g_ad___Z7__REVSHi|
#line 144
|__asm___13_analogdig_cpp_g_ad___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
