; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\spifi\serial.o --asm_dir=.\ --list_dir=.\ --depend=.\spifi\serial.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\spifi\serial.crf ..\libpixy\serial.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Z8callbackPhj PROC ; callback(unsigned char*, unsigned)
;;;26     
;;;27     uint32_t callback(uint8_t *data, uint32_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;28     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;29     	return g_blobs->getBlock(data, len);
000006  462a              MOV      r2,r5
000008  4621              MOV      r1,r4
00000a  485b              LDR      r0,|L1.376|
00000c  6800              LDR      r0,[r0,#0]  ; g_blobs
00000e  f7fffffe          BL       _ZN5Blobs8getBlockEPhj ; Blobs::getBlock(unsigned char*, unsigned)
;;;30     }
000012  bd70              POP      {r4-r6,pc}
;;;31     
                          ENDP

                  _Z16ser_setInterfaceh PROC ; ser_setInterface(unsigned char)
;;;66     
;;;67     int ser_setInterface(uint8_t interface)
000014  b510              PUSH     {r4,lr}
;;;68     {
000016  4604              MOV      r4,r0
;;;69     	if (interface>SER_INTERFACE_ADY)
000018  2c05              CMP      r4,#5
00001a  dd02              BLE      |L1.34|
;;;70     		return -1;
00001c  f04f30ff          MOV      r0,#0xffffffff
                  |L1.32|
;;;71     
;;;72     	if (g_serial!=NULL)
;;;73     		g_serial->close();
;;;74     
;;;75     	g_interface = interface;
;;;76     
;;;77     	switch (interface)
;;;78     	{		    
;;;79     	case SER_INTERFACE_SS_SPI:
;;;80     		g_serial = g_spi;
;;;81     		g_spi->setAutoSlaveSelect(false);
;;;82     		break;
;;;83     
;;;84     	case SER_INTERFACE_I2C:     
;;;85     		g_serial = g_i2c0;
;;;86     		break;
;;;87     
;;;88     	case SER_INTERFACE_UART:    
;;;89     		g_serial = g_uart0;
;;;90     		break;
;;;91     
;;;92     	case SER_INTERFACE_ADX:      
;;;93     		g_ad->setDirection(true);
;;;94     		g_serial = g_ad;
;;;95     		break;
;;;96     
;;;97     	case SER_INTERFACE_ADY:
;;;98     		g_ad->setDirection(false);
;;;99     		g_serial = g_ad;
;;;100    		break;		
;;;101    
;;;102    	default:
;;;103    	case SER_INTERFACE_ARDUINO_SPI:
;;;104    		g_serial = g_spi;
;;;105    		g_spi->setAutoSlaveSelect(true);
;;;106    		break;
;;;107    	}
;;;108    
;;;109    	g_serial->open();
;;;110    
;;;111    	return 0;
;;;112    }
000020  bd10              POP      {r4,pc}
                  |L1.34|
000022  4856              LDR      r0,|L1.380|
000024  6800              LDR      r0,[r0,#0]            ;72  ; g_serial
000026  b130              CBZ      r0,|L1.54|
000028  4854              LDR      r0,|L1.380|
00002a  6800              LDR      r0,[r0,#0]            ;73  ; g_serial
00002c  6800              LDR      r0,[r0,#0]            ;73
00002e  6841              LDR      r1,[r0,#4]            ;73
000030  4852              LDR      r0,|L1.380|
000032  6800              LDR      r0,[r0,#0]            ;73  ; g_serial
000034  4788              BLX      r1                    ;73
                  |L1.54|
000036  4852              LDR      r0,|L1.384|
000038  7004              STRB     r4,[r0,#0]            ;75
00003a  2c06              CMP      r4,#6                 ;77
00003c  d22c              BCS      |L1.152|
00003e  e8dff004          TBB      [pc,r4]               ;77
000042  2c03              DCB      0x2c,0x03
000044  0d121721          DCB      0x0d,0x12,0x17,0x21
000048  484e              LDR      r0,|L1.388|
00004a  6800              LDR      r0,[r0,#0]            ;80  ; g_spi
00004c  494b              LDR      r1,|L1.380|
00004e  6008              STR      r0,[r1,#0]            ;80  ; g_serial
000050  2100              MOVS     r1,#0                 ;81
000052  484c              LDR      r0,|L1.388|
000054  6800              LDR      r0,[r0,#0]            ;81  ; g_spi
000056  f7fffffe          BL       _ZN3Spi18setAutoSlaveSelectEb ; Spi::setAutoSlaveSelect(bool)
00005a  e028              B        |L1.174|
00005c  484a              LDR      r0,|L1.392|
00005e  6800              LDR      r0,[r0,#0]            ;85  ; g_i2c0
000060  4946              LDR      r1,|L1.380|
000062  6008              STR      r0,[r1,#0]            ;85  ; g_serial
000064  e023              B        |L1.174|
000066  4849              LDR      r0,|L1.396|
000068  6800              LDR      r0,[r0,#0]            ;89  ; g_uart0
00006a  4944              LDR      r1,|L1.380|
00006c  6008              STR      r0,[r1,#0]            ;89  ; g_serial
00006e  e01e              B        |L1.174|
000070  2101              MOVS     r1,#1                 ;93
000072  4847              LDR      r0,|L1.400|
000074  6800              LDR      r0,[r0,#0]            ;93  ; g_ad
000076  f7fffffe          BL       _ZN9AnalogDig12setDirectionEb ; AnalogDig::setDirection(bool)
00007a  4845              LDR      r0,|L1.400|
00007c  6800              LDR      r0,[r0,#0]            ;94  ; g_ad
00007e  493f              LDR      r1,|L1.380|
000080  6008              STR      r0,[r1,#0]            ;94  ; g_serial
000082  e014              B        |L1.174|
000084  2100              MOVS     r1,#0                 ;98
000086  4842              LDR      r0,|L1.400|
000088  6800              LDR      r0,[r0,#0]            ;98  ; g_ad
00008a  f7fffffe          BL       _ZN9AnalogDig12setDirectionEb ; AnalogDig::setDirection(bool)
00008e  4840              LDR      r0,|L1.400|
000090  6800              LDR      r0,[r0,#0]            ;99  ; g_ad
000092  493a              LDR      r1,|L1.380|
000094  6008              STR      r0,[r1,#0]            ;99  ; g_serial
000096  e00a              B        |L1.174|
                  |L1.152|
000098  bf00              NOP                            ;103
00009a  483a              LDR      r0,|L1.388|
00009c  6800              LDR      r0,[r0,#0]            ;104  ; g_spi
00009e  4937              LDR      r1,|L1.380|
0000a0  6008              STR      r0,[r1,#0]            ;104  ; g_serial
0000a2  2101              MOVS     r1,#1                 ;105
0000a4  4837              LDR      r0,|L1.388|
0000a6  6800              LDR      r0,[r0,#0]            ;105  ; g_spi
0000a8  f7fffffe          BL       _ZN3Spi18setAutoSlaveSelectEb ; Spi::setAutoSlaveSelect(bool)
0000ac  bf00              NOP                            ;106
                  |L1.174|
0000ae  bf00              NOP                            ;82
0000b0  4832              LDR      r0,|L1.380|
0000b2  6800              LDR      r0,[r0,#0]            ;109  ; g_serial
0000b4  6800              LDR      r0,[r0,#0]            ;109
0000b6  6801              LDR      r1,[r0,#0]            ;109
0000b8  4830              LDR      r0,|L1.380|
0000ba  6800              LDR      r0,[r0,#0]            ;109  ; g_serial
0000bc  4788              BLX      r1                    ;109
0000be  2000              MOVS     r0,#0                 ;111
0000c0  e7ae              B        |L1.32|
;;;113    
                          ENDP

                  _Z14ser_loadParamsv PROC ; ser_loadParams()
;;;44     
;;;45     void ser_loadParams()
0000c2  b500              PUSH     {lr}
;;;46     {
0000c4  b085              SUB      sp,sp,#0x14
;;;47     	prm_add("Data out port", 0, 
0000c6  2000              MOVS     r0,#0
0000c8  9000              STR      r0,[sp,#0]
0000ca  2301              MOVS     r3,#1
0000cc  4a31              LDR      r2,|L1.404|
0000ce  4601              MOV      r1,r0
0000d0  9001              STR      r0,[sp,#4]
0000d2  a031              ADR      r0,|L1.408|
0000d4  f7fffffe          BL       _Z7prm_addPKcjS0_z ; prm_add(const char*, unsigned, const char*, ...)
;;;48     		"@c Interface Selects the port that's used to output data, 0=Arduino ICSP SPI, 1=SPI with SS, 2=I2C, 3=UART, 4=analog/digital x, 5=analog/digital y (default 0)", UINT8(0), END);
;;;49     	prm_add("I2C address", PRM_FLAG_HEX_FORMAT, 
0000d8  2000              MOVS     r0,#0
0000da  2154              MOVS     r1,#0x54
0000dc  2301              MOVS     r3,#1
0000de  4a32              LDR      r2,|L1.424|
0000e0  e9cd1000          STRD     r1,r0,[sp,#0]
0000e4  2110              MOVS     r1,#0x10
0000e6  a031              ADR      r0,|L1.428|
0000e8  f7fffffe          BL       _Z7prm_addPKcjS0_z ; prm_add(const char*, unsigned, const char*, ...)
;;;50     		"@c Interface Sets the I2C address if you are using I2C data out port. (default 0x54)", UINT8(I2C_DEFAULT_SLAVE_ADDR), END);
;;;51     	prm_add("UART baudrate", 0, 
0000ec  2000              MOVS     r0,#0
0000ee  f44f4196          MOV      r1,#0x4b00
0000f2  2304              MOVS     r3,#4
0000f4  4a30              LDR      r2,|L1.440|
0000f6  e9cd1000          STRD     r1,r0,[sp,#0]
0000fa  4601              MOV      r1,r0
0000fc  a02f              ADR      r0,|L1.444|
0000fe  f7fffffe          BL       _Z7prm_addPKcjS0_z ; prm_add(const char*, unsigned, const char*, ...)
;;;52     		"@c Interface Sets the UART baudrate if you are using UART data out port. (default 19200)", UINT32(19200), END);
;;;53     
;;;54     	uint8_t interface, addr;
;;;55     	uint32_t baudrate;
;;;56     
;;;57     	prm_get("Data out port", &interface, END);
000102  2200              MOVS     r2,#0
000104  a904              ADD      r1,sp,#0x10
000106  a024              ADR      r0,|L1.408|
000108  f7fffffe          BL       _Z7prm_getPKcz ; prm_get(const char*, ...)
;;;58     	ser_setInterface(interface);
00010c  f89d0010          LDRB     r0,[sp,#0x10]
000110  f7fffffe          BL       _Z16ser_setInterfaceh ; ser_setInterface(unsigned char)
;;;59     
;;;60     	prm_get("I2C address", &addr, END);
000114  2200              MOVS     r2,#0
000116  a903              ADD      r1,sp,#0xc
000118  a024              ADR      r0,|L1.428|
00011a  f7fffffe          BL       _Z7prm_getPKcz ; prm_get(const char*, ...)
;;;61     	g_i2c0->setSlaveAddr(addr);
00011e  f89d100c          LDRB     r1,[sp,#0xc]
000122  4819              LDR      r0,|L1.392|
000124  6800              LDR      r0,[r0,#0]  ; g_i2c0
000126  f7fffffe          BL       _ZN3I2c12setSlaveAddrEh ; I2c::setSlaveAddr(unsigned char)
;;;62     
;;;63     	prm_get("UART baudrate", &baudrate, END);
00012a  2200              MOVS     r2,#0
00012c  a902              ADD      r1,sp,#8
00012e  a023              ADR      r0,|L1.444|
000130  f7fffffe          BL       _Z7prm_getPKcz ; prm_get(const char*, ...)
;;;64     	g_uart0->setBaudrate(921600);
000134  f44f2161          MOV      r1,#0xe1000
000138  4814              LDR      r0,|L1.396|
00013a  6800              LDR      r0,[r0,#0]  ; g_uart0
00013c  f7fffffe          BL       _ZN4Uart11setBaudrateEj ; Uart::setBaudrate(unsigned)
;;;65     }
000140  b005              ADD      sp,sp,#0x14
000142  bd00              POP      {pc}
;;;66     
                          ENDP

                  _Z8ser_initv PROC ; ser_init()
;;;32     
;;;33     int ser_init()
000144  b510              PUSH     {r4,lr}
;;;34     {
;;;35     	i2c_init(callback);
000146  f2af1047          ADR      r0,_Z8callbackPhj + 1 ; callback(unsigned char*, unsigned)
00014a  f7fffffe          BL       _Z8i2c_initPFjPhjE ; i2c_init(unsigned(*)(unsigned char*, unsigned))
;;;36     	spi_init(callback);
00014e  f2af104f          ADR      r0,_Z8callbackPhj + 1 ; callback(unsigned char*, unsigned)
000152  f7fffffe          BL       _Z8spi_initPFjPhjE ; spi_init(unsigned(*)(unsigned char*, unsigned))
;;;37     	uart_init(callback);
000156  f2af1057          ADR      r0,_Z8callbackPhj + 1 ; callback(unsigned char*, unsigned)
00015a  f7fffffe          BL       _Z9uart_initPFjPhjE ; uart_init(unsigned(*)(unsigned char*, unsigned))
;;;38     	ad_init();
00015e  f7fffffe          BL       _Z7ad_initv ; ad_init()
;;;39     
;;;40     	ser_loadParams();
000162  f7fffffe          BL       _Z14ser_loadParamsv ; ser_loadParams()
;;;41     		
;;;42     	return 0;	
000166  2000              MOVS     r0,#0
;;;43     }
000168  bd10              POP      {r4,pc}
;;;44     
                          ENDP

                  _Z16ser_getInterfacev PROC ; ser_getInterface()
;;;113    
;;;114    uint8_t ser_getInterface()
00016a  4805              LDR      r0,|L1.384|
;;;115    {
;;;116    	return g_interface;
00016c  7800              LDRB     r0,[r0,#0]  ; g_interface
;;;117    }
00016e  4770              BX       lr
;;;118    
                          ENDP

                  _Z13ser_getSerialv PROC ; ser_getSerial()
;;;119    Iserial *ser_getSerial()
000170  4802              LDR      r0,|L1.380|
;;;120    {
;;;121    	return g_serial;
000172  6800              LDR      r0,[r0,#0]  ; g_serial
;;;122    }
000174  4770              BX       lr
                          ENDP

000176  0000              DCW      0x0000
                  |L1.376|
                          DCD      g_blobs
                  |L1.380|
                          DCD      g_serial
                  |L1.384|
                          DCD      g_interface
                  |L1.388|
                          DCD      g_spi
                  |L1.392|
                          DCD      g_i2c0
                  |L1.396|
                          DCD      g_uart0
                  |L1.400|
                          DCD      g_ad
                  |L1.404|
                          DCD      ||.conststring||
                  |L1.408|
000198  44617461          DCB      "Data out port",0
00019c  206f7574
0001a0  20706f72
0001a4  7400    
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L1.424|
                          DCD      ||.conststring||+0xa0
                  |L1.428|
0001ac  49324320          DCB      "I2C address",0
0001b0  61646472
0001b4  65737300
                  |L1.440|
                          DCD      ||.conststring||+0xf8
                  |L1.444|
0001bc  55415254          DCB      "UART baudrate",0
0001c0  20626175
0001c4  64726174
0001c8  6500    
0001ca  00                DCB      0
0001cb  00                DCB      0

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  40632049          DCB      "@c Interface Selects the port that's used to output dat"
000004  6e746572
000008  66616365
00000c  2053656c
000010  65637473
000014  20746865
000018  20706f72
00001c  74207468
000020  61742773
000024  20757365
000028  6420746f
00002c  206f7574
000030  70757420
000034  646174  
000037  612c2030          DCB      "a, 0=Arduino ICSP SPI, 1=SPI with SS, 2=I2C, 3=UART, 4="
00003b  3d417264
00003f  75696e6f
000043  20494353
000047  50205350
00004b  492c2031
00004f  3d535049
000053  20776974
000057  68205353
00005b  2c20323d
00005f  4932432c
000063  20333d55
000067  4152542c
00006b  20343d  
00006e  616e616c          DCB      "analog/digital x, 5=analog/digital y (default 0)",0
000072  6f672f64
000076  69676974
00007a  616c2078
00007e  2c20353d
000082  616e616c
000086  6f672f64
00008a  69676974
00008e  616c2079
000092  20286465
000096  6661756c
00009a  74203029
00009e  00      
00009f  00                DCB      0
0000a0  40632049          DCB      "@c Interface Sets the I2C address if you are using I2C "
0000a4  6e746572
0000a8  66616365
0000ac  20536574
0000b0  73207468
0000b4  65204932
0000b8  43206164
0000bc  64726573
0000c0  73206966
0000c4  20796f75
0000c8  20617265
0000cc  20757369
0000d0  6e672049
0000d4  324320  
0000d7  64617461          DCB      "data out port. (default 0x54)",0
0000db  206f7574
0000df  20706f72
0000e3  742e2028
0000e7  64656661
0000eb  756c7420
0000ef  30783534
0000f3  2900    
0000f5  00                DCB      0
0000f6  00                DCB      0
0000f7  00                DCB      0
0000f8  40632049          DCB      "@c Interface Sets the UART baudrate if you are using UA"
0000fc  6e746572
000100  66616365
000104  20536574
000108  73207468
00010c  65205541
000110  52542062
000114  61756472
000118  61746520
00011c  69662079
000120  6f752061
000124  72652075
000128  73696e67
00012c  205541  
00012f  52542064          DCB      "RT data out port. (default 19200)",0
000133  61746120
000137  6f757420
00013b  706f7274
00013f  2e202864
000143  65666175
000147  6c742031
00014b  39323030
00014f  2900    

                          AREA ||.data||, DATA, ALIGN=2

                  g_interface
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  g_serial
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\libpixy\\serial.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___10_serial_cpp_ca1ff4c7___Z7__REV16j|
#line 130 "..\\libpixy\\core_cmInstr.h"
|__asm___10_serial_cpp_ca1ff4c7___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___10_serial_cpp_ca1ff4c7___Z7__REVSHi|
#line 144
|__asm___10_serial_cpp_ca1ff4c7___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
