; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\spifi\calc.o --asm_dir=.\ --list_dir=.\ --depend=.\spifi\calc.d --cpu=Cortex-M4 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\spifi\calc.crf ..\..\common\calc.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Z4hsvchhhPhS_S_S_ PROC ; hsvc(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned char*, unsigned char*, unsigned char*)
;;;17     
;;;18     void hsvc(uint8_t r, uint8_t g, uint8_t b, uint8_t *h, uint8_t *s, uint8_t *v, uint8_t *c)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;19     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  e9dd8c09          LDRD     r8,r12,[sp,#0x24]
00000e  9f08              LDR      r7,[sp,#0x20]
;;;20         uint8_t min, max, delta;
;;;21         int hue;
;;;22         min = MIN(r, g);
000010  42ac              CMP      r4,r5
000012  da01              BGE      |L1.24|
000014  46a2              MOV      r10,r4
000016  e000              B        |L1.26|
                  |L1.24|
000018  46aa              MOV      r10,r5
                  |L1.26|
00001a  46d1              MOV      r9,r10
;;;23         min = MIN(min, b);
00001c  45b1              CMP      r9,r6
00001e  da01              BGE      |L1.36|
000020  46ca              MOV      r10,r9
000022  e000              B        |L1.38|
                  |L1.36|
000024  46b2              MOV      r10,r6
                  |L1.38|
000026  46d1              MOV      r9,r10
;;;24         max = MAX(r, g);
000028  42ac              CMP      r4,r5
00002a  dd01              BLE      |L1.48|
00002c  46a2              MOV      r10,r4
00002e  e000              B        |L1.50|
                  |L1.48|
000030  46aa              MOV      r10,r5
                  |L1.50|
000032  4650              MOV      r0,r10
;;;25         max = MAX(max, b);
000034  42b0              CMP      r0,r6
000036  dd01              BLE      |L1.60|
000038  4682              MOV      r10,r0
00003a  e000              B        |L1.62|
                  |L1.60|
00003c  46b2              MOV      r10,r6
                  |L1.62|
00003e  4650              MOV      r0,r10
;;;26     
;;;27         *v = max;
000040  f8880000          STRB     r0,[r8,#0]
;;;28         delta = max - min;
000044  eba00a09          SUB      r10,r0,r9
000048  f00a01ff          AND      r1,r10,#0xff
;;;29         if (max>50)
00004c  2832              CMP      r0,#0x32
00004e  dd06              BLE      |L1.94|
;;;30         {
;;;31             //if (delta>50)
;;;32                 *s = ((int)delta<<8)/max;
000050  ea4f2a01          LSL      r10,r1,#8
000054  fb9afaf0          SDIV     r10,r10,r0
000058  f887a000          STRB     r10,[r7,#0]
00005c  e003              B        |L1.102|
                  |L1.94|
;;;33             //else
;;;34             //    *s = 0;
;;;35         }
;;;36         else
;;;37             *s = 0;
00005e  f04f0a00          MOV      r10,#0
000062  f887a000          STRB     r10,[r7,#0]
                  |L1.102|
;;;38         if (max==0 || delta==0)
000066  b100              CBZ      r0,|L1.106|
000068  b949              CBNZ     r1,|L1.126|
                  |L1.106|
;;;39         {
;;;40             *s = 0;
00006a  f04f0a00          MOV      r10,#0
00006e  f887a000          STRB     r10,[r7,#0]
;;;41             *h = 0;
000072  f883a000          STRB     r10,[r3,#0]
;;;42             *c = 0;
000076  f88ca000          STRB     r10,[r12,#0]
                  |L1.122|
;;;43             return;
;;;44         }
;;;45         if (r==max)
;;;46             hue = (((int)g - (int)b)<<8)/delta;         // between yellow & magenta
;;;47         else if (g==max)
;;;48             hue = (2<<8) + (((int)b - (int)r)<<8)/delta;     // between cyan & yellow
;;;49         else
;;;50             hue = (4<<8) + (((int)r - (int)g)<<8)/delta;     // between magenta & cyan
;;;51         if(hue < 0)
;;;52             hue += 6<<8;
;;;53         hue /= 6;
;;;54         *h = hue;
;;;55         *c = delta;
;;;56     }
00007a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.126|
00007e  4284              CMP      r4,r0                 ;45
000080  d106              BNE      |L1.144|
000082  eba50a06          SUB      r10,r5,r6             ;46
000086  ea4f2a0a          LSL      r10,r10,#8            ;46
00008a  fb9af2f1          SDIV     r2,r10,r1             ;46
00008e  e012              B        |L1.182|
                  |L1.144|
000090  4285              CMP      r5,r0                 ;47
000092  d108              BNE      |L1.166|
000094  eba60a04          SUB      r10,r6,r4             ;48
000098  ea4f2a0a          LSL      r10,r10,#8            ;48
00009c  fb9afaf1          SDIV     r10,r10,r1            ;48
0000a0  f50a7200          ADD      r2,r10,#0x200         ;48
0000a4  e007              B        |L1.182|
                  |L1.166|
0000a6  eba40a05          SUB      r10,r4,r5             ;50
0000aa  ea4f2a0a          LSL      r10,r10,#8            ;50
0000ae  fb9afaf1          SDIV     r10,r10,r1            ;50
0000b2  f50a6280          ADD      r2,r10,#0x400         ;50
                  |L1.182|
0000b6  2a00              CMP      r2,#0                 ;51
0000b8  da01              BGE      |L1.190|
0000ba  f50262c0          ADD      r2,r2,#0x600          ;52
                  |L1.190|
0000be  f04f0a06          MOV      r10,#6                ;53
0000c2  fb92f2fa          SDIV     r2,r2,r10             ;53
0000c6  701a              STRB     r2,[r3,#0]            ;54
0000c8  f88c1000          STRB     r1,[r12,#0]           ;55
0000cc  bf00              NOP      
0000ce  e7d4              B        |L1.122|
;;;57     
                          ENDP

                  _Z7rgbPackjjj PROC ; rgbPack(unsigned, unsigned, unsigned)
;;;70     
;;;71     uint32_t rgbPack(uint32_t r, uint32_t g, uint32_t b)
0000d0  4603              MOV      r3,r0
;;;72     {
;;;73         if (r>0xff)
0000d2  2bff              CMP      r3,#0xff
0000d4  d900              BLS      |L1.216|
;;;74             r = 0xff;
0000d6  23ff              MOVS     r3,#0xff
                  |L1.216|
;;;75         if (g>0xff)
0000d8  29ff              CMP      r1,#0xff
0000da  d900              BLS      |L1.222|
;;;76             g = 0xff;
0000dc  21ff              MOVS     r1,#0xff
                  |L1.222|
;;;77         if (b>0xff)
0000de  2aff              CMP      r2,#0xff
0000e0  d900              BLS      |L1.228|
;;;78             b = 0xff;
0000e2  22ff              MOVS     r2,#0xff
                  |L1.228|
;;;79         return (r<<16) | (g<<8) | b;
0000e4  0418              LSLS     r0,r3,#16
0000e6  ea402001          ORR      r0,r0,r1,LSL #8
0000ea  4310              ORRS     r0,r0,r2
;;;80     }
0000ec  4770              BX       lr
;;;81     
                          ENDP

                  _Z9rgbUnpackjPjS_S_ PROC ; rgbUnpack(unsigned, unsigned*, unsigned*, unsigned*)
;;;82     void rgbUnpack(uint32_t color, uint32_t *r, uint32_t *g, uint32_t *b)
0000ee  b510              PUSH     {r4,lr}
;;;83     {
;;;84         *b = color&0xff;
0000f0  b2c4              UXTB     r4,r0
0000f2  601c              STR      r4,[r3,#0]
;;;85         color >>= 8;
0000f4  0a00              LSRS     r0,r0,#8
;;;86         *g = color&0xff;
0000f6  b2c4              UXTB     r4,r0
0000f8  6014              STR      r4,[r2,#0]
;;;87         color >>= 8;
0000fa  0a00              LSRS     r0,r0,#8
;;;88         *r = color&0xff;
0000fc  b2c4              UXTB     r4,r0
0000fe  600c              STR      r4,[r1,#0]
;;;89     }
000100  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  _Z7lightenjh PROC ; lighten(unsigned, unsigned char)
;;;57     
;;;58     uint32_t lighten(uint32_t color, uint8_t factor)
000102  b53e              PUSH     {r1-r5,lr}
;;;59     {
000104  4605              MOV      r5,r0
000106  460c              MOV      r4,r1
;;;60         uint32_t r, g, b;
;;;61     
;;;62         rgbUnpack(color, &r, &g, &b);
000108  466b              MOV      r3,sp
00010a  aa01              ADD      r2,sp,#4
00010c  a902              ADD      r1,sp,#8
00010e  4628              MOV      r0,r5
000110  f7fffffe          BL       _Z9rgbUnpackjPjS_S_ ; rgbUnpack(unsigned, unsigned*, unsigned*, unsigned*)
;;;63     
;;;64         r += factor;
000114  9802              LDR      r0,[sp,#8]
000116  4420              ADD      r0,r0,r4
000118  9002              STR      r0,[sp,#8]
;;;65         g += factor;
00011a  9801              LDR      r0,[sp,#4]
00011c  4420              ADD      r0,r0,r4
00011e  9001              STR      r0,[sp,#4]
;;;66         b += factor;
000120  9800              LDR      r0,[sp,#0]
000122  4420              ADD      r0,r0,r4
000124  9000              STR      r0,[sp,#0]
;;;67     
;;;68         return rgbPack(r, g, b);
000126  e9dd2100          LDRD     r2,r1,[sp,#0]
00012a  9802              LDR      r0,[sp,#8]
00012c  f7fffffe          BL       _Z7rgbPackjjj ; rgbPack(unsigned, unsigned, unsigned)
;;;69     }
000130  bd3e              POP      {r1-r5,pc}
;;;70     
                          ENDP

                  _Z8saturatej PROC ; saturate(unsigned)
;;;90     
;;;91     uint32_t saturate(uint32_t color)
000132  e92d43fe          PUSH     {r1-r9,lr}
;;;92     {
000136  4606              MOV      r6,r0
;;;93         float m;
;;;94         uint32_t max, r, g, b;
;;;95     
;;;96         rgbUnpack(color, &r, &g, &b);
000138  466b              MOV      r3,sp
00013a  aa01              ADD      r2,sp,#4
00013c  a902              ADD      r1,sp,#8
00013e  4630              MOV      r0,r6
000140  f7fffffe          BL       _Z9rgbUnpackjPjS_S_ ; rgbUnpack(unsigned, unsigned*, unsigned*, unsigned*)
;;;97     
;;;98         max = MAX(r, g);
000144  e9dd1001          LDRD     r1,r0,[sp,#4]
000148  4288              CMP      r0,r1
00014a  d901              BLS      |L1.336|
00014c  9802              LDR      r0,[sp,#8]
00014e  e000              B        |L1.338|
                  |L1.336|
000150  9801              LDR      r0,[sp,#4]
                  |L1.338|
000152  4605              MOV      r5,r0
;;;99         max = MAX(max, b);
000154  9800              LDR      r0,[sp,#0]
000156  4285              CMP      r5,r0
000158  d901              BLS      |L1.350|
00015a  4628              MOV      r0,r5
00015c  e000              B        |L1.352|
                  |L1.350|
00015e  9800              LDR      r0,[sp,#0]
                  |L1.352|
000160  4605              MOV      r5,r0
;;;100    
;;;101        // saturate while maintaining ratios
;;;102        m = 255.0f/max;
000162  4628              MOV      r0,r5
000164  f7fffffe          BL       __aeabi_ui2f
000168  4607              MOV      r7,r0
00016a  4639              MOV      r1,r7
00016c  4817              LDR      r0,|L1.460|
00016e  f7fffffe          BL       __aeabi_fdiv
000172  4604              MOV      r4,r0
;;;103        r = (uint8_t)(m*r);
000174  9802              LDR      r0,[sp,#8]
000176  f7fffffe          BL       __aeabi_ui2f
00017a  4680              MOV      r8,r0
00017c  4621              MOV      r1,r4
00017e  f7fffffe          BL       __aeabi_fmul
000182  4607              MOV      r7,r0
000184  f7fffffe          BL       __aeabi_f2uiz
000188  b2c0              UXTB     r0,r0
00018a  9002              STR      r0,[sp,#8]
;;;104        g = (uint8_t)(m*g);
00018c  9801              LDR      r0,[sp,#4]
00018e  f7fffffe          BL       __aeabi_ui2f
000192  4680              MOV      r8,r0
000194  4621              MOV      r1,r4
000196  f7fffffe          BL       __aeabi_fmul
00019a  4607              MOV      r7,r0
00019c  f7fffffe          BL       __aeabi_f2uiz
0001a0  b2c0              UXTB     r0,r0
0001a2  9001              STR      r0,[sp,#4]
;;;105        b = (uint8_t)(m*b);
0001a4  9800              LDR      r0,[sp,#0]
0001a6  f7fffffe          BL       __aeabi_ui2f
0001aa  4680              MOV      r8,r0
0001ac  4621              MOV      r1,r4
0001ae  f7fffffe          BL       __aeabi_fmul
0001b2  4607              MOV      r7,r0
0001b4  f7fffffe          BL       __aeabi_f2uiz
0001b8  b2c0              UXTB     r0,r0
0001ba  9000              STR      r0,[sp,#0]
;;;106    
;;;107        return rgbPack(r, g, b);
0001bc  e9dd2100          LDRD     r2,r1,[sp,#0]
0001c0  9802              LDR      r0,[sp,#8]
0001c2  f7fffffe          BL       _Z7rgbPackjjj ; rgbPack(unsigned, unsigned, unsigned)
;;;108    }
0001c6  e8bd83fe          POP      {r1-r9,pc}
                          ENDP

0001ca  0000              DCW      0x0000
                  |L1.460|
                          DCD      0x437f0000

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001
