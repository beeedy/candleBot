; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash.o --asm_dir=.\ --list_dir=.\ --depend=.\flash.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\flash.crf flash.cpp]
                          THUMB

                          AREA ||i._Z11flash_erasejj||, CODE, READONLY, ALIGN=2

                  _Z11flash_erasejj PROC ; flash_erase(unsigned, unsigned)
;;;18     
;;;19     int32_t flash_erase(uint32_t addr, uint32_t len)
000000  b5f0              PUSH     {r4-r7,lr}
;;;20     {
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;21     	SPIFIopers spifi;
;;;22     	uint32_t addrTemp;
;;;23     	uint32_t i;
;;;24     
;;;25     	// add offset
;;;26     	if (addr>=FLASH_BEGIN && addr<=FLASH_END)
000008  f1b45fa0          CMP      r4,#0x14000000
00000c  d30a              BCC      |L1.36|
00000e  4815              LDR      r0,|L1.100|
000010  68c0              LDR      r0,[r0,#0xc]  ; g_spifi
000012  f10050a0          ADD      r0,r0,#0x14000000
000016  42a0              CMP      r0,r4
000018  d304              BCC      |L1.36|
;;;27     		addr += FLASH_OFFSET;
00001a  4812              LDR      r0,|L1.100|
00001c  6800              LDR      r0,[r0,#0]  ; g_spifi
00001e  f1a050a0          SUB      r0,r0,#0x14000000
000022  4404              ADD      r4,r4,r0
                  |L1.36|
;;;28     
;;;29     	memset((void *)&spifi, 0, sizeof(spifi));
000024  2114              MOVS     r1,#0x14
000026  4668              MOV      r0,sp
000028  f7fffffe          BL       __aeabi_memclr4
;;;30     
;;;31     	for (i=0; i<len; i+=FLASH_SECTOR_SIZE)
00002c  2500              MOVS     r5,#0
00002e  e015              B        |L1.92|
                  |L1.48|
;;;32     	{ 
;;;33     		addrTemp = FLASH_SECTOR_MASK(addr+i);
000030  1960              ADDS     r0,r4,r5
000032  0b07              LSRS     r7,r0,#12
000034  033f              LSLS     r7,r7,#12
;;;34     		spifi.dest = (char *)addrTemp;
000036  9700              STR      r7,[sp,#0]
;;;35     		spifi.length = FLASH_SECTOR_SIZE;
000038  f44f5080          MOV      r0,#0x1000
00003c  9001              STR      r0,[sp,#4]
;;;36     		spifi.scratch = NULL;
00003e  2000              MOVS     r0,#0
000040  9002              STR      r0,[sp,#8]
;;;37     		spifi.options = S_VERIFY_ERASE;
000042  2020              MOVS     r0,#0x20
000044  9004              STR      r0,[sp,#0x10]
;;;38     		if (spifi_erase(&g_spifi, &spifi)) 
000046  4669              MOV      r1,sp
000048  4806              LDR      r0,|L1.100|
00004a  f7fffffe          BL       spifi_erase
00004e  b118              CBZ      r0,|L1.88|
;;;39     			return -1;
000050  f04f30ff          MOV      r0,#0xffffffff
                  |L1.84|
;;;40     	}
;;;41     	return 0;
;;;42     }
000054  b005              ADD      sp,sp,#0x14
000056  bdf0              POP      {r4-r7,pc}
                  |L1.88|
000058  f5055580          ADD      r5,r5,#0x1000         ;31
                  |L1.92|
00005c  42b5              CMP      r5,r6                 ;31
00005e  d3e7              BCC      |L1.48|
000060  2000              MOVS     r0,#0                 ;41
000062  e7f7              B        |L1.84|
;;;43     
                          ENDP

                  |L1.100|
                          DCD      g_spifi

                          AREA ||i._Z13flash_programjPKhj||, CODE, READONLY, ALIGN=2

                  _Z13flash_programjPKhj PROC ; flash_program(unsigned, const unsigned char*, unsigned)
;;;43     
;;;44     int32_t flash_program(uint32_t addr, const uint8_t *data, uint32_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;45     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;46     	SPIFIopers spifi;
;;;47     	// add offset
;;;48     	if (addr>=FLASH_BEGIN && addr<=FLASH_END)
00000a  f1b45fa0          CMP      r4,#0x14000000
00000e  d30a              BCC      |L2.38|
000010  4810              LDR      r0,|L2.84|
000012  68c0              LDR      r0,[r0,#0xc]  ; g_spifi
000014  f10050a0          ADD      r0,r0,#0x14000000
000018  42a0              CMP      r0,r4
00001a  d304              BCC      |L2.38|
;;;49     		addr += FLASH_OFFSET;
00001c  480d              LDR      r0,|L2.84|
00001e  6800              LDR      r0,[r0,#0]  ; g_spifi
000020  f1a050a0          SUB      r0,r0,#0x14000000
000024  4404              ADD      r4,r4,r0
                  |L2.38|
;;;50     
;;;51      	memset((void *)&spifi, 0, sizeof(spifi));
000026  2114              MOVS     r1,#0x14
000028  a801              ADD      r0,sp,#4
00002a  f7fffffe          BL       __aeabi_memclr4
;;;52     
;;;53     	spifi.dest = (char *)addr;
00002e  9401              STR      r4,[sp,#4]
;;;54     	spifi.length = len;
000030  9502              STR      r5,[sp,#8]
;;;55     	spifi.scratch = NULL;
000032  2000              MOVS     r0,#0
000034  9003              STR      r0,[sp,#0xc]
;;;56     	spifi.options = S_VERIFY_PROG;
000036  2010              MOVS     r0,#0x10
000038  9005              STR      r0,[sp,#0x14]
;;;57     	if (spifi_program(&g_spifi, (char *)data, &spifi))
00003a  aa01              ADD      r2,sp,#4
00003c  4631              MOV      r1,r6
00003e  4805              LDR      r0,|L2.84|
000040  f7fffffe          BL       spifi_program
000044  b118              CBZ      r0,|L2.78|
;;;58     		return -1;
000046  f04f30ff          MOV      r0,#0xffffffff
                  |L2.74|
;;;59     	return 0;
;;;60     }
00004a  b006              ADD      sp,sp,#0x18
00004c  bd70              POP      {r4-r6,pc}
                  |L2.78|
00004e  2000              MOVS     r0,#0                 ;59
000050  e7fb              B        |L2.74|
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
                          DCD      g_spifi

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z11flash_erasejj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z11flash_erasejj||
                          DCD      0x00000001

                          AREA ||area_number.4||, LINKORDER=||i._Z13flash_programjPKhj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z13flash_programjPKhj||
                          DCD      0x00000001
