; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\fpu_init.o --asm_dir=.\ --list_dir=.\ --depend=.\fpu_init.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\fpu_init.crf fpu_init.c]
                          THUMB

                          AREA ||i.fpuInit||, CODE, READONLY, ALIGN=2

                  fpuInit PROC
;;;48     
;;;49     void fpuInit(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;50     {
;;;51     // from arm trm manual:
;;;52     //                ; CPACR is located at address 0xE000ED88
;;;53     //                LDR.W R0, =0xE000ED88
;;;54     //                ; Read CPACR
;;;55     //                LDR R1, [R0]
;;;56     //                ; Set bits 20-23 to enable CP10 and CP11 coprocessors
;;;57     //                ORR R1, R1, #(0xF << 20)
;;;58     //                ; Write back the modified value to the CPACR
;;;59     //                STR R1, [R0]
;;;60     
;;;61                     
;;;62         volatile uint32_t* regCpacr = (uint32_t*) LPC_CPACR;
000002  480f              LDR      r0,|L1.64|
;;;63         volatile uint32_t* regMvfr0 = (uint32_t*) SCB_MVFR0;
000004  4b0f              LDR      r3,|L1.68|
;;;64         volatile uint32_t* regMvfr1 = (uint32_t*) SCB_MVFR1;
000006  1d19              ADDS     r1,r3,#4
;;;65         volatile uint32_t Cpacr;
;;;66         volatile uint32_t Mvfr0;
;;;67         volatile uint32_t Mvfr1;    
;;;68         char vfpPresent = 0;
000008  2200              MOVS     r2,#0
;;;69     
;;;70         Mvfr0 = *regMvfr0;
00000a  681c              LDR      r4,[r3,#0]
00000c  9401              STR      r4,[sp,#4]
;;;71         Mvfr1 = *regMvfr1;
00000e  680c              LDR      r4,[r1,#0]
000010  9400              STR      r4,[sp,#0]
;;;72     
;;;73         vfpPresent = ((SCB_MVFR0_RESET == Mvfr0) && (SCB_MVFR1_RESET == Mvfr1));
000012  4d0d              LDR      r5,|L1.72|
000014  9c01              LDR      r4,[sp,#4]
000016  42ac              CMP      r4,r5
000018  d105              BNE      |L1.38|
00001a  4d0c              LDR      r5,|L1.76|
00001c  9c00              LDR      r4,[sp,#0]
00001e  42ac              CMP      r4,r5
000020  d101              BNE      |L1.38|
000022  2401              MOVS     r4,#1
000024  e000              B        |L1.40|
                  |L1.38|
000026  2400              MOVS     r4,#0
                  |L1.40|
000028  4622              MOV      r2,r4
;;;74         
;;;75         if(vfpPresent)
00002a  b13a              CBZ      r2,|L1.60|
;;;76         {
;;;77             Cpacr = *regCpacr;
00002c  6804              LDR      r4,[r0,#0]
00002e  9402              STR      r4,[sp,#8]
;;;78             Cpacr |= (0xF << 20);
000030  9c02              LDR      r4,[sp,#8]
000032  f4440470          ORR      r4,r4,#0xf00000
000036  9402              STR      r4,[sp,#8]
;;;79             *regCpacr = Cpacr;   // enable CP10 and CP11 for full access
000038  9c02              LDR      r4,[sp,#8]
00003a  6004              STR      r4,[r0,#0]
                  |L1.60|
;;;80         }
;;;81     
;;;82     }
00003c  bd3e              POP      {r1-r5,pc}
;;;83     
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0xe000ed88
                  |L1.68|
                          DCD      0xe000ef40
                  |L1.72|
                          DCD      0x10110021
                  |L1.76|
                          DCD      0x11000011
