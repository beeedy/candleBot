; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\smlink.o --asm_dir=.\ --list_dir=.\ --depend=.\smlink.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DCORE_M0 -DIPC_SLAVE -DPIXY --omf_browse=.\smlink.crf smlink.c]
                          THUMB

                          AREA ||i.linkGetFlags||, CODE, READONLY, ALIGN=2

                  linkGetFlags PROC
;;;20     
;;;21     uint32_t linkGetFlags(uint8_t index)
000000  4601              MOV      r1,r0
;;;22     {
;;;23     	if (index==LINK_FLAG_INDEX_SHARED_MEMORY_LOCATION)
000002  2901              CMP      r1,#1
000004  d101              BNE      |L1.10|
;;;24     		return (uint32_t)SM_OBJECT->buf;
000006  4804              LDR      r0,|L1.24|
                  |L1.8|
;;;25     	else if (index==LINK_FLAG_INDEX_SHARED_MEMORY_SIZE)
;;;26     		return SM_BUFSIZE;
;;;27     	else
;;;28     		return 0;
;;;29     }
000008  4770              BX       lr
                  |L1.10|
00000a  2902              CMP      r1,#2                 ;25
00000c  d102              BNE      |L1.20|
00000e  20ff              MOVS     r0,#0xff              ;26
000010  0080              LSLS     r0,r0,#2              ;26
000012  e7f9              B        |L1.8|
                  |L1.20|
000014  2000              MOVS     r0,#0                 ;28
000016  e7f7              B        |L1.8|
;;;30     
                          ENDP

                  |L1.24|
                          DCD      0x2000fc04

                          AREA ||i.linkReceive||, CODE, READONLY, ALIGN=2

                  linkReceive PROC
;;;47     
;;;48     int linkReceive(uint8_t *data, uint32_t len, uint16_t timeoutMs)
000000  b5f0              PUSH     {r4-r7,lr}
;;;49     {
000002  4605              MOV      r5,r0
;;;50     	uint32_t time, start, timeout = timeoutMs * CLKFREQ_MS;
000004  480b              LDR      r0,|L2.52|
000006  4350              MULS     r0,r2,r0
000008  4606              MOV      r6,r0
;;;51     
;;;52     	start = LPC_TIMER1->TC;
00000a  480b              LDR      r0,|L2.56|
00000c  6884              LDR      r4,[r0,#8]
;;;53     	// wait for data to come in
;;;54     	while(!(SM_OBJECT->recvStatus==SM_STATUS_DATA_AVAIL))
00000e  e007              B        |L2.32|
                  |L2.16|
;;;55     	{
;;;56     		time = LPC_TIMER1->TC; 
000010  4809              LDR      r0,|L2.56|
000012  6883              LDR      r3,[r0,#8]
;;;57     		if ((uint32_t)(time-start) > timeout)
000014  1b18              SUBS     r0,r3,r4
000016  42b0              CMP      r0,r6
000018  d902              BLS      |L2.32|
;;;58     			return -1;
00001a  2000              MOVS     r0,#0
00001c  43c0              MVNS     r0,r0
                  |L2.30|
;;;59     	}
;;;60     	// set status to indicate data has been read	
;;;61     	SM_OBJECT->recvStatus = 0;	
;;;62     
;;;63     	return len;
;;;64     }
00001e  bdf0              POP      {r4-r7,pc}
                  |L2.32|
000020  4806              LDR      r0,|L2.60|
000022  8840              LDRH     r0,[r0,#2]            ;54
000024  2801              CMP      r0,#1                 ;54
000026  d1f3              BNE      |L2.16|
000028  2000              MOVS     r0,#0                 ;61
00002a  4f04              LDR      r7,|L2.60|
00002c  8078              STRH     r0,[r7,#2]            ;61
00002e  4608              MOV      r0,r1                 ;63
000030  e7f5              B        |L2.30|
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x00031ce0
                  |L2.56|
                          DCD      0x40085000
                  |L2.60|
                          DCD      0x2000fc00

                          AREA ||i.linkSend||, CODE, READONLY, ALIGN=2

                  linkSend PROC
;;;30     
;;;31     int linkSend(const uint8_t *data, uint32_t len, uint16_t timeoutMs)
000000  b5f0              PUSH     {r4-r7,lr}
;;;32     {
000002  4605              MOV      r5,r0
;;;33     	uint32_t time, start, timeout = timeoutMs * CLKFREQ_MS;
000004  480b              LDR      r0,|L3.52|
000006  4350              MULS     r0,r2,r0
000008  4606              MOV      r6,r0
;;;34     
;;;35     	start = LPC_TIMER1->TC;
00000a  480b              LDR      r0,|L3.56|
00000c  6884              LDR      r4,[r0,#8]
;;;36     	// wait for data to go out
;;;37     	while(SM_OBJECT->sendStatus==SM_STATUS_DATA_AVAIL)
00000e  e007              B        |L3.32|
                  |L3.16|
;;;38     	{
;;;39     		time = LPC_TIMER1->TC; 
000010  4809              LDR      r0,|L3.56|
000012  6883              LDR      r3,[r0,#8]
;;;40     		if ((uint32_t)(time-start) > timeout)
000014  1b18              SUBS     r0,r3,r4
000016  42b0              CMP      r0,r6
000018  d902              BLS      |L3.32|
;;;41     			return -1;
00001a  2000              MOVS     r0,#0
00001c  43c0              MVNS     r0,r0
                  |L3.30|
;;;42     	}
;;;43     	// set status to indicate data is avail
;;;44     	SM_OBJECT->sendStatus = SM_STATUS_DATA_AVAIL;	
;;;45     	return len;
;;;46     }
00001e  bdf0              POP      {r4-r7,pc}
                  |L3.32|
000020  4806              LDR      r0,|L3.60|
000022  8800              LDRH     r0,[r0,#0]            ;37
000024  2801              CMP      r0,#1                 ;37
000026  d0f3              BEQ      |L3.16|
000028  2001              MOVS     r0,#1                 ;44
00002a  4f04              LDR      r7,|L3.60|
00002c  8038              STRH     r0,[r7,#0]            ;44
00002e  4608              MOV      r0,r1                 ;45
000030  e7f5              B        |L3.30|
;;;47     
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x00031ce0
                  |L3.56|
                          DCD      0x40085000
                  |L3.60|
                          DCD      0x2000fc00

;*** Start embedded assembler ***

#line 1 "smlink.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_smlink_c_0a8f1a23____REV16|
#line 130 ".\\core_cmInstr.h"
|__asm___8_smlink_c_0a8f1a23____REV16| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_smlink_c_0a8f1a23____REVSH|
#line 144
|__asm___8_smlink_c_0a8f1a23____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
