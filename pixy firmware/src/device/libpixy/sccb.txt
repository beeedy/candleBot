; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\sccb.o --asm_dir=.\ --list_dir=.\ --depend=.\sccb.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DCORE_M4 -DIPC_MASTER -DPIXY --omf_browse=.\sccb.crf sccb.cpp]
                          THUMB

                          AREA ||i._ZN5CSccb4ReadEh||, CODE, READONLY, ALIGN=2

                  _ZN5CSccb4ReadEh PROC ; CSccb::Read(unsigned char)
;;;62     
;;;63     unsigned char CSccb::Read(unsigned char addr)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;64     	{
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
;;;65     	unsigned char i, val;
;;;66     
;;;67     	// 2 phase
;;;68     	Start();
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN5CSccb5StartEv ; CSccb::Start()
;;;69     	Write(m_dev);
00000e  7821              LDRB     r1,[r4,#0]
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;70     	Write(addr);
000016  4639              MOV      r1,r7
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;71     	Stop();
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       _ZN5CSccb4StopEv ; CSccb::Stop()
;;;72     
;;;73     	Start();
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       _ZN5CSccb5StartEv ; CSccb::Start()
;;;74     	Write(m_dev + 1);
00002a  7820              LDRB     r0,[r4,#0]
00002c  1c40              ADDS     r0,r0,#1
00002e  b2c1              UXTB     r1,r0
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;75     	TriState();
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       _ZN5CSccb8TriStateEv ; CSccb::TriState()
;;;76     	for (i=0, val=0; i<8; i++)
00003c  2600              MOVS     r6,#0
00003e  2500              MOVS     r5,#0
000040  e014              B        |L1.108|
                  |L1.66|
;;;77     		{
;;;78     		val <<= 1;
000042  0668              LSLS     r0,r5,#25
000044  0e05              LSRS     r5,r0,#24
;;;79     		PortWrite(1, 0);
000046  2200              MOVS     r2,#0
000048  2101              MOVS     r1,#1
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;80     		if (DATA_REG&DATA_MASK)
000050  4813              LDR      r0,|L1.160|
000052  6800              LDR      r0,[r0,#0]
000054  f0000001          AND      r0,r0,#1
000058  b108              CBZ      r0,|L1.94|
;;;81     			val |= 1;
00005a  f0450501          ORR      r5,r5,#1
                  |L1.94|
;;;82     		PortWrite(0, 0);
00005e  2200              MOVS     r2,#0
000060  4611              MOV      r1,r2
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
000068  1c70              ADDS     r0,r6,#1              ;76
00006a  b2c6              UXTB     r6,r0                 ;76
                  |L1.108|
00006c  2e08              CMP      r6,#8                 ;76
00006e  dbe8              BLT      |L1.66|
;;;83     		}
;;;84     
;;;85     	// send NA bit
;;;86     	PortWrite(0, 1);
000070  2201              MOVS     r2,#1
000072  2100              MOVS     r1,#0
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;87     	Drive();
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       _ZN5CSccb5DriveEv ; CSccb::Drive()
;;;88     	PortWrite(1, 1);
000080  2201              MOVS     r2,#1
000082  4611              MOV      r1,r2
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;89     	PortWrite(0, 1);
00008a  2201              MOVS     r2,#1
00008c  2100              MOVS     r1,#0
00008e  4620              MOV      r0,r4
000090  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;90     
;;;91     	Stop();
000094  4620              MOV      r0,r4
000096  f7fffffe          BL       _ZN5CSccb4StopEv ; CSccb::Stop()
;;;92     
;;;93     	return val;
00009a  4628              MOV      r0,r5
;;;94     	}
00009c  e8bd81f0          POP      {r4-r8,pc}
;;;95     
                          ENDP

                  |L1.160|
                          DCD      0x400f6100

                          AREA ||i._ZN5CSccb5ResetEv||, CODE, READONLY, ALIGN=1

                  _ZN5CSccb5ResetEv PROC ; CSccb::Reset()
;;;43     
;;;44     void CSccb::Reset()
000000  b538              PUSH     {r3-r5,lr}
;;;45     	{
000002  4604              MOV      r4,r0
;;;46     	volatile unsigned long d; 
;;;47     
;;;48     	Read(0x00);
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _ZN5CSccb4ReadEh ; CSccb::Read(unsigned char)
;;;49     	Write(0x12, 0xa4); // reset operation
00000c  22a4              MOVS     r2,#0xa4
00000e  2112              MOVS     r1,#0x12
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN5CSccb5WriteEhh ; CSccb::Write(unsigned char, unsigned char)
;;;50     	for (d=0; d<1000; d++);
000016  2000              MOVS     r0,#0
000018  9000              STR      r0,[sp,#0]
00001a  e002              B        |L2.34|
                  |L2.28|
00001c  9800              LDR      r0,[sp,#0]
00001e  1c40              ADDS     r0,r0,#1
000020  9000              STR      r0,[sp,#0]
                  |L2.34|
000022  9800              LDR      r0,[sp,#0]
000024  f5b07f7a          CMP      r0,#0x3e8
000028  d3f8              BCC      |L2.28|
;;;51     	Read(0x00);
00002a  2100              MOVS     r1,#0
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       _ZN5CSccb4ReadEh ; CSccb::Read(unsigned char)
;;;52     	}
000032  bd38              POP      {r3-r5,pc}
;;;53     
                          ENDP


                          AREA ||i._ZN5CSccb5WriteEh||, CODE, READONLY, ALIGN=1

                  _ZN5CSccb5WriteEh PROC ; CSccb::Write(unsigned char)
;;;95     
;;;96     void CSccb::Write(unsigned char val)
000000  b570              PUSH     {r4-r6,lr}
;;;97     	{
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;98     	unsigned char i;
;;;99     
;;;100    	for (i=0; i<8; i++, val<<=1)
000006  2500              MOVS     r5,#0
000008  e025              B        |L3.86|
                  |L3.10|
;;;101    		{
;;;102    		if (val&0x80) // send msb first
00000a  f0040080          AND      r0,r4,#0x80
00000e  b178              CBZ      r0,|L3.48|
;;;103    			{
;;;104    			PortWrite(0, 1);
000010  2201              MOVS     r2,#1
000012  2100              MOVS     r1,#0
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;105    			PortWrite(1, 1);
00001a  2201              MOVS     r2,#1
00001c  4611              MOV      r1,r2
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;106    			PortWrite(0, 1);
000024  2201              MOVS     r2,#1
000026  2100              MOVS     r1,#0
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
00002e  e00e              B        |L3.78|
                  |L3.48|
;;;107    			}
;;;108    		else
;;;109    			{
;;;110    			PortWrite(0, 0);
000030  2200              MOVS     r2,#0
000032  4611              MOV      r1,r2
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;111    			PortWrite(1, 0);
00003a  2200              MOVS     r2,#0
00003c  2101              MOVS     r1,#1
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;112    			PortWrite(0, 0);
000044  2200              MOVS     r2,#0
000046  4611              MOV      r1,r2
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
                  |L3.78|
00004e  1c68              ADDS     r0,r5,#1              ;100
000050  b2c5              UXTB     r5,r0                 ;100
000052  0660              LSLS     r0,r4,#25             ;100
000054  0e04              LSRS     r4,r0,#24             ;100
                  |L3.86|
000056  2d08              CMP      r5,#8                 ;100
000058  dbd7              BLT      |L3.10|
;;;113    			}
;;;114    		}
;;;115    	// send "don't care" bit
;;;116    	TriState();
00005a  4630              MOV      r0,r6
00005c  f7fffffe          BL       _ZN5CSccb8TriStateEv ; CSccb::TriState()
;;;117    	PortWrite(0, 0);
000060  2200              MOVS     r2,#0
000062  4611              MOV      r1,r2
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;118    	PortWrite(1, 0);
00006a  2200              MOVS     r2,#0
00006c  2101              MOVS     r1,#1
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;119    	PortWrite(0, 0);
000074  2200              MOVS     r2,#0
000076  4611              MOV      r1,r2
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;120    	Drive();
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       _ZN5CSccb5DriveEv ; CSccb::Drive()
;;;121    	}
000084  bd70              POP      {r4-r6,pc}
;;;122    
                          ENDP


                          AREA ||i._ZN5CSccb5WriteEhh||, CODE, READONLY, ALIGN=1

                  _ZN5CSccb5WriteEhh PROC ; CSccb::Write(unsigned char, unsigned char)
;;;53     
;;;54     void CSccb::Write(unsigned char addr, unsigned char val)
000000  b570              PUSH     {r4-r6,lr}
;;;55     	{
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;56     	Start();
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN5CSccb5StartEv ; CSccb::Start()
;;;57     	Write(m_dev);
00000e  7821              LDRB     r1,[r4,#0]
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;58     	Write(addr);
000016  4631              MOV      r1,r6
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;59     	Write(val);
00001e  4629              MOV      r1,r5
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       _ZN5CSccb5WriteEh ; CSccb::Write(unsigned char)
;;;60     	Stop();
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       _ZN5CSccb4StopEv ; CSccb::Stop()
;;;61     	}
00002c  bd70              POP      {r4-r6,pc}
;;;62     
                          ENDP


                          AREA ||i._ZN5CSccbC1Eh||, CODE, READONLY, ALIGN=2

                  _ZN5CSccbC2Eh                  ; Alternate entry point ; CSccb::CSccb__sub_object(unsigned char)
                  _ZN5CSccbC1Eh PROC ; CSccb::CSccb(unsigned char)
;;;19     
;;;20     CSccb::CSccb(unsigned char dev)
;;;21     	{
;;;22     	m_dev = dev;
;;;23     	DIR_REG |= CLK_MASK;
;;;24     
;;;25     	TriState();	// set clock as output, data tristate
;;;26     	PortWrite(1, 0);	// set clock high (idle)	 
;;;27     
;;;28     
;;;29     	//
;;;30     #if 0
;;;31     	volatile unsigned long val;
;;;32     	Drive();
;;;33     	PortWrite(0, 0);
;;;34     	PortWrite(0, 1);
;;;35     	PortWrite(1, 0);
;;;36     	PortWrite(1, 1);
;;;37     	TriState();	// set clock as output, data tristate
;;;38     	val = DATA_REG&DATA_MASK;
;;;39     	val = DATA_REG&DATA_MASK;
;;;40     	val = DATA_REG&DATA_MASK;
;;;41     #endif
;;;42     	}
;;;43     
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  7025              STRB     r5,[r4,#0]
000008  4807              LDR      r0,|L5.40|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0400002          ORR      r0,r0,#2
000010  4905              LDR      r1,|L5.40|
000012  6008              STR      r0,[r1,#0]
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       _ZN5CSccb8TriStateEv ; CSccb::TriState()
00001a  2200              MOVS     r2,#0
00001c  2101              MOVS     r1,#1
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
000024  4620              MOV      r0,r4
000026  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L5.40|
                          DCD      0x400f6000

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN5CSccbC1Eh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccbC1Eh||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i._ZN5CSccb5WriteEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb5WriteEh||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZN5CSccb5WriteEhh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb5WriteEhh||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZN5CSccb4ReadEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb4ReadEh||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i._ZN5CSccb5ResetEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb5ResetEv||
                          DCD      0x00000001

                          AREA ||i._ZN5CSccb9PortWriteEhh||, COMGROUP=_ZN5CSccb9PortWriteEhh, CODE, READONLY, ALIGN=2

                  _ZN5CSccb9PortWriteEhh PROC ; CSccb::PortWrite(unsigned char, unsigned char)
;;;37     	void Write(unsigned char val);
;;;38     	inline void PortWrite(unsigned char clk, unsigned char data)
000000  b518              PUSH     {r3,r4,lr}
;;;39     		{
000002  4603              MOV      r3,r0
;;;40     		volatile unsigned long d;
;;;41     		unsigned long bits = DATA_REG;
000004  4c0c              LDR      r4,|L37.56|
000006  6820              LDR      r0,[r4,#0]
;;;42     		if (clk)
000008  b111              CBZ      r1,|L37.16|
;;;43     			bits |= CLK_MASK;
00000a  f0400002          ORR      r0,r0,#2
00000e  e001              B        |L37.20|
                  |L37.16|
;;;44     		else
;;;45     			bits &= ~CLK_MASK;
000010  f0200002          BIC      r0,r0,#2
                  |L37.20|
;;;46     		if(data)
000014  b112              CBZ      r2,|L37.28|
;;;47     			bits |= DATA_MASK;
000016  f0400001          ORR      r0,r0,#1
00001a  e001              B        |L37.32|
                  |L37.28|
;;;48     		else		 
;;;49     			bits &= ~DATA_MASK;
00001c  f0200001          BIC      r0,r0,#1
                  |L37.32|
;;;50     		
;;;51     		DATA_REG = bits; 	
000020  4c05              LDR      r4,|L37.56|
000022  6020              STR      r0,[r4,#0]
;;;52     		for (d=0; d<SCCB_DELAY; d++);
000024  2400              MOVS     r4,#0
000026  9400              STR      r4,[sp,#0]
000028  e002              B        |L37.48|
                  |L37.42|
00002a  9c00              LDR      r4,[sp,#0]
00002c  1c64              ADDS     r4,r4,#1
00002e  9400              STR      r4,[sp,#0]
                  |L37.48|
000030  9c00              LDR      r4,[sp,#0]
000032  2c64              CMP      r4,#0x64
000034  d3f9              BCC      |L37.42|
;;;53     		}
000036  bd18              POP      {r3,r4,pc}
;;;54     
                          ENDP

                  |L37.56|
                          DCD      0x400f6100

                          AREA ||area_number.38||, COMGROUP=_ZN5CSccb9PortWriteEhh, LINKORDER=||i._ZN5CSccb9PortWriteEhh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.38||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb9PortWriteEhh||
                          DCD      0x00000001

                          AREA ||i._ZN5CSccb8TriStateEv||, COMGROUP=_ZN5CSccb8TriStateEv, CODE, READONLY, ALIGN=2

                  _ZN5CSccb8TriStateEv PROC ; CSccb::TriState()
;;;61     
;;;62     	inline void TriState()
000000  b508              PUSH     {r3,lr}
;;;63     		{
;;;64     		volatile unsigned long d;
;;;65     		DIR_REG &= ~DATA_MASK;
000002  4908              LDR      r1,|L44.36|
000004  6809              LDR      r1,[r1,#0]
000006  f0210101          BIC      r1,r1,#1
00000a  4a06              LDR      r2,|L44.36|
00000c  6011              STR      r1,[r2,#0]
;;;66     		for (d=0; d<SCCB_DELAY; d++);
00000e  2100              MOVS     r1,#0
000010  9100              STR      r1,[sp,#0]
000012  e002              B        |L44.26|
                  |L44.20|
000014  9900              LDR      r1,[sp,#0]
000016  1c49              ADDS     r1,r1,#1
000018  9100              STR      r1,[sp,#0]
                  |L44.26|
00001a  9900              LDR      r1,[sp,#0]
00001c  2964              CMP      r1,#0x64
00001e  d3f9              BCC      |L44.20|
;;;67     		}
000020  bd08              POP      {r3,pc}
;;;68     
                          ENDP

000022  0000              DCW      0x0000
                  |L44.36|
                          DCD      0x400f6000

                          AREA ||area_number.45||, COMGROUP=_ZN5CSccb8TriStateEv, LINKORDER=||i._ZN5CSccb8TriStateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.45||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb8TriStateEv||
                          DCD      0x00000001

                          AREA ||i._ZN5CSccb5DriveEv||, COMGROUP=_ZN5CSccb5DriveEv, CODE, READONLY, ALIGN=2

                  _ZN5CSccb5DriveEv PROC ; CSccb::Drive()
;;;54     
;;;55     	inline void Drive()
000000  b508              PUSH     {r3,lr}
;;;56     		{
;;;57     		volatile unsigned long d;
;;;58     		DIR_REG |= DATA_MASK;
000002  4908              LDR      r1,|L51.36|
000004  6809              LDR      r1,[r1,#0]
000006  f0410101          ORR      r1,r1,#1
00000a  4a06              LDR      r2,|L51.36|
00000c  6011              STR      r1,[r2,#0]
;;;59     		for (d=0; d<SCCB_DELAY; d++);
00000e  2100              MOVS     r1,#0
000010  9100              STR      r1,[sp,#0]
000012  e002              B        |L51.26|
                  |L51.20|
000014  9900              LDR      r1,[sp,#0]
000016  1c49              ADDS     r1,r1,#1
000018  9100              STR      r1,[sp,#0]
                  |L51.26|
00001a  9900              LDR      r1,[sp,#0]
00001c  2964              CMP      r1,#0x64
00001e  d3f9              BCC      |L51.20|
;;;60     		}
000020  bd08              POP      {r3,pc}
;;;61     
                          ENDP

000022  0000              DCW      0x0000
                  |L51.36|
                          DCD      0x400f6000

                          AREA ||area_number.52||, COMGROUP=_ZN5CSccb5DriveEv, LINKORDER=||i._ZN5CSccb5DriveEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.52||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb5DriveEv||
                          DCD      0x00000001

                          AREA ||i._ZN5CSccb5StartEv||, COMGROUP=_ZN5CSccb5StartEv, CODE, READONLY, ALIGN=1

                  _ZN5CSccb5StartEv PROC ; CSccb::Start()
;;;68     
;;;69     	inline void Start()
000000  b510              PUSH     {r4,lr}
;;;70     		{
000002  4604              MOV      r4,r0
;;;71     		PortWrite(1, 1);	// data, clk high
000004  2201              MOVS     r2,#1
000006  4611              MOV      r1,r2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;72     		Drive();	// take data out of tristate
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _ZN5CSccb5DriveEv ; CSccb::Drive()
;;;73     		PortWrite(1, 0);	// data low
000014  2200              MOVS     r2,#0
000016  2101              MOVS     r1,#1
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;74     		PortWrite(0, 0);	// data low
00001e  2200              MOVS     r2,#0
000020  4611              MOV      r1,r2
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;75     		}
000028  bd10              POP      {r4,pc}
;;;76     
                          ENDP


                          AREA ||area_number.59||, COMGROUP=_ZN5CSccb5StartEv, LINKORDER=||i._ZN5CSccb5StartEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.59||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb5StartEv||
                          DCD      0x00000001

                          AREA ||i._ZN5CSccb4StopEv||, COMGROUP=_ZN5CSccb4StopEv, CODE, READONLY, ALIGN=1

                  _ZN5CSccb4StopEv PROC ; CSccb::Stop()
;;;76     
;;;77     	inline void Stop()
000000  b510              PUSH     {r4,lr}
;;;78     		{
000002  4604              MOV      r4,r0
;;;79     		PortWrite(1, 0);	// clk high, data low
000004  2200              MOVS     r2,#0
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;80     		PortWrite(1, 1);	// clk, data high
00000e  2201              MOVS     r2,#1
000010  4611              MOV      r1,r2
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       _ZN5CSccb9PortWriteEhh ; CSccb::PortWrite(unsigned char, unsigned char)
;;;81     		TriState();	// put data into tristate
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _ZN5CSccb8TriStateEv ; CSccb::TriState()
;;;82     		}
00001e  bd10              POP      {r4,pc}
;;;83     
                          ENDP


                          AREA ||area_number.66||, COMGROUP=_ZN5CSccb4StopEv, LINKORDER=||i._ZN5CSccb4StopEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.66||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5CSccb4StopEv||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "sccb.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_sccb_cpp_74338326___Z7__REV16j|
#line 130 ".\\core_cmInstr.h"
|__asm___8_sccb_cpp_74338326___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_sccb_cpp_74338326___Z7__REVSHi|
#line 144
|__asm___8_sccb_cpp_74338326___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
