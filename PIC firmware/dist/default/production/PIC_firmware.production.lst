

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May 08 06:09:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F97J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  01213A                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for LCD_printVal@F16365
    72  01213A  25                 	db	37
    73  01213B  69                 	db	105
    74  01213C  00                 	db	0
    75                           
    76                           	psect	idataBANK0
    77  01205A                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for PS2_readGamepad@F16091
    81  01205A  01                 	db	1
    82  01205B  42                 	db	66
    83  01205C  00                 	db	0
    84  01205D  00                 	db	0
    85  01205E  00                 	db	0
    86  01205F  00                 	db	0
    87  012060  00                 	db	0
    88  012061  00                 	db	0
    89  012062  00                 	db	0
    90                           
    91                           ;initializer for _type_read
    92  012063  01                 	db	1
    93  012064  45                 	db	69
    94  012065  00                 	db	0
    95  012066  5A                 	db	90
    96  012067  5A                 	db	90
    97  012068  5A                 	db	90
    98  012069  5A                 	db	90
    99  01206A  5A                 	db	90
   100  01206B  5A                 	db	90
   101                           
   102                           ;initializer for compass_pixyInit@F16151
   103  01206C  50                 	db	80
   104  01206D  20                 	db	32
   105  01206E  00                 	db	0
   106                           
   107                           ;initializer for _exit_config
   108  01206F  01                 	db	1
   109  012070  43                 	db	67
   110  012071  00                 	db	0
   111  012072  00                 	db	0
   112  012073  5A                 	db	90
   113  012074  5A                 	db	90
   114  012075  5A                 	db	90
   115  012076  5A                 	db	90
   116  012077  5A                 	db	90
   117                           
   118                           ;initializer for _set_mode
   119  012078  01                 	db	1
   120  012079  44                 	db	68
   121  01207A  00                 	db	0
   122  01207B  01                 	db	1
   123  01207C  03                 	db	3
   124  01207D  00                 	db	0
   125  01207E  00                 	db	0
   126  01207F  00                 	db	0
   127  012080  00                 	db	0
   128                           
   129                           ;initializer for _enter_config
   130  012081  01                 	db	1
   131  012082  43                 	db	67
   132  012083  00                 	db	0
   133  012084  01                 	db	1
   134  012085  00                 	db	0
   135                           
   136                           	psect	idataBANK1
   137  0120B0                     __pidataBANK1:
   138                           	opt stack 0
   139                           
   140                           ;initializer for FONA_CheckStrength@F16408
   141  0120B0  30                 	db	48
   142  0120B1  30                 	db	48
   143  0120B2  30                 	db	48
   144  0120B3  30                 	db	48
   145  0120B4  30                 	db	48
   146  0120B5  30                 	db	48
   147  0120B6  30                 	db	48
   148  0120B7  30                 	db	48
   149  0120B8  30                 	db	48
   150  0120B9  30                 	db	48
   151  0120BA  30                 	db	48
   152  0120BB  30                 	db	48
   153  0120BC  30                 	db	48
   154  0120BD  30                 	db	48
   155  0120BE  30                 	db	48
   156  0120BF  30                 	db	48
   157  0120C0  30                 	db	48
   158  0120C1  30                 	db	48
   159  0120C2  30                 	db	48
   160  0120C3  30                 	db	48
   161  0120C4  00                 	db	0
   162                           
   163                           ;initializer for FONA_init@F16396
   164  0120C5  41                 	db	65
   165  0120C6  54                 	db	84
   166  0120C7  0D                 	db	13
   167  0120C8  0A                 	db	10
   168  0120C9  4F                 	db	79
   169  0120CA  4B                 	db	75
   170  0120CB  0D                 	db	13
   171  0120CC  0A                 	db	10
   172  0120CD  00                 	db	0
   173  0120CE  00                 	db	0
   174  0120CF  00                 	db	0
   175  0120D0  00                 	db	0
   176  0120D1  00                 	db	0
   177  0120D2  00                 	db	0
   178  0120D3  00                 	db	0
   179  0120D4  00                 	db	0
   180  0120D5  00                 	db	0
   181  0120D6  00                 	db	0
   182  0120D7  00                 	db	0
   183  0120D8  00                 	db	0
   184                           
   185                           	psect	mediumconst
   186  00F914                     __pmediumconst:
   187                           	opt stack 0
   188  00F914  00                 	db	0
   189  00F915                     _SineWave:
   190                           	opt stack 0
   191  00F915  0000               	dw	0
   192  00F917  00C9               	dw	201
   193  00F919  0192               	dw	402
   194  00F91B  025B               	dw	603
   195  00F91D  0324               	dw	804
   196  00F91F  03ED               	dw	1005
   197  00F921  04B6               	dw	1206
   198  00F923  057E               	dw	1406
   199  00F925  0647               	dw	1607
   200  00F927  0710               	dw	1808
   201  00F929  07D9               	dw	2009
   202  00F92B  08A1               	dw	2209
   203  00F92D  096A               	dw	2410
   204  00F92F  0A32               	dw	2610
   205  00F931  0AFB               	dw	2811
   206  00F933  0BC3               	dw	3011
   207  00F935  0C8B               	dw	3211
   208  00F937  0D53               	dw	3411
   209  00F939  0E1B               	dw	3611
   210  00F93B  0EE3               	dw	3811
   211  00F93D  0FAB               	dw	4011
   212  00F93F  1072               	dw	4210
   213  00F941  1139               	dw	4409
   214  00F943  1200               	dw	4608
   215  00F945  12C7               	dw	4807
   216  00F947  138E               	dw	5006
   217  00F949  1455               	dw	5205
   218  00F94B  151B               	dw	5403
   219  00F94D  15E1               	dw	5601
   220  00F94F  16A7               	dw	5799
   221  00F951  176D               	dw	5997
   222  00F953  1833               	dw	6195
   223  00F955  18F8               	dw	6392
   224  00F957  19BD               	dw	6589
   225  00F959  1A82               	dw	6786
   226  00F95B  1B46               	dw	6982
   227  00F95D  1C0B               	dw	7179
   228  00F95F  1CCF               	dw	7375
   229  00F961  1D93               	dw	7571
   230  00F963  1E56               	dw	7766
   231  00F965  1F19               	dw	7961
   232  00F967  1FDC               	dw	8156
   233  00F969  209F               	dw	8351
   234  00F96B  2161               	dw	8545
   235  00F96D  2223               	dw	8739
   236  00F96F  22E4               	dw	8932
   237  00F971  23A6               	dw	9126
   238  00F973  2467               	dw	9319
   239  00F975  2527               	dw	9511
   240  00F977  25E7               	dw	9703
   241  00F979  26A7               	dw	9895
   242  00F97B  2767               	dw	10087
   243  00F97D  2826               	dw	10278
   244  00F97F  28E5               	dw	10469
   245  00F981  29A3               	dw	10659
   246  00F983  2A61               	dw	10849
   247  00F985  2B1E               	dw	11038
   248  00F987  2BDB               	dw	11227
   249  00F989  2C98               	dw	11416
   250  00F98B  2D54               	dw	11604
   251  00F98D  2E10               	dw	11792
   252  00F98F  2ECC               	dw	11980
   253  00F991  2F86               	dw	12166
   254  00F993  3041               	dw	12353
   255  00F995  30FB               	dw	12539
   256  00F997  31B4               	dw	12724
   257  00F999  326D               	dw	12909
   258  00F99B  3326               	dw	13094
   259  00F99D  33DE               	dw	13278
   260  00F99F  3496               	dw	13462
   261  00F9A1  354D               	dw	13645
   262  00F9A3  3603               	dw	13827
   263  00F9A5  36B9               	dw	14009
   264  00F9A7  376F               	dw	14191
   265  00F9A9  3824               	dw	14372
   266  00F9AB  38D8               	dw	14552
   267  00F9AD  398C               	dw	14732
   268  00F9AF  3A3F               	dw	14911
   269  00F9B1  3AF2               	dw	15090
   270  00F9B3  3BA4               	dw	15268
   271  00F9B5  3C56               	dw	15446
   272  00F9B7  3D07               	dw	15623
   273  00F9B9  3DB7               	dw	15799
   274  00F9BB  3E67               	dw	15975
   275  00F9BD  3F16               	dw	16150
   276  00F9BF  3FC5               	dw	16325
   277  00F9C1  4073               	dw	16499
   278  00F9C3  4120               	dw	16672
   279  00F9C5  41CD               	dw	16845
   280  00F9C7  4279               	dw	17017
   281  00F9C9  4325               	dw	17189
   282  00F9CB  43D0               	dw	17360
   283  00F9CD  447A               	dw	17530
   284  00F9CF  4523               	dw	17699
   285  00F9D1  45CC               	dw	17868
   286  00F9D3  4674               	dw	18036
   287  00F9D5  471C               	dw	18204
   288  00F9D7  47C3               	dw	18371
   289  00F9D9  4869               	dw	18537
   290  00F9DB  490E               	dw	18702
   291  00F9DD  49B3               	dw	18867
   292  00F9DF  4A57               	dw	19031
   293  00F9E1  4AFA               	dw	19194
   294  00F9E3  4B9D               	dw	19357
   295  00F9E5  4C3F               	dw	19519
   296  00F9E7  4CE0               	dw	19680
   297  00F9E9  4D80               	dw	19840
   298  00F9EB  4E20               	dw	20000
   299  00F9ED  4EBF               	dw	20159
   300  00F9EF  4F5D               	dw	20317
   301  00F9F1  4FFA               	dw	20474
   302  00F9F3  5097               	dw	20631
   303  00F9F5  5133               	dw	20787
   304  00F9F7  51CE               	dw	20942
   305  00F9F9  5268               	dw	21096
   306  00F9FB  5301               	dw	21249
   307  00F9FD  539A               	dw	21402
   308  00F9FF  5432               	dw	21554
   309  00FA01  54C9               	dw	21705
   310  00FA03  555F               	dw	21855
   311  00FA05  55F4               	dw	22004
   312  00FA07  5689               	dw	22153
   313  00FA09  571D               	dw	22301
   314  00FA0B  57B0               	dw	22448
   315  00FA0D  5842               	dw	22594
   316  00FA0F  58D3               	dw	22739
   317  00FA11  5963               	dw	22883
   318  00FA13  59F3               	dw	23027
   319  00FA15  5A81               	dw	23169
   320  00FA17  5B0F               	dw	23311
   321  00FA19  5B9C               	dw	23452
   322  00FA1B  5C28               	dw	23592
   323  00FA1D  5CB3               	dw	23731
   324  00FA1F  5D3D               	dw	23869
   325  00FA21  5DC6               	dw	24006
   326  00FA23  5E4F               	dw	24143
   327  00FA25  5ED6               	dw	24278
   328  00FA27  5F5D               	dw	24413
   329  00FA29  5FE2               	dw	24546
   330  00FA2B  6067               	dw	24679
   331  00FA2D  60EB               	dw	24811
   332  00FA2F  616E               	dw	24942
   333  00FA31  61F0               	dw	25072
   334  00FA33  6271               	dw	25201
   335  00FA35  62F1               	dw	25329
   336  00FA37  6370               	dw	25456
   337  00FA39  63EE               	dw	25582
   338  00FA3B  646B               	dw	25707
   339  00FA3D  64E7               	dw	25831
   340  00FA3F  6562               	dw	25954
   341  00FA41  65DD               	dw	26077
   342  00FA43  6656               	dw	26198
   343  00FA45  66CE               	dw	26318
   344  00FA47  6745               	dw	26437
   345  00FA49  67BC               	dw	26556
   346  00FA4B  6831               	dw	26673
   347  00FA4D  68A5               	dw	26789
   348  00FA4F  6919               	dw	26905
   349  00FA51  698B               	dw	27019
   350  00FA53  69FC               	dw	27132
   351  00FA55  6A6C               	dw	27244
   352  00FA57  6ADB               	dw	27355
   353  00FA59  6B4A               	dw	27466
   354  00FA5B  6BB7               	dw	27575
   355  00FA5D  6C23               	dw	27683
   356  00FA5F  6C8E               	dw	27790
   357  00FA61  6CF8               	dw	27896
   358  00FA63  6D61               	dw	28001
   359  00FA65  6DC9               	dw	28105
   360  00FA67  6E30               	dw	28208
   361  00FA69  6E95               	dw	28309
   362  00FA6B  6EFA               	dw	28410
   363  00FA6D  6F5E               	dw	28510
   364  00FA6F  6FC0               	dw	28608
   365  00FA71  7022               	dw	28706
   366  00FA73  7082               	dw	28802
   367  00FA75  70E1               	dw	28897
   368  00FA77  7140               	dw	28992
   369  00FA79  719D               	dw	29085
   370  00FA7B  71F9               	dw	29177
   371  00FA7D  7254               	dw	29268
   372  00FA7F  72AE               	dw	29358
   373  00FA81  7306               	dw	29446
   374  00FA83  735E               	dw	29534
   375  00FA85  73B5               	dw	29621
   376  00FA87  740A               	dw	29706
   377  00FA89  745E               	dw	29790
   378  00FA8B  74B1               	dw	29873
   379  00FA8D  7503               	dw	29955
   380  00FA8F  7554               	dw	30036
   381  00FA91  75A4               	dw	30116
   382  00FA93  75F3               	dw	30195
   383  00FA95  7640               	dw	30272
   384  00FA97  768D               	dw	30349
   385  00FA99  76D8               	dw	30424
   386  00FA9B  7722               	dw	30498
   387  00FA9D  776B               	dw	30571
   388  00FA9F  77B3               	dw	30643
   389  00FAA1  77F9               	dw	30713
   390  00FAA3  783F               	dw	30783
   391  00FAA5  7883               	dw	30851
   392  00FAA7  78C6               	dw	30918
   393  00FAA9  7908               	dw	30984
   394  00FAAB  7949               	dw	31049
   395  00FAAD  7989               	dw	31113
   396  00FAAF  79C7               	dw	31175
   397  00FAB1  7A04               	dw	31236
   398  00FAB3  7A41               	dw	31297
   399  00FAB5  7A7C               	dw	31356
   400  00FAB7  7AB5               	dw	31413
   401  00FAB9  7AEE               	dw	31470
   402  00FABB  7B25               	dw	31525
   403  00FABD  7B5C               	dw	31580
   404  00FABF  7B91               	dw	31633
   405  00FAC1  7BC4               	dw	31684
   406  00FAC3  7BF7               	dw	31735
   407  00FAC5  7C29               	dw	31785
   408  00FAC7  7C59               	dw	31833
   409  00FAC9  7C88               	dw	31880
   410  00FACB  7CB6               	dw	31926
   411  00FACD  7CE2               	dw	31970
   412  00FACF  7D0E               	dw	32014
   413  00FAD1  7D38               	dw	32056
   414  00FAD3  7D61               	dw	32097
   415  00FAD5  7D89               	dw	32137
   416  00FAD7  7DB0               	dw	32176
   417  00FAD9  7DD5               	dw	32213
   418  00FADB  7DF9               	dw	32249
   419  00FADD  7E1C               	dw	32284
   420  00FADF  7E3E               	dw	32318
   421  00FAE1  7E5E               	dw	32350
   422  00FAE3  7E7E               	dw	32382
   423  00FAE5  7E9C               	dw	32412
   424  00FAE7  7EB9               	dw	32441
   425  00FAE9  7ED4               	dw	32468
   426  00FAEB  7EEF               	dw	32495
   427  00FAED  7F08               	dw	32520
   428  00FAEF  7F20               	dw	32544
   429  00FAF1  7F37               	dw	32567
   430  00FAF3  7F4C               	dw	32588
   431  00FAF5  7F61               	dw	32609
   432  00FAF7  7F74               	dw	32628
   433  00FAF9  7F86               	dw	32646
   434  00FAFB  7F96               	dw	32662
   435  00FAFD  7FA6               	dw	32678
   436  00FAFF  7FB4               	dw	32692
   437  00FB01  7FC1               	dw	32705
   438  00FB03  7FCD               	dw	32717
   439  00FB05  7FD7               	dw	32727
   440  00FB07  7FE0               	dw	32736
   441  00FB09  7FE8               	dw	32744
   442  00FB0B  7FEF               	dw	32751
   443  00FB0D  7FF5               	dw	32757
   444  00FB0F  7FF9               	dw	32761
   445  00FB11  7FFC               	dw	32764
   446  00FB13  7FFE               	dw	32766
   447  00FB15  7FFF               	dw	32767
   448  00FB17  7FFE               	dw	32766
   449  00FB19  7FFC               	dw	32764
   450  00FB1B  7FF9               	dw	32761
   451  00FB1D  7FF5               	dw	32757
   452  00FB1F  7FEF               	dw	32751
   453  00FB21  7FE8               	dw	32744
   454  00FB23  7FE0               	dw	32736
   455  00FB25  7FD7               	dw	32727
   456  00FB27  7FCD               	dw	32717
   457  00FB29  7FC1               	dw	32705
   458  00FB2B  7FB4               	dw	32692
   459  00FB2D  7FA6               	dw	32678
   460  00FB2F  7F96               	dw	32662
   461  00FB31  7F86               	dw	32646
   462  00FB33  7F74               	dw	32628
   463  00FB35  7F61               	dw	32609
   464  00FB37  7F4C               	dw	32588
   465  00FB39  7F37               	dw	32567
   466  00FB3B  7F20               	dw	32544
   467  00FB3D  7F08               	dw	32520
   468  00FB3F  7EEF               	dw	32495
   469  00FB41  7ED4               	dw	32468
   470  00FB43  7EB9               	dw	32441
   471  00FB45  7E9C               	dw	32412
   472  00FB47  7E7E               	dw	32382
   473  00FB49  7E5E               	dw	32350
   474  00FB4B  7E3E               	dw	32318
   475  00FB4D  7E1C               	dw	32284
   476  00FB4F  7DF9               	dw	32249
   477  00FB51  7DD5               	dw	32213
   478  00FB53  7DB0               	dw	32176
   479  00FB55  7D89               	dw	32137
   480  00FB57  7D61               	dw	32097
   481  00FB59  7D38               	dw	32056
   482  00FB5B  7D0E               	dw	32014
   483  00FB5D  7CE2               	dw	31970
   484  00FB5F  7CB6               	dw	31926
   485  00FB61  7C88               	dw	31880
   486  00FB63  7C59               	dw	31833
   487  00FB65  7C29               	dw	31785
   488  00FB67  7BF7               	dw	31735
   489  00FB69  7BC4               	dw	31684
   490  00FB6B  7B91               	dw	31633
   491  00FB6D  7B5C               	dw	31580
   492  00FB6F  7B25               	dw	31525
   493  00FB71  7AEE               	dw	31470
   494  00FB73  7AB5               	dw	31413
   495  00FB75  7A7C               	dw	31356
   496  00FB77  7A41               	dw	31297
   497  00FB79  7A04               	dw	31236
   498  00FB7B  79C7               	dw	31175
   499  00FB7D  7989               	dw	31113
   500  00FB7F  7949               	dw	31049
   501  00FB81  7908               	dw	30984
   502  00FB83  78C6               	dw	30918
   503  00FB85  7883               	dw	30851
   504  00FB87  783F               	dw	30783
   505  00FB89  77F9               	dw	30713
   506  00FB8B  77B3               	dw	30643
   507  00FB8D  776B               	dw	30571
   508  00FB8F  7722               	dw	30498
   509  00FB91  76D8               	dw	30424
   510  00FB93  768D               	dw	30349
   511  00FB95  7640               	dw	30272
   512  00FB97  75F3               	dw	30195
   513  00FB99  75A4               	dw	30116
   514  00FB9B  7554               	dw	30036
   515  00FB9D  7503               	dw	29955
   516  00FB9F  74B1               	dw	29873
   517  00FBA1  745E               	dw	29790
   518  00FBA3  740A               	dw	29706
   519  00FBA5  73B5               	dw	29621
   520  00FBA7  735E               	dw	29534
   521  00FBA9  7306               	dw	29446
   522  00FBAB  72AE               	dw	29358
   523  00FBAD  7254               	dw	29268
   524  00FBAF  71F9               	dw	29177
   525  00FBB1  719D               	dw	29085
   526  00FBB3  7140               	dw	28992
   527  00FBB5  70E1               	dw	28897
   528  00FBB7  7082               	dw	28802
   529  00FBB9  7022               	dw	28706
   530  00FBBB  6FC0               	dw	28608
   531  00FBBD  6F5E               	dw	28510
   532  00FBBF  6EFA               	dw	28410
   533  00FBC1  6E95               	dw	28309
   534  00FBC3  6E30               	dw	28208
   535  00FBC5  6DC9               	dw	28105
   536  00FBC7  6D61               	dw	28001
   537  00FBC9  6CF8               	dw	27896
   538  00FBCB  6C8E               	dw	27790
   539  00FBCD  6C23               	dw	27683
   540  00FBCF  6BB7               	dw	27575
   541  00FBD1  6B4A               	dw	27466
   542  00FBD3  6ADB               	dw	27355
   543  00FBD5  6A6C               	dw	27244
   544  00FBD7  69FC               	dw	27132
   545  00FBD9  698B               	dw	27019
   546  00FBDB  6919               	dw	26905
   547  00FBDD  68A5               	dw	26789
   548  00FBDF  6831               	dw	26673
   549  00FBE1  67BC               	dw	26556
   550  00FBE3  6745               	dw	26437
   551  00FBE5  66CE               	dw	26318
   552  00FBE7  6656               	dw	26198
   553  00FBE9  65DD               	dw	26077
   554  00FBEB  6562               	dw	25954
   555  00FBED  64E7               	dw	25831
   556  00FBEF  646B               	dw	25707
   557  00FBF1  63EE               	dw	25582
   558  00FBF3  6370               	dw	25456
   559  00FBF5  62F1               	dw	25329
   560  00FBF7  6271               	dw	25201
   561  00FBF9  61F0               	dw	25072
   562  00FBFB  616E               	dw	24942
   563  00FBFD  60EB               	dw	24811
   564  00FBFF  6067               	dw	24679
   565  00FC01  5FE2               	dw	24546
   566  00FC03  5F5D               	dw	24413
   567  00FC05  5ED6               	dw	24278
   568  00FC07  5E4F               	dw	24143
   569  00FC09  5DC6               	dw	24006
   570  00FC0B  5D3D               	dw	23869
   571  00FC0D  5CB3               	dw	23731
   572  00FC0F  5C28               	dw	23592
   573  00FC11  5B9C               	dw	23452
   574  00FC13  5B0F               	dw	23311
   575  00FC15  5A81               	dw	23169
   576  00FC17  59F3               	dw	23027
   577  00FC19  5963               	dw	22883
   578  00FC1B  58D3               	dw	22739
   579  00FC1D  5842               	dw	22594
   580  00FC1F  57B0               	dw	22448
   581  00FC21  571D               	dw	22301
   582  00FC23  5689               	dw	22153
   583  00FC25  55F4               	dw	22004
   584  00FC27  555F               	dw	21855
   585  00FC29  54C9               	dw	21705
   586  00FC2B  5432               	dw	21554
   587  00FC2D  539A               	dw	21402
   588  00FC2F  5301               	dw	21249
   589  00FC31  5268               	dw	21096
   590  00FC33  51CE               	dw	20942
   591  00FC35  5133               	dw	20787
   592  00FC37  5097               	dw	20631
   593  00FC39  4FFA               	dw	20474
   594  00FC3B  4F5D               	dw	20317
   595  00FC3D  4EBF               	dw	20159
   596  00FC3F  4E20               	dw	20000
   597  00FC41  4D80               	dw	19840
   598  00FC43  4CE0               	dw	19680
   599  00FC45  4C3F               	dw	19519
   600  00FC47  4B9D               	dw	19357
   601  00FC49  4AFA               	dw	19194
   602  00FC4B  4A57               	dw	19031
   603  00FC4D  49B3               	dw	18867
   604  00FC4F  490E               	dw	18702
   605  00FC51  4869               	dw	18537
   606  00FC53  47C3               	dw	18371
   607  00FC55  471C               	dw	18204
   608  00FC57  4674               	dw	18036
   609  00FC59  45CC               	dw	17868
   610  00FC5B  4523               	dw	17699
   611  00FC5D  447A               	dw	17530
   612  00FC5F  43D0               	dw	17360
   613  00FC61  4325               	dw	17189
   614  00FC63  4279               	dw	17017
   615  00FC65  41CD               	dw	16845
   616  00FC67  4120               	dw	16672
   617  00FC69  4073               	dw	16499
   618  00FC6B  3FC5               	dw	16325
   619  00FC6D  3F16               	dw	16150
   620  00FC6F  3E67               	dw	15975
   621  00FC71  3DB7               	dw	15799
   622  00FC73  3D07               	dw	15623
   623  00FC75  3C56               	dw	15446
   624  00FC77  3BA4               	dw	15268
   625  00FC79  3AF2               	dw	15090
   626  00FC7B  3A3F               	dw	14911
   627  00FC7D  398C               	dw	14732
   628  00FC7F  38D8               	dw	14552
   629  00FC81  3824               	dw	14372
   630  00FC83  376F               	dw	14191
   631  00FC85  36B9               	dw	14009
   632  00FC87  3603               	dw	13827
   633  00FC89  354D               	dw	13645
   634  00FC8B  3496               	dw	13462
   635  00FC8D  33DE               	dw	13278
   636  00FC8F  3326               	dw	13094
   637  00FC91  326D               	dw	12909
   638  00FC93  31B4               	dw	12724
   639  00FC95  30FB               	dw	12539
   640  00FC97  3041               	dw	12353
   641  00FC99  2F86               	dw	12166
   642  00FC9B  2ECC               	dw	11980
   643  00FC9D  2E10               	dw	11792
   644  00FC9F  2D54               	dw	11604
   645  00FCA1  2C98               	dw	11416
   646  00FCA3  2BDB               	dw	11227
   647  00FCA5  2B1E               	dw	11038
   648  00FCA7  2A61               	dw	10849
   649  00FCA9  29A3               	dw	10659
   650  00FCAB  28E5               	dw	10469
   651  00FCAD  2826               	dw	10278
   652  00FCAF  2767               	dw	10087
   653  00FCB1  26A7               	dw	9895
   654  00FCB3  25E7               	dw	9703
   655  00FCB5  2527               	dw	9511
   656  00FCB7  2467               	dw	9319
   657  00FCB9  23A6               	dw	9126
   658  00FCBB  22E4               	dw	8932
   659  00FCBD  2223               	dw	8739
   660  00FCBF  2161               	dw	8545
   661  00FCC1  209F               	dw	8351
   662  00FCC3  1FDC               	dw	8156
   663  00FCC5  1F19               	dw	7961
   664  00FCC7  1E56               	dw	7766
   665  00FCC9  1D93               	dw	7571
   666  00FCCB  1CCF               	dw	7375
   667  00FCCD  1C0B               	dw	7179
   668  00FCCF  1B46               	dw	6982
   669  00FCD1  1A82               	dw	6786
   670  00FCD3  19BD               	dw	6589
   671  00FCD5  18F8               	dw	6392
   672  00FCD7  1833               	dw	6195
   673  00FCD9  176D               	dw	5997
   674  00FCDB  16A7               	dw	5799
   675  00FCDD  15E1               	dw	5601
   676  00FCDF  151B               	dw	5403
   677  00FCE1  1455               	dw	5205
   678  00FCE3  138E               	dw	5006
   679  00FCE5  12C7               	dw	4807
   680  00FCE7  1200               	dw	4608
   681  00FCE9  1139               	dw	4409
   682  00FCEB  1072               	dw	4210
   683  00FCED  0FAB               	dw	4011
   684  00FCEF  0EE3               	dw	3811
   685  00FCF1  0E1B               	dw	3611
   686  00FCF3  0D53               	dw	3411
   687  00FCF5  0C8B               	dw	3211
   688  00FCF7  0BC3               	dw	3011
   689  00FCF9  0AFB               	dw	2811
   690  00FCFB  0A32               	dw	2610
   691  00FCFD  096A               	dw	2410
   692  00FCFF  08A1               	dw	2209
   693  00FD01  07D9               	dw	2009
   694  00FD03  0710               	dw	1808
   695  00FD05  0647               	dw	1607
   696  00FD07  057E               	dw	1406
   697  00FD09  04B6               	dw	1206
   698  00FD0B  03ED               	dw	1005
   699  00FD0D  0324               	dw	804
   700  00FD0F  025B               	dw	603
   701  00FD11  0192               	dw	402
   702  00FD13  00C9               	dw	201
   703  00FD15  0000               	dw	0
   704  00FD17  FF37               	dw	65335
   705  00FD19  FE6E               	dw	65134
   706  00FD1B  FDA5               	dw	64933
   707  00FD1D  FCDC               	dw	64732
   708  00FD1F  FC13               	dw	64531
   709  00FD21  FB4A               	dw	64330
   710  00FD23  FA82               	dw	64130
   711  00FD25  F9B9               	dw	63929
   712  00FD27  F8F0               	dw	63728
   713  00FD29  F827               	dw	63527
   714  00FD2B  F75F               	dw	63327
   715  00FD2D  F696               	dw	63126
   716  00FD2F  F5CE               	dw	62926
   717  00FD31  F505               	dw	62725
   718  00FD33  F43D               	dw	62525
   719  00FD35  F375               	dw	62325
   720  00FD37  F2AD               	dw	62125
   721  00FD39  F1E5               	dw	61925
   722  00FD3B  F11D               	dw	61725
   723  00FD3D  F055               	dw	61525
   724  00FD3F  EF8E               	dw	61326
   725  00FD41  EEC7               	dw	61127
   726  00FD43  EE00               	dw	60928
   727  00FD45  ED39               	dw	60729
   728  00FD47  EC72               	dw	60530
   729  00FD49  EBAB               	dw	60331
   730  00FD4B  EAE5               	dw	60133
   731  00FD4D  EA1F               	dw	59935
   732  00FD4F  E959               	dw	59737
   733  00FD51  E893               	dw	59539
   734  00FD53  E7CD               	dw	59341
   735  00FD55  E708               	dw	59144
   736  00FD57  E643               	dw	58947
   737  00FD59  E57E               	dw	58750
   738  00FD5B  E4BA               	dw	58554
   739  00FD5D  E3F5               	dw	58357
   740  00FD5F  E331               	dw	58161
   741  00FD61  E26D               	dw	57965
   742  00FD63  E1AA               	dw	57770
   743  00FD65  E0E7               	dw	57575
   744  00FD67  E024               	dw	57380
   745  00FD69  DF61               	dw	57185
   746  00FD6B  DE9F               	dw	56991
   747  00FD6D  DDDD               	dw	56797
   748  00FD6F  DD1C               	dw	56604
   749  00FD71  DC5A               	dw	56410
   750  00FD73  DB99               	dw	56217
   751  00FD75  DAD9               	dw	56025
   752  00FD77  DA19               	dw	55833
   753  00FD79  D959               	dw	55641
   754  00FD7B  D899               	dw	55449
   755  00FD7D  D7DA               	dw	55258
   756  00FD7F  D71B               	dw	55067
   757  00FD81  D65D               	dw	54877
   758  00FD83  D59F               	dw	54687
   759  00FD85  D4E2               	dw	54498
   760  00FD87  D425               	dw	54309
   761  00FD89  D368               	dw	54120
   762  00FD8B  D2AC               	dw	53932
   763  00FD8D  D1F0               	dw	53744
   764  00FD8F  D134               	dw	53556
   765  00FD91  D07A               	dw	53370
   766  00FD93  CFBF               	dw	53183
   767  00FD95  CF05               	dw	52997
   768  00FD97  CE4C               	dw	52812
   769  00FD99  CD93               	dw	52627
   770  00FD9B  CCDA               	dw	52442
   771  00FD9D  CC22               	dw	52258
   772  00FD9F  CB6A               	dw	52074
   773  00FDA1  CAB3               	dw	51891
   774  00FDA3  C9FD               	dw	51709
   775  00FDA5  C947               	dw	51527
   776  00FDA7  C891               	dw	51345
   777  00FDA9  C7DC               	dw	51164
   778  00FDAB  C728               	dw	50984
   779  00FDAD  C674               	dw	50804
   780  00FDAF  C5C1               	dw	50625
   781  00FDB1  C50E               	dw	50446
   782  00FDB3  C45C               	dw	50268
   783  00FDB5  C3AA               	dw	50090
   784  00FDB7  C2F9               	dw	49913
   785  00FDB9  C249               	dw	49737
   786  00FDBB  C199               	dw	49561
   787  00FDBD  C0EA               	dw	49386
   788  00FDBF  C03B               	dw	49211
   789  00FDC1  BF8D               	dw	49037
   790  00FDC3  BEE0               	dw	48864
   791  00FDC5  BE33               	dw	48691
   792  00FDC7  BD87               	dw	48519
   793  00FDC9  BCDB               	dw	48347
   794  00FDCB  BC30               	dw	48176
   795  00FDCD  BB86               	dw	48006
   796  00FDCF  BADD               	dw	47837
   797  00FDD1  BA34               	dw	47668
   798  00FDD3  B98C               	dw	47500
   799  00FDD5  B8E4               	dw	47332
   800  00FDD7  B83D               	dw	47165
   801  00FDD9  B797               	dw	46999
   802  00FDDB  B6F2               	dw	46834
   803  00FDDD  B64D               	dw	46669
   804  00FDDF  B5A9               	dw	46505
   805  00FDE1  B506               	dw	46342
   806  00FDE3  B463               	dw	46179
   807  00FDE5  B3C1               	dw	46017
   808  00FDE7  B320               	dw	45856
   809  00FDE9  B280               	dw	45696
   810  00FDEB  B1E0               	dw	45536
   811  00FDED  B141               	dw	45377
   812  00FDEF  B0A3               	dw	45219
   813  00FDF1  B006               	dw	45062
   814  00FDF3  AF69               	dw	44905
   815  00FDF5  AECD               	dw	44749
   816  00FDF7  AE32               	dw	44594
   817  00FDF9  AD98               	dw	44440
   818  00FDFB  ACFF               	dw	44287
   819  00FDFD  AC66               	dw	44134
   820  00FDFF  ABCE               	dw	43982
   821  00FE01  AB37               	dw	43831
   822  00FE03  AAA1               	dw	43681
   823  00FE05  AA0C               	dw	43532
   824  00FE07  A977               	dw	43383
   825  00FE09  A8E3               	dw	43235
   826  00FE0B  A850               	dw	43088
   827  00FE0D  A7BE               	dw	42942
   828  00FE0F  A72D               	dw	42797
   829  00FE11  A69D               	dw	42653
   830  00FE13  A60D               	dw	42509
   831  00FE15  A57F               	dw	42367
   832  00FE17  A4F1               	dw	42225
   833  00FE19  A464               	dw	42084
   834  00FE1B  A3D8               	dw	41944
   835  00FE1D  A34D               	dw	41805
   836  00FE1F  A2C3               	dw	41667
   837  00FE21  A23A               	dw	41530
   838  00FE23  A1B1               	dw	41393
   839  00FE25  A12A               	dw	41258
   840  00FE27  A0A3               	dw	41123
   841  00FE29  A01E               	dw	40990
   842  00FE2B  9F99               	dw	40857
   843  00FE2D  9F15               	dw	40725
   844  00FE2F  9E92               	dw	40594
   845  00FE31  9E10               	dw	40464
   846  00FE33  9D8F               	dw	40335
   847  00FE35  9D0F               	dw	40207
   848  00FE37  9C90               	dw	40080
   849  00FE39  9C12               	dw	39954
   850  00FE3B  9B95               	dw	39829
   851  00FE3D  9B19               	dw	39705
   852  00FE3F  9A9E               	dw	39582
   853  00FE41  9A23               	dw	39459
   854  00FE43  99AA               	dw	39338
   855  00FE45  9932               	dw	39218
   856  00FE47  98BB               	dw	39099
   857  00FE49  9844               	dw	38980
   858  00FE4B  97CF               	dw	38863
   859  00FE4D  975B               	dw	38747
   860  00FE4F  96E7               	dw	38631
   861  00FE51  9675               	dw	38517
   862  00FE53  9604               	dw	38404
   863  00FE55  9594               	dw	38292
   864  00FE57  9525               	dw	38181
   865  00FE59  94B6               	dw	38070
   866  00FE5B  9449               	dw	37961
   867  00FE5D  93DD               	dw	37853
   868  00FE5F  9372               	dw	37746
   869  00FE61  9308               	dw	37640
   870  00FE63  929F               	dw	37535
   871  00FE65  9237               	dw	37431
   872  00FE67  91D0               	dw	37328
   873  00FE69  916B               	dw	37227
   874  00FE6B  9106               	dw	37126
   875  00FE6D  90A2               	dw	37026
   876  00FE6F  9040               	dw	36928
   877  00FE71  8FDE               	dw	36830
   878  00FE73  8F7E               	dw	36734
   879  00FE75  8F1F               	dw	36639
   880  00FE77  8EC0               	dw	36544
   881  00FE79  8E63               	dw	36451
   882  00FE7B  8E07               	dw	36359
   883  00FE7D  8DAC               	dw	36268
   884  00FE7F  8D52               	dw	36178
   885  00FE81  8CFA               	dw	36090
   886  00FE83  8CA2               	dw	36002
   887  00FE85  8C4B               	dw	35915
   888  00FE87  8BF6               	dw	35830
   889  00FE89  8BA2               	dw	35746
   890  00FE8B  8B4F               	dw	35663
   891  00FE8D  8AFD               	dw	35581
   892  00FE8F  8AAC               	dw	35500
   893  00FE91  8A5C               	dw	35420
   894  00FE93  8A0D               	dw	35341
   895  00FE95  89C0               	dw	35264
   896  00FE97  8973               	dw	35187
   897  00FE99  8928               	dw	35112
   898  00FE9B  88DE               	dw	35038
   899  00FE9D  8895               	dw	34965
   900  00FE9F  884D               	dw	34893
   901  00FEA1  8807               	dw	34823
   902  00FEA3  87C1               	dw	34753
   903  00FEA5  877D               	dw	34685
   904  00FEA7  873A               	dw	34618
   905  00FEA9  86F8               	dw	34552
   906  00FEAB  86B7               	dw	34487
   907  00FEAD  8677               	dw	34423
   908  00FEAF  8639               	dw	34361
   909  00FEB1  85FC               	dw	34300
   910  00FEB3  85BF               	dw	34239
   911  00FEB5  8584               	dw	34180
   912  00FEB7  854B               	dw	34123
   913  00FEB9  8512               	dw	34066
   914  00FEBB  84DB               	dw	34011
   915  00FEBD  84A4               	dw	33956
   916  00FEBF  846F               	dw	33903
   917  00FEC1  843C               	dw	33852
   918  00FEC3  8409               	dw	33801
   919  00FEC5  83D7               	dw	33751
   920  00FEC7  83A7               	dw	33703
   921  00FEC9  8378               	dw	33656
   922  00FECB  834A               	dw	33610
   923  00FECD  831E               	dw	33566
   924  00FECF  82F2               	dw	33522
   925  00FED1  82C8               	dw	33480
   926  00FED3  829F               	dw	33439
   927  00FED5  8277               	dw	33399
   928  00FED7  8250               	dw	33360
   929  00FED9  822B               	dw	33323
   930  00FEDB  8207               	dw	33287
   931  00FEDD  81E4               	dw	33252
   932  00FEDF  81C2               	dw	33218
   933  00FEE1  81A2               	dw	33186
   934  00FEE3  8182               	dw	33154
   935  00FEE5  8164               	dw	33124
   936  00FEE7  8147               	dw	33095
   937  00FEE9  812C               	dw	33068
   938  00FEEB  8111               	dw	33041
   939  00FEED  80F8               	dw	33016
   940  00FEEF  80E0               	dw	32992
   941  00FEF1  80C9               	dw	32969
   942  00FEF3  80B4               	dw	32948
   943  00FEF5  809F               	dw	32927
   944  00FEF7  808C               	dw	32908
   945  00FEF9  807A               	dw	32890
   946  00FEFB  806A               	dw	32874
   947  00FEFD  805A               	dw	32858
   948  00FEFF  804C               	dw	32844
   949  00FF01  803F               	dw	32831
   950  00FF03  8033               	dw	32819
   951  00FF05  8029               	dw	32809
   952  00FF07  8020               	dw	32800
   953  00FF09  8018               	dw	32792
   954  00FF0B  8011               	dw	32785
   955  00FF0D  800B               	dw	32779
   956  00FF0F  8007               	dw	32775
   957  00FF11  8004               	dw	32772
   958  00FF13  8002               	dw	32770
   959  00FF15                     __end_of_SineWave:
   960                           	opt stack 0
   961  00FF15                     _dpowers:
   962                           	opt stack 0
   963  00FF15  0001               	dw	1
   964  00FF17  000A               	dw	10
   965  00FF19  0064               	dw	100
   966  00FF1B  03E8               	dw	1000
   967  00FF1D  2710               	dw	10000
   968  00FF1F                     __end_of_dpowers:
   969                           	opt stack 0
   970  00FF1F  3C                 	db	60
   971  00FF20  04                 	db	4
   972  00FF21  42                 	db	66
   973  00FF22  9F                 	db	159
   974  00FF23  6A                 	db	106
   975  00FF24  42                 	db	66
   976  00FF25  90                 	db	144
   977  00FF26  01                 	db	1
   978  00FF27  42                 	db	66
   979  00FF28  4D                 	db	77
   980  00FF29  BB                 	db	187
   981  00FF2A  40                 	db	64
   982  00FF2B  EC                 	db	236
   983  00FF2C  47                 	db	71
   984  00FF2D  3E                 	db	62
   985  00FF2E  8E                 	db	142
   986  00FF2F  1F                 	db	31
   987  00FF30  BB                 	db	187
   988  00FF31                     __end_ofatan@coeff_a:
   989                           	opt stack 0
   990  00FF31  3C                 	db	60
   991  00FF32  04                 	db	4
   992  00FF33  42                 	db	66
   993  00FF34  5A                 	db	90
   994  00FF35  8B                 	db	139
   995  00FF36  42                 	db	66
   996  00FF37  04                 	db	4
   997  00FF38  44                 	db	68
   998  00FF39  42                 	db	66
   999  00FF3A  9C                 	db	156
  1000  00FF3B  4F                 	db	79
  1001  00FF3C  41                 	db	65
  1002  00FF3D  00                 	db	0
  1003  00FF3E  80                 	db	128
  1004  00FF3F  3F                 	db	63
  1005  00FF40                     __end_ofatan@coeff_b:
  1006                           	opt stack 0
  1007  0000                     _ADCHS0H	set	3719
  1008  0000                     _ADCHS0L	set	3718
  1009  0000                     _ADCON3L	set	3722
  1010  0000                     _ANCON1	set	3655
  1011  0000                     _ANCON2	set	3654
  1012  0000                     _ANCON3	set	3653
  1013  0000                     _BAUDCON4bits	set	3837
  1014  0000                     _LCDCONbits	set	3801
  1015  0000                     _MEMCONbits	set	3811
  1016  0000                     _PORTKbits	set	3815
  1017  0000                     _PORTLbits	set	3812
  1018  0000                     _RCREG4	set	3834
  1019  0000                     _RCSTA4bits	set	3839
  1020  0000                     _RPINR0_1	set	3626
  1021  0000                     _RPINR26_27	set	3639
  1022  0000                     _RPINR28_29	set	3640
  1023  0000                     _RPINR4_5	set	3628
  1024  0000                     _RPINR6_7	set	3629
  1025  0000                     _RPOR10_11	set	3607
  1026  0000                     _RPOR12_13	set	3608
  1027  0000                     _RPOR22_23	set	3613
  1028  0000                     _RPOR30_31	set	3617
  1029  0000                     _RPOR34_35	set	3619
  1030  0000                     _SPBRG4	set	3835
  1031  0000                     _SPBRGH4	set	3836
  1032  0000                     _TRISLbits	set	3814
  1033  0000                     _TXREG4	set	3833
  1034  0000                     _TXSTA4bits	set	3838
  1035  0000                     _ANSEL10	set	29234
  1036  0000                     _ANSEL11	set	29235
  1037  0000                     _ANSEL14	set	29238
  1038  0000                     _ANSEL16	set	29224
  1039  0000                     _ANSEL17	set	29225
  1040  0000                     _ANSEL18	set	29226
  1041  0000                     _ANSEL19	set	29227
  1042  0000                     _ANSEL21	set	29229
  1043  0000                     _ANSEL6	set	29246
  1044  0000                     _ANSEL9	set	29233
  1045  0000                     _CPEN	set	30407
  1046  0000                     _LCDA	set	30421
  1047  0000                     _LCDMD	set	30603
  1048  0000                     _NVCFG0	set	29805
  1049  0000                     _PVCFG0	set	29806
  1050  0000                     _PVCFG1	set	29807
  1051  0000                     _RL1	set	30497
  1052  0000                     _RL2	set	30498
  1053  0000                     _RL3	set	30499
  1054  0000                     _TRISK1	set	30537
  1055  0000                     _TRISL0	set	30512
  1056  0000                     _BAUDCON2bits	set	3889
  1057  0000                     _BAUDCON3bits	set	3885
  1058  0000                     _CCP3CON	set	3913
  1059  0000                     _CCPR3L	set	3914
  1060  0000                     _CCPTMRS0	set	3894
  1061  0000                     _CM1CONbits	set	3923
  1062  0000                     _PADCFG1	set	3924
  1063  0000                     _PADCFG1bits	set	3924
  1064  0000                     _PR4	set	3845
  1065  0000                     _PR6	set	3902
  1066  0000                     _PR8	set	3899
  1067  0000                     _RCREG3	set	3882
  1068  0000                     _RCSTA2bits	set	3891
  1069  0000                     _RCSTA3bits	set	3887
  1070  0000                     _SPBRG2	set	3871
  1071  0000                     _SPBRG3	set	3883
  1072  0000                     _SPBRGH1	set	3888
  1073  0000                     _SPBRGH2	set	3872
  1074  0000                     _SPBRGH3	set	3884
  1075  0000                     _SSP2ADD	set	3842
  1076  0000                     _SSP2BUF	set	3843
  1077  0000                     _SSP2CON1	set	3865
  1078  0000                     _SSP2CON1bits	set	3865
  1079  0000                     _SSP2CON2	set	3864
  1080  0000                     _SSP2CON2bits	set	3864
  1081  0000                     _SSP2CON3	set	3897
  1082  0000                     _SSP2STAT	set	3866
  1083  0000                     _SSP2STATbits	set	3866
  1084  0000                     _T4CONbits	set	3844
  1085  0000                     _T6CONbits	set	3901
  1086  0000                     _T8CONbits	set	3898
  1087  0000                     _TXREG2	set	3869
  1088  0000                     _TXSTA2bits	set	3890
  1089  0000                     _TXSTA3bits	set	3886
  1090  0000                     _T4CKPS1	set	30753
  1091  0000                     _T6CKPS1	set	31209
  1092  0000                     _TMR4ON	set	30754
  1093  0000                     _TMR6ON	set	31210
  1094  0000                     _ADCBUF0	set	4034
  1095  0000                     _ADCBUF0Hbits	set	4035
  1096  0000                     _ADCBUF0Lbits	set	4034
  1097  0000                     _ADCON1Hbits	set	4033
  1098  0000                     _BAUDCON1bits	set	3943
  1099  0000                     _CCP1CON	set	4025
  1100  0000                     _CCPR1L	set	4026
  1101  0000                     _INTCON2bits	set	4081
  1102  0000                     _INTCON3bits	set	4080
  1103  0000                     _INTCONbits	set	4082
  1104  0000                     _LATDbits	set	3980
  1105  0000                     _PIR1bits	set	3998
  1106  0000                     _PIR3bits	set	4004
  1107  0000                     _PIR6bits	set	4006
  1108  0000                     _PORTBbits	set	3969
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _PORTEbits	set	3972
  1111  0000                     _PORTFbits	set	3973
  1112  0000                     _PORTGbits	set	3974
  1113  0000                     _PORTHbits	set	3975
  1114  0000                     _PORTJbits	set	3976
  1115  0000                     _PR2	set	4043
  1116  0000                     _PSPCONbits	set	4007
  1117  0000                     _RCREG1	set	4014
  1118  0000                     _RCSTA1bits	set	4011
  1119  0000                     _SPBRG1	set	4015
  1120  0000                     _SSP1ADD	set	4040
  1121  0000                     _SSP1BUF	set	4041
  1122  0000                     _SSP1CON1	set	4038
  1123  0000                     _SSP1CON1bits	set	4038
  1124  0000                     _SSP1CON2	set	4037
  1125  0000                     _SSP1CON2bits	set	4037
  1126  0000                     _SSP1CON3	set	3945
  1127  0000                     _SSP1STAT	set	4039
  1128  0000                     _SSP1STATbits	set	4039
  1129  0000                     _T0CON	set	4053
  1130  0000                     _T2CONbits	set	4042
  1131  0000                     _TMR0L	set	4054
  1132  0000                     _TMR3H	set	4019
  1133  0000                     _TMR3L	set	4018
  1134  0000                     _TRISBbits	set	3987
  1135  0000                     _TRISCbits	set	3988
  1136  0000                     _TRISDbits	set	3989
  1137  0000                     _TRISEbits	set	3990
  1138  0000                     _TRISFbits	set	3991
  1139  0000                     _TRISGbits	set	3992
  1140  0000                     _TRISHbits	set	3993
  1141  0000                     _TRISJbits	set	3994
  1142  0000                     _TXREG1	set	4013
  1143  0000                     _TXSTA1bits	set	4012
  1144  0000                     _ADON	set	32271
  1145  0000                     _DONE	set	32256
  1146  0000                     _GIE	set	32663
  1147  0000                     _INT1IF	set	32640
  1148  0000                     _INT3IF	set	32642
  1149  0000                     _IOLOCK	set	31542
  1150  0000                     _IPEN	set	32391
  1151  0000                     _RC1IE	set	31981
  1152  0000                     _RC2IE	set	32029
  1153  0000                     _RC3IE	set	31501
  1154  0000                     _RC4IE	set	31503
  1155  0000                     _RD163	set	32143
  1156  0000                     _RG0	set	31792
  1157  0000                     _RG1	set	31793
  1158  0000                     _RG2	set	31794
  1159  0000                     _RG3	set	31795
  1160  0000                     _RG4	set	31796
  1161  0000                     _SAMP	set	32257
  1162  0000                     _T3CKPS0	set	32140
  1163  0000                     _T3CKPS1	set	32141
  1164  0000                     _TMR0IE	set	32661
  1165  0000                     _TMR0IF	set	32658
  1166  0000                     _TMR0IP	set	32650
  1167  0000                     _TMR3CS0	set	32142
  1168  0000                     _TMR3CS1	set	32143
  1169  0000                     _TMR3IE	set	32001
  1170  0000                     _TMR3ON	set	32136
  1171  0000                     _TRISE0	set	31920
  1172  0000                     _TRISE1	set	31921
  1173  0000                     _TRISE2	set	31922
  1174  0000                     _TRISE3	set	31923
  1175  0000                     _TRISE4	set	31924
  1176  0000                     _TRISE5	set	31925
  1177  0000                     _TRISE6	set	31926
  1178  0000                     _TRISE7	set	31927
  1179  0000                     _TRISG7	set	31943
  1180  0000                     _TRISH0	set	31944
  1181  0000                     _TRISH1	set	31945
  1182  0000                     _TRISH2	set	31946
  1183  0000                     _TRISH3	set	31947
  1184  0000                     _TX1IE	set	31980
  1185  0000                     _TX2IE	set	32028
  1186  0000                     _TX3IE	set	31500
  1187  0000                     _TX4IE	set	31502
  1188  00FF40  4D                 	db	77	;'M'
  1189  00FF41  45                 	db	69	;'E'
  1190  00FF42  53                 	db	83	;'S'
  1191  00FF43  53                 	db	83	;'S'
  1192  00FF44  41                 	db	65	;'A'
  1193  00FF45  47                 	db	71	;'G'
  1194  00FF46  45                 	db	69	;'E'
  1195  00FF47  5F                 	db	95	;'_'
  1196  00FF48  47                 	db	71	;'G'
  1197  00FF49  4F                 	db	79	;'O'
  1198  00FF4A  45                 	db	69	;'E'
  1199  00FF4B  53                 	db	83	;'S'
  1200  00FF4C  5F                 	db	95	;'_'
  1201  00FF4D  48                 	db	72	;'H'
  1202  00FF4E  45                 	db	69	;'E'
  1203  00FF4F  52                 	db	82	;'R'
  1204  00FF50  45                 	db	69	;'E'
  1205  00FF51  0D                 	db	13
  1206  00FF52  0A                 	db	10
  1207  00FF53  00                 	db	0
  1208  00FF54  52                 	db	82	;'R'
  1209  00FF55  43                 	db	67	;'C'
  1210  00FF56  20                 	db	32
  1211  00FF57  4D                 	db	77	;'M'
  1212  00FF58  6F                 	db	111	;'o'
  1213  00FF59  64                 	db	100	;'d'
  1214  00FF5A  65                 	db	101	;'e'
  1215  00FF5B  0A                 	db	10
  1216  00FF5C  45                 	db	69	;'E'
  1217  00FF5D  52                 	db	82	;'R'
  1218  00FF5E  52                 	db	82	;'R'
  1219  00FF5F  3A                 	db	58	;':'
  1220  00FF60  20                 	db	32
  1221  00FF61  25                 	db	37
  1222  00FF62  69                 	db	105	;'i'
  1223  00FF63  20                 	db	32
  1224  00FF64  20                 	db	32
  1225  00FF65  00                 	db	0
  1226  00FF66  57                 	db	87	;'W'
  1227  00FF67  61                 	db	97	;'a'
  1228  00FF68  6E                 	db	110	;'n'
  1229  00FF69  64                 	db	100	;'d'
  1230  00FF6A  65                 	db	101	;'e'
  1231  00FF6B  72                 	db	114	;'r'
  1232  00FF6C  69                 	db	105	;'i'
  1233  00FF6D  6E                 	db	110	;'n'
  1234  00FF6E  0A                 	db	10
  1235  00FF6F  2D                 	db	45
  1236  00FF70  2D                 	db	45
  1237  00FF71  2D                 	db	45
  1238  00FF72  2E                 	db	46
  1239  00FF73  2E                 	db	46
  1240  00FF74  2D                 	db	45
  1241  00FF75  2D                 	db	45
  1242  00FF76  2D                 	db	45
  1243  00FF77  00                 	db	0
  1244  00FF78                     STR_9:
  1245  00FF78  4D                 	db	77	;'M'
  1246  00FF79  61                 	db	97	;'a'
  1247  00FF7A  69                 	db	105	;'i'
  1248  00FF7B  6E                 	db	110	;'n'
  1249  00FF7C  43                 	db	67	;'C'
  1250  00FF7D  6F                 	db	111	;'o'
  1251  00FF7E  6D                 	db	109	;'m'
  1252  00FF7F  70                 	db	112	;'p'
  1253  00FF80  0A                 	db	10
  1254  00FF81  69                 	db	105	;'i'
  1255  00FF82  6E                 	db	110	;'n'
  1256  00FF83  69                 	db	105	;'i'
  1257  00FF84  74                 	db	116	;'t'
  1258  00FF85  46                 	db	70	;'F'
  1259  00FF86  61                 	db	97	;'a'
  1260  00FF87  69                 	db	105	;'i'
  1261  00FF88  6C                 	db	108	;'l'
  1262  00FF89  00                 	db	0
  1263  00FF8A  53                 	db	83	;'S'
  1264  00FF8B  65                 	db	101	;'e'
  1265  00FF8C  6C                 	db	108	;'l'
  1266  00FF8D  66                 	db	102	;'f'
  1267  00FF8E  20                 	db	32
  1268  00FF8F  43                 	db	67	;'C'
  1269  00FF90  61                 	db	97	;'a'
  1270  00FF91  6C                 	db	108	;'l'
  1271  00FF92  0A                 	db	10
  1272  00FF93  57                 	db	87	;'W'
  1273  00FF94  61                 	db	97	;'a'
  1274  00FF95  69                 	db	105	;'i'
  1275  00FF96  74                 	db	116	;'t'
  1276  00FF97  20                 	db	32
  1277  00FF98  50                 	db	80	;'P'
  1278  00FF99  6C                 	db	108	;'l'
  1279  00FF9A  7A                 	db	122	;'z'
  1280  00FF9B  00                 	db	0
  1281  00FF9C  52                 	db	82	;'R'
  1282  00FF9D  43                 	db	67	;'C'
  1283  00FF9E  20                 	db	32
  1284  00FF9F  4D                 	db	77	;'M'
  1285  00FFA0  6F                 	db	111	;'o'
  1286  00FFA1  64                 	db	100	;'d'
  1287  00FFA2  65                 	db	101	;'e'
  1288  00FFA3  0A                 	db	10
  1289  00FFA4  53                 	db	83	;'S'
  1290  00FFA5  65                 	db	101	;'e'
  1291  00FFA6  61                 	db	97	;'a'
  1292  00FFA7  72                 	db	114	;'r'
  1293  00FFA8  63                 	db	99	;'c'
  1294  00FFA9  68                 	db	104	;'h'
  1295  00FFAA  2E                 	db	46
  1296  00FFAB  2E                 	db	46
  1297  00FFAC  00                 	db	0
  1298  00FFAD  57                 	db	87	;'W'
  1299  00FFAE  65                 	db	101	;'e'
  1300  00FFAF  20                 	db	32
  1301  00FFB0  61                 	db	97	;'a'
  1302  00FFB1  72                 	db	114	;'r'
  1303  00FFB2  65                 	db	101	;'e'
  1304  00FFB3  0A                 	db	10
  1305  00FFB4  77                 	db	119	;'w'
  1306  00FFB5  69                 	db	105	;'i'
  1307  00FFB6  6E                 	db	110	;'n'
  1308  00FFB7  6E                 	db	110	;'n'
  1309  00FFB8  69                 	db	105	;'i'
  1310  00FFB9  6E                 	db	110	;'n'
  1311  00FFBA  67                 	db	103	;'g'
  1312  00FFBB  21                 	db	33
  1313  00FFBC  00                 	db	0
  1314  00FFBD                     STR_8:
  1315  00FFBD  61                 	db	97	;'a'
  1316  00FFBE  6E                 	db	110	;'n'
  1317  00FFBF  61                 	db	97	;'a'
  1318  00FFC0  3A                 	db	58	;':'
  1319  00FFC1  25                 	db	37
  1320  00FFC2  69                 	db	105	;'i'
  1321  00FFC3  0A                 	db	10
  1322  00FFC4  74                 	db	116	;'t'
  1323  00FFC5  79                 	db	121	;'y'
  1324  00FFC6  70                 	db	112	;'p'
  1325  00FFC7  65                 	db	101	;'e'
  1326  00FFC8  20                 	db	32
  1327  00FFC9  25                 	db	37
  1328  00FFCA  69                 	db	105	;'i'
  1329  00FFCB  00                 	db	0
  1330  00FFCC  53                 	db	83	;'S'
  1331  00FFCD  74                 	db	116	;'t'
  1332  00FFCE  61                 	db	97	;'a'
  1333  00FFCF  72                 	db	114	;'r'
  1334  00FFD0  74                 	db	116	;'t'
  1335  00FFD1  69                 	db	105	;'i'
  1336  00FFD2  6E                 	db	110	;'n'
  1337  00FFD3  67                 	db	103	;'g'
  1338  00FFD4  0A                 	db	10
  1339  00FFD5  46                 	db	70	;'F'
  1340  00FFD6  48                 	db	72	;'H'
  1341  00FFD7  54                 	db	84	;'T'
  1342  00FFD8  00                 	db	0
  1343  00FFD9  41                 	db	65	;'A'
  1344  00FFDA  54                 	db	84	;'T'
  1345  00FFDB  2B                 	db	43
  1346  00FFDC  43                 	db	67	;'C'
  1347  00FFDD  4D                 	db	77	;'M'
  1348  00FFDE  47                 	db	71	;'G'
  1349  00FFDF  46                 	db	70	;'F'
  1350  00FFE0  3D                 	db	61	;'='
  1351  00FFE1  31                 	db	49	;'1'
  1352  00FFE2  00                 	db	0
  1353  00FFE3  41                 	db	65	;'A'
  1354  00FFE4  54                 	db	84	;'T'
  1355  00FFE5  2B                 	db	43
  1356  00FFE6  43                 	db	67	;'C'
  1357  00FFE7  53                 	db	83	;'S'
  1358  00FFE8  51                 	db	81	;'Q'
  1359  00FFE9  0D                 	db	13
  1360  00FFEA  0A                 	db	10
  1361  00FFEB  00                 	db	0
  1362  00FFEC  41                 	db	65	;'A'
  1363  00FFED  54                 	db	84	;'T'
  1364  00FFEE  2B                 	db	43
  1365  00FFEF  43                 	db	67	;'C'
  1366  00FFF0  4D                 	db	77	;'M'
  1367  00FFF1  47                 	db	71	;'G'
  1368  00FFF2  53                 	db	83	;'S'
  1369  00FFF3  3D                 	db	61	;'='
  1370  00FFF4  00                 	db	0
  1371  00FFF5  41                 	db	65	;'A'
  1372  00FFF6  6E                 	db	110	;'n'
  1373  00FFF7  61                 	db	97	;'a'
  1374  00FFF8  3A                 	db	58	;':'
  1375  00FFF9  25                 	db	37
  1376  00FFFA  69                 	db	105	;'i'
  1377  00FFFB  00                 	db	0
  1378  00FFFC                     STR_1:
  1379  00FFFC  25                 	db	37
  1380  00FFFD  00                 	db	0
  1381  0000                     
  1382                           ; #config settings
  1383  00FFFE  00                 	db	0	; dummy byte at the end
  1384  0000                     
  1385                           	psect	cinit
  1386  011546                     __pcinit:
  1387                           	opt stack 0
  1388  011546                     start_initialization:
  1389                           	opt stack 0
  1390  011546                     __initialization:
  1391                           	opt stack 0
  1392                           
  1393                           ; Clear objects allocated to BIGRAM (1000 bytes)
  1394  011546  EE03  F0C8         	lfsr	0,__pbssBIGRAM
  1395  01154A  EE13 F0E8          	lfsr	1,1000
  1396  01154E                     clear_0:
  1397  01154E  6AEE               	clrf	postinc0,c
  1398  011550  50E5               	movf	postdec1,w,c
  1399  011552  50E1               	movf	fsr1l,w,c
  1400  011554  E1FC               	bnz	clear_0
  1401  011556  50E2               	movf	fsr1h,w,c
  1402  011558  E1FA               	bnz	clear_0
  1403                           
  1404                           ; Clear objects allocated to BANK3 (200 bytes)
  1405  01155A  EE03  F000         	lfsr	0,__pbssBANK3
  1406  01155E  0EC8               	movlw	200
  1407  011560                     clear_1:
  1408  011560  6AEE               	clrf	postinc0,c
  1409  011562  06E8               	decf	wreg,f,c
  1410  011564  E1FD               	bnz	clear_1
  1411                           
  1412                           ; Clear objects allocated to BANK2 (178 bytes)
  1413  011566  EE02  F000         	lfsr	0,__pbssBANK2
  1414  01156A  0EB2               	movlw	178
  1415  01156C                     clear_2:
  1416  01156C  6AEE               	clrf	postinc0,c
  1417  01156E  06E8               	decf	wreg,f,c
  1418  011570  E1FD               	bnz	clear_2
  1419                           
  1420                           ; Clear objects allocated to BANK1 (198 bytes)
  1421  011572  EE01  F000         	lfsr	0,__pbssBANK1
  1422  011576  0EC6               	movlw	198
  1423  011578                     clear_3:
  1424  011578  6AEE               	clrf	postinc0,c
  1425  01157A  06E8               	decf	wreg,f,c
  1426  01157C  E1FD               	bnz	clear_3
  1427                           
  1428                           ; Clear objects allocated to BANK0 (37 bytes)
  1429  01157E  EE00  F0B9         	lfsr	0,__pbssBANK0
  1430  011582  0E25               	movlw	37
  1431  011584                     clear_4:
  1432  011584  6AEE               	clrf	postinc0,c
  1433  011586  06E8               	decf	wreg,f,c
  1434  011588  E1FD               	bnz	clear_4
  1435                           
  1436                           ; Clear objects allocated to COMRAM (30 bytes)
  1437  01158A  EE00  F020         	lfsr	0,__pbssCOMRAM
  1438  01158E  0E1E               	movlw	30
  1439  011590                     clear_5:
  1440  011590  6AEE               	clrf	postinc0,c
  1441  011592  06E8               	decf	wreg,f,c
  1442  011594  E1FD               	bnz	clear_5
  1443                           
  1444                           ; Initialize objects allocated to BANK1 (41 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK1
  1446  011596  0EB0               	movlw	low __pidataBANK1
  1447  011598  6EF6               	movwf	tblptrl,c
  1448  01159A  0E20               	movlw	high __pidataBANK1
  1449  01159C  6EF7               	movwf	tblptrh,c
  1450  01159E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1451  0115A0  6EF8               	movwf	tblptru,c
  1452  0115A2  EE01  F0C6         	lfsr	0,__pdataBANK1
  1453  0115A6  EE10 F029          	lfsr	1,41
  1454  0115AA                     copy_data0:
  1455  0115AA  0009               	tblrd		*+
  1456  0115AC  CFF5 FFEE          	movff	tablat,postinc0
  1457  0115B0  50E5               	movf	postdec1,w,c
  1458  0115B2  50E1               	movf	fsr1l,w,c
  1459  0115B4  E1FA               	bnz	copy_data0
  1460                           
  1461                           ; Initialize objects allocated to BANK0 (44 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK0
  1463  0115B6  0E5A               	movlw	low __pidataBANK0
  1464  0115B8  6EF6               	movwf	tblptrl,c
  1465  0115BA  0E20               	movlw	high __pidataBANK0
  1466  0115BC  6EF7               	movwf	tblptrh,c
  1467  0115BE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1468  0115C0  6EF8               	movwf	tblptru,c
  1469  0115C2  EE00  F08D         	lfsr	0,__pdataBANK0
  1470  0115C6  EE10 F02C          	lfsr	1,44
  1471  0115CA                     copy_data1:
  1472  0115CA  0009               	tblrd		*+
  1473  0115CC  CFF5 FFEE          	movff	tablat,postinc0
  1474  0115D0  50E5               	movf	postdec1,w,c
  1475  0115D2  50E1               	movf	fsr1l,w,c
  1476  0115D4  E1FA               	bnz	copy_data1
  1477                           
  1478                           ; Initialize objects allocated to COMRAM (3 bytes)
  1479                           ; load TBLPTR registers with __pidataCOMRAM
  1480  0115D6  0E3A               	movlw	low __pidataCOMRAM
  1481  0115D8  6EF6               	movwf	tblptrl,c
  1482  0115DA  0E21               	movlw	high __pidataCOMRAM
  1483  0115DC  6EF7               	movwf	tblptrh,c
  1484  0115DE  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1485  0115E0  6EF8               	movwf	tblptru,c
  1486  0115E2  0009               	tblrd		*+	;fetch initializer
  1487  0115E4  CFF5 F03E          	movff	tablat,__pdataCOMRAM
  1488  0115E8  0009               	tblrd		*+	;fetch initializer
  1489  0115EA  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
  1490  0115EE  0009               	tblrd		*+	;fetch initializer
  1491  0115F0  CFF5 F040          	movff	tablat,__pdataCOMRAM+2
  1492  0115F4                     end_of_initialization:
  1493                           	opt stack 0
  1494  0115F4                     __end_of__initialization:
  1495                           	opt stack 0
  1496  0115F4  0100               	movlb	0
  1497  0115F6  EF90  F08D         	goto	_main	;jump to C main() function
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssCOMRAM
  1509  000020                     __pbssCOMRAM:
  1510                           	opt stack 0
  1511  000020                     _last_read:
  1512                           	opt stack 0
  1513  000020                     	ds	4
  1514  000024                     _left_count:
  1515                           	opt stack 0
  1516  000024                     	ds	4
  1517  000028                     _right_count:
  1518                           	opt stack 0
  1519  000028                     	ds	4
  1520  00002C                     _buttons:
  1521                           	opt stack 0
  1522  00002C                     	ds	2
  1523  00002E                     _errno:
  1524                           	opt stack 0
  1525  00002E                     	ds	2
  1526  000030                     _last_buttons:
  1527                           	opt stack 0
  1528  000030                     	ds	2
  1529  000032                     _spbrg:
  1530                           	opt stack 0
  1531  000032                     	ds	2
  1532  000034                     delay_init@config:
  1533                           	opt stack 0
  1534  000034                     	ds	2
  1535  000036                     _FONA_INDEX:
  1536                           	opt stack 0
  1537  000036                     	ds	1
  1538  000037                     _PIXY_INDEX:
  1539                           	opt stack 0
  1540  000037                     	ds	1
  1541  000038                     _UART4_INDEX:
  1542                           	opt stack 0
  1543  000038                     	ds	1
  1544  000039                     _USB_INDEX:
  1545                           	opt stack 0
  1546  000039                     	ds	1
  1547  00003A                     _config:
  1548                           	opt stack 0
  1549  00003A                     	ds	1
  1550  00003B                     _controller_type:
  1551                           	opt stack 0
  1552  00003B                     	ds	1
  1553  00003C                     _mode:
  1554                           	opt stack 0
  1555  00003C                     	ds	1
  1556  00003D                     _read_delay:
  1557                           	opt stack 0
  1558  00003D                     	ds	1
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1h	equ	0xFE2
  1567                           fsr1l	equ	0xFE1
  1568                           
  1569                           	psect	dataCOMRAM
  1570  00003E                     __pdataCOMRAM:
  1571                           	opt stack 0
  1572  00003E                     LCD_printVal@F16365:
  1573                           	opt stack 0
  1574  00003E                     	ds	3
  1575                           tblptru	equ	0xFF8
  1576                           tblptrh	equ	0xFF7
  1577                           tblptrl	equ	0xFF6
  1578                           tablat	equ	0xFF5
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1h	equ	0xFE2
  1583                           fsr1l	equ	0xFE1
  1584                           
  1585                           	psect	bssBANK0
  1586  0000B9                     __pbssBANK0:
  1587                           	opt stack 0
  1588  0000B9                     _PS2data:
  1589                           	opt stack 0
  1590  0000B9                     	ds	21
  1591  0000CE                     PS2_readGamepad@F16093:
  1592                           	opt stack 0
  1593  0000CE                     	ds	12
  1594  0000DA                     _millisCount:
  1595                           	opt stack 0
  1596  0000DA                     	ds	4
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           postdec1	equ	0xFE5
  1604                           fsr1h	equ	0xFE2
  1605                           fsr1l	equ	0xFE1
  1606                           
  1607                           	psect	dataBANK0
  1608  00008D                     __pdataBANK0:
  1609                           	opt stack 0
  1610  00008D                     PS2_readGamepad@F16091:
  1611                           	opt stack 0
  1612  00008D                     	ds	9
  1613  000096                     _type_read:
  1614                           	opt stack 0
  1615  000096                     	ds	9
  1616  00009F                     compass_pixyInit@F16151:
  1617                           	opt stack 0
  1618  00009F                     	ds	3
  1619  0000A2                     _exit_config:
  1620                           	opt stack 0
  1621  0000A2                     	ds	9
  1622  0000AB                     _set_mode:
  1623                           	opt stack 0
  1624  0000AB                     	ds	9
  1625  0000B4                     _enter_config:
  1626                           	opt stack 0
  1627  0000B4                     	ds	5
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           postdec1	equ	0xFE5
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           
  1638                           	psect	bssBANK1
  1639  000100                     __pbssBANK1:
  1640                           	opt stack 0
  1641  000100                     _FONA_BUFF:
  1642                           	opt stack 0
  1643  000100                     	ds	50
  1644  000132                     LCD_printString@F16347:
  1645                           	opt stack 0
  1646  000132                     	ds	20
  1647  000146                     _realNumbers:
  1648                           	opt stack 0
  1649  000146                     	ds	128
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           
  1660                           	psect	dataBANK1
  1661  0001C6                     __pdataBANK1:
  1662                           	opt stack 0
  1663  0001C6                     FONA_CheckStrength@F16408:
  1664                           	opt stack 0
  1665  0001C6                     	ds	21
  1666  0001DB                     FONA_init@F16396:
  1667                           	opt stack 0
  1668  0001DB                     	ds	20
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           postdec1	equ	0xFE5
  1676                           fsr1h	equ	0xFE2
  1677                           fsr1l	equ	0xFE1
  1678                           
  1679                           	psect	bssBANK2
  1680  000200                     __pbssBANK2:
  1681                           	opt stack 0
  1682  000200                     _USART4_BUFF:
  1683                           	opt stack 0
  1684  000200                     	ds	50
  1685  000232                     _imaginaryNumbers:
  1686                           	opt stack 0
  1687  000232                     	ds	128
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           postdec1	equ	0xFE5
  1695                           fsr1h	equ	0xFE2
  1696                           fsr1l	equ	0xFE1
  1697                           
  1698                           	psect	bssBANK3
  1699  000300                     __pbssBANK3:
  1700                           	opt stack 0
  1701  000300                     UART_transmitString@F16323:
  1702                           	opt stack 0
  1703  000300                     	ds	200
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1h	equ	0xFE2
  1712                           fsr1l	equ	0xFE1
  1713                           
  1714                           	psect	bssBIGRAM
  1715  0003C8                     __pbssBIGRAM:
  1716                           	opt stack 0
  1717  0003C8                     _PIXY_BUFF:
  1718                           	opt stack 0
  1719  0003C8                     	ds	500
  1720  0005BC                     _USB_BUFF:
  1721                           	opt stack 0
  1722  0005BC                     	ds	500
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           postdec1	equ	0xFE5
  1730                           fsr1h	equ	0xFE2
  1731                           fsr1l	equ	0xFE1
  1732                           
  1733                           	psect	cstackBANK2
  1734  0002B2                     __pcstackBANK2:
  1735                           	opt stack 0
  1736  0002B2                     LCD_printString@tempString:
  1737                           	opt stack 0
  1738                           
  1739                           ; 20 bytes @ 0x0
  1740  0002B2                     	ds	20
  1741  0002C6                     LCD_printString@string:
  1742                           	opt stack 0
  1743                           
  1744                           ; 20 bytes @ 0x14
  1745  0002C6                     	ds	20
  1746  0002DA                     LCD_printString@x:
  1747                           	opt stack 0
  1748                           
  1749                           ; 1 bytes @ 0x28
  1750  0002DA                     	ds	1
  1751  0002DB                     LCD_printString@val:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x29
  1755  0002DB                     	ds	2
  1756  0002DD                     LCD_printString@aptr:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x2B
  1760  0002DD                     	ds	2
  1761  0002DF                     LCD_printString@tempString_590:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x2D
  1765  0002DF                     	ds	2
  1766  0002E1                     LCD_printString@i:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x2F
  1770  0002E1                     	ds	2
  1771  0002E3                     LCD_printString@i_591:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x31
  1775  0002E3                     	ds	2
  1776                           tblptru	equ	0xFF8
  1777                           tblptrh	equ	0xFF7
  1778                           tblptrl	equ	0xFF6
  1779                           tablat	equ	0xFF5
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           postdec1	equ	0xFE5
  1783                           fsr1h	equ	0xFE2
  1784                           fsr1l	equ	0xFE1
  1785                           
  1786                           	psect	cstackBANK0
  1787  000060                     __pcstackBANK0:
  1788                           	opt stack 0
  1789  000060                     ??_I2C_wait:
  1790  000060                     ?___wmul:
  1791                           	opt stack 0
  1792  000060                     ?___lwdiv:
  1793                           	opt stack 0
  1794  000060                     ?_millis:
  1795                           	opt stack 0
  1796  000060                     ?___lmul:
  1797                           	opt stack 0
  1798  000060                     I2C_init@channel:
  1799                           	opt stack 0
  1800  000060                     OpenEPWM1@timer_source:
  1801                           	opt stack 0
  1802  000060                     SetOutputEPWM1@outputmode:
  1803                           	opt stack 0
  1804  000060                     OpenEPWM3@timer_source:
  1805                           	opt stack 0
  1806  000060                     SetOutputEPWM3@outputmode:
  1807                           	opt stack 0
  1808  000060                     I2C_read@dataRetAdr:
  1809                           	opt stack 0
  1810  000060                     SetDCEPWM1@dutycycle:
  1811                           	opt stack 0
  1812  000060                     SetDCEPWM3@dutycycle:
  1813                           	opt stack 0
  1814  000060                     ___wmul@multiplier:
  1815                           	opt stack 0
  1816  000060                     ___lwdiv@dividend:
  1817                           	opt stack 0
  1818  000060                     strcat@to:
  1819                           	opt stack 0
  1820  000060                     delay_us@x:
  1821                           	opt stack 0
  1822  000060                     ___lmul@multiplier:
  1823                           	opt stack 0
  1824                           
  1825                           ; 4 bytes @ 0x0
  1826  000060                     	ds	1
  1827  000061                     ??_OpenEPWM1:
  1828  000061                     ??_OpenEPWM3:
  1829  000061                     I2C_wait@channel:
  1830                           	opt stack 0
  1831  000061                     SetOutputEPWM1@eccpmx:
  1832                           	opt stack 0
  1833  000061                     SetOutputEPWM3@eccpmx:
  1834                           	opt stack 0
  1835                           
  1836                           ; 1 bytes @ 0x1
  1837  000061                     	ds	1
  1838  000062                     ??_SetDCEPWM1:
  1839  000062                     ??_SetDCEPWM3:
  1840  000062                     I2C_open@channel:
  1841                           	opt stack 0
  1842  000062                     I2C_close@channel:
  1843                           	opt stack 0
  1844  000062                     I2C_write@data:
  1845                           	opt stack 0
  1846  000062                     I2C_read@channel:
  1847                           	opt stack 0
  1848  000062                     OpenEPWM1@period:
  1849                           	opt stack 0
  1850  000062                     SetOutputEPWM1@outputconfig:
  1851                           	opt stack 0
  1852  000062                     OpenEPWM3@period:
  1853                           	opt stack 0
  1854  000062                     SetOutputEPWM3@outputconfig:
  1855                           	opt stack 0
  1856  000062                     ___wmul@multiplicand:
  1857                           	opt stack 0
  1858  000062                     ___lwdiv@divisor:
  1859                           	opt stack 0
  1860  000062                     strcat@from:
  1861                           	opt stack 0
  1862                           
  1863                           ; 2 bytes @ 0x2
  1864  000062                     	ds	1
  1865  000063                     I2C_write@channel:
  1866                           	opt stack 0
  1867  000063                     I2C_read@retVal:
  1868                           	opt stack 0
  1869                           
  1870                           ; 1 bytes @ 0x3
  1871  000063                     	ds	1
  1872  000064                     I2C_writeRegister@slaveAdr:
  1873                           	opt stack 0
  1874  000064                     ___lwdiv@counter:
  1875                           	opt stack 0
  1876  000064                     compass_mainRead@positionData:
  1877                           	opt stack 0
  1878  000064                     SetDCEPWM1@DCycle:
  1879                           	opt stack 0
  1880  000064                     SetDCEPWM3@DCycle:
  1881                           	opt stack 0
  1882  000064                     ___wmul@product:
  1883                           	opt stack 0
  1884  000064                     strcat@cp:
  1885                           	opt stack 0
  1886  000064                     delay_ms@x:
  1887                           	opt stack 0
  1888  000064                     ___lmul@multiplicand:
  1889                           	opt stack 0
  1890                           
  1891                           ; 4 bytes @ 0x4
  1892  000064                     	ds	1
  1893  000065                     I2C_writeRegister@startRegAdr:
  1894                           	opt stack 0
  1895  000065                     ___lwdiv@quotient:
  1896                           	opt stack 0
  1897                           
  1898                           ; 2 bytes @ 0x5
  1899  000065                     	ds	1
  1900  000066                     ??_compass_mainRead:
  1901  000066                     ?___awdiv:
  1902                           	opt stack 0
  1903  000066                     I2C_writeRegister@data:
  1904                           	opt stack 0
  1905  000066                     ___awdiv@dividend:
  1906                           	opt stack 0
  1907                           
  1908                           ; 2 bytes @ 0x6
  1909  000066                     	ds	1
  1910  000067                     ?___lwmod:
  1911                           	opt stack 0
  1912  000067                     I2C_writeRegister@channel:
  1913                           	opt stack 0
  1914  000067                     ___lwmod@dividend:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x7
  1918  000067                     	ds	1
  1919  000068                     ??_delay_ms:
  1920  000068                     compass_mainRead@retVal:
  1921                           	opt stack 0
  1922  000068                     I2C_writeRegister@retVal:
  1923                           	opt stack 0
  1924  000068                     ___awdiv@divisor:
  1925                           	opt stack 0
  1926  000068                     ___lmul@product:
  1927                           	opt stack 0
  1928                           
  1929                           ; 4 bytes @ 0x8
  1930  000068                     	ds	1
  1931  000069                     compass_mainBoardInit@data:
  1932                           	opt stack 0
  1933  000069                     compass_mainRead@x:
  1934                           	opt stack 0
  1935  000069                     ___lwmod@divisor:
  1936                           	opt stack 0
  1937                           
  1938                           ; 2 bytes @ 0x9
  1939  000069                     	ds	1
  1940  00006A                     compass_mainBoardInit@retVal:
  1941                           	opt stack 0
  1942  00006A                     ___awdiv@counter:
  1943                           	opt stack 0
  1944                           
  1945                           ; 1 bytes @ 0xA
  1946  00006A                     	ds	1
  1947  00006B                     ___awdiv@sign:
  1948                           	opt stack 0
  1949  00006B                     ___lwmod@counter:
  1950                           	opt stack 0
  1951                           
  1952                           ; 1 bytes @ 0xB
  1953  00006B                     	ds	1
  1954  00006C                     ?_sprintf:
  1955                           	opt stack 0
  1956  00006C                     sprintf@sp:
  1957                           	opt stack 0
  1958  00006C                     ___awdiv@quotient:
  1959                           	opt stack 0
  1960  00006C                     delay_s@x:
  1961                           	opt stack 0
  1962                           
  1963                           ; 4 bytes @ 0xC
  1964  00006C                     	ds	2
  1965  00006E                     motorDrive_setSpeeds@rSpeed:
  1966                           	opt stack 0
  1967  00006E                     sprintf@f:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0xE
  1971  00006E                     	ds	1
  1972  00006F                     ??_motorDrive_setSpeeds:
  1973                           
  1974                           ; 0 bytes @ 0xF
  1975  00006F                     	ds	1
  1976  000070                     ??_delay_s:
  1977  000070                     delay_ms@time:
  1978                           	opt stack 0
  1979                           
  1980                           ; 4 bytes @ 0x10
  1981  000070                     	ds	2
  1982  000072                     ??_sprintf:
  1983                           
  1984                           ; 0 bytes @ 0x12
  1985  000072                     	ds	1
  1986  000073                     motorDrive_setSpeeds@templ:
  1987                           	opt stack 0
  1988  000073                     sprintf@ap:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x13
  1992  000073                     	ds	1
  1993  000074                     LCD_placeCursor@y:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x14
  1997  000074                     	ds	1
  1998  000075                     ??_LCD_placeCursor:
  1999  000075                     sprintf@flag:
  2000                           	opt stack 0
  2001  000075                     motorDrive_setSpeeds@tempr:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0x15
  2005  000075                     	ds	1
  2006  000076                     sprintf@prec:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x16
  2010  000076                     	ds	1
  2011  000077                     _motorDrive_setSpeeds$2395:
  2012                           	opt stack 0
  2013  000077                     sprintf@val:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0x17
  2017  000077                     	ds	1
  2018  000078                     delay_s@time:
  2019                           	opt stack 0
  2020                           
  2021                           ; 4 bytes @ 0x18
  2022  000078                     	ds	1
  2023  000079                     LCD_placeCursor@x:
  2024                           	opt stack 0
  2025  000079                     sprintf@c:
  2026                           	opt stack 0
  2027  000079                     _motorDrive_setSpeeds$2396:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x19
  2031  000079                     	ds	1
  2032  00007A                     LCD_placeCursor@address:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0x1A
  2036  00007A                     	ds	1
  2037  00007B                     ?_LCD_printString:
  2038                           	opt stack 0
  2039  00007B                     LCD_printString@y:
  2040                           	opt stack 0
  2041  00007B                     _motorDrive_setSpeeds$2397:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x1B
  2045  00007B                     	ds	1
  2046  00007C                     LCD_printString@input:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x1C
  2050  00007C                     	ds	1
  2051  00007D                     _motorDrive_setSpeeds$2398:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x1D
  2055  00007D                     	ds	2
  2056  00007F                     _motorDrive_setSpeeds$2399:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0x1F
  2060  00007F                     	ds	2
  2061  000081                     _motorDrive_setSpeeds$2400:
  2062                           	opt stack 0
  2063                           
  2064                           ; 2 bytes @ 0x21
  2065  000081                     	ds	1
  2066  000082                     ??_LCD_printString:
  2067                           
  2068                           ; 0 bytes @ 0x22
  2069  000082                     	ds	1
  2070  000083                     _motorDrive_setSpeeds$2401:
  2071                           	opt stack 0
  2072                           
  2073                           ; 2 bytes @ 0x23
  2074  000083                     	ds	2
  2075  000085                     motorDrive_setSpeeds@lSpeed:
  2076                           	opt stack 0
  2077                           
  2078                           ; 1 bytes @ 0x25
  2079  000085                     	ds	1
  2080  000086                     main@positionData:
  2081                           	opt stack 0
  2082                           
  2083                           ; 6 bytes @ 0x26
  2084  000086                     	ds	6
  2085  00008C                     main@retVal:
  2086                           	opt stack 0
  2087                           
  2088                           ; 1 bytes @ 0x2C
  2089  00008C                     	ds	1
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           postdec1	equ	0xFE5
  2097                           fsr1h	equ	0xFE2
  2098                           fsr1l	equ	0xFE1
  2099                           
  2100                           	psect	cstackCOMRAM
  2101  000001                     __pcstackCOMRAM:
  2102                           	opt stack 0
  2103  000001                     ??_encoderInterrupt:
  2104  000001                     
  2105                           ; 1 bytes @ 0x0
  2106  000001                     	ds	17
  2107  000012                     ??_communicationInterruptHandler:
  2108                           
  2109                           ; 0 bytes @ 0x11
  2110  000012                     	ds	14
  2111  000020                     tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           postinc0	equ	0xFEE
  2116                           wreg	equ	0xFE8
  2117                           postdec1	equ	0xFE5
  2118                           fsr1h	equ	0xFE2
  2119                           fsr1l	equ	0xFE1
  2120                           
  2121                           ; 0 bytes @ 0x1F
  2122 ;;
  2123 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2124 ;;
  2125 ;; *************** function _main *****************
  2126 ;; Defined at:
  2127 ;;		line 109 in file "main.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  positionData    6   38[BANK0 ] unsigned char [6]
  2132 ;;  retVal          1   44[BANK0 ] char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;Total ram usage:        7 bytes
  2147 ;; Hardware stack levels required when called:    7
  2148 ;; This function calls:
  2149 ;;		_LCD_printString
  2150 ;;		_compass_mainBoardInit
  2151 ;;		_compass_mainRead
  2152 ;;		_delay_s
  2153 ;;		_init
  2154 ;; This function is called by:
  2155 ;;		Startup code after reset
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text0
  2160  011B20                     __ptext0:
  2161                           	opt stack 0
  2162  011B20                     _main:
  2163                           	opt stack 24
  2164                           
  2165                           ;main.c: 133: IPEN = 1;
  2166                           
  2167                           ;incstack = 0
  2168  011B20  8ED0               	bsf	4048,7,c	;volatile
  2169                           
  2170                           ;main.c: 134: GIE = 1;
  2171  011B22  8EF2               	bsf	intcon,7,c	;volatile
  2172                           
  2173                           ;main.c: 135: init();
  2174  011B24  EC6D  F090         	call	_init	;wreg free
  2175  011B28  D000               	goto	l8261
  2176  011B2A                     l8261:
  2177                           
  2178                           ;main.c: 139: {
  2179                           ;main.c: 204: GIE = 0;
  2180  011B2A  9EF2               	bcf	intcon,7,c	;volatile
  2181                           
  2182                           ;main.c: 205: retVal = compass_mainBoardInit();
  2183  011B2C  EC0B  F08E         	call	_compass_mainBoardInit	;wreg free
  2184  011B30  0100               	movlb	0	; () banked
  2185  011B32  6F8C               	movwf	main@retVal& (0+255),b
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 206: GIE = 1;
  2189  011B34  8EF2               	bsf	intcon,7,c	;volatile
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;main.c: 207: delay_s(1);
  2193  011B36  0E01               	movlw	1
  2194  011B38  0100               	movlb	0	; () banked
  2195  011B3A  6F6C               	movwf	delay_s@x& (0+255),b
  2196  011B3C  0E00               	movlw	0
  2197  011B3E  6F6D               	movwf	(delay_s@x+1)& (0+255),b
  2198  011B40  0E00               	movlw	0
  2199  011B42  6F6E               	movwf	(delay_s@x+2)& (0+255),b
  2200  011B44  0E00               	movlw	0
  2201  011B46  6F6F               	movwf	(delay_s@x+3)& (0+255),b
  2202  011B48  EC46  F08A         	call	_delay_s	;wreg free
  2203                           
  2204                           ;main.c: 208: compass_mainRead(positionData);
  2205  011B4C  0E86               	movlw	low main@positionData
  2206  011B4E  0100               	movlb	0	; () banked
  2207  011B50  6F64               	movwf	compass_mainRead@positionData& (0+255),b
  2208  011B52  0E00               	movlw	high main@positionData
  2209  011B54  0100               	movlb	0	; () banked
  2210  011B56  6F65               	movwf	(compass_mainRead@positionData+1)& (0+255),b
  2211  011B58  EC0E  F08D         	call	_compass_mainRead	;wreg free
  2212                           
  2213                           ;main.c: 209: if(retVal != 0) {
  2214  011B5C  0100               	movlb	0	; () banked
  2215  011B5E  518C               	movf	main@retVal& (0+255),w,b
  2216  011B60  0100               	movlb	0	; () banked
  2217  011B62  B4D8               	btfsc	status,2,c
  2218  011B64  D00D               	goto	l8275
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 210: LCD_printString(0, 0, "MainComp\ninitFail");
  2222  011B66  0E00               	movlw	0
  2223  011B68  0100               	movlb	0	; () banked
  2224  011B6A  6F7B               	movwf	LCD_printString@y& (0+255),b
  2225  011B6C  0E78               	movlw	low STR_9
  2226  011B6E  0100               	movlb	0	; () banked
  2227  011B70  6F7C               	movwf	LCD_printString@input& (0+255),b
  2228  011B72  0EFF               	movlw	high STR_9
  2229  011B74  0100               	movlb	0	; () banked
  2230  011B76  6F7D               	movwf	(LCD_printString@input+1)& (0+255),b
  2231  011B78  0E00               	movlw	0
  2232  011B7A  EC00  F080         	call	_LCD_printString
  2233  011B7E  D000               	goto	l8275
  2234  011B80                     l8275:
  2235                           
  2236                           ;main.c: 211: }
  2237                           ;main.c: 212: delay_s(1);
  2238  011B80  0E01               	movlw	1
  2239  011B82  0100               	movlb	0	; () banked
  2240  011B84  6F6C               	movwf	delay_s@x& (0+255),b
  2241  011B86  0E00               	movlw	0
  2242  011B88  6F6D               	movwf	(delay_s@x+1)& (0+255),b
  2243  011B8A  0E00               	movlw	0
  2244  011B8C  6F6E               	movwf	(delay_s@x+2)& (0+255),b
  2245  011B8E  0E00               	movlw	0
  2246  011B90  6F6F               	movwf	(delay_s@x+3)& (0+255),b
  2247  011B92  EC46  F08A         	call	_delay_s	;wreg free
  2248  011B96  D7C9               	goto	l8261
  2249  011B98  EF7B  F000         	goto	start
  2250  011B9C                     __end_of_main:
  2251                           	opt stack 0
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           intcon	equ	0xFF2
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           postdec1	equ	0xFE5
  2260                           fsr1h	equ	0xFE2
  2261                           fsr1l	equ	0xFE1
  2262                           status	equ	0xFD8
  2263                           
  2264 ;; *************** function _init *****************
  2265 ;; Defined at:
  2266 ;;		line 31 in file "main.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;		None               void
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    6
  2287 ;; This function calls:
  2288 ;;		_I2C_init
  2289 ;;		_LCD_init4bit
  2290 ;;		_UART_init
  2291 ;;		_clearMillis
  2292 ;;		_encoders_init
  2293 ;;		_motorDrive_init
  2294 ;;		_settings_init
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text1
  2301  0120DA                     __ptext1:
  2302                           	opt stack 0
  2303  0120DA                     _init:
  2304                           	opt stack 24
  2305                           
  2306                           ;main.c: 33: settings_init();
  2307                           
  2308                           ;incstack = 0
  2309  0120DA  EC16  F090         	call	_settings_init	;wreg free
  2310                           
  2311                           ;main.c: 34: motorDrive_init();
  2312  0120DE  EC84  F08C         	call	_motorDrive_init	;wreg free
  2313                           
  2314                           ;main.c: 35: LCD_init4bit();
  2315  0120E2  EC62  F083         	call	_LCD_init4bit	;wreg free
  2316                           
  2317                           ;main.c: 36: UART_init();
  2318  0120E6  ECF1  F088         	call	_UART_init	;wreg free
  2319                           
  2320                           ;main.c: 37: encoders_init();
  2321  0120EA  EC43  F090         	call	_encoders_init	;wreg free
  2322                           
  2323                           ;main.c: 39: I2C_init(2);
  2324  0120EE  0E02               	movlw	2
  2325  0120F0  ECFF  F08E         	call	_I2C_init
  2326                           
  2327                           ;main.c: 40: I2C_init(1);
  2328  0120F4  0E01               	movlw	1
  2329  0120F6  ECFF  F08E         	call	_I2C_init
  2330                           
  2331                           ;main.c: 42: clearMillis();
  2332  0120FA  EC80  F090         	call	_clearMillis	;wreg free
  2333  0120FE  0012               	return		;funcret
  2334  012100                     __end_of_init:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           intcon	equ	0xFF2
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           postdec1	equ	0xFE5
  2344                           fsr1h	equ	0xFE2
  2345                           fsr1l	equ	0xFE1
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _settings_init *****************
  2349 ;; Defined at:
  2350 ;;		line 16 in file "settings.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, status,2
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    3
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_init
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text2
  2379  01202C                     __ptext2:
  2380                           	opt stack 0
  2381  01202C                     _settings_init:
  2382                           	opt stack 26
  2383                           
  2384                           ;settings.c: 18: CM1CONbits.CON = 0;
  2385                           
  2386                           ;incstack = 0
  2387  01202C  010F               	movlb	15	; () banked
  2388  01202E  9F53               	bcf	83,7,b	;volatile
  2389                           
  2390                           ; BSR set to: 15
  2391                           ;settings.c: 19: ANCON1 = 0;
  2392  012030  0E00               	movlw	0
  2393  012032  010E               	movlb	14	; () banked
  2394  012034  6F47               	movwf	71,b	;volatile
  2395                           
  2396                           ;settings.c: 20: ANCON2 = 0;
  2397  012036  0E00               	movlw	0
  2398  012038  010E               	movlb	14	; () banked
  2399  01203A  6F46               	movwf	70,b	;volatile
  2400                           
  2401                           ; BSR set to: 14
  2402                           ;settings.c: 22: TRISGbits.TRISG0 = 1;
  2403  01203C  8098               	bsf	3992,0,c	;volatile
  2404                           
  2405                           ; BSR set to: 14
  2406                           ;settings.c: 23: TRISGbits.TRISG1 = 1;
  2407  01203E  8298               	bsf	3992,1,c	;volatile
  2408                           
  2409                           ; BSR set to: 14
  2410                           ;settings.c: 24: TRISGbits.TRISG2 = 1;
  2411  012040  8498               	bsf	3992,2,c	;volatile
  2412                           
  2413                           ; BSR set to: 14
  2414                           ;settings.c: 25: TRISGbits.TRISG3 = 1;
  2415  012042  8698               	bsf	3992,3,c	;volatile
  2416                           
  2417                           ; BSR set to: 14
  2418                           ;settings.c: 26: TRISGbits.TRISG4 = 1;
  2419  012044  8898               	bsf	3992,4,c	;volatile
  2420                           
  2421                           ; BSR set to: 14
  2422                           ;settings.c: 27: TRISLbits.TRISL1 = 1;
  2423  012046  010E               	movlb	14	; () banked
  2424  012048  83E6               	bsf	230,1,b	;volatile
  2425                           
  2426                           ; BSR set to: 14
  2427                           ;settings.c: 28: TRISLbits.TRISL2 = 1;
  2428  01204A  010E               	movlb	14	; () banked
  2429  01204C  85E6               	bsf	230,2,b	;volatile
  2430                           
  2431                           ; BSR set to: 14
  2432                           ;settings.c: 29: TRISLbits.TRISL3 = 1;
  2433  01204E  010E               	movlb	14	; () banked
  2434  012050  87E6               	bsf	230,3,b	;volatile
  2435                           
  2436                           ;settings.c: 32: PADCFG1 = 0b00010001;
  2437  012052  0E11               	movlw	17
  2438  012054  010F               	movlb	15	; () banked
  2439  012056  6F54               	movwf	84,b	;volatile
  2440                           
  2441                           ; BSR set to: 15
  2442  012058  0012               	return		;funcret
  2443  01205A                     __end_of_settings_init:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           fsr1h	equ	0xFE2
  2454                           fsr1l	equ	0xFE1
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function _motorDrive_init *****************
  2458 ;; Defined at:
  2459 ;;		line 15 in file "motorDrive.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;		None               void
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    5
  2480 ;; This function calls:
  2481 ;;		_OpenEPWM1
  2482 ;;		_OpenEPWM3
  2483 ;;		_SetDCEPWM1
  2484 ;;		_SetDCEPWM3
  2485 ;;		_SetOutputEPWM1
  2486 ;;		_SetOutputEPWM3
  2487 ;;		_motorDrive_setSpeeds
  2488 ;; This function is called by:
  2489 ;;		_init
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text3
  2494  011908                     __ptext3:
  2495                           	opt stack 0
  2496  011908                     _motorDrive_init:
  2497                           	opt stack 24
  2498                           
  2499                           ;motorDrive.c: 22: IOLOCK = 0;
  2500                           
  2501                           ; BSR set to: 15
  2502                           ;incstack = 0
  2503  011908  9C66               	bcf	3942,6,c	;volatile
  2504                           
  2505                           ;motorDrive.c: 24: RPOR34_35 |= 0xF8;
  2506  01190A  0EF8               	movlw	248
  2507  01190C  010E               	movlb	14	; () banked
  2508  01190E  1323               	iorwf	35,f,b	;volatile
  2509                           
  2510                           ; BSR set to: 14
  2511                           ;motorDrive.c: 25: TRISE6 = 0;
  2512  011910  9C96               	bcf	3990,6,c	;volatile
  2513                           
  2514                           ;motorDrive.c: 29: RPOR30_31 |= 0x4F;
  2515  011912  0E4F               	movlw	79
  2516  011914  010E               	movlb	14	; () banked
  2517  011916  1321               	iorwf	33,f,b	;volatile
  2518                           
  2519                           ; BSR set to: 14
  2520                           ;motorDrive.c: 30: TRISE7 = 0;
  2521  011918  9E96               	bcf	3990,7,c	;volatile
  2522                           
  2523                           ; BSR set to: 14
  2524                           ;motorDrive.c: 32: IOLOCK = 1;
  2525  01191A  8C66               	bsf	3942,6,c	;volatile
  2526                           
  2527                           ; BSR set to: 14
  2528                           ;motorDrive.c: 38: TRISL0 = 0;
  2529  01191C  010E               	movlb	14	; () banked
  2530  01191E  91E6               	bcf	230,0,b	;volatile
  2531                           
  2532                           ; BSR set to: 14
  2533                           ;motorDrive.c: 39: TRISK1 = 0;
  2534  011920  010E               	movlb	14	; () banked
  2535  011922  93E9               	bcf	233,1,b	;volatile
  2536                           
  2537                           ; BSR set to: 14
  2538                           ;motorDrive.c: 43: TMR4ON = 1;
  2539  011924  010F               	movlb	15	; () banked
  2540  011926  8504               	bsf	4,2,b	;volatile
  2541                           
  2542                           ; BSR set to: 15
  2543                           ;motorDrive.c: 44: T4CKPS1 = 1;
  2544  011928  010F               	movlb	15	; () banked
  2545  01192A  8304               	bsf	4,1,b	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;motorDrive.c: 46: TMR6ON = 1;
  2549  01192C  010F               	movlb	15	; () banked
  2550  01192E  853D               	bsf	61,2,b	;volatile
  2551                           
  2552                           ; BSR set to: 15
  2553                           ;motorDrive.c: 47: T6CKPS1 = 1;
  2554  011930  010F               	movlb	15	; () banked
  2555  011932  833D               	bsf	61,1,b	;volatile
  2556                           
  2557                           ; BSR set to: 15
  2558                           ;motorDrive.c: 50: OpenEPWM1(0x33, 0b10101111);
  2559  011934  0EAF               	movlw	175
  2560  011936  0100               	movlb	0	; () banked
  2561  011938  6F60               	movwf	OpenEPWM1@timer_source& (0+255),b
  2562  01193A  0E33               	movlw	51
  2563  01193C  ECCC  F08C         	call	_OpenEPWM1
  2564                           
  2565                           ;motorDrive.c: 51: SetDCEPWM1(0x0);
  2566  011940  0E00               	movlw	0
  2567  011942  0100               	movlb	0	; () banked
  2568  011944  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2569  011946  0E00               	movlw	0
  2570  011948  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2571  01194A  EC49  F08F         	call	_SetDCEPWM1	;wreg free
  2572                           
  2573                           ;motorDrive.c: 52: SetOutputEPWM1( 0b00111111, 0b11111100);
  2574  01194E  0EFC               	movlw	252
  2575  011950  0100               	movlb	0	; () banked
  2576  011952  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  2577  011954  0E3F               	movlw	63
  2578  011956  EC54  F08B         	call	_SetOutputEPWM1
  2579                           
  2580                           ;motorDrive.c: 55: CCP1CON = 0b00001100;
  2581  01195A  0E0C               	movlw	12
  2582  01195C  6EB9               	movwf	4025,c	;volatile
  2583                           
  2584                           ;motorDrive.c: 56: CCPTMRS0 = 0b01001001;
  2585  01195E  0E49               	movlw	73
  2586  011960  010F               	movlb	15	; () banked
  2587  011962  6F36               	movwf	54,b	;volatile
  2588                           
  2589                           ; BSR set to: 15
  2590                           ;motorDrive.c: 60: OpenEPWM3(0x33, 0b11101111);
  2591  011964  0EEF               	movlw	239
  2592  011966  0100               	movlb	0	; () banked
  2593  011968  6F60               	movwf	OpenEPWM3@timer_source& (0+255),b
  2594  01196A  0E33               	movlw	51
  2595  01196C  EC3B  F08C         	call	_OpenEPWM3
  2596                           
  2597                           ;motorDrive.c: 61: SetDCEPWM3(0x0);
  2598  011970  0E00               	movlw	0
  2599  011972  0100               	movlb	0	; () banked
  2600  011974  6F61               	movwf	(SetDCEPWM3@dutycycle+1)& (0+255),b
  2601  011976  0E00               	movlw	0
  2602  011978  6F60               	movwf	SetDCEPWM3@dutycycle& (0+255),b
  2603  01197A  EC25  F08F         	call	_SetDCEPWM3	;wreg free
  2604                           
  2605                           ;motorDrive.c: 62: SetOutputEPWM3( 0b00111111, 0b11111100);
  2606  01197E  0EFC               	movlw	252
  2607  011980  0100               	movlb	0	; () banked
  2608  011982  6F60               	movwf	SetOutputEPWM3@outputmode& (0+255),b
  2609  011984  0E3F               	movlw	63
  2610  011986  ECFD  F08A         	call	_SetOutputEPWM3
  2611                           
  2612                           ;motorDrive.c: 64: motorDrive_setSpeeds(0,0);
  2613  01198A  0E00               	movlw	0
  2614  01198C  0100               	movlb	0	; () banked
  2615  01198E  6F6E               	movwf	motorDrive_setSpeeds@rSpeed& (0+255),b
  2616  011990  0E00               	movlw	0
  2617  011992  ECC0  F086         	call	_motorDrive_setSpeeds
  2618  011996  0012               	return		;funcret
  2619  011998                     __end_of_motorDrive_init:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           intcon	equ	0xFF2
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           postdec1	equ	0xFE5
  2629                           fsr1h	equ	0xFE2
  2630                           fsr1l	equ	0xFE1
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _motorDrive_setSpeeds *****************
  2634 ;; Defined at:
  2635 ;;		line 68 in file "motorDrive.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  lSpeed          1    wreg     char 
  2638 ;;  rSpeed          1   14[BANK0 ] char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  lSpeed          1   37[BANK0 ] char 
  2641 ;;  tempr           2   21[BANK0 ] int 
  2642 ;;  templ           2   19[BANK0 ] int 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;		None               void
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;Total ram usage:       24 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    4
  2659 ;; This function calls:
  2660 ;;		_SetDCEPWM1
  2661 ;;		_SetDCEPWM3
  2662 ;;		___awdiv
  2663 ;;		___wmul
  2664 ;; This function is called by:
  2665 ;;		_motorDrive_init
  2666 ;;		_RCMode
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text4
  2671  010D80                     __ptext4:
  2672                           	opt stack 0
  2673  010D80                     _motorDrive_setSpeeds:
  2674                           	opt stack 24
  2675                           
  2676                           ;incstack = 0
  2677                           ;motorDrive_setSpeeds@lSpeed stored from wreg
  2678  010D80  0100               	movlb	0	; () banked
  2679  010D82  6F85               	movwf	motorDrive_setSpeeds@lSpeed& (0+255),b
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;motorDrive.c: 70: PORTLbits.RL0 = (lSpeed >> 7 ) & 0x1 ^ 0x1;
  2683  010D84  C085  F06F         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  2684  010D88  0E07               	movlw	7
  2685  010D8A  0100               	movlb	0	; () banked
  2686  010D8C  6F70               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  2687  010D8E                     u4725:
  2688  010D8E  0100               	movlb	0	; () banked
  2689  010D90  356F               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  2690  010D92  336F               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  2691  010D94  0100               	movlb	0	; () banked
  2692  010D96  2F70               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2693  010D98  D7FA               	goto	u4725
  2694  010D9A  0E01               	movlw	1
  2695  010D9C  0100               	movlb	0	; () banked
  2696  010D9E  176F               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  2697  010DA0  0E01               	movlw	1
  2698  010DA2  0100               	movlb	0	; () banked
  2699  010DA4  1B6F               	xorwf	??_motorDrive_setSpeeds& (0+255),f,b
  2700  010DA6  010E               	movlb	14	; () banked
  2701  010DA8  51E4               	movf	228,w,b	;volatile
  2702  010DAA  0100               	movlb	0	; () banked
  2703  010DAC  196F               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  2704  010DAE  0BFE               	andlw	-2
  2705  010DB0  196F               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  2706  010DB2  010E               	movlb	14	; () banked
  2707  010DB4  6FE4               	movwf	228,b	;volatile
  2708                           
  2709                           ;motorDrive.c: 71: PORTKbits.RK1 = (rSpeed >> 7 ) & 0x1;
  2710  010DB6  C06E  F06F         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  2711  010DBA  0E07               	movlw	7
  2712  010DBC  0100               	movlb	0	; () banked
  2713  010DBE  6F70               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  2714  010DC0                     u4735:
  2715  010DC0  0100               	movlb	0	; () banked
  2716  010DC2  356F               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  2717  010DC4  336F               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  2718  010DC6  0100               	movlb	0	; () banked
  2719  010DC8  2F70               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2720  010DCA  D7FA               	goto	u4735
  2721  010DCC  0E01               	movlw	1
  2722  010DCE  0100               	movlb	0	; () banked
  2723  010DD0  176F               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  2724  010DD2  0100               	movlb	0	; () banked
  2725  010DD4  476F               	rlncf	??_motorDrive_setSpeeds& (0+255),f,b
  2726  010DD6  010E               	movlb	14	; () banked
  2727  010DD8  51E7               	movf	231,w,b	;volatile
  2728  010DDA  0100               	movlb	0	; () banked
  2729  010DDC  196F               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  2730  010DDE  0BFD               	andlw	-3
  2731  010DE0  196F               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  2732  010DE2  010E               	movlb	14	; () banked
  2733  010DE4  6FE7               	movwf	231,b	;volatile
  2734                           
  2735                           ;motorDrive.c: 73: lSpeed = ((lSpeed < 100) ? lSpeed : 100);
  2736  010DE6  0100               	movlb	0	; () banked
  2737  010DE8  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2738  010DEA  0A80               	xorlw	128
  2739  010DEC  0F1C               	addlw	-228
  2740  010DEE  A0D8               	btfss	status,0,c
  2741  010DF0  D006               	goto	l6777
  2742                           
  2743                           ; BSR set to: 0
  2744  010DF2  0E00               	movlw	0
  2745  010DF4  0100               	movlb	0	; () banked
  2746  010DF6  6F78               	movwf	(_motorDrive_setSpeeds$2395+1)& (0+255),b
  2747  010DF8  0E64               	movlw	100
  2748  010DFA  6F77               	movwf	_motorDrive_setSpeeds$2395& (0+255),b
  2749  010DFC  D008               	goto	l6779
  2750  010DFE                     l6777:
  2751                           
  2752                           ; BSR set to: 0
  2753  010DFE  0100               	movlb	0	; () banked
  2754  010E00  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2755  010E02  0100               	movlb	0	; () banked
  2756  010E04  6F77               	movwf	_motorDrive_setSpeeds$2395& (0+255),b
  2757  010E06  6B78               	clrf	(_motorDrive_setSpeeds$2395+1)& (0+255),b
  2758  010E08  BF77               	btfsc	_motorDrive_setSpeeds$2395& (0+255),7,b
  2759  010E0A  0778               	decf	(_motorDrive_setSpeeds$2395+1)& (0+255),f,b
  2760  010E0C  D000               	goto	l6779
  2761  010E0E                     l6779:
  2762                           
  2763                           ; BSR set to: 0
  2764  010E0E  C077  F085         	movff	_motorDrive_setSpeeds$2395,motorDrive_setSpeeds@lSpeed
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;motorDrive.c: 74: rSpeed = ((rSpeed < 100) ? rSpeed : 100);
  2768  010E12  0100               	movlb	0	; () banked
  2769  010E14  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  2770  010E16  0A80               	xorlw	128
  2771  010E18  0F1C               	addlw	-228
  2772  010E1A  A0D8               	btfss	status,0,c
  2773  010E1C  D006               	goto	l6785
  2774                           
  2775                           ; BSR set to: 0
  2776  010E1E  0E00               	movlw	0
  2777  010E20  0100               	movlb	0	; () banked
  2778  010E22  6F7A               	movwf	(_motorDrive_setSpeeds$2396+1)& (0+255),b
  2779  010E24  0E64               	movlw	100
  2780  010E26  6F79               	movwf	_motorDrive_setSpeeds$2396& (0+255),b
  2781  010E28  D008               	goto	l6787
  2782  010E2A                     l6785:
  2783                           
  2784                           ; BSR set to: 0
  2785  010E2A  0100               	movlb	0	; () banked
  2786  010E2C  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  2787  010E2E  0100               	movlb	0	; () banked
  2788  010E30  6F79               	movwf	_motorDrive_setSpeeds$2396& (0+255),b
  2789  010E32  6B7A               	clrf	(_motorDrive_setSpeeds$2396+1)& (0+255),b
  2790  010E34  BF79               	btfsc	_motorDrive_setSpeeds$2396& (0+255),7,b
  2791  010E36  077A               	decf	(_motorDrive_setSpeeds$2396+1)& (0+255),f,b
  2792  010E38  D000               	goto	l6787
  2793  010E3A                     l6787:
  2794                           
  2795                           ; BSR set to: 0
  2796  010E3A  C079  F06E         	movff	_motorDrive_setSpeeds$2396,motorDrive_setSpeeds@rSpeed
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;motorDrive.c: 76: lSpeed = ((lSpeed > -100) ? lSpeed : -100);
  2800  010E3E  0100               	movlb	0	; () banked
  2801  010E40  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2802  010E42  0A80               	xorlw	128
  2803  010E44  0FE3               	addlw	227
  2804  010E46  B0D8               	btfsc	status,0,c
  2805  010E48  D006               	goto	l6793
  2806                           
  2807                           ; BSR set to: 0
  2808  010E4A  0EFF               	movlw	255
  2809  010E4C  0100               	movlb	0	; () banked
  2810  010E4E  6F7C               	movwf	(_motorDrive_setSpeeds$2397+1)& (0+255),b
  2811  010E50  0E9C               	movlw	156
  2812  010E52  6F7B               	movwf	_motorDrive_setSpeeds$2397& (0+255),b
  2813  010E54  D008               	goto	l6795
  2814  010E56                     l6793:
  2815                           
  2816                           ; BSR set to: 0
  2817  010E56  0100               	movlb	0	; () banked
  2818  010E58  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2819  010E5A  0100               	movlb	0	; () banked
  2820  010E5C  6F7B               	movwf	_motorDrive_setSpeeds$2397& (0+255),b
  2821  010E5E  6B7C               	clrf	(_motorDrive_setSpeeds$2397+1)& (0+255),b
  2822  010E60  BF7B               	btfsc	_motorDrive_setSpeeds$2397& (0+255),7,b
  2823  010E62  077C               	decf	(_motorDrive_setSpeeds$2397+1)& (0+255),f,b
  2824  010E64  D000               	goto	l6795
  2825  010E66                     l6795:
  2826                           
  2827                           ; BSR set to: 0
  2828  010E66  C07B  F085         	movff	_motorDrive_setSpeeds$2397,motorDrive_setSpeeds@lSpeed
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;motorDrive.c: 77: rSpeed = ((rSpeed > -100) ? rSpeed : -100);
  2832  010E6A  0100               	movlb	0	; () banked
  2833  010E6C  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  2834  010E6E  0A80               	xorlw	128
  2835  010E70  0FE3               	addlw	227
  2836  010E72  B0D8               	btfsc	status,0,c
  2837  010E74  D006               	goto	l6801
  2838                           
  2839                           ; BSR set to: 0
  2840  010E76  0EFF               	movlw	255
  2841  010E78  0100               	movlb	0	; () banked
  2842  010E7A  6F7E               	movwf	(_motorDrive_setSpeeds$2398+1)& (0+255),b
  2843  010E7C  0E9C               	movlw	156
  2844  010E7E  6F7D               	movwf	_motorDrive_setSpeeds$2398& (0+255),b
  2845  010E80  D008               	goto	l6803
  2846  010E82                     l6801:
  2847                           
  2848                           ; BSR set to: 0
  2849  010E82  0100               	movlb	0	; () banked
  2850  010E84  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  2851  010E86  0100               	movlb	0	; () banked
  2852  010E88  6F7D               	movwf	_motorDrive_setSpeeds$2398& (0+255),b
  2853  010E8A  6B7E               	clrf	(_motorDrive_setSpeeds$2398+1)& (0+255),b
  2854  010E8C  BF7D               	btfsc	_motorDrive_setSpeeds$2398& (0+255),7,b
  2855  010E8E  077E               	decf	(_motorDrive_setSpeeds$2398+1)& (0+255),f,b
  2856  010E90  D000               	goto	l6803
  2857  010E92                     l6803:
  2858                           
  2859                           ; BSR set to: 0
  2860  010E92  C07D  F06E         	movff	_motorDrive_setSpeeds$2398,motorDrive_setSpeeds@rSpeed
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;motorDrive.c: 79: lSpeed = ((lSpeed >> 7 ) & 0x1) ? ((lSpeed < 0) ? (lSpeed*-1) : lSpee
      +                          d) : 100-lSpeed;
  2864  010E96  C085  F06F         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  2865  010E9A  0E07               	movlw	7
  2866  010E9C  0100               	movlb	0	; () banked
  2867  010E9E  6F70               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  2868  010EA0                     u4785:
  2869  010EA0  0100               	movlb	0	; () banked
  2870  010EA2  356F               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  2871  010EA4  336F               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  2872  010EA6  0100               	movlb	0	; () banked
  2873  010EA8  2F70               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2874  010EAA  D7FA               	goto	u4785
  2875  010EAC  0100               	movlb	0	; () banked
  2876  010EAE  516F               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  2877  010EB0  0100               	movlb	0	; () banked
  2878  010EB2  6F71               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  2879  010EB4  6B72               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  2880  010EB6  BF71               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  2881  010EB8  0772               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  2882  010EBA  0100               	movlb	0	; () banked
  2883  010EBC  B171               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  2884  010EBE  D016               	goto	l6809
  2885                           
  2886                           ; BSR set to: 0
  2887  010EC0  C085  F06F         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  2888  010EC4  0100               	movlb	0	; () banked
  2889  010EC6  6B70               	clrf	(??_motorDrive_setSpeeds+1)& (0+255),b
  2890  010EC8  BF6F               	btfsc	??_motorDrive_setSpeeds& (0+255),7,b
  2891  010ECA  0770               	decf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2892  010ECC  0100               	movlb	0	; () banked
  2893  010ECE  1F6F               	comf	??_motorDrive_setSpeeds& (0+255),f,b
  2894  010ED0  1F70               	comf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2895  010ED2  4B6F               	infsnz	??_motorDrive_setSpeeds& (0+255),f,b
  2896  010ED4  2B70               	incf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2897  010ED6  0E64               	movlw	100
  2898  010ED8  0100               	movlb	0	; () banked
  2899  010EDA  256F               	addwf	??_motorDrive_setSpeeds& (0+255),w,b
  2900  010EDC  0100               	movlb	0	; () banked
  2901  010EDE  6F7F               	movwf	_motorDrive_setSpeeds$2399& (0+255),b
  2902  010EE0  0E00               	movlw	0
  2903  010EE2  0100               	movlb	0	; () banked
  2904  010EE4  2170               	addwfc	(??_motorDrive_setSpeeds+1)& (0+255),w,b
  2905  010EE6  0100               	movlb	0	; () banked
  2906  010EE8  6F80               	movwf	(_motorDrive_setSpeeds$2399+1)& (0+255),b
  2907  010EEA  D02A               	goto	l6817
  2908  010EEC                     l6809:
  2909                           
  2910                           ; BSR set to: 0
  2911  010EEC  0100               	movlb	0	; () banked
  2912  010EEE  BF85               	btfsc	motorDrive_setSpeeds@lSpeed& (0+255),7,b
  2913  010EF0  D008               	goto	l6813
  2914                           
  2915                           ; BSR set to: 0
  2916  010EF2  0100               	movlb	0	; () banked
  2917  010EF4  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2918  010EF6  0100               	movlb	0	; () banked
  2919  010EF8  6F81               	movwf	_motorDrive_setSpeeds$2400& (0+255),b
  2920  010EFA  6B82               	clrf	(_motorDrive_setSpeeds$2400+1)& (0+255),b
  2921  010EFC  BF81               	btfsc	_motorDrive_setSpeeds$2400& (0+255),7,b
  2922  010EFE  0782               	decf	(_motorDrive_setSpeeds$2400+1)& (0+255),f,b
  2923  010F00  D01A               	goto	l6815
  2924  010F02                     l6813:
  2925                           
  2926                           ; BSR set to: 0
  2927  010F02  0100               	movlb	0	; () banked
  2928  010F04  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  2929  010F06  0100               	movlb	0	; () banked
  2930  010F08  6F60               	movwf	___wmul@multiplier& (0+255),b
  2931  010F0A  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  2932  010F0C  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  2933  010F0E  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  2934  010F10  0E00               	movlw	0
  2935  010F12  0100               	movlb	0	; () banked
  2936  010F14  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2937  010F16  0E01               	movlw	1
  2938  010F18  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2939  010F1A  ECAB  F08F         	call	___wmul	;wreg free
  2940  010F1E  0100               	movlb	0	; () banked
  2941  010F20  1F60               	comf	?___wmul& (0+255),f,b
  2942  010F22  0100               	movlb	0	; () banked
  2943  010F24  1F61               	comf	(?___wmul+1)& (0+255),f,b
  2944  010F26  0100               	movlb	0	; () banked
  2945  010F28  4B60               	infsnz	?___wmul& (0+255),f,b
  2946  010F2A  2B61               	incf	(?___wmul+1)& (0+255),f,b
  2947  010F2C  C060  F081         	movff	?___wmul,_motorDrive_setSpeeds$2400
  2948  010F30  C061  F082         	movff	?___wmul+1,_motorDrive_setSpeeds$2400+1
  2949  010F34  D000               	goto	l6815
  2950  010F36                     l6815:
  2951                           
  2952                           ; BSR set to: 0
  2953  010F36  C081  F07F         	movff	_motorDrive_setSpeeds$2400,_motorDrive_setSpeeds$2399
  2954  010F3A  C082  F080         	movff	_motorDrive_setSpeeds$2400+1,_motorDrive_setSpeeds$2399+1
  2955  010F3E  D000               	goto	l6817
  2956  010F40                     l6817:
  2957                           
  2958                           ; BSR set to: 0
  2959  010F40  C07F  F085         	movff	_motorDrive_setSpeeds$2399,motorDrive_setSpeeds@lSpeed
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;motorDrive.c: 80: rSpeed = ((rSpeed >> 7 ) & 0x1) ? 100 + rSpeed : rSpeed;
  2963  010F44  C06E  F06F         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  2964  010F48  0E07               	movlw	7
  2965  010F4A  0100               	movlb	0	; () banked
  2966  010F4C  6F70               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  2967  010F4E                     u4815:
  2968  010F4E  0100               	movlb	0	; () banked
  2969  010F50  356F               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  2970  010F52  336F               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  2971  010F54  0100               	movlb	0	; () banked
  2972  010F56  2F70               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  2973  010F58  D7FA               	goto	u4815
  2974  010F5A  0100               	movlb	0	; () banked
  2975  010F5C  516F               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  2976  010F5E  0100               	movlb	0	; () banked
  2977  010F60  6F71               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  2978  010F62  6B72               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  2979  010F64  BF71               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  2980  010F66  0772               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  2981  010F68  0100               	movlb	0	; () banked
  2982  010F6A  B171               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  2983  010F6C  D008               	goto	l6823
  2984                           
  2985                           ; BSR set to: 0
  2986  010F6E  0100               	movlb	0	; () banked
  2987  010F70  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  2988  010F72  0100               	movlb	0	; () banked
  2989  010F74  6F83               	movwf	_motorDrive_setSpeeds$2401& (0+255),b
  2990  010F76  6B84               	clrf	(_motorDrive_setSpeeds$2401+1)& (0+255),b
  2991  010F78  BF83               	btfsc	_motorDrive_setSpeeds$2401& (0+255),7,b
  2992  010F7A  0784               	decf	(_motorDrive_setSpeeds$2401+1)& (0+255),f,b
  2993  010F7C  D00E               	goto	l6825
  2994  010F7E                     l6823:
  2995                           
  2996                           ; BSR set to: 0
  2997  010F7E  0E64               	movlw	100
  2998  010F80  0100               	movlb	0	; () banked
  2999  010F82  256E               	addwf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  3000  010F84  0100               	movlb	0	; () banked
  3001  010F86  6F83               	movwf	_motorDrive_setSpeeds$2401& (0+255),b
  3002  010F88  6AE8               	clrf	wreg,c
  3003  010F8A  B0D8               	btfsc	status,0,c
  3004  010F8C  2AE8               	incf	wreg,f,c
  3005  010F8E  0100               	movlb	0	; () banked
  3006  010F90  BF6E               	btfsc	motorDrive_setSpeeds@rSpeed& (0+255),7,b
  3007  010F92  06E8               	decf	wreg,f,c
  3008  010F94  0100               	movlb	0	; () banked
  3009  010F96  6F84               	movwf	(_motorDrive_setSpeeds$2401+1)& (0+255),b
  3010  010F98  D000               	goto	l6825
  3011  010F9A                     l6825:
  3012                           
  3013                           ; BSR set to: 0
  3014  010F9A  C083  F06E         	movff	_motorDrive_setSpeeds$2401,motorDrive_setSpeeds@rSpeed
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;motorDrive.c: 82: int templ = ((0xD0 * lSpeed) / 100);
  3018  010F9E  0100               	movlb	0	; () banked
  3019  010FA0  5185               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  3020  010FA2  0100               	movlb	0	; () banked
  3021  010FA4  6F60               	movwf	___wmul@multiplier& (0+255),b
  3022  010FA6  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  3023  010FA8  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  3024  010FAA  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  3025  010FAC  0E00               	movlw	0
  3026  010FAE  0100               	movlb	0	; () banked
  3027  010FB0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3028  010FB2  0ED0               	movlw	208
  3029  010FB4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3030  010FB6  ECAB  F08F         	call	___wmul	;wreg free
  3031  010FBA  C060  F066         	movff	?___wmul,___awdiv@dividend
  3032  010FBE  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
  3033  010FC2  0E00               	movlw	0
  3034  010FC4  0100               	movlb	0	; () banked
  3035  010FC6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3036  010FC8  0E64               	movlw	100
  3037  010FCA  6F68               	movwf	___awdiv@divisor& (0+255),b
  3038  010FCC  EC76  F089         	call	___awdiv	;wreg free
  3039  010FD0  C066  F073         	movff	?___awdiv,motorDrive_setSpeeds@templ
  3040  010FD4  C067  F074         	movff	?___awdiv+1,motorDrive_setSpeeds@templ+1
  3041                           
  3042                           ;motorDrive.c: 83: int tempr = ((0xD0 * rSpeed) / 100);
  3043  010FD8  0100               	movlb	0	; () banked
  3044  010FDA  516E               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  3045  010FDC  0100               	movlb	0	; () banked
  3046  010FDE  6F60               	movwf	___wmul@multiplier& (0+255),b
  3047  010FE0  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  3048  010FE2  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  3049  010FE4  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  3050  010FE6  0E00               	movlw	0
  3051  010FE8  0100               	movlb	0	; () banked
  3052  010FEA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3053  010FEC  0ED0               	movlw	208
  3054  010FEE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3055  010FF0  ECAB  F08F         	call	___wmul	;wreg free
  3056  010FF4  C060  F066         	movff	?___wmul,___awdiv@dividend
  3057  010FF8  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
  3058  010FFC  0E00               	movlw	0
  3059  010FFE  0100               	movlb	0	; () banked
  3060  011000  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3061  011002  0E64               	movlw	100
  3062  011004  6F68               	movwf	___awdiv@divisor& (0+255),b
  3063  011006  EC76  F089         	call	___awdiv	;wreg free
  3064  01100A  C066  F075         	movff	?___awdiv,motorDrive_setSpeeds@tempr
  3065  01100E  C067  F076         	movff	?___awdiv+1,motorDrive_setSpeeds@tempr+1
  3066                           
  3067                           ;motorDrive.c: 85: SetDCEPWM1(tempr);
  3068  011012  C075  F060         	movff	motorDrive_setSpeeds@tempr,SetDCEPWM1@dutycycle
  3069  011016  C076  F061         	movff	motorDrive_setSpeeds@tempr+1,SetDCEPWM1@dutycycle+1
  3070  01101A  EC49  F08F         	call	_SetDCEPWM1	;wreg free
  3071                           
  3072                           ;motorDrive.c: 86: SetDCEPWM3(templ);
  3073  01101E  C073  F060         	movff	motorDrive_setSpeeds@templ,SetDCEPWM3@dutycycle
  3074  011022  C074  F061         	movff	motorDrive_setSpeeds@templ+1,SetDCEPWM3@dutycycle+1
  3075  011026  EC25  F08F         	call	_SetDCEPWM3	;wreg free
  3076  01102A  0012               	return		;funcret
  3077  01102C                     __end_of_motorDrive_setSpeeds:
  3078                           	opt stack 0
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           intcon	equ	0xFF2
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec1	equ	0xFE5
  3087                           fsr1h	equ	0xFE2
  3088                           fsr1l	equ	0xFE1
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function ___wmul *****************
  3092 ;; Defined at:
  3093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3096 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  product         2    4[BANK0 ] unsigned int 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  2    0[BANK0 ] unsigned int 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, prodl, prodh
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3108 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;Total ram usage:        6 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_motorDrive_setSpeeds
  3119 ;;		_fft_execute
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text5
  3124  011F56                     __ptext5:
  3125                           	opt stack 0
  3126  011F56                     ___wmul:
  3127                           	opt stack 24
  3128                           
  3129                           ;incstack = 0
  3130  011F56  0100               	movlb	0	; () banked
  3131  011F58  5160               	movf	___wmul@multiplier& (0+255),w,b
  3132  011F5A  0100               	movlb	0	; () banked
  3133  011F5C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3134  011F5E  CFF3 F064          	movff	prodl,___wmul@product
  3135  011F62  CFF4 F065          	movff	prodh,___wmul@product+1
  3136  011F66  0100               	movlb	0	; () banked
  3137  011F68  5160               	movf	___wmul@multiplier& (0+255),w,b
  3138  011F6A  0100               	movlb	0	; () banked
  3139  011F6C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3140  011F6E  50F3               	movf	prodl,w,c
  3141  011F70  0100               	movlb	0	; () banked
  3142  011F72  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3143  011F74  0100               	movlb	0	; () banked
  3144  011F76  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3145  011F78  0100               	movlb	0	; () banked
  3146  011F7A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3147  011F7C  50F3               	movf	prodl,w,c
  3148  011F7E  0100               	movlb	0	; () banked
  3149  011F80  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3150                           
  3151                           ; BSR set to: 0
  3152  011F82  C064  F060         	movff	___wmul@product,?___wmul
  3153  011F86  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3154  011F8A  0012               	return	
  3155                           
  3156                           ; BSR set to: 0
  3157                           
  3158                           ; BSR set to: 0
  3159  011F8C  0012               	return		;funcret
  3160  011F8E                     __end_of___wmul:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           status	equ	0xFD8
  3175                           
  3176 ;; *************** function ___awdiv *****************
  3177 ;; Defined at:
  3178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  dividend        2    6[BANK0 ] int 
  3181 ;;  divisor         2    8[BANK0 ] int 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  quotient        2   12[BANK0 ] int 
  3184 ;;  sign            1   11[BANK0 ] unsigned char 
  3185 ;;  counter         1   10[BANK0 ] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2    6[BANK0 ] int 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;Total ram usage:        8 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    3
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_motorDrive_setSpeeds
  3206 ;;		_RCMode
  3207 ;;		_compass_cart2polar
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text6
  3212  0112EC                     __ptext6:
  3213                           	opt stack 0
  3214  0112EC                     ___awdiv:
  3215                           	opt stack 24
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;incstack = 0
  3219  0112EC  0E00               	movlw	0
  3220  0112EE  0100               	movlb	0	; () banked
  3221  0112F0  6F6B               	movwf	___awdiv@sign& (0+255),b
  3222                           
  3223                           ; BSR set to: 0
  3224  0112F2  0100               	movlb	0	; () banked
  3225  0112F4  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3226  0112F6  D009               	goto	l6725
  3227                           
  3228                           ; BSR set to: 0
  3229  0112F8  0100               	movlb	0	; () banked
  3230  0112FA  6D68               	negf	___awdiv@divisor& (0+255),b
  3231  0112FC  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3232  0112FE  B0D8               	btfsc	status,0,c
  3233  011300  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3234                           
  3235                           ; BSR set to: 0
  3236  011302  0E01               	movlw	1
  3237  011304  0100               	movlb	0	; () banked
  3238  011306  6F6B               	movwf	___awdiv@sign& (0+255),b
  3239  011308  D000               	goto	l6725
  3240  01130A                     l6725:
  3241                           
  3242                           ; BSR set to: 0
  3243  01130A  0100               	movlb	0	; () banked
  3244  01130C  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3245  01130E  D009               	goto	l6731
  3246                           
  3247                           ; BSR set to: 0
  3248  011310  0100               	movlb	0	; () banked
  3249  011312  6D66               	negf	___awdiv@dividend& (0+255),b
  3250  011314  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3251  011316  B0D8               	btfsc	status,0,c
  3252  011318  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3253                           
  3254                           ; BSR set to: 0
  3255  01131A  0E01               	movlw	1
  3256  01131C  0100               	movlb	0	; () banked
  3257  01131E  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  3258  011320  D000               	goto	l6731
  3259  011322                     l6731:
  3260                           
  3261                           ; BSR set to: 0
  3262  011322  0E00               	movlw	0
  3263  011324  0100               	movlb	0	; () banked
  3264  011326  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  3265  011328  0E00               	movlw	0
  3266  01132A  6F6C               	movwf	___awdiv@quotient& (0+255),b
  3267                           
  3268                           ; BSR set to: 0
  3269  01132C  0100               	movlb	0	; () banked
  3270  01132E  5168               	movf	___awdiv@divisor& (0+255),w,b
  3271  011330  0100               	movlb	0	; () banked
  3272  011332  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3273  011334  B4D8               	btfsc	status,2,c
  3274  011336  D031               	goto	l6753
  3275                           
  3276                           ; BSR set to: 0
  3277  011338  0E01               	movlw	1
  3278  01133A  0100               	movlb	0	; () banked
  3279  01133C  6F6A               	movwf	___awdiv@counter& (0+255),b
  3280  01133E  D007               	goto	l6739
  3281  011340                     l6737:
  3282                           
  3283                           ; BSR set to: 0
  3284  011340  0100               	movlb	0	; () banked
  3285  011342  90D8               	bcf	status,0,c
  3286  011344  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  3287  011346  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3288  011348  0100               	movlb	0	; () banked
  3289  01134A  2B6A               	incf	___awdiv@counter& (0+255),f,b
  3290  01134C  D000               	goto	l6739
  3291  01134E                     l6739:
  3292                           
  3293                           ; BSR set to: 0
  3294  01134E  0100               	movlb	0	; () banked
  3295  011350  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3296  011352  D002               	goto	l6741
  3297  011354  D7F5               	goto	l6737
  3298                           
  3299                           ; BSR set to: 0
  3300  011356  D000               	goto	l6741
  3301  011358                     l6741:
  3302                           
  3303                           ; BSR set to: 0
  3304  011358  0100               	movlb	0	; () banked
  3305  01135A  90D8               	bcf	status,0,c
  3306  01135C  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  3307  01135E  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3308                           
  3309                           ; BSR set to: 0
  3310  011360  0100               	movlb	0	; () banked
  3311  011362  5168               	movf	___awdiv@divisor& (0+255),w,b
  3312  011364  0100               	movlb	0	; () banked
  3313  011366  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  3314  011368  0100               	movlb	0	; () banked
  3315  01136A  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3316  01136C  0100               	movlb	0	; () banked
  3317  01136E  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3318  011370  A0D8               	btfss	status,0,c
  3319  011372  D00B               	goto	l6749
  3320                           
  3321                           ; BSR set to: 0
  3322  011374  0100               	movlb	0	; () banked
  3323  011376  5168               	movf	___awdiv@divisor& (0+255),w,b
  3324  011378  0100               	movlb	0	; () banked
  3325  01137A  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  3326  01137C  0100               	movlb	0	; () banked
  3327  01137E  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3328  011380  0100               	movlb	0	; () banked
  3329  011382  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3330                           
  3331                           ; BSR set to: 0
  3332  011384  0100               	movlb	0	; () banked
  3333  011386  816C               	bsf	___awdiv@quotient& (0+255),0,b
  3334  011388  D000               	goto	l6749
  3335  01138A                     l6749:
  3336                           
  3337                           ; BSR set to: 0
  3338  01138A  0100               	movlb	0	; () banked
  3339  01138C  90D8               	bcf	status,0,c
  3340  01138E  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3341  011390  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  3342                           
  3343                           ; BSR set to: 0
  3344  011392  0100               	movlb	0	; () banked
  3345  011394  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  3346  011396  D7E0               	goto	l6741
  3347                           
  3348                           ; BSR set to: 0
  3349  011398  D000               	goto	l6753
  3350  01139A                     l6753:
  3351                           
  3352                           ; BSR set to: 0
  3353  01139A  0100               	movlb	0	; () banked
  3354  01139C  516B               	movf	___awdiv@sign& (0+255),w,b
  3355  01139E  0100               	movlb	0	; () banked
  3356  0113A0  B4D8               	btfsc	status,2,c
  3357  0113A2  D006               	goto	l6757
  3358                           
  3359                           ; BSR set to: 0
  3360  0113A4  0100               	movlb	0	; () banked
  3361  0113A6  6D6C               	negf	___awdiv@quotient& (0+255),b
  3362  0113A8  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3363  0113AA  B0D8               	btfsc	status,0,c
  3364  0113AC  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3365  0113AE  D000               	goto	l6757
  3366  0113B0                     l6757:
  3367                           
  3368                           ; BSR set to: 0
  3369  0113B0  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  3370  0113B4  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  3371  0113B8  0012               	return	
  3372                           
  3373                           ; BSR set to: 0
  3374                           
  3375                           ; BSR set to: 0
  3376  0113BA  0012               	return		;funcret
  3377  0113BC                     __end_of___awdiv:
  3378                           	opt stack 0
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           prodh	equ	0xFF4
  3384                           prodl	equ	0xFF3
  3385                           intcon	equ	0xFF2
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function _SetDCEPWM3 *****************
  3394 ;; Defined at:
  3395 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setdc.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:        6 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_motorDrive_init
  3420 ;;		_motorDrive_setSpeeds
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text7
  3425  011E4A                     __ptext7:
  3426                           	opt stack 0
  3427  011E4A                     _SetDCEPWM3:
  3428                           	opt stack 24
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;incstack = 0
  3432  011E4A  C060  F062         	movff	SetDCEPWM3@dutycycle,??_SetDCEPWM3
  3433  011E4E  C061  F063         	movff	SetDCEPWM3@dutycycle+1,??_SetDCEPWM3+1
  3434  011E52  0E06               	movlw	6
  3435  011E54                     u4585:
  3436  011E54  90D8               	bcf	status,0,c
  3437  011E56  0100               	movlb	0	; () banked
  3438  011E58  3762               	rlcf	??_SetDCEPWM3& (0+255),f,b
  3439  011E5A  3763               	rlcf	(??_SetDCEPWM3+1)& (0+255),f,b
  3440  011E5C  2EE8               	decfsz	wreg,f,c
  3441  011E5E  D7FA               	goto	u4585
  3442  011E60  C062  F064         	movff	??_SetDCEPWM3,SetDCEPWM3@DCycle
  3443  011E64  C063  F065         	movff	??_SetDCEPWM3+1,SetDCEPWM3@DCycle+1
  3444                           
  3445                           ; BSR set to: 0
  3446  011E68  C065  FF4A         	movff	SetDCEPWM3@DCycle+1,3914	;volatile
  3447  011E6C  C064  F062         	movff	SetDCEPWM3@DCycle,??_SetDCEPWM3
  3448  011E70  0100               	movlb	0	; () banked
  3449  011E72  90D8               	bcf	status,0,c
  3450  011E74  3362               	rrcf	??_SetDCEPWM3& (0+255),f,b
  3451  011E76  0100               	movlb	0	; () banked
  3452  011E78  90D8               	bcf	status,0,c
  3453  011E7A  3362               	rrcf	??_SetDCEPWM3& (0+255),f,b
  3454  011E7C  0E30               	movlw	48
  3455  011E7E  0100               	movlb	0	; () banked
  3456  011E80  1762               	andwf	??_SetDCEPWM3& (0+255),f,b
  3457  011E82  010F               	movlb	15	; () banked
  3458  011E84  5149               	movf	73,w,b	;volatile
  3459  011E86  0BCF               	andlw	207
  3460  011E88  0100               	movlb	0	; () banked
  3461  011E8A  1162               	iorwf	??_SetDCEPWM3& (0+255),w,b
  3462  011E8C  010F               	movlb	15	; () banked
  3463  011E8E  6F49               	movwf	73,b	;volatile
  3464                           
  3465                           ; BSR set to: 15
  3466  011E90  0012               	return		;funcret
  3467  011E92                     __end_of_SetDCEPWM3:
  3468                           	opt stack 0
  3469                           tblptru	equ	0xFF8
  3470                           tblptrh	equ	0xFF7
  3471                           tblptrl	equ	0xFF6
  3472                           tablat	equ	0xFF5
  3473                           prodh	equ	0xFF4
  3474                           prodl	equ	0xFF3
  3475                           intcon	equ	0xFF2
  3476                           postinc0	equ	0xFEE
  3477                           wreg	equ	0xFE8
  3478                           postdec1	equ	0xFE5
  3479                           fsr1h	equ	0xFE2
  3480                           fsr1l	equ	0xFE1
  3481                           status	equ	0xFD8
  3482                           
  3483 ;; *************** function _SetDCEPWM1 *****************
  3484 ;; Defined at:
  3485 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setdc.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;Total ram usage:        6 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    3
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_motorDrive_init
  3510 ;;		_motorDrive_setSpeeds
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text8
  3515  011E92                     __ptext8:
  3516                           	opt stack 0
  3517  011E92                     _SetDCEPWM1:
  3518                           	opt stack 24
  3519                           
  3520                           ; BSR set to: 15
  3521                           ;incstack = 0
  3522  011E92  C060  F062         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  3523  011E96  C061  F063         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  3524  011E9A  0E06               	movlw	6
  3525  011E9C                     u4575:
  3526  011E9C  90D8               	bcf	status,0,c
  3527  011E9E  0100               	movlb	0	; () banked
  3528  011EA0  3762               	rlcf	??_SetDCEPWM1& (0+255),f,b
  3529  011EA2  3763               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  3530  011EA4  2EE8               	decfsz	wreg,f,c
  3531  011EA6  D7FA               	goto	u4575
  3532  011EA8  C062  F064         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  3533  011EAC  C063  F065         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  3534                           
  3535                           ; BSR set to: 0
  3536  011EB0  C065  FFBA         	movff	SetDCEPWM1@DCycle+1,4026	;volatile
  3537  011EB4  C064  F062         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  3538  011EB8  0100               	movlb	0	; () banked
  3539  011EBA  90D8               	bcf	status,0,c
  3540  011EBC  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  3541  011EBE  0100               	movlb	0	; () banked
  3542  011EC0  90D8               	bcf	status,0,c
  3543  011EC2  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  3544  011EC4  0E30               	movlw	48
  3545  011EC6  0100               	movlb	0	; () banked
  3546  011EC8  1762               	andwf	??_SetDCEPWM1& (0+255),f,b
  3547  011ECA  50B9               	movf	4025,w,c	;volatile
  3548  011ECC  0BCF               	andlw	207
  3549  011ECE  0100               	movlb	0	; () banked
  3550  011ED0  1162               	iorwf	??_SetDCEPWM1& (0+255),w,b
  3551  011ED2  6EB9               	movwf	4025,c	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554  011ED4  0012               	return		;funcret
  3555  011ED6                     __end_of_SetDCEPWM1:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           postdec1	equ	0xFE5
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _SetOutputEPWM3 *****************
  3572 ;; Defined at:
  3573 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setoc.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  outputconfig    1    wreg     unsigned char 
  3576 ;;  outputmode      1    0[BANK0 ] unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  outputconfig    1    2[BANK0 ] unsigned char 
  3579 ;;  eccpmx          1    1[BANK0 ] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        3 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    3
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_motorDrive_init
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text9
  3604  0115FA                     __ptext9:
  3605                           	opt stack 0
  3606  0115FA                     _SetOutputEPWM3:
  3607                           	opt stack 25
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;incstack = 0
  3611                           ;SetOutputEPWM3@outputconfig stored from wreg
  3612  0115FA  0100               	movlb	0	; () banked
  3613  0115FC  6F62               	movwf	SetOutputEPWM3@outputconfig& (0+255),b
  3614                           
  3615                           ; BSR set to: 0
  3616  0115FE  0E00               	movlw	0
  3617  011600  0100               	movlb	0	; () banked
  3618  011602  6F61               	movwf	SetOutputEPWM3@eccpmx& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621  011604  0E3F               	movlw	63
  3622  011606  0100               	movlb	0	; () banked
  3623  011608  1362               	iorwf	SetOutputEPWM3@outputconfig& (0+255),f,b
  3624                           
  3625                           ; BSR set to: 0
  3626  01160A  0EFC               	movlw	252
  3627  01160C  0100               	movlb	0	; () banked
  3628  01160E  1360               	iorwf	SetOutputEPWM3@outputmode& (0+255),f,b
  3629                           
  3630                           ; BSR set to: 0
  3631  011610  010F               	movlb	15	; () banked
  3632  011612  5149               	movf	73,w,b	;volatile
  3633  011614  09C0               	iorlw	192
  3634  011616  0100               	movlb	0	; () banked
  3635  011618  1562               	andwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3636  01161A  010F               	movlb	15	; () banked
  3637  01161C  6F49               	movwf	73,b	;volatile
  3638                           
  3639                           ; BSR set to: 15
  3640  01161E  010F               	movlb	15	; () banked
  3641  011620  5149               	movf	73,w,b	;volatile
  3642  011622  090F               	iorlw	15
  3643  011624  0100               	movlb	0	; () banked
  3644  011626  1560               	andwf	SetOutputEPWM3@outputmode& (0+255),w,b
  3645  011628  010F               	movlb	15	; () banked
  3646  01162A  6F49               	movwf	73,b	;volatile
  3647                           
  3648                           ; BSR set to: 15
  3649  01162C  0E05               	movlw	5
  3650  01162E  6EF6               	movwf	tblptrl,c
  3651  011630                     	if	1	;There is more than 1 active tblptr byte
  3652  011630  0E00               	movlw	0
  3653  011632  6EF7               	movwf	tblptrh,c
  3654  011634                     	endif
  3655  011634                     	if	1	;There are 3 active tblptr bytes
  3656  011634  0E30               	movlw	48
  3657  011636  6EF8               	movwf	tblptru,c
  3658  011638                     	endif
  3659  011638  0008               	tblrd		*
  3660  01163A  0100               	movlb	12288	; () banked
  3661  01163C  A2F5               	btfss	tablat,1,c
  3662  01163E  D003               	goto	l6929
  3663                           
  3664                           ; BSR set to: 0
  3665  011640  0100               	movlb	0	; () banked
  3666  011642  6961               	setf	SetOutputEPWM3@eccpmx& (0+255),b
  3667  011644  D004               	goto	l6931
  3668  011646                     l6929:
  3669                           
  3670                           ; BSR set to: 0
  3671  011646  0E00               	movlw	0
  3672  011648  0100               	movlb	0	; () banked
  3673  01164A  6F61               	movwf	SetOutputEPWM3@eccpmx& (0+255),b
  3674  01164C  D000               	goto	l6931
  3675  01164E                     l6931:
  3676                           
  3677                           ; BSR set to: 0
  3678  01164E  0E3F               	movlw	63
  3679  011650  0100               	movlb	0	; () banked
  3680  011652  1962               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3681  011654  A4D8               	btfss	status,2,c
  3682  011656  D002               	goto	l6935
  3683                           
  3684                           ; BSR set to: 0
  3685  011658  9098               	bcf	3992,0,c	;volatile
  3686  01165A  0012               	return	
  3687  01165C                     l6935:
  3688                           
  3689                           ; BSR set to: 0
  3690  01165C  0EBF               	movlw	191
  3691  01165E  0100               	movlb	0	; () banked
  3692  011660  1962               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3693  011662  A4D8               	btfss	status,2,c
  3694  011664  D00A               	goto	l6943
  3695                           
  3696                           ; BSR set to: 0
  3697  011666  9098               	bcf	3992,0,c	;volatile
  3698                           
  3699                           ; BSR set to: 0
  3700  011668  0100               	movlb	0	; () banked
  3701  01166A  5161               	movf	SetOutputEPWM3@eccpmx& (0+255),w,b
  3702  01166C  0100               	movlb	0	; () banked
  3703  01166E  B4D8               	btfsc	status,2,c
  3704  011670  D002               	goto	l1346
  3705                           
  3706                           ; BSR set to: 0
  3707  011672  9896               	bcf	3990,4,c	;volatile
  3708  011674  0012               	return	
  3709  011676                     l1346:
  3710                           
  3711                           ; BSR set to: 0
  3712  011676  9A99               	bcf	3993,5,c	;volatile
  3713                           
  3714                           ; BSR set to: 0
  3715  011678  0012               	return	
  3716  01167A                     l6943:
  3717                           
  3718                           ; BSR set to: 0
  3719  01167A  0E7F               	movlw	127
  3720  01167C  0100               	movlb	0	; () banked
  3721  01167E  1962               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3722  011680  B4D8               	btfsc	status,2,c
  3723  011682  D004               	goto	l1351
  3724                           
  3725                           ; BSR set to: 0
  3726  011684  0100               	movlb	0	; () banked
  3727  011686  2962               	incf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3728  011688  A4D8               	btfss	status,2,c
  3729  01168A  0012               	return	
  3730  01168C                     l1351:
  3731                           
  3732                           ; BSR set to: 0
  3733  01168C  9098               	bcf	3992,0,c	;volatile
  3734                           
  3735                           ; BSR set to: 0
  3736  01168E  0100               	movlb	0	; () banked
  3737  011690  5161               	movf	SetOutputEPWM3@eccpmx& (0+255),w,b
  3738  011692  0100               	movlb	0	; () banked
  3739  011694  B4D8               	btfsc	status,2,c
  3740  011696  D003               	goto	l1352
  3741                           
  3742                           ; BSR set to: 0
  3743  011698  9896               	bcf	3990,4,c	;volatile
  3744  01169A  9696               	bcf	3990,3,c	;volatile
  3745  01169C  D002               	goto	l1353
  3746  01169E                     l1352:
  3747                           
  3748                           ; BSR set to: 0
  3749  01169E  9A99               	bcf	3993,5,c	;volatile
  3750  0116A0  9899               	bcf	3993,4,c	;volatile
  3751  0116A2                     l1353:
  3752                           
  3753                           ; BSR set to: 0
  3754  0116A2  9698               	bcf	3992,3,c	;volatile
  3755                           
  3756                           ; BSR set to: 0
  3757                           
  3758                           ; BSR set to: 0
  3759  0116A4  0012               	return	
  3760                           
  3761                           ; BSR set to: 0
  3762                           
  3763                           ; BSR set to: 0
  3764  0116A6  0012               	return		;funcret
  3765  0116A8                     __end_of_SetOutputEPWM3:
  3766                           	opt stack 0
  3767                           tblptru	equ	0xFF8
  3768                           tblptrh	equ	0xFF7
  3769                           tblptrl	equ	0xFF6
  3770                           tablat	equ	0xFF5
  3771                           prodh	equ	0xFF4
  3772                           prodl	equ	0xFF3
  3773                           intcon	equ	0xFF2
  3774                           postinc0	equ	0xFEE
  3775                           wreg	equ	0xFE8
  3776                           postdec1	equ	0xFE5
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           status	equ	0xFD8
  3780                           
  3781 ;; *************** function _SetOutputEPWM1 *****************
  3782 ;; Defined at:
  3783 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setoc.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  outputconfig    1    wreg     unsigned char 
  3786 ;;  outputmode      1    0[BANK0 ] unsigned char 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  outputconfig    1    2[BANK0 ] unsigned char 
  3789 ;;  eccpmx          1    1[BANK0 ] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;		None               void
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3799 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;Total ram usage:        3 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    3
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_motorDrive_init
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text10
  3814  0116A8                     __ptext10:
  3815                           	opt stack 0
  3816  0116A8                     _SetOutputEPWM1:
  3817                           	opt stack 25
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;incstack = 0
  3821                           ;SetOutputEPWM1@outputconfig stored from wreg
  3822  0116A8  0100               	movlb	0	; () banked
  3823  0116AA  6F62               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  3824                           
  3825                           ; BSR set to: 0
  3826  0116AC  0E00               	movlw	0
  3827  0116AE  0100               	movlb	0	; () banked
  3828  0116B0  6F61               	movwf	SetOutputEPWM1@eccpmx& (0+255),b
  3829                           
  3830                           ; BSR set to: 0
  3831  0116B2  0E3F               	movlw	63
  3832  0116B4  0100               	movlb	0	; () banked
  3833  0116B6  1362               	iorwf	SetOutputEPWM1@outputconfig& (0+255),f,b
  3834                           
  3835                           ; BSR set to: 0
  3836  0116B8  0EFC               	movlw	252
  3837  0116BA  0100               	movlb	0	; () banked
  3838  0116BC  1360               	iorwf	SetOutputEPWM1@outputmode& (0+255),f,b
  3839                           
  3840                           ; BSR set to: 0
  3841  0116BE  50B9               	movf	4025,w,c	;volatile
  3842  0116C0  09C0               	iorlw	192
  3843  0116C2  0100               	movlb	0	; () banked
  3844  0116C4  1562               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3845  0116C6  6EB9               	movwf	4025,c	;volatile
  3846                           
  3847                           ; BSR set to: 0
  3848  0116C8  50B9               	movf	4025,w,c	;volatile
  3849  0116CA  090F               	iorlw	15
  3850  0116CC  0100               	movlb	0	; () banked
  3851  0116CE  1560               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  3852  0116D0  6EB9               	movwf	4025,c	;volatile
  3853                           
  3854                           ; BSR set to: 0
  3855  0116D2  0E05               	movlw	5
  3856  0116D4  6EF6               	movwf	tblptrl,c
  3857  0116D6                     	if	1	;There is more than 1 active tblptr byte
  3858  0116D6  0E00               	movlw	0
  3859  0116D8  6EF7               	movwf	tblptrh,c
  3860  0116DA                     	endif
  3861  0116DA                     	if	1	;There are 3 active tblptr bytes
  3862  0116DA  0E30               	movlw	48
  3863  0116DC  6EF8               	movwf	tblptru,c
  3864  0116DE                     	endif
  3865  0116DE  0008               	tblrd		*
  3866  0116E0  0100               	movlb	12288	; () banked
  3867  0116E2  A2F5               	btfss	tablat,1,c
  3868  0116E4  D003               	goto	l6871
  3869                           
  3870                           ; BSR set to: 0
  3871  0116E6  0100               	movlb	0	; () banked
  3872  0116E8  6961               	setf	SetOutputEPWM1@eccpmx& (0+255),b
  3873  0116EA  D004               	goto	l6873
  3874  0116EC                     l6871:
  3875                           
  3876                           ; BSR set to: 0
  3877  0116EC  0E00               	movlw	0
  3878  0116EE  0100               	movlb	0	; () banked
  3879  0116F0  6F61               	movwf	SetOutputEPWM1@eccpmx& (0+255),b
  3880  0116F2  D000               	goto	l6873
  3881  0116F4                     l6873:
  3882                           
  3883                           ; BSR set to: 0
  3884  0116F4  0E3F               	movlw	63
  3885  0116F6  0100               	movlb	0	; () banked
  3886  0116F8  1962               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3887  0116FA  A4D8               	btfss	status,2,c
  3888  0116FC  D002               	goto	l6877
  3889                           
  3890                           ; BSR set to: 0
  3891  0116FE  9494               	bcf	3988,2,c	;volatile
  3892  011700  0012               	return	
  3893  011702                     l6877:
  3894                           
  3895                           ; BSR set to: 0
  3896  011702  0EBF               	movlw	191
  3897  011704  0100               	movlb	0	; () banked
  3898  011706  1962               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3899  011708  A4D8               	btfss	status,2,c
  3900  01170A  D00A               	goto	l6885
  3901                           
  3902                           ; BSR set to: 0
  3903  01170C  9494               	bcf	3988,2,c	;volatile
  3904                           
  3905                           ; BSR set to: 0
  3906  01170E  0100               	movlb	0	; () banked
  3907  011710  5161               	movf	SetOutputEPWM1@eccpmx& (0+255),w,b
  3908  011712  0100               	movlb	0	; () banked
  3909  011714  B4D8               	btfsc	status,2,c
  3910  011716  D002               	goto	l1285
  3911                           
  3912                           ; BSR set to: 0
  3913  011718  9C96               	bcf	3990,6,c	;volatile
  3914  01171A  0012               	return	
  3915  01171C                     l1285:
  3916                           
  3917                           ; BSR set to: 0
  3918  01171C  9E99               	bcf	3993,7,c	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921  01171E  0012               	return	
  3922  011720                     l6885:
  3923                           
  3924                           ; BSR set to: 0
  3925  011720  0E7F               	movlw	127
  3926  011722  0100               	movlb	0	; () banked
  3927  011724  1962               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3928  011726  B4D8               	btfsc	status,2,c
  3929  011728  D004               	goto	l1290
  3930                           
  3931                           ; BSR set to: 0
  3932  01172A  0100               	movlb	0	; () banked
  3933  01172C  2962               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3934  01172E  A4D8               	btfss	status,2,c
  3935  011730  0012               	return	
  3936  011732                     l1290:
  3937                           
  3938                           ; BSR set to: 0
  3939  011732  9494               	bcf	3988,2,c	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942  011734  0100               	movlb	0	; () banked
  3943  011736  5161               	movf	SetOutputEPWM1@eccpmx& (0+255),w,b
  3944  011738  0100               	movlb	0	; () banked
  3945  01173A  B4D8               	btfsc	status,2,c
  3946  01173C  D003               	goto	l1291
  3947                           
  3948                           ; BSR set to: 0
  3949  01173E  9C96               	bcf	3990,6,c	;volatile
  3950  011740  9A96               	bcf	3990,5,c	;volatile
  3951  011742  D002               	goto	l1292
  3952  011744                     l1291:
  3953                           
  3954                           ; BSR set to: 0
  3955  011744  9E99               	bcf	3993,7,c	;volatile
  3956  011746  9C99               	bcf	3993,6,c	;volatile
  3957  011748                     l1292:
  3958                           
  3959                           ; BSR set to: 0
  3960  011748  9898               	bcf	3992,4,c	;volatile
  3961                           
  3962                           ; BSR set to: 0
  3963                           
  3964                           ; BSR set to: 0
  3965  01174A  0012               	return	
  3966                           
  3967                           ; BSR set to: 0
  3968                           
  3969                           ; BSR set to: 0
  3970  01174C  0012               	return		;funcret
  3971  01174E                     __end_of_SetOutputEPWM1:
  3972                           	opt stack 0
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           intcon	equ	0xFF2
  3980                           postinc0	equ	0xFEE
  3981                           wreg	equ	0xFE8
  3982                           postdec1	equ	0xFE5
  3983                           fsr1h	equ	0xFE2
  3984                           fsr1l	equ	0xFE1
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _OpenEPWM3 *****************
  3988 ;; Defined at:
  3989 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3open.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  period          1    wreg     unsigned char 
  3992 ;;  timer_source    1    0[BANK0 ] unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  period          1    2[BANK0 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;		None               void
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4004 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4007 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;Total ram usage:        3 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    3
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_motorDrive_init
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text11
  4019  011876                     __ptext11:
  4020                           	opt stack 0
  4021  011876                     _OpenEPWM3:
  4022                           	opt stack 25
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;incstack = 0
  4026                           ;OpenEPWM3@period stored from wreg
  4027  011876  0100               	movlb	0	; () banked
  4028  011878  6F62               	movwf	OpenEPWM3@period& (0+255),b
  4029                           
  4030                           ; BSR set to: 0
  4031  01187A  0E0C               	movlw	12
  4032  01187C  010F               	movlb	15	; () banked
  4033  01187E  6F49               	movwf	73,b	;volatile
  4034                           
  4035                           ; BSR set to: 15
  4036  011880  0E3F               	movlw	63
  4037  011882  010F               	movlb	15	; () banked
  4038  011884  1736               	andwf	54,f,b	;volatile
  4039                           
  4040                           ; BSR set to: 15
  4041  011886  C060  F061         	movff	OpenEPWM3@timer_source,??_OpenEPWM3
  4042  01188A  0E30               	movlw	48
  4043  01188C  0100               	movlb	0	; () banked
  4044  01188E  1761               	andwf	??_OpenEPWM3& (0+255),f,b
  4045  011890  0100               	movlb	0	; () banked
  4046  011892  90D8               	bcf	status,0,c
  4047  011894  3761               	rlcf	??_OpenEPWM3& (0+255),f,b
  4048  011896  0100               	movlb	0	; () banked
  4049  011898  90D8               	bcf	status,0,c
  4050  01189A  3561               	rlcf	??_OpenEPWM3& (0+255),w,b
  4051  01189C  010F               	movlb	15	; () banked
  4052  01189E  1336               	iorwf	54,f,b	;volatile
  4053                           
  4054                           ; BSR set to: 15
  4055  0118A0  CF36 F061          	movff	3894,??_OpenEPWM3	;volatile
  4056  0118A4  0EC0               	movlw	192
  4057  0118A6  0100               	movlb	0	; () banked
  4058  0118A8  1761               	andwf	??_OpenEPWM3& (0+255),f,b
  4059  0118AA  A4D8               	btfss	status,2,c
  4060  0118AC  D005               	goto	l6903
  4061                           
  4062                           ; BSR set to: 0
  4063  0118AE  94CA               	bcf	4042,2,c	;volatile
  4064  0118B0  C062  FFCB         	movff	OpenEPWM3@period,4043	;volatile
  4065  0118B4  84CA               	bsf	4042,2,c	;volatile
  4066  0118B6  0012               	return	
  4067  0118B8                     l6903:
  4068                           
  4069                           ; BSR set to: 0
  4070  0118B8  010F               	movlb	15	; () banked
  4071  0118BA  5136               	movf	54,w,b	;volatile
  4072  0118BC  0BC0               	andlw	192
  4073  0118BE  0A40               	xorlw	64
  4074  0118C0  A4D8               	btfss	status,2,c
  4075  0118C2  D007               	goto	l6907
  4076                           
  4077                           ; BSR set to: 15
  4078  0118C4  010F               	movlb	15	; () banked
  4079  0118C6  9504               	bcf	4,2,b	;volatile
  4080  0118C8  C062  FF05         	movff	OpenEPWM3@period,3845	;volatile
  4081  0118CC  010F               	movlb	15	; () banked
  4082  0118CE  8504               	bsf	4,2,b	;volatile
  4083  0118D0  0012               	return	
  4084  0118D2                     l6907:
  4085                           
  4086                           ; BSR set to: 15
  4087  0118D2  010F               	movlb	15	; () banked
  4088  0118D4  5136               	movf	54,w,b	;volatile
  4089  0118D6  0BC0               	andlw	192
  4090  0118D8  0A80               	xorlw	128
  4091  0118DA  A4D8               	btfss	status,2,c
  4092  0118DC  D007               	goto	l6911
  4093                           
  4094                           ; BSR set to: 15
  4095  0118DE  010F               	movlb	15	; () banked
  4096  0118E0  953D               	bcf	61,2,b	;volatile
  4097  0118E2  C062  FF3E         	movff	OpenEPWM3@period,3902	;volatile
  4098  0118E6  010F               	movlb	15	; () banked
  4099  0118E8  853D               	bsf	61,2,b	;volatile
  4100  0118EA  0012               	return	
  4101  0118EC                     l6911:
  4102                           
  4103                           ; BSR set to: 15
  4104  0118EC  010F               	movlb	15	; () banked
  4105  0118EE  5136               	movf	54,w,b	;volatile
  4106  0118F0  0BC0               	andlw	192
  4107  0118F2  0AC0               	xorlw	192
  4108  0118F4  A4D8               	btfss	status,2,c
  4109  0118F6  0012               	return	
  4110                           
  4111                           ; BSR set to: 15
  4112  0118F8  010F               	movlb	15	; () banked
  4113  0118FA  953A               	bcf	58,2,b	;volatile
  4114  0118FC  C062  FF3B         	movff	OpenEPWM3@period,3899	;volatile
  4115  011900  010F               	movlb	15	; () banked
  4116  011902  853A               	bsf	58,2,b	;volatile
  4117                           
  4118                           ; BSR set to: 15
  4119                           
  4120                           ; BSR set to: 15
  4121                           
  4122                           ; BSR set to: 15
  4123  011904  0012               	return	
  4124                           
  4125                           ; BSR set to: 15
  4126  011906  0012               	return		;funcret
  4127  011908                     __end_of_OpenEPWM3:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           intcon	equ	0xFF2
  4136                           postinc0	equ	0xFEE
  4137                           wreg	equ	0xFE8
  4138                           postdec1	equ	0xFE5
  4139                           fsr1h	equ	0xFE2
  4140                           fsr1l	equ	0xFE1
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function _OpenEPWM1 *****************
  4144 ;; Defined at:
  4145 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1open.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  period          1    wreg     unsigned char 
  4148 ;;  timer_source    1    0[BANK0 ] unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  period          1    2[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;		None               void
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4160 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;Total ram usage:        3 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    3
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_motorDrive_init
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text12
  4175  011998                     __ptext12:
  4176                           	opt stack 0
  4177  011998                     _OpenEPWM1:
  4178                           	opt stack 25
  4179                           
  4180                           ;incstack = 0
  4181                           ;OpenEPWM1@period stored from wreg
  4182  011998  0100               	movlb	0	; () banked
  4183  01199A  6F62               	movwf	OpenEPWM1@period& (0+255),b
  4184                           
  4185                           ; BSR set to: 0
  4186  01199C  0E0C               	movlw	12
  4187  01199E  6EB9               	movwf	4025,c	;volatile
  4188                           
  4189                           ; BSR set to: 0
  4190  0119A0  0EFC               	movlw	252
  4191  0119A2  010F               	movlb	15	; () banked
  4192  0119A4  1736               	andwf	54,f,b	;volatile
  4193                           
  4194                           ; BSR set to: 15
  4195  0119A6  0100               	movlb	0	; () banked
  4196  0119A8  3960               	swapf	OpenEPWM1@timer_source& (0+255),w,b
  4197  0119AA  46E8               	rlncf	wreg,f,c
  4198  0119AC  0B1F               	andlw	31
  4199  0119AE  0B03               	andlw	3
  4200  0119B0  010F               	movlb	15	; () banked
  4201  0119B2  1336               	iorwf	54,f,b	;volatile
  4202                           
  4203                           ; BSR set to: 15
  4204  0119B4  CF36 F061          	movff	3894,??_OpenEPWM1	;volatile
  4205  0119B8  0E07               	movlw	7
  4206  0119BA  0100               	movlb	0	; () banked
  4207  0119BC  1761               	andwf	??_OpenEPWM1& (0+255),f,b
  4208  0119BE  A4D8               	btfss	status,2,c
  4209  0119C0  D005               	goto	l6845
  4210                           
  4211                           ; BSR set to: 0
  4212  0119C2  94CA               	bcf	4042,2,c	;volatile
  4213  0119C4  C062  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  4214  0119C8  84CA               	bsf	4042,2,c	;volatile
  4215  0119CA  0012               	return	
  4216  0119CC                     l6845:
  4217                           
  4218                           ; BSR set to: 0
  4219  0119CC  010F               	movlb	15	; () banked
  4220  0119CE  5136               	movf	54,w,b	;volatile
  4221  0119D0  0B07               	andlw	7
  4222  0119D2  06E8               	decf	wreg,f,c
  4223  0119D4  A4D8               	btfss	status,2,c
  4224  0119D6  D007               	goto	l6849
  4225                           
  4226                           ; BSR set to: 15
  4227  0119D8  010F               	movlb	15	; () banked
  4228  0119DA  9504               	bcf	4,2,b	;volatile
  4229  0119DC  C062  FF05         	movff	OpenEPWM1@period,3845	;volatile
  4230  0119E0  010F               	movlb	15	; () banked
  4231  0119E2  8504               	bsf	4,2,b	;volatile
  4232  0119E4  0012               	return	
  4233  0119E6                     l6849:
  4234                           
  4235                           ; BSR set to: 15
  4236  0119E6  010F               	movlb	15	; () banked
  4237  0119E8  5136               	movf	54,w,b	;volatile
  4238  0119EA  0B07               	andlw	7
  4239  0119EC  0A02               	xorlw	2
  4240  0119EE  A4D8               	btfss	status,2,c
  4241  0119F0  D007               	goto	l6853
  4242                           
  4243                           ; BSR set to: 15
  4244  0119F2  010F               	movlb	15	; () banked
  4245  0119F4  953D               	bcf	61,2,b	;volatile
  4246  0119F6  C062  FF3E         	movff	OpenEPWM1@period,3902	;volatile
  4247  0119FA  010F               	movlb	15	; () banked
  4248  0119FC  853D               	bsf	61,2,b	;volatile
  4249  0119FE  0012               	return	
  4250  011A00                     l6853:
  4251                           
  4252                           ; BSR set to: 15
  4253  011A00  010F               	movlb	15	; () banked
  4254  011A02  5136               	movf	54,w,b	;volatile
  4255  011A04  0B07               	andlw	7
  4256  011A06  0A03               	xorlw	3
  4257  011A08  A4D8               	btfss	status,2,c
  4258  011A0A  0012               	return	
  4259                           
  4260                           ; BSR set to: 15
  4261  011A0C  010F               	movlb	15	; () banked
  4262  011A0E  953A               	bcf	58,2,b	;volatile
  4263  011A10  C062  FF3B         	movff	OpenEPWM1@period,3899	;volatile
  4264  011A14  010F               	movlb	15	; () banked
  4265  011A16  853A               	bsf	58,2,b	;volatile
  4266                           
  4267                           ; BSR set to: 15
  4268                           
  4269                           ; BSR set to: 15
  4270                           
  4271                           ; BSR set to: 15
  4272  011A18  0012               	return	
  4273                           
  4274                           ; BSR set to: 15
  4275  011A1A  0012               	return		;funcret
  4276  011A1C                     __end_of_OpenEPWM1:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           prodh	equ	0xFF4
  4283                           prodl	equ	0xFF3
  4284                           intcon	equ	0xFF2
  4285                           postinc0	equ	0xFEE
  4286                           wreg	equ	0xFE8
  4287                           postdec1	equ	0xFE5
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _encoders_init *****************
  4293 ;; Defined at:
  4294 ;;		line 6 in file "encoders.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    3
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_init
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text13
  4323  012086                     __ptext13:
  4324                           	opt stack 0
  4325  012086                     _encoders_init:
  4326                           	opt stack 26
  4327                           
  4328                           ;encoders.c: 9: TRISBbits.TRISB0 = 1;
  4329                           
  4330                           ;incstack = 0
  4331  012086  8093               	bsf	3987,0,c	;volatile
  4332                           
  4333                           ;encoders.c: 10: TRISBbits.TRISB1 = 1;
  4334  012088  8293               	bsf	3987,1,c	;volatile
  4335                           
  4336                           ;encoders.c: 11: TRISBbits.TRISB2 = 1;
  4337  01208A  8493               	bsf	3987,2,c	;volatile
  4338                           
  4339                           ;encoders.c: 12: TRISBbits.TRISB3 = 1;
  4340  01208C  8693               	bsf	3987,3,c	;volatile
  4341                           
  4342                           ;encoders.c: 21: IOLOCK = 0;
  4343  01208E  9C66               	bcf	3942,6,c	;volatile
  4344                           
  4345                           ;encoders.c: 22: RPINR26_27 &= 0xF2;
  4346  012090  0EF2               	movlw	242
  4347  012092  010E               	movlb	14	; () banked
  4348  012094  1737               	andwf	55,f,b	;volatile
  4349                           
  4350                           ;encoders.c: 23: RPINR28_29 &= 0xF1;
  4351  012096  0EF1               	movlw	241
  4352  012098  010E               	movlb	14	; () banked
  4353  01209A  1738               	andwf	56,f,b	;volatile
  4354                           
  4355                           ; BSR set to: 14
  4356                           ;encoders.c: 24: IOLOCK = 1;
  4357  01209C  8C66               	bsf	3942,6,c	;volatile
  4358                           
  4359                           ; BSR set to: 14
  4360                           ;encoders.c: 26: INTCON2bits.INTEDG1 = 1;
  4361  01209E  8AF1               	bsf	intcon2,5,c	;volatile
  4362                           
  4363                           ; BSR set to: 14
  4364                           ;encoders.c: 27: INTCON3bits.INT1IP = 0;
  4365  0120A0  9CF0               	bcf	intcon3,6,c	;volatile
  4366                           
  4367                           ; BSR set to: 14
  4368                           ;encoders.c: 28: INTCON3bits.INT1IF = 0;
  4369  0120A2  90F0               	bcf	intcon3,0,c	;volatile
  4370                           
  4371                           ; BSR set to: 14
  4372                           ;encoders.c: 29: INTCON3bits.INT1IE = 1;
  4373  0120A4  86F0               	bsf	intcon3,3,c	;volatile
  4374                           
  4375                           ; BSR set to: 14
  4376                           ;encoders.c: 32: INTCON2bits.INTEDG3 = 1;
  4377  0120A6  86F1               	bsf	intcon2,3,c	;volatile
  4378                           
  4379                           ; BSR set to: 14
  4380                           ;encoders.c: 33: INTCON2bits.INT3IP = 0;
  4381  0120A8  92F1               	bcf	intcon2,1,c	;volatile
  4382                           
  4383                           ; BSR set to: 14
  4384                           ;encoders.c: 34: INTCON3bits.INT3IF = 0;
  4385  0120AA  94F0               	bcf	intcon3,2,c	;volatile
  4386                           
  4387                           ; BSR set to: 14
  4388                           ;encoders.c: 35: INTCON3bits.INT3IE = 1;
  4389  0120AC  8AF0               	bsf	intcon3,5,c	;volatile
  4390                           
  4391                           ; BSR set to: 14
  4392  0120AE  0012               	return		;funcret
  4393  0120B0                     __end_of_encoders_init:
  4394                           	opt stack 0
  4395                           tblptru	equ	0xFF8
  4396                           tblptrh	equ	0xFF7
  4397                           tblptrl	equ	0xFF6
  4398                           tablat	equ	0xFF5
  4399                           prodh	equ	0xFF4
  4400                           prodl	equ	0xFF3
  4401                           intcon	equ	0xFF2
  4402                           intcon2	equ	0xFF1
  4403                           intcon3	equ	0xFF0
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _clearMillis *****************
  4412 ;; Defined at:
  4413 ;;		line 115 in file "delays.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, status,2
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    3
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_init
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text14
  4442  012100                     __ptext14:
  4443                           	opt stack 0
  4444  012100                     _clearMillis:
  4445                           	opt stack 26
  4446                           
  4447                           ;delays.c: 117: TMR0L = 193;
  4448                           
  4449                           ; BSR set to: 14
  4450                           ;incstack = 0
  4451  012100  0EC1               	movlw	193
  4452  012102  6ED6               	movwf	4054,c	;volatile
  4453                           
  4454                           ;delays.c: 118: millisCount = 0;
  4455  012104  0E00               	movlw	0
  4456  012106  0100               	movlb	0	; () banked
  4457  012108  6FDA               	movwf	_millisCount& (0+255),b
  4458  01210A  0E00               	movlw	0
  4459  01210C  6FDB               	movwf	(_millisCount+1)& (0+255),b
  4460  01210E  0E00               	movlw	0
  4461  012110  6FDC               	movwf	(_millisCount+2)& (0+255),b
  4462  012112  0E00               	movlw	0
  4463  012114  6FDD               	movwf	(_millisCount+3)& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466  012116  0012               	return		;funcret
  4467  012118                     __end_of_clearMillis:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           intcon2	equ	0xFF1
  4477                           intcon3	equ	0xFF0
  4478                           postinc0	equ	0xFEE
  4479                           wreg	equ	0xFE8
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _UART_init *****************
  4486 ;; Defined at:
  4487 ;;		line 21 in file "UART.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_init
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text15
  4516  0111E2                     __ptext15:
  4517                           	opt stack 0
  4518  0111E2                     _UART_init:
  4519                           	opt stack 26
  4520                           
  4521                           ;UART.c: 43: IOLOCK = 0;
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;incstack = 0
  4525  0111E2  9C66               	bcf	3942,6,c	;volatile
  4526                           
  4527                           ;UART.c: 45: RPINR6_7 &= 0xF6;
  4528  0111E4  0EF6               	movlw	246
  4529  0111E6  010E               	movlb	14	; () banked
  4530  0111E8  172D               	andwf	45,f,b	;volatile
  4531                           
  4532                           ;UART.c: 46: RPOR22_23 |= 0xF1;
  4533  0111EA  0EF1               	movlw	241
  4534  0111EC  010E               	movlb	14	; () banked
  4535  0111EE  131D               	iorwf	29,f,b	;volatile
  4536                           
  4537                           ;UART.c: 48: RPINR4_5 &= 0xF4;
  4538  0111F0  0EF4               	movlw	244
  4539  0111F2  010E               	movlb	14	; () banked
  4540  0111F4  172C               	andwf	44,f,b	;volatile
  4541                           
  4542                           ;UART.c: 49: RPOR10_11 |= 0x2F;
  4543  0111F6  0E2F               	movlw	47
  4544  0111F8  010E               	movlb	14	; () banked
  4545  0111FA  1317               	iorwf	23,f,b	;volatile
  4546                           
  4547                           ;UART.c: 51: RPINR0_1 &= 0xF6;
  4548  0111FC  0EF6               	movlw	246
  4549  0111FE  010E               	movlb	14	; () banked
  4550  011200  172A               	andwf	42,f,b	;volatile
  4551                           
  4552                           ;UART.c: 52: RPOR12_13 |= 0x3F;
  4553  011202  0E3F               	movlw	63
  4554  011204  010E               	movlb	14	; () banked
  4555  011206  1318               	iorwf	24,f,b	;volatile
  4556                           
  4557                           ; BSR set to: 14
  4558                           ;UART.c: 54: IOLOCK = 1;
  4559  011208  8C66               	bsf	3942,6,c	;volatile
  4560                           
  4561                           ; BSR set to: 14
  4562                           ;UART.c: 56: INTCONbits.GIE = 1;
  4563  01120A  8EF2               	bsf	intcon,7,c	;volatile
  4564                           
  4565                           ; BSR set to: 14
  4566                           ;UART.c: 59: INTCONbits.PEIE = 1;
  4567  01120C  8CF2               	bsf	intcon,6,c	;volatile
  4568                           
  4569                           ; BSR set to: 14
  4570                           ;UART.c: 69: SPBRG1 = 34;
  4571  01120E  0E22               	movlw	34
  4572  011210  6EAF               	movwf	4015,c	;volatile
  4573                           
  4574                           ; BSR set to: 14
  4575                           ;UART.c: 70: SPBRGH1 = 0;
  4576  011212  0E00               	movlw	0
  4577  011214  010F               	movlb	15	; () banked
  4578  011216  6F30               	movwf	48,b	;volatile
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;UART.c: 72: TXSTA1bits.BRGH = 0;
  4582  011218  94AC               	bcf	4012,2,c	;volatile
  4583                           
  4584                           ; BSR set to: 15
  4585                           ;UART.c: 74: BAUDCON1bits.ABDOVF = 0;
  4586  01121A  9E67               	bcf	3943,7,c	;volatile
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;UART.c: 75: BAUDCON1bits.BRG16 = 1;
  4590  01121C  8667               	bsf	3943,3,c	;volatile
  4591                           
  4592                           ; BSR set to: 15
  4593                           ;UART.c: 76: BAUDCON1bits.RCIDL = 0;
  4594  01121E  9C67               	bcf	3943,6,c	;volatile
  4595                           
  4596                           ; BSR set to: 15
  4597                           ;UART.c: 77: BAUDCON1bits.RXDTP = 0;
  4598  011220  9A67               	bcf	3943,5,c	;volatile
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;UART.c: 79: TXSTA1bits.SYNC = 0;
  4602  011222  98AC               	bcf	4012,4,c	;volatile
  4603                           
  4604                           ; BSR set to: 15
  4605                           ;UART.c: 80: RCSTA1bits.SPEN = 1;
  4606  011224  8EAB               	bsf	4011,7,c	;volatile
  4607                           
  4608                           ; BSR set to: 15
  4609                           ;UART.c: 81: RCSTA1bits.RX9 = 0;
  4610  011226  9CAB               	bcf	4011,6,c	;volatile
  4611                           
  4612                           ; BSR set to: 15
  4613                           ;UART.c: 82: RCSTA1bits.CREN = 1;
  4614  011228  88AB               	bsf	4011,4,c	;volatile
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;UART.c: 84: TXSTA1bits.TXEN = 1;
  4618  01122A  8AAC               	bsf	4012,5,c	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;UART.c: 85: TXSTA1bits.TX9 = 0;
  4622  01122C  9CAC               	bcf	4012,6,c	;volatile
  4623                           
  4624                           ; BSR set to: 15
  4625                           ;UART.c: 88: TX1IE = 0;
  4626  01122E  989D               	bcf	3997,4,c	;volatile
  4627                           
  4628                           ; BSR set to: 15
  4629                           ;UART.c: 89: RC1IE = 1;
  4630  011230  8A9D               	bsf	3997,5,c	;volatile
  4631                           
  4632                           ; BSR set to: 15
  4633                           ;UART.c: 99: SPBRG2 = 34;
  4634  011232  0E22               	movlw	34
  4635  011234  010F               	movlb	15	; () banked
  4636  011236  6F1F               	movwf	31,b	;volatile
  4637                           
  4638                           ; BSR set to: 15
  4639                           ;UART.c: 100: SPBRGH2 = 0;
  4640  011238  0E00               	movlw	0
  4641  01123A  010F               	movlb	15	; () banked
  4642  01123C  6F20               	movwf	32,b	;volatile
  4643                           
  4644                           ; BSR set to: 15
  4645                           ;UART.c: 102: TXSTA2bits.BRGH = 0;
  4646  01123E  010F               	movlb	15	; () banked
  4647  011240  9532               	bcf	50,2,b	;volatile
  4648                           
  4649                           ; BSR set to: 15
  4650                           ;UART.c: 104: BAUDCON2bits.ABDOVF = 0;
  4651  011242  010F               	movlb	15	; () banked
  4652  011244  9F31               	bcf	49,7,b	;volatile
  4653                           
  4654                           ; BSR set to: 15
  4655                           ;UART.c: 105: BAUDCON2bits.BRG16 = 1;
  4656  011246  010F               	movlb	15	; () banked
  4657  011248  8731               	bsf	49,3,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;UART.c: 106: BAUDCON2bits.RCIDL = 0;
  4661  01124A  010F               	movlb	15	; () banked
  4662  01124C  9D31               	bcf	49,6,b	;volatile
  4663                           
  4664                           ; BSR set to: 15
  4665                           ;UART.c: 107: BAUDCON2bits.RXDTP = 0;
  4666  01124E  010F               	movlb	15	; () banked
  4667  011250  9B31               	bcf	49,5,b	;volatile
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;UART.c: 109: TXSTA2bits.SYNC = 0;
  4671  011252  010F               	movlb	15	; () banked
  4672  011254  9932               	bcf	50,4,b	;volatile
  4673                           
  4674                           ; BSR set to: 15
  4675                           ;UART.c: 110: RCSTA2bits.SPEN = 1;
  4676  011256  010F               	movlb	15	; () banked
  4677  011258  8F33               	bsf	51,7,b	;volatile
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;UART.c: 111: RCSTA2bits.RX9 = 0;
  4681  01125A  010F               	movlb	15	; () banked
  4682  01125C  9D33               	bcf	51,6,b	;volatile
  4683                           
  4684                           ; BSR set to: 15
  4685                           ;UART.c: 112: RCSTA2bits.CREN = 1;
  4686  01125E  010F               	movlb	15	; () banked
  4687  011260  8933               	bsf	51,4,b	;volatile
  4688                           
  4689                           ; BSR set to: 15
  4690                           ;UART.c: 114: TXSTA2bits.TXEN = 1;
  4691  011262  010F               	movlb	15	; () banked
  4692  011264  8B32               	bsf	50,5,b	;volatile
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;UART.c: 115: TXSTA2bits.TX9 = 0;
  4696  011266  010F               	movlb	15	; () banked
  4697  011268  9D32               	bcf	50,6,b	;volatile
  4698                           
  4699                           ; BSR set to: 15
  4700                           ;UART.c: 118: TX2IE = 0;
  4701  01126A  98A3               	bcf	4003,4,c	;volatile
  4702                           
  4703                           ; BSR set to: 15
  4704                           ;UART.c: 119: RC2IE = 1;
  4705  01126C  8AA3               	bsf	4003,5,c	;volatile
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;UART.c: 129: SPBRG3 = 34;
  4709  01126E  0E22               	movlw	34
  4710  011270  010F               	movlb	15	; () banked
  4711  011272  6F2B               	movwf	43,b	;volatile
  4712                           
  4713                           ; BSR set to: 15
  4714                           ;UART.c: 130: SPBRGH3 = 0;
  4715  011274  0E00               	movlw	0
  4716  011276  010F               	movlb	15	; () banked
  4717  011278  6F2C               	movwf	44,b	;volatile
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;UART.c: 132: TXSTA3bits.BRGH = 0;
  4721  01127A  010F               	movlb	15	; () banked
  4722  01127C  952E               	bcf	46,2,b	;volatile
  4723                           
  4724                           ; BSR set to: 15
  4725                           ;UART.c: 134: BAUDCON3bits.ABDOVF = 0;
  4726  01127E  010F               	movlb	15	; () banked
  4727  011280  9F2D               	bcf	45,7,b	;volatile
  4728                           
  4729                           ; BSR set to: 15
  4730                           ;UART.c: 135: BAUDCON3bits.BRG16 = 1;
  4731  011282  010F               	movlb	15	; () banked
  4732  011284  872D               	bsf	45,3,b	;volatile
  4733                           
  4734                           ; BSR set to: 15
  4735                           ;UART.c: 136: BAUDCON3bits.RCIDL = 0;
  4736  011286  010F               	movlb	15	; () banked
  4737  011288  9D2D               	bcf	45,6,b	;volatile
  4738                           
  4739                           ; BSR set to: 15
  4740                           ;UART.c: 137: BAUDCON3bits.RXDTP = 0;
  4741  01128A  010F               	movlb	15	; () banked
  4742  01128C  9B2D               	bcf	45,5,b	;volatile
  4743                           
  4744                           ; BSR set to: 15
  4745                           ;UART.c: 139: TXSTA3bits.SYNC = 0;
  4746  01128E  010F               	movlb	15	; () banked
  4747  011290  992E               	bcf	46,4,b	;volatile
  4748                           
  4749                           ; BSR set to: 15
  4750                           ;UART.c: 140: RCSTA3bits.SPEN = 1;
  4751  011292  010F               	movlb	15	; () banked
  4752  011294  8F2F               	bsf	47,7,b	;volatile
  4753                           
  4754                           ; BSR set to: 15
  4755                           ;UART.c: 141: RCSTA3bits.RX9 = 0;
  4756  011296  010F               	movlb	15	; () banked
  4757  011298  9D2F               	bcf	47,6,b	;volatile
  4758                           
  4759                           ; BSR set to: 15
  4760                           ;UART.c: 142: RCSTA3bits.CREN = 1;
  4761  01129A  010F               	movlb	15	; () banked
  4762  01129C  892F               	bsf	47,4,b	;volatile
  4763                           
  4764                           ; BSR set to: 15
  4765                           ;UART.c: 144: TXSTA3bits.TXEN = 1;
  4766  01129E  010F               	movlb	15	; () banked
  4767  0112A0  8B2E               	bsf	46,5,b	;volatile
  4768                           
  4769                           ; BSR set to: 15
  4770                           ;UART.c: 145: TXSTA3bits.TX9 = 0;
  4771  0112A2  010F               	movlb	15	; () banked
  4772  0112A4  9D2E               	bcf	46,6,b	;volatile
  4773                           
  4774                           ; BSR set to: 15
  4775                           ;UART.c: 147: TX3IE = 0;
  4776  0112A6  9861               	bcf	3937,4,c	;volatile
  4777                           
  4778                           ; BSR set to: 15
  4779                           ;UART.c: 148: RC3IE = 1;
  4780  0112A8  8A61               	bsf	3937,5,c	;volatile
  4781                           
  4782                           ; BSR set to: 15
  4783                           ;UART.c: 158: TRISDbits.TRISD4 = 1;
  4784  0112AA  8895               	bsf	3989,4,c	;volatile
  4785                           
  4786                           ; BSR set to: 15
  4787                           ;UART.c: 159: TRISDbits.TRISD2 = 0;
  4788  0112AC  9495               	bcf	3989,2,c	;volatile
  4789                           
  4790                           ; BSR set to: 15
  4791                           ;UART.c: 162: SPBRG4 = 34;
  4792  0112AE  0E22               	movlw	34
  4793  0112B0  010E               	movlb	14	; () banked
  4794  0112B2  6FFB               	movwf	251,b	;volatile
  4795                           
  4796                           ; BSR set to: 14
  4797                           ;UART.c: 163: SPBRGH4 = 0;
  4798  0112B4  0E00               	movlw	0
  4799  0112B6  010E               	movlb	14	; () banked
  4800  0112B8  6FFC               	movwf	252,b	;volatile
  4801                           
  4802                           ; BSR set to: 14
  4803                           ;UART.c: 165: TXSTA4bits.BRGH = 0;
  4804  0112BA  010E               	movlb	14	; () banked
  4805  0112BC  95FE               	bcf	254,2,b	;volatile
  4806                           
  4807                           ; BSR set to: 14
  4808                           ;UART.c: 167: BAUDCON4bits.ABDOVF = 0;
  4809  0112BE  010E               	movlb	14	; () banked
  4810  0112C0  9FFD               	bcf	253,7,b	;volatile
  4811                           
  4812                           ; BSR set to: 14
  4813                           ;UART.c: 168: BAUDCON4bits.BRG16 = 1;
  4814  0112C2  010E               	movlb	14	; () banked
  4815  0112C4  87FD               	bsf	253,3,b	;volatile
  4816                           
  4817                           ; BSR set to: 14
  4818                           ;UART.c: 169: BAUDCON4bits.RCIDL = 0;
  4819  0112C6  010E               	movlb	14	; () banked
  4820  0112C8  9DFD               	bcf	253,6,b	;volatile
  4821                           
  4822                           ; BSR set to: 14
  4823                           ;UART.c: 170: BAUDCON4bits.RXDTP = 0;
  4824  0112CA  010E               	movlb	14	; () banked
  4825  0112CC  9BFD               	bcf	253,5,b	;volatile
  4826                           
  4827                           ; BSR set to: 14
  4828                           ;UART.c: 172: TXSTA4bits.SYNC = 0;
  4829  0112CE  010E               	movlb	14	; () banked
  4830  0112D0  99FE               	bcf	254,4,b	;volatile
  4831                           
  4832                           ; BSR set to: 14
  4833                           ;UART.c: 173: RCSTA4bits.SPEN = 1;
  4834  0112D2  010E               	movlb	14	; () banked
  4835  0112D4  8FFF               	bsf	255,7,b	;volatile
  4836                           
  4837                           ; BSR set to: 14
  4838                           ;UART.c: 174: RCSTA4bits.RX9 = 0;
  4839  0112D6  010E               	movlb	14	; () banked
  4840  0112D8  9DFF               	bcf	255,6,b	;volatile
  4841                           
  4842                           ; BSR set to: 14
  4843                           ;UART.c: 175: RCSTA4bits.CREN = 1;
  4844  0112DA  010E               	movlb	14	; () banked
  4845  0112DC  89FF               	bsf	255,4,b	;volatile
  4846                           
  4847                           ; BSR set to: 14
  4848                           ;UART.c: 177: TXSTA4bits.TXEN = 1;
  4849  0112DE  010E               	movlb	14	; () banked
  4850  0112E0  8BFE               	bsf	254,5,b	;volatile
  4851                           
  4852                           ; BSR set to: 14
  4853                           ;UART.c: 178: TXSTA4bits.TX9 = 0;
  4854  0112E2  010E               	movlb	14	; () banked
  4855  0112E4  9DFE               	bcf	254,6,b	;volatile
  4856                           
  4857                           ; BSR set to: 14
  4858                           ;UART.c: 181: TX4IE = 0;
  4859  0112E6  9C61               	bcf	3937,6,c	;volatile
  4860                           
  4861                           ; BSR set to: 14
  4862                           ;UART.c: 182: RC4IE = 1;
  4863  0112E8  8E61               	bsf	3937,7,c	;volatile
  4864                           
  4865                           ; BSR set to: 14
  4866  0112EA  0012               	return		;funcret
  4867  0112EC                     __end_of_UART_init:
  4868                           	opt stack 0
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           intcon	equ	0xFF2
  4876                           intcon2	equ	0xFF1
  4877                           intcon3	equ	0xFF0
  4878                           postinc0	equ	0xFEE
  4879                           wreg	equ	0xFE8
  4880                           postdec1	equ	0xFE5
  4881                           fsr1h	equ	0xFE2
  4882                           fsr1l	equ	0xFE1
  4883                           status	equ	0xFD8
  4884                           
  4885 ;; *************** function _LCD_init4bit *****************
  4886 ;; Defined at:
  4887 ;;		line 48 in file "LCD.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;		None               void
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    5
  4908 ;; This function calls:
  4909 ;;		_delay_init
  4910 ;;		_delay_ms
  4911 ;;		_delay_us
  4912 ;; This function is called by:
  4913 ;;		_init
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text16
  4918  0106C4                     __ptext16:
  4919                           	opt stack 0
  4920  0106C4                     _LCD_init4bit:
  4921                           	opt stack 24
  4922                           
  4923                           ;LCD.c: 51: mode = 1;
  4924                           
  4925                           ; BSR set to: 14
  4926                           ;incstack = 0
  4927  0106C4  0E01               	movlw	1
  4928  0106C6  6E3C               	movwf	_mode,c	;volatile
  4929                           
  4930                           ;LCD.c: 53: ANSEL21 = 0;
  4931  0106C8  010E               	movlb	14	; () banked
  4932  0106CA  9B45               	bcf	69,5,b	;volatile
  4933                           
  4934                           ; BSR set to: 14
  4935                           ;LCD.c: 54: ANSEL6 = 0;
  4936  0106CC  010E               	movlb	14	; () banked
  4937  0106CE  9D47               	bcf	71,6,b	;volatile
  4938                           
  4939                           ; BSR set to: 14
  4940                           ;LCD.c: 55: ANSEL11 = 0;
  4941  0106D0  010E               	movlb	14	; () banked
  4942  0106D2  9746               	bcf	70,3,b	;volatile
  4943                           
  4944                           ; BSR set to: 14
  4945                           ;LCD.c: 56: ANSEL10 = 0;
  4946  0106D4  010E               	movlb	14	; () banked
  4947  0106D6  9546               	bcf	70,2,b	;volatile
  4948                           
  4949                           ; BSR set to: 14
  4950                           ;LCD.c: 57: ANSEL9 = 0;
  4951  0106D8  010E               	movlb	14	; () banked
  4952  0106DA  9346               	bcf	70,1,b	;volatile
  4953                           
  4954                           ; BSR set to: 14
  4955                           ;LCD.c: 59: MEMCONbits.EBDIS = 1;
  4956  0106DC  010E               	movlb	14	; () banked
  4957  0106DE  8FE3               	bsf	227,7,b	;volatile
  4958                           
  4959                           ; BSR set to: 14
  4960                           ;LCD.c: 60: PSPCONbits.PSPMODE = 0;
  4961  0106E0  98A7               	bcf	4007,4,c	;volatile
  4962                           
  4963                           ; BSR set to: 14
  4964                           ;LCD.c: 61: LCDMD = 0;
  4965  0106E2  010E               	movlb	14	; () banked
  4966  0106E4  97F1               	bcf	241,3,b	;volatile
  4967                           
  4968                           ; BSR set to: 14
  4969                           ;LCD.c: 62: LCDCONbits.WERR = 0;
  4970  0106E6  010E               	movlb	14	; () banked
  4971  0106E8  9BD9               	bcf	217,5,b	;volatile
  4972                           
  4973                           ; BSR set to: 14
  4974                           ;LCD.c: 63: CPEN = 0;
  4975  0106EA  010E               	movlb	14	; () banked
  4976  0106EC  9FD8               	bcf	216,7,b	;volatile
  4977                           
  4978                           ; BSR set to: 14
  4979                           ;LCD.c: 64: LCDA = 0;
  4980  0106EE  010E               	movlb	14	; () banked
  4981  0106F0  9BDA               	bcf	218,5,b	;volatile
  4982                           
  4983                           ; BSR set to: 14
  4984                           ;LCD.c: 66: PORTEbits.RE2 = 0;
  4985  0106F2  9484               	bcf	3972,2,c	;volatile
  4986                           
  4987                           ; BSR set to: 14
  4988                           ;LCD.c: 67: PORTEbits.RE0 = 0;
  4989  0106F4  9084               	bcf	3972,0,c	;volatile
  4990                           
  4991                           ; BSR set to: 14
  4992                           ;LCD.c: 68: PORTEbits.RE1 = 0;
  4993  0106F6  9284               	bcf	3972,1,c	;volatile
  4994                           
  4995                           ; BSR set to: 14
  4996                           ;LCD.c: 69: PORTHbits.RH5 = 0;
  4997  0106F8  9A87               	bcf	3975,5,c	;volatile
  4998                           
  4999                           ; BSR set to: 14
  5000                           ;LCD.c: 71: PORTEbits.RE4 = 0;
  5001  0106FA  9884               	bcf	3972,4,c	;volatile
  5002                           
  5003                           ; BSR set to: 14
  5004                           ;LCD.c: 72: PORTDbits.RD0 = 0;
  5005  0106FC  9083               	bcf	3971,0,c	;volatile
  5006                           
  5007                           ; BSR set to: 14
  5008                           ;LCD.c: 73: PORTGbits.RG7 = 0;
  5009  0106FE  9E86               	bcf	3974,7,c	;volatile
  5010                           
  5011                           ; BSR set to: 14
  5012                           ;LCD.c: 77: TRISDbits.TRISD0 = 0;
  5013  010700  9095               	bcf	3989,0,c	;volatile
  5014                           
  5015                           ; BSR set to: 14
  5016                           ;LCD.c: 78: TRISEbits.TRISE0 = 0;
  5017  010702  9096               	bcf	3990,0,c	;volatile
  5018                           
  5019                           ; BSR set to: 14
  5020                           ;LCD.c: 79: TRISEbits.TRISE1 = 0;
  5021  010704  9296               	bcf	3990,1,c	;volatile
  5022                           
  5023                           ; BSR set to: 14
  5024                           ;LCD.c: 80: TRISEbits.TRISE2 = 0;
  5025  010706  9496               	bcf	3990,2,c	;volatile
  5026                           
  5027                           ; BSR set to: 14
  5028                           ;LCD.c: 81: TRISEbits.TRISE3 = 0;
  5029  010708  9696               	bcf	3990,3,c	;volatile
  5030                           
  5031                           ; BSR set to: 14
  5032                           ;LCD.c: 82: TRISEbits.TRISE4 = 0;
  5033  01070A  9896               	bcf	3990,4,c	;volatile
  5034                           
  5035                           ; BSR set to: 14
  5036                           ;LCD.c: 83: TRISHbits.TRISH5 = 0;
  5037  01070C  9A99               	bcf	3993,5,c	;volatile
  5038                           
  5039                           ; BSR set to: 14
  5040                           ;LCD.c: 85: delay_init();
  5041  01070E  ECFD  F08F         	call	_delay_init	;wreg free
  5042                           
  5043                           ;LCD.c: 86: delay_ms(100);
  5044  010712  0E64               	movlw	100
  5045  010714  0100               	movlb	0	; () banked
  5046  010716  6F64               	movwf	delay_ms@x& (0+255),b
  5047  010718  0E00               	movlw	0
  5048  01071A  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  5049  01071C  0E00               	movlw	0
  5050  01071E  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  5051  010720  0E00               	movlw	0
  5052  010722  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  5053  010724  ECF1  F08B         	call	_delay_ms	;wreg free
  5054                           
  5055                           ;LCD.c: 88: PORTDbits.RD0 = 0;
  5056  010728  9083               	bcf	3971,0,c	;volatile
  5057                           
  5058                           ;LCD.c: 89: PORTGbits.RG7 = 0;
  5059  01072A  9E86               	bcf	3974,7,c	;volatile
  5060                           
  5061                           ;LCD.c: 92: delay_us(40);;
  5062  01072C  0E28               	movlw	40
  5063  01072E  0100               	movlb	0	; () banked
  5064  010730  6F60               	movwf	delay_us@x& (0+255),b
  5065  010732  0E00               	movlw	0
  5066  010734  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5067  010736  0E00               	movlw	0
  5068  010738  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5069  01073A  0E00               	movlw	0
  5070  01073C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5071  01073E  EC8C  F08F         	call	_delay_us	;wreg free
  5072                           
  5073                           ;LCD.c: 93: PORTEbits.RE4 = 1;
  5074  010742  8884               	bsf	3972,4,c	;volatile
  5075                           
  5076                           ;LCD.c: 94: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTEb
      +                          its.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  5077  010744  9A87               	bcf	3975,5,c	;volatile
  5078  010746  9284               	bcf	3972,1,c	;volatile
  5079  010748  8084               	bsf	3972,0,c	;volatile
  5080  01074A  8484               	bsf	3972,2,c	;volatile
  5081                           
  5082                           ;LCD.c: 95: delay_us(40);;
  5083  01074C  0E28               	movlw	40
  5084  01074E  0100               	movlb	0	; () banked
  5085  010750  6F60               	movwf	delay_us@x& (0+255),b
  5086  010752  0E00               	movlw	0
  5087  010754  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5088  010756  0E00               	movlw	0
  5089  010758  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5090  01075A  0E00               	movlw	0
  5091  01075C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5092  01075E  EC8C  F08F         	call	_delay_us	;wreg free
  5093                           
  5094                           ;LCD.c: 96: PORTEbits.RE4 = 0;
  5095  010762  9884               	bcf	3972,4,c	;volatile
  5096                           
  5097                           ;LCD.c: 98: delay_ms(50);
  5098  010764  0E32               	movlw	50
  5099  010766  0100               	movlb	0	; () banked
  5100  010768  6F64               	movwf	delay_ms@x& (0+255),b
  5101  01076A  0E00               	movlw	0
  5102  01076C  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  5103  01076E  0E00               	movlw	0
  5104  010770  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  5105  010772  0E00               	movlw	0
  5106  010774  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  5107  010776  ECF1  F08B         	call	_delay_ms	;wreg free
  5108                           
  5109                           ;LCD.c: 101: delay_us(40);;
  5110  01077A  0E28               	movlw	40
  5111  01077C  0100               	movlb	0	; () banked
  5112  01077E  6F60               	movwf	delay_us@x& (0+255),b
  5113  010780  0E00               	movlw	0
  5114  010782  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5115  010784  0E00               	movlw	0
  5116  010786  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5117  010788  0E00               	movlw	0
  5118  01078A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5119  01078C  EC8C  F08F         	call	_delay_us	;wreg free
  5120                           
  5121                           ;LCD.c: 102: PORTEbits.RE4 = 1;
  5122  010790  8884               	bsf	3972,4,c	;volatile
  5123                           
  5124                           ;LCD.c: 103: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  5125  010792  9A87               	bcf	3975,5,c	;volatile
  5126  010794  9284               	bcf	3972,1,c	;volatile
  5127  010796  8084               	bsf	3972,0,c	;volatile
  5128  010798  8484               	bsf	3972,2,c	;volatile
  5129                           
  5130                           ;LCD.c: 104: delay_us(40);;
  5131  01079A  0E28               	movlw	40
  5132  01079C  0100               	movlb	0	; () banked
  5133  01079E  6F60               	movwf	delay_us@x& (0+255),b
  5134  0107A0  0E00               	movlw	0
  5135  0107A2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5136  0107A4  0E00               	movlw	0
  5137  0107A6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5138  0107A8  0E00               	movlw	0
  5139  0107AA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5140  0107AC  EC8C  F08F         	call	_delay_us	;wreg free
  5141                           
  5142                           ;LCD.c: 105: PORTEbits.RE4 = 0;
  5143  0107B0  9884               	bcf	3972,4,c	;volatile
  5144                           
  5145                           ;LCD.c: 107: delay_ms(50);
  5146  0107B2  0E32               	movlw	50
  5147  0107B4  0100               	movlb	0	; () banked
  5148  0107B6  6F64               	movwf	delay_ms@x& (0+255),b
  5149  0107B8  0E00               	movlw	0
  5150  0107BA  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  5151  0107BC  0E00               	movlw	0
  5152  0107BE  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  5153  0107C0  0E00               	movlw	0
  5154  0107C2  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  5155  0107C4  ECF1  F08B         	call	_delay_ms	;wreg free
  5156                           
  5157                           ;LCD.c: 110: delay_us(40);;
  5158  0107C8  0E28               	movlw	40
  5159  0107CA  0100               	movlb	0	; () banked
  5160  0107CC  6F60               	movwf	delay_us@x& (0+255),b
  5161  0107CE  0E00               	movlw	0
  5162  0107D0  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5163  0107D2  0E00               	movlw	0
  5164  0107D4  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5165  0107D6  0E00               	movlw	0
  5166  0107D8  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5167  0107DA  EC8C  F08F         	call	_delay_us	;wreg free
  5168                           
  5169                           ;LCD.c: 111: PORTEbits.RE4 = 1;
  5170  0107DE  8884               	bsf	3972,4,c	;volatile
  5171                           
  5172                           ;LCD.c: 112: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  5173  0107E0  9A87               	bcf	3975,5,c	;volatile
  5174  0107E2  9284               	bcf	3972,1,c	;volatile
  5175  0107E4  8084               	bsf	3972,0,c	;volatile
  5176  0107E6  8484               	bsf	3972,2,c	;volatile
  5177                           
  5178                           ;LCD.c: 113: delay_us(40);;
  5179  0107E8  0E28               	movlw	40
  5180  0107EA  0100               	movlb	0	; () banked
  5181  0107EC  6F60               	movwf	delay_us@x& (0+255),b
  5182  0107EE  0E00               	movlw	0
  5183  0107F0  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5184  0107F2  0E00               	movlw	0
  5185  0107F4  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5186  0107F6  0E00               	movlw	0
  5187  0107F8  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5188  0107FA  EC8C  F08F         	call	_delay_us	;wreg free
  5189                           
  5190                           ;LCD.c: 114: PORTEbits.RE4 = 0;
  5191  0107FE  9884               	bcf	3972,4,c	;volatile
  5192                           
  5193                           ;LCD.c: 116: delay_ms(50);
  5194  010800  0E32               	movlw	50
  5195  010802  0100               	movlb	0	; () banked
  5196  010804  6F64               	movwf	delay_ms@x& (0+255),b
  5197  010806  0E00               	movlw	0
  5198  010808  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  5199  01080A  0E00               	movlw	0
  5200  01080C  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  5201  01080E  0E00               	movlw	0
  5202  010810  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  5203  010812  ECF1  F08B         	call	_delay_ms	;wreg free
  5204                           
  5205                           ;LCD.c: 119: delay_us(40);;
  5206  010816  0E28               	movlw	40
  5207  010818  0100               	movlb	0	; () banked
  5208  01081A  6F60               	movwf	delay_us@x& (0+255),b
  5209  01081C  0E00               	movlw	0
  5210  01081E  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5211  010820  0E00               	movlw	0
  5212  010822  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5213  010824  0E00               	movlw	0
  5214  010826  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5215  010828  EC8C  F08F         	call	_delay_us	;wreg free
  5216                           
  5217                           ;LCD.c: 120: PORTEbits.RE4 = 1;
  5218  01082C  8884               	bsf	3972,4,c	;volatile
  5219                           
  5220                           ;LCD.c: 121: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  5221  01082E  9A87               	bcf	3975,5,c	;volatile
  5222  010830  9284               	bcf	3972,1,c	;volatile
  5223  010832  8084               	bsf	3972,0,c	;volatile
  5224  010834  9484               	bcf	3972,2,c	;volatile
  5225                           
  5226                           ;LCD.c: 122: delay_us(40);;
  5227  010836  0E28               	movlw	40
  5228  010838  0100               	movlb	0	; () banked
  5229  01083A  6F60               	movwf	delay_us@x& (0+255),b
  5230  01083C  0E00               	movlw	0
  5231  01083E  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5232  010840  0E00               	movlw	0
  5233  010842  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5234  010844  0E00               	movlw	0
  5235  010846  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5236  010848  EC8C  F08F         	call	_delay_us	;wreg free
  5237                           
  5238                           ;LCD.c: 123: PORTEbits.RE4 = 0;
  5239  01084C  9884               	bcf	3972,4,c	;volatile
  5240                           
  5241                           ;LCD.c: 125: delay_ms(50);
  5242  01084E  0E32               	movlw	50
  5243  010850  0100               	movlb	0	; () banked
  5244  010852  6F64               	movwf	delay_ms@x& (0+255),b
  5245  010854  0E00               	movlw	0
  5246  010856  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  5247  010858  0E00               	movlw	0
  5248  01085A  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  5249  01085C  0E00               	movlw	0
  5250  01085E  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  5251  010860  ECF1  F08B         	call	_delay_ms	;wreg free
  5252                           
  5253                           ;LCD.c: 128: delay_us(40);;
  5254  010864  0E28               	movlw	40
  5255  010866  0100               	movlb	0	; () banked
  5256  010868  6F60               	movwf	delay_us@x& (0+255),b
  5257  01086A  0E00               	movlw	0
  5258  01086C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5259  01086E  0E00               	movlw	0
  5260  010870  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5261  010872  0E00               	movlw	0
  5262  010874  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5263  010876  EC8C  F08F         	call	_delay_us	;wreg free
  5264                           
  5265                           ;LCD.c: 129: PORTEbits.RE4 = 1;
  5266  01087A  8884               	bsf	3972,4,c	;volatile
  5267                           
  5268                           ;LCD.c: 130: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  5269  01087C  9A87               	bcf	3975,5,c	;volatile
  5270  01087E  9284               	bcf	3972,1,c	;volatile
  5271  010880  8084               	bsf	3972,0,c	;volatile
  5272  010882  9484               	bcf	3972,2,c	;volatile
  5273                           
  5274                           ;LCD.c: 131: delay_us(40);;
  5275  010884  0E28               	movlw	40
  5276  010886  0100               	movlb	0	; () banked
  5277  010888  6F60               	movwf	delay_us@x& (0+255),b
  5278  01088A  0E00               	movlw	0
  5279  01088C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5280  01088E  0E00               	movlw	0
  5281  010890  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5282  010892  0E00               	movlw	0
  5283  010894  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5284  010896  EC8C  F08F         	call	_delay_us	;wreg free
  5285                           
  5286                           ;LCD.c: 132: PORTEbits.RE4 = 0;
  5287  01089A  9884               	bcf	3972,4,c	;volatile
  5288                           
  5289                           ;LCD.c: 134: delay_us(40);;
  5290  01089C  0E28               	movlw	40
  5291  01089E  0100               	movlb	0	; () banked
  5292  0108A0  6F60               	movwf	delay_us@x& (0+255),b
  5293  0108A2  0E00               	movlw	0
  5294  0108A4  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5295  0108A6  0E00               	movlw	0
  5296  0108A8  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5297  0108AA  0E00               	movlw	0
  5298  0108AC  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5299  0108AE  EC8C  F08F         	call	_delay_us	;wreg free
  5300                           
  5301                           ;LCD.c: 135: PORTEbits.RE4 = 1;
  5302  0108B2  8884               	bsf	3972,4,c	;volatile
  5303                           
  5304                           ;LCD.c: 136: { PORTHbits.RH5 = ((0x8 >> 3) & 1); PORTEbits.RE1 = ((0x8 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x8 >> 1) & 1); PORTEbits.RE2 = (0x8 & 1); };
  5305  0108B4  8A87               	bsf	3975,5,c	;volatile
  5306  0108B6  9284               	bcf	3972,1,c	;volatile
  5307  0108B8  9084               	bcf	3972,0,c	;volatile
  5308  0108BA  9484               	bcf	3972,2,c	;volatile
  5309                           
  5310                           ;LCD.c: 137: delay_us(40);;
  5311  0108BC  0E28               	movlw	40
  5312  0108BE  0100               	movlb	0	; () banked
  5313  0108C0  6F60               	movwf	delay_us@x& (0+255),b
  5314  0108C2  0E00               	movlw	0
  5315  0108C4  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5316  0108C6  0E00               	movlw	0
  5317  0108C8  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5318  0108CA  0E00               	movlw	0
  5319  0108CC  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5320  0108CE  EC8C  F08F         	call	_delay_us	;wreg free
  5321                           
  5322                           ;LCD.c: 138: PORTEbits.RE4 = 0;
  5323  0108D2  9884               	bcf	3972,4,c	;volatile
  5324                           
  5325                           ;LCD.c: 141: delay_us(40);;
  5326  0108D4  0E28               	movlw	40
  5327  0108D6  0100               	movlb	0	; () banked
  5328  0108D8  6F60               	movwf	delay_us@x& (0+255),b
  5329  0108DA  0E00               	movlw	0
  5330  0108DC  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5331  0108DE  0E00               	movlw	0
  5332  0108E0  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5333  0108E2  0E00               	movlw	0
  5334  0108E4  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5335  0108E6  EC8C  F08F         	call	_delay_us	;wreg free
  5336                           
  5337                           ;LCD.c: 142: PORTEbits.RE4 = 1;
  5338  0108EA  8884               	bsf	3972,4,c	;volatile
  5339                           
  5340                           ;LCD.c: 143: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5341  0108EC  9A87               	bcf	3975,5,c	;volatile
  5342  0108EE  9284               	bcf	3972,1,c	;volatile
  5343  0108F0  9084               	bcf	3972,0,c	;volatile
  5344  0108F2  9484               	bcf	3972,2,c	;volatile
  5345                           
  5346                           ;LCD.c: 144: delay_us(40);;
  5347  0108F4  0E28               	movlw	40
  5348  0108F6  0100               	movlb	0	; () banked
  5349  0108F8  6F60               	movwf	delay_us@x& (0+255),b
  5350  0108FA  0E00               	movlw	0
  5351  0108FC  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5352  0108FE  0E00               	movlw	0
  5353  010900  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5354  010902  0E00               	movlw	0
  5355  010904  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5356  010906  EC8C  F08F         	call	_delay_us	;wreg free
  5357                           
  5358                           ;LCD.c: 145: PORTEbits.RE4 = 0;
  5359  01090A  9884               	bcf	3972,4,c	;volatile
  5360                           
  5361                           ;LCD.c: 147: delay_us(40);;
  5362  01090C  0E28               	movlw	40
  5363  01090E  0100               	movlb	0	; () banked
  5364  010910  6F60               	movwf	delay_us@x& (0+255),b
  5365  010912  0E00               	movlw	0
  5366  010914  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5367  010916  0E00               	movlw	0
  5368  010918  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5369  01091A  0E00               	movlw	0
  5370  01091C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5371  01091E  EC8C  F08F         	call	_delay_us	;wreg free
  5372                           
  5373                           ;LCD.c: 148: PORTEbits.RE4 = 1;
  5374  010922  8884               	bsf	3972,4,c	;volatile
  5375                           
  5376                           ;LCD.c: 149: { PORTHbits.RH5 = ((0xF >> 3) & 1); PORTEbits.RE1 = ((0xF >> 2) & 1); PORTE
      +                          bits.RE0 = ((0xF >> 1) & 1); PORTEbits.RE2 = (0xF & 1); };
  5377  010924  8A87               	bsf	3975,5,c	;volatile
  5378  010926  8284               	bsf	3972,1,c	;volatile
  5379  010928  8084               	bsf	3972,0,c	;volatile
  5380  01092A  8484               	bsf	3972,2,c	;volatile
  5381                           
  5382                           ;LCD.c: 150: delay_us(40);;
  5383  01092C  0E28               	movlw	40
  5384  01092E  0100               	movlb	0	; () banked
  5385  010930  6F60               	movwf	delay_us@x& (0+255),b
  5386  010932  0E00               	movlw	0
  5387  010934  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5388  010936  0E00               	movlw	0
  5389  010938  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5390  01093A  0E00               	movlw	0
  5391  01093C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5392  01093E  EC8C  F08F         	call	_delay_us	;wreg free
  5393                           
  5394                           ;LCD.c: 151: PORTEbits.RE4 = 0;
  5395  010942  9884               	bcf	3972,4,c	;volatile
  5396                           
  5397                           ;LCD.c: 154: delay_us(40);;
  5398  010944  0E28               	movlw	40
  5399  010946  0100               	movlb	0	; () banked
  5400  010948  6F60               	movwf	delay_us@x& (0+255),b
  5401  01094A  0E00               	movlw	0
  5402  01094C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5403  01094E  0E00               	movlw	0
  5404  010950  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5405  010952  0E00               	movlw	0
  5406  010954  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5407  010956  EC8C  F08F         	call	_delay_us	;wreg free
  5408                           
  5409                           ;LCD.c: 155: PORTEbits.RE4 = 1;
  5410  01095A  8884               	bsf	3972,4,c	;volatile
  5411                           
  5412                           ;LCD.c: 156: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5413  01095C  9A87               	bcf	3975,5,c	;volatile
  5414  01095E  9284               	bcf	3972,1,c	;volatile
  5415  010960  9084               	bcf	3972,0,c	;volatile
  5416  010962  9484               	bcf	3972,2,c	;volatile
  5417                           
  5418                           ;LCD.c: 157: delay_us(40);;
  5419  010964  0E28               	movlw	40
  5420  010966  0100               	movlb	0	; () banked
  5421  010968  6F60               	movwf	delay_us@x& (0+255),b
  5422  01096A  0E00               	movlw	0
  5423  01096C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5424  01096E  0E00               	movlw	0
  5425  010970  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5426  010972  0E00               	movlw	0
  5427  010974  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5428  010976  EC8C  F08F         	call	_delay_us	;wreg free
  5429                           
  5430                           ;LCD.c: 158: PORTEbits.RE4 = 0;
  5431  01097A  9884               	bcf	3972,4,c	;volatile
  5432                           
  5433                           ;LCD.c: 160: delay_us(40);;
  5434  01097C  0E28               	movlw	40
  5435  01097E  0100               	movlb	0	; () banked
  5436  010980  6F60               	movwf	delay_us@x& (0+255),b
  5437  010982  0E00               	movlw	0
  5438  010984  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5439  010986  0E00               	movlw	0
  5440  010988  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5441  01098A  0E00               	movlw	0
  5442  01098C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5443  01098E  EC8C  F08F         	call	_delay_us	;wreg free
  5444                           
  5445                           ;LCD.c: 161: PORTEbits.RE4 = 1;
  5446  010992  8884               	bsf	3972,4,c	;volatile
  5447                           
  5448                           ;LCD.c: 162: { PORTHbits.RH5 = ((0x1 >> 3) & 1); PORTEbits.RE1 = ((0x1 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x1 >> 1) & 1); PORTEbits.RE2 = (0x1 & 1); };
  5449  010994  9A87               	bcf	3975,5,c	;volatile
  5450  010996  9284               	bcf	3972,1,c	;volatile
  5451  010998  9084               	bcf	3972,0,c	;volatile
  5452  01099A  8484               	bsf	3972,2,c	;volatile
  5453                           
  5454                           ;LCD.c: 163: delay_us(40);;
  5455  01099C  0E28               	movlw	40
  5456  01099E  0100               	movlb	0	; () banked
  5457  0109A0  6F60               	movwf	delay_us@x& (0+255),b
  5458  0109A2  0E00               	movlw	0
  5459  0109A4  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5460  0109A6  0E00               	movlw	0
  5461  0109A8  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5462  0109AA  0E00               	movlw	0
  5463  0109AC  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5464  0109AE  EC8C  F08F         	call	_delay_us	;wreg free
  5465                           
  5466                           ;LCD.c: 164: PORTEbits.RE4 = 0;
  5467  0109B2  9884               	bcf	3972,4,c	;volatile
  5468                           
  5469                           ;LCD.c: 167: delay_us(40);;
  5470  0109B4  0E28               	movlw	40
  5471  0109B6  0100               	movlb	0	; () banked
  5472  0109B8  6F60               	movwf	delay_us@x& (0+255),b
  5473  0109BA  0E00               	movlw	0
  5474  0109BC  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5475  0109BE  0E00               	movlw	0
  5476  0109C0  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5477  0109C2  0E00               	movlw	0
  5478  0109C4  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5479  0109C6  EC8C  F08F         	call	_delay_us	;wreg free
  5480                           
  5481                           ;LCD.c: 168: PORTEbits.RE4 = 1;
  5482  0109CA  8884               	bsf	3972,4,c	;volatile
  5483                           
  5484                           ;LCD.c: 169: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5485  0109CC  9A87               	bcf	3975,5,c	;volatile
  5486  0109CE  9284               	bcf	3972,1,c	;volatile
  5487  0109D0  9084               	bcf	3972,0,c	;volatile
  5488  0109D2  9484               	bcf	3972,2,c	;volatile
  5489                           
  5490                           ;LCD.c: 170: delay_us(40);;
  5491  0109D4  0E28               	movlw	40
  5492  0109D6  0100               	movlb	0	; () banked
  5493  0109D8  6F60               	movwf	delay_us@x& (0+255),b
  5494  0109DA  0E00               	movlw	0
  5495  0109DC  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5496  0109DE  0E00               	movlw	0
  5497  0109E0  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5498  0109E2  0E00               	movlw	0
  5499  0109E4  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5500  0109E6  EC8C  F08F         	call	_delay_us	;wreg free
  5501                           
  5502                           ;LCD.c: 171: PORTEbits.RE4 = 0;
  5503  0109EA  9884               	bcf	3972,4,c	;volatile
  5504                           
  5505                           ;LCD.c: 173: delay_us(40);;
  5506  0109EC  0E28               	movlw	40
  5507  0109EE  0100               	movlb	0	; () banked
  5508  0109F0  6F60               	movwf	delay_us@x& (0+255),b
  5509  0109F2  0E00               	movlw	0
  5510  0109F4  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5511  0109F6  0E00               	movlw	0
  5512  0109F8  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5513  0109FA  0E00               	movlw	0
  5514  0109FC  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5515  0109FE  EC8C  F08F         	call	_delay_us	;wreg free
  5516                           
  5517                           ;LCD.c: 174: PORTEbits.RE4 = 1;
  5518  010A02  8884               	bsf	3972,4,c	;volatile
  5519                           
  5520                           ;LCD.c: 175: { PORTHbits.RH5 = ((0x6 >> 3) & 1); PORTEbits.RE1 = ((0x6 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x6 >> 1) & 1); PORTEbits.RE2 = (0x6 & 1); };
  5521  010A04  9A87               	bcf	3975,5,c	;volatile
  5522  010A06  8284               	bsf	3972,1,c	;volatile
  5523  010A08  8084               	bsf	3972,0,c	;volatile
  5524  010A0A  9484               	bcf	3972,2,c	;volatile
  5525                           
  5526                           ;LCD.c: 176: delay_us(40);;
  5527  010A0C  0E28               	movlw	40
  5528  010A0E  0100               	movlb	0	; () banked
  5529  010A10  6F60               	movwf	delay_us@x& (0+255),b
  5530  010A12  0E00               	movlw	0
  5531  010A14  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5532  010A16  0E00               	movlw	0
  5533  010A18  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5534  010A1A  0E00               	movlw	0
  5535  010A1C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5536  010A1E  EC8C  F08F         	call	_delay_us	;wreg free
  5537                           
  5538                           ;LCD.c: 177: PORTEbits.RE4 = 0;
  5539  010A22  9884               	bcf	3972,4,c	;volatile
  5540  010A24  0012               	return		;funcret
  5541  010A26                     __end_of_LCD_init4bit:
  5542                           	opt stack 0
  5543                           tblptru	equ	0xFF8
  5544                           tblptrh	equ	0xFF7
  5545                           tblptrl	equ	0xFF6
  5546                           tablat	equ	0xFF5
  5547                           prodh	equ	0xFF4
  5548                           prodl	equ	0xFF3
  5549                           intcon	equ	0xFF2
  5550                           intcon2	equ	0xFF1
  5551                           intcon3	equ	0xFF0
  5552                           postinc0	equ	0xFEE
  5553                           wreg	equ	0xFE8
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _delay_init *****************
  5560 ;; Defined at:
  5561 ;;		line 7 in file "delays.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;		None               void
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    3
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_LCD_init4bit
  5586 ;;		_LCD_init8bit
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text17
  5591  011FFA                     __ptext17:
  5592                           	opt stack 0
  5593  011FFA                     _delay_init:
  5594                           	opt stack 25
  5595                           
  5596                           ;delays.c: 9: static int config = 0;
  5597                           ;delays.c: 12: if(config == 1)
  5598                           
  5599                           ;incstack = 0
  5600  011FFA  0434               	decf	delay_init@config,w,c
  5601  011FFC  1035               	iorwf	delay_init@config+1,w,c
  5602  011FFE  B4D8               	btfsc	status,2,c
  5603  012000  0012               	return	
  5604  012002  D001               	goto	l308
  5605                           
  5606                           ;delays.c: 13: {
  5607                           ;delays.c: 14: return;
  5608  012004  0012               	return	
  5609  012006                     l308:
  5610                           
  5611                           ;delays.c: 15: }
  5612                           ;delays.c: 18: TMR3CS0 = 1;
  5613  012006  8CB1               	bsf	4017,6,c	;volatile
  5614                           
  5615                           ;delays.c: 19: TMR3CS1 = 1;
  5616  012008  8EB1               	bsf	4017,7,c	;volatile
  5617                           
  5618                           ;delays.c: 22: T3CKPS0 = 0;
  5619  01200A  98B1               	bcf	4017,4,c	;volatile
  5620                           
  5621                           ;delays.c: 23: T3CKPS1 = 0;
  5622  01200C  9AB1               	bcf	4017,5,c	;volatile
  5623                           
  5624                           ;delays.c: 26: RD163 = 1;
  5625  01200E  8EB1               	bsf	4017,7,c	;volatile
  5626                           
  5627                           ;delays.c: 29: TMR3IE = 0;
  5628  012010  92A0               	bcf	4000,1,c	;volatile
  5629                           
  5630                           ;delays.c: 32: TMR3ON = 1;
  5631  012012  80B1               	bsf	4017,0,c	;volatile
  5632                           
  5633                           ;delays.c: 34: config = 1;
  5634  012014  0E00               	movlw	0
  5635  012016  6E35               	movwf	delay_init@config+1,c
  5636  012018  0E01               	movlw	1
  5637  01201A  6E34               	movwf	delay_init@config,c
  5638                           
  5639                           ;delays.c: 42: T0CON = 0b11010111;
  5640  01201C  0ED7               	movlw	215
  5641  01201E  6ED5               	movwf	4053,c	;volatile
  5642                           
  5643                           ;delays.c: 43: TMR0IP = 1;
  5644  012020  84F1               	bsf	intcon2,2,c	;volatile
  5645                           
  5646                           ;delays.c: 44: TMR0IF = 0;
  5647  012022  94F2               	bcf	intcon,2,c	;volatile
  5648                           
  5649                           ;delays.c: 45: TMR0IE = 1;
  5650  012024  8AF2               	bsf	intcon,5,c	;volatile
  5651                           
  5652                           ;delays.c: 46: TMR0L = 193;
  5653  012026  0EC1               	movlw	193
  5654  012028  6ED6               	movwf	4054,c	;volatile
  5655  01202A  0012               	return		;funcret
  5656  01202C                     __end_of_delay_init:
  5657                           	opt stack 0
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           intcon	equ	0xFF2
  5665                           intcon2	equ	0xFF1
  5666                           intcon3	equ	0xFF0
  5667                           postinc0	equ	0xFEE
  5668                           wreg	equ	0xFE8
  5669                           postdec1	equ	0xFE5
  5670                           fsr1h	equ	0xFE2
  5671                           fsr1l	equ	0xFE1
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function _I2C_init *****************
  5675 ;; Defined at:
  5676 ;;		line 47 in file "I2C.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  channel         1    wreg     unsigned char 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  channel         1    0[BANK0 ] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;		None               void
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    3
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_init
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text18
  5705  011DFE                     __ptext18:
  5706                           	opt stack 0
  5707  011DFE                     _I2C_init:
  5708                           	opt stack 26
  5709                           
  5710                           ;incstack = 0
  5711                           ;I2C_init@channel stored from wreg
  5712  011DFE  0100               	movlb	0	; () banked
  5713  011E00  6F60               	movwf	I2C_init@channel& (0+255),b
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;I2C.c: 49: if(channel == 1) {
  5717  011E02  0100               	movlb	0	; () banked
  5718  011E04  0560               	decf	I2C_init@channel& (0+255),w,b
  5719  011E06  A4D8               	btfss	status,2,c
  5720  011E08  D00D               	goto	l1050
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;I2C.c: 51: TRISCbits.TRISC3 = 1;
  5724  011E0A  8694               	bsf	3988,3,c	;volatile
  5725                           
  5726                           ;I2C.c: 52: TRISCbits.TRISC4 = 1;
  5727  011E0C  8894               	bsf	3988,4,c	;volatile
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;I2C.c: 54: SSP1CON1 = 0x28;
  5731  011E0E  0E28               	movlw	40
  5732  011E10  6EC6               	movwf	4038,c	;volatile
  5733                           
  5734                           ;I2C.c: 55: SSP1CON2 = 0x00;
  5735  011E12  0E00               	movlw	0
  5736  011E14  6EC5               	movwf	4037,c	;volatile
  5737                           
  5738                           ;I2C.c: 56: SSP1CON3 = 0x40;
  5739  011E16  0E40               	movlw	64
  5740  011E18  6E69               	movwf	3945,c	;volatile
  5741                           
  5742                           ;I2C.c: 57: SSP1ADD = 0x9F;
  5743  011E1A  0E9F               	movlw	159
  5744  011E1C  6EC8               	movwf	4040,c	;volatile
  5745                           
  5746                           ;I2C.c: 58: SSP1STAT = 0x80;
  5747  011E1E  0E80               	movlw	128
  5748  011E20  6EC7               	movwf	4039,c	;volatile
  5749                           
  5750                           ;I2C.c: 60: }
  5751  011E22  0012               	return	
  5752  011E24                     l1050:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;I2C.c: 61: else {
  5756                           ;I2C.c: 63: TRISDbits.TRISD5 = 1;
  5757  011E24  8A95               	bsf	3989,5,c	;volatile
  5758                           
  5759                           ;I2C.c: 64: TRISDbits.TRISD6 = 1;
  5760  011E26  8C95               	bsf	3989,6,c	;volatile
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;I2C.c: 66: SSP2CON1 = 0x28;
  5764  011E28  0E28               	movlw	40
  5765  011E2A  010F               	movlb	15	; () banked
  5766  011E2C  6F19               	movwf	25,b	;volatile
  5767                           
  5768                           ;I2C.c: 67: SSP2CON2 = 0x00;
  5769  011E2E  0E00               	movlw	0
  5770  011E30  010F               	movlb	15	; () banked
  5771  011E32  6F18               	movwf	24,b	;volatile
  5772                           
  5773                           ;I2C.c: 68: SSP2CON3 = 0x40;
  5774  011E34  0E40               	movlw	64
  5775  011E36  010F               	movlb	15	; () banked
  5776  011E38  6F39               	movwf	57,b	;volatile
  5777                           
  5778                           ;I2C.c: 69: SSP2ADD = 0x9F;
  5779  011E3A  0E9F               	movlw	159
  5780  011E3C  010F               	movlb	15	; () banked
  5781  011E3E  6F02               	movwf	2,b	;volatile
  5782                           
  5783                           ;I2C.c: 70: SSP2STAT = 0x80;
  5784  011E40  0E80               	movlw	128
  5785  011E42  010F               	movlb	15	; () banked
  5786  011E44  6F1A               	movwf	26,b	;volatile
  5787  011E46  0012               	return	
  5788                           
  5789                           ; BSR set to: 15
  5790  011E48  0012               	return		;funcret
  5791  011E4A                     __end_of_I2C_init:
  5792                           	opt stack 0
  5793                           tblptru	equ	0xFF8
  5794                           tblptrh	equ	0xFF7
  5795                           tblptrl	equ	0xFF6
  5796                           tablat	equ	0xFF5
  5797                           prodh	equ	0xFF4
  5798                           prodl	equ	0xFF3
  5799                           intcon	equ	0xFF2
  5800                           intcon2	equ	0xFF1
  5801                           intcon3	equ	0xFF0
  5802                           postinc0	equ	0xFEE
  5803                           wreg	equ	0xFE8
  5804                           postdec1	equ	0xFE5
  5805                           fsr1h	equ	0xFE2
  5806                           fsr1l	equ	0xFE1
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _delay_s *****************
  5810 ;; Defined at:
  5811 ;;		line 70 in file "delays.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  x               4   12[BANK0 ] long 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  time            4   24[BANK0 ] unsigned long 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;Total ram usage:       16 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    4
  5832 ;; This function calls:
  5833 ;;		___lmul
  5834 ;;		_millis
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text19
  5841  01148C                     __ptext19:
  5842                           	opt stack 0
  5843  01148C                     _delay_s:
  5844                           	opt stack 26
  5845                           
  5846                           ;delays.c: 72: unsigned long time = millis();
  5847                           
  5848                           ;incstack = 0
  5849  01148C  EC8C  F090         	call	_millis	;wreg free
  5850  011490  C060  F078         	movff	?_millis,delay_s@time
  5851  011494  C061  F079         	movff	?_millis+1,delay_s@time+1
  5852  011498  C062  F07A         	movff	?_millis+2,delay_s@time+2
  5853  01149C  C063  F07B         	movff	?_millis+3,delay_s@time+3
  5854                           
  5855                           ;delays.c: 73: while(millis() - time < (x * 1000));
  5856  0114A0  D000               	goto	l7661
  5857  0114A2                     l7661:
  5858  0114A2  C078  F070         	movff	delay_s@time,??_delay_s
  5859  0114A6  C079  F071         	movff	delay_s@time+1,??_delay_s+1
  5860  0114AA  C07A  F072         	movff	delay_s@time+2,??_delay_s+2
  5861  0114AE  C07B  F073         	movff	delay_s@time+3,??_delay_s+3
  5862  0114B2  0100               	movlb	0	; () banked
  5863  0114B4  1F70               	comf	??_delay_s& (0+255),f,b
  5864  0114B6  1F71               	comf	(??_delay_s+1)& (0+255),f,b
  5865  0114B8  1F72               	comf	(??_delay_s+2)& (0+255),f,b
  5866  0114BA  1F73               	comf	(??_delay_s+3)& (0+255),f,b
  5867  0114BC  2B70               	incf	??_delay_s& (0+255),f,b
  5868  0114BE  0E00               	movlw	0
  5869  0114C0  2371               	addwfc	(??_delay_s+1)& (0+255),f,b
  5870  0114C2  2372               	addwfc	(??_delay_s+2)& (0+255),f,b
  5871  0114C4  2373               	addwfc	(??_delay_s+3)& (0+255),f,b
  5872  0114C6  EC8C  F090         	call	_millis	;wreg free
  5873  0114CA  0100               	movlb	0	; () banked
  5874  0114CC  5170               	movf	??_delay_s& (0+255),w,b
  5875  0114CE  0100               	movlb	0	; () banked
  5876  0114D0  2560               	addwf	?_millis& (0+255),w,b
  5877  0114D2  0100               	movlb	0	; () banked
  5878  0114D4  6F74               	movwf	(??_delay_s+4)& (0+255),b
  5879  0114D6  0100               	movlb	0	; () banked
  5880  0114D8  5171               	movf	(??_delay_s+1)& (0+255),w,b
  5881  0114DA  0100               	movlb	0	; () banked
  5882  0114DC  2161               	addwfc	(?_millis+1)& (0+255),w,b
  5883  0114DE  0100               	movlb	0	; () banked
  5884  0114E0  6F75               	movwf	(??_delay_s+5)& (0+255),b
  5885  0114E2  0100               	movlb	0	; () banked
  5886  0114E4  5172               	movf	(??_delay_s+2)& (0+255),w,b
  5887  0114E6  0100               	movlb	0	; () banked
  5888  0114E8  2162               	addwfc	(?_millis+2)& (0+255),w,b
  5889  0114EA  0100               	movlb	0	; () banked
  5890  0114EC  6F76               	movwf	(??_delay_s+6)& (0+255),b
  5891  0114EE  0100               	movlb	0	; () banked
  5892  0114F0  5173               	movf	(??_delay_s+3)& (0+255),w,b
  5893  0114F2  0100               	movlb	0	; () banked
  5894  0114F4  2163               	addwfc	(?_millis+3)& (0+255),w,b
  5895  0114F6  0100               	movlb	0	; () banked
  5896  0114F8  6F77               	movwf	(??_delay_s+7)& (0+255),b
  5897  0114FA  C06C  F060         	movff	delay_s@x,___lmul@multiplier
  5898  0114FE  C06D  F061         	movff	delay_s@x+1,___lmul@multiplier+1
  5899  011502  C06E  F062         	movff	delay_s@x+2,___lmul@multiplier+2
  5900  011506  C06F  F063         	movff	delay_s@x+3,___lmul@multiplier+3
  5901  01150A  0EE8               	movlw	232
  5902  01150C  0100               	movlb	0	; () banked
  5903  01150E  6F64               	movwf	___lmul@multiplicand& (0+255),b
  5904  011510  0E03               	movlw	3
  5905  011512  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5906  011514  0E00               	movlw	0
  5907  011516  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5908  011518  0E00               	movlw	0
  5909  01151A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5910  01151C  ECCE  F08D         	call	___lmul	;wreg free
  5911  011520  0100               	movlb	0	; () banked
  5912  011522  5160               	movf	?___lmul& (0+255),w,b
  5913  011524  0100               	movlb	0	; () banked
  5914  011526  5D74               	subwf	(??_delay_s+4)& (0+255),w,b
  5915  011528  0100               	movlb	0	; () banked
  5916  01152A  5161               	movf	(?___lmul+1)& (0+255),w,b
  5917  01152C  0100               	movlb	0	; () banked
  5918  01152E  5975               	subwfb	(??_delay_s+5)& (0+255),w,b
  5919  011530  0100               	movlb	0	; () banked
  5920  011532  5162               	movf	(?___lmul+2)& (0+255),w,b
  5921  011534  0100               	movlb	0	; () banked
  5922  011536  5976               	subwfb	(??_delay_s+6)& (0+255),w,b
  5923  011538  0100               	movlb	0	; () banked
  5924  01153A  5163               	movf	(?___lmul+3)& (0+255),w,b
  5925  01153C  0100               	movlb	0	; () banked
  5926  01153E  5977               	subwfb	(??_delay_s+7)& (0+255),w,b
  5927  011540  A0D8               	btfss	status,0,c
  5928  011542  D7AF               	goto	l7661
  5929                           
  5930                           ; BSR set to: 0
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;delays.c: 74: return;
  5934  011544  0012               	return		;funcret
  5935  011546                     __end_of_delay_s:
  5936                           	opt stack 0
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           intcon	equ	0xFF2
  5944                           intcon2	equ	0xFF1
  5945                           intcon3	equ	0xFF0
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function ___lmul *****************
  5954 ;; Defined at:
  5955 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5958 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  product         4    8[BANK0 ] unsigned long 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  4    0[BANK0 ] unsigned long 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5970 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;Total ram usage:       12 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    3
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_delay_s
  5981 ;;		_fft_fix
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text20
  5986  011B9C                     __ptext20:
  5987                           	opt stack 0
  5988  011B9C                     ___lmul:
  5989                           	opt stack 26
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;incstack = 0
  5993  011B9C  0E00               	movlw	0
  5994  011B9E  0100               	movlb	0	; () banked
  5995  011BA0  6F68               	movwf	___lmul@product& (0+255),b
  5996  011BA2  0E00               	movlw	0
  5997  011BA4  6F69               	movwf	(___lmul@product+1)& (0+255),b
  5998  011BA6  0E00               	movlw	0
  5999  011BA8  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  6000  011BAA  0E00               	movlw	0
  6001  011BAC  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  6002  011BAE  D000               	goto	l7531
  6003  011BB0                     l7531:
  6004                           
  6005                           ; BSR set to: 0
  6006  011BB0  0100               	movlb	0	; () banked
  6007  011BB2  A160               	btfss	___lmul@multiplier& (0+255),0,b
  6008  011BB4  D011               	goto	l7535
  6009                           
  6010                           ; BSR set to: 0
  6011  011BB6  0100               	movlb	0	; () banked
  6012  011BB8  5164               	movf	___lmul@multiplicand& (0+255),w,b
  6013  011BBA  0100               	movlb	0	; () banked
  6014  011BBC  2768               	addwf	___lmul@product& (0+255),f,b
  6015  011BBE  0100               	movlb	0	; () banked
  6016  011BC0  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6017  011BC2  0100               	movlb	0	; () banked
  6018  011BC4  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  6019  011BC6  0100               	movlb	0	; () banked
  6020  011BC8  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6021  011BCA  0100               	movlb	0	; () banked
  6022  011BCC  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  6023  011BCE  0100               	movlb	0	; () banked
  6024  011BD0  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6025  011BD2  0100               	movlb	0	; () banked
  6026  011BD4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  6027  011BD6  D000               	goto	l7535
  6028  011BD8                     l7535:
  6029                           
  6030                           ; BSR set to: 0
  6031  011BD8  0100               	movlb	0	; () banked
  6032  011BDA  90D8               	bcf	status,0,c
  6033  011BDC  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  6034  011BDE  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6035  011BE0  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6036  011BE2  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6037                           
  6038                           ; BSR set to: 0
  6039  011BE4  0100               	movlb	0	; () banked
  6040  011BE6  90D8               	bcf	status,0,c
  6041  011BE8  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6042  011BEA  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6043  011BEC  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6044  011BEE  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  6045  011BF0  0100               	movlb	0	; () banked
  6046  011BF2  5160               	movf	___lmul@multiplier& (0+255),w,b
  6047  011BF4  0100               	movlb	0	; () banked
  6048  011BF6  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6049  011BF8  0100               	movlb	0	; () banked
  6050  011BFA  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6051  011BFC  0100               	movlb	0	; () banked
  6052  011BFE  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6053  011C00  A4D8               	btfss	status,2,c
  6054  011C02  D7D6               	goto	l7531
  6055                           
  6056                           ; BSR set to: 0
  6057  011C04  C068  F060         	movff	___lmul@product,?___lmul
  6058  011C08  C069  F061         	movff	___lmul@product+1,?___lmul+1
  6059  011C0C  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  6060  011C10  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  6061                           
  6062                           ; BSR set to: 0
  6063  011C14  0012               	return		;funcret
  6064  011C16                     __end_of___lmul:
  6065                           	opt stack 0
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           intcon	equ	0xFF2
  6073                           intcon2	equ	0xFF1
  6074                           intcon3	equ	0xFF0
  6075                           postinc0	equ	0xFEE
  6076                           wreg	equ	0xFE8
  6077                           postdec1	equ	0xFE5
  6078                           fsr1h	equ	0xFE2
  6079                           fsr1l	equ	0xFE1
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _compass_mainRead *****************
  6083 ;; Defined at:
  6084 ;;		line 116 in file "compass.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  positionData    2    4[BANK0 ] PTR unsigned char 
  6087 ;;		 -> main@positionData(6), 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  x               1    9[BANK0 ] unsigned char 
  6090 ;;  retVal          1    8[BANK0 ] char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      char 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;Total ram usage:        6 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    5
  6107 ;; This function calls:
  6108 ;;		_I2C_close
  6109 ;;		_I2C_open
  6110 ;;		_I2C_read
  6111 ;;		_I2C_write
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text21
  6118  011A1C                     __ptext21:
  6119                           	opt stack 0
  6120  011A1C                     _compass_mainRead:
  6121                           	opt stack 25
  6122                           
  6123                           ;compass.c: 118: signed char retVal;
  6124                           ;compass.c: 120: I2C_open(2);
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;incstack = 0
  6128  011A1C  0E02               	movlw	2
  6129  011A1E  ECC7  F08F         	call	_I2C_open
  6130                           
  6131                           ;compass.c: 121: I2C_write(2, 0x3C);
  6132  011A22  0E3C               	movlw	60
  6133  011A24  0100               	movlb	0	; () banked
  6134  011A26  6F62               	movwf	I2C_write@data& (0+255),b
  6135  011A28  0E02               	movlw	2
  6136  011A2A  ECAD  F08E         	call	_I2C_write
  6137                           
  6138                           ;compass.c: 122: I2C_write(2, 0x03);
  6139  011A2E  0E03               	movlw	3
  6140  011A30  0100               	movlb	0	; () banked
  6141  011A32  6F62               	movwf	I2C_write@data& (0+255),b
  6142  011A34  0E02               	movlw	2
  6143  011A36  ECAD  F08E         	call	_I2C_write
  6144                           
  6145                           ;compass.c: 123: I2C_close(2);
  6146  011A3A  0E02               	movlw	2
  6147  011A3C  ECE2  F08F         	call	_I2C_close
  6148                           
  6149                           ;compass.c: 124: I2C_open(2);
  6150  011A40  0E02               	movlw	2
  6151  011A42  ECC7  F08F         	call	_I2C_open
  6152                           
  6153                           ;compass.c: 125: I2C_write(2, 0x3C | 0x01);
  6154  011A46  0E3D               	movlw	61
  6155  011A48  0100               	movlb	0	; () banked
  6156  011A4A  6F62               	movwf	I2C_write@data& (0+255),b
  6157  011A4C  0E02               	movlw	2
  6158  011A4E  ECAD  F08E         	call	_I2C_write
  6159                           
  6160                           ;compass.c: 126: for(unsigned char x = 0; x < 6; x++) {
  6161  011A52  0E00               	movlw	0
  6162  011A54  0100               	movlb	0	; () banked
  6163  011A56  6F69               	movwf	compass_mainRead@x& (0+255),b
  6164  011A58                     l7667:
  6165                           
  6166                           ; BSR set to: 0
  6167  011A58  0E05               	movlw	5
  6168  011A5A  0100               	movlb	0	; () banked
  6169  011A5C  6569               	cpfsgt	compass_mainRead@x& (0+255),b
  6170  011A5E  D001               	goto	l7671
  6171                           
  6172                           ; BSR set to: 0
  6173  011A60  D019               	goto	l7677
  6174  011A62                     l7671:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;compass.c: 127: I2C_read(2, positionData[x]);
  6178  011A62  0100               	movlb	0	; () banked
  6179  011A64  5169               	movf	compass_mainRead@x& (0+255),w,b
  6180  011A66  0D01               	mullw	1
  6181  011A68  50F3               	movf	prodl,w,c
  6182  011A6A  0100               	movlb	0	; () banked
  6183  011A6C  2564               	addwf	compass_mainRead@positionData& (0+255),w,b
  6184  011A6E  6ED9               	movwf	fsr2l,c
  6185  011A70  50F4               	movf	prodh,w,c
  6186  011A72  0100               	movlb	0	; () banked
  6187  011A74  2165               	addwfc	(compass_mainRead@positionData+1)& (0+255),w,b
  6188  011A76  6EDA               	movwf	fsr2h,c
  6189  011A78  50DF               	movf	indf2,w,c
  6190  011A7A  0100               	movlb	0	; () banked
  6191  011A7C  6F66               	movwf	??_compass_mainRead& (0+255),b
  6192  011A7E  6B67               	clrf	(??_compass_mainRead+1)& (0+255),b
  6193  011A80  C066  F060         	movff	??_compass_mainRead,I2C_read@dataRetAdr
  6194  011A84  C067  F061         	movff	??_compass_mainRead+1,I2C_read@dataRetAdr+1
  6195  011A88  0E02               	movlw	2
  6196  011A8A  ECD7  F08E         	call	_I2C_read
  6197  011A8E  0100               	movlb	0	; () banked
  6198  011A90  2B69               	incf	compass_mainRead@x& (0+255),f,b
  6199  011A92  D7E2               	goto	l7667
  6200  011A94                     l7677:
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;compass.c: 128: }
  6204                           ;compass.c: 129: I2C_close(2);
  6205  011A94  0E02               	movlw	2
  6206  011A96  ECE2  F08F         	call	_I2C_close
  6207                           
  6208                           ;compass.c: 132: else
  6209                           ;compass.c: 133: return -1;
  6210                           ;	Return value of _compass_mainRead is never used
  6211                           
  6212                           ;compass.c: 131: return 0;
  6213                           ;	Return value of _compass_mainRead is never used
  6214  011A9A  0012               	return	
  6215  011A9C  0012               	return		;funcret
  6216  011A9E                     __end_of_compass_mainRead:
  6217                           	opt stack 0
  6218                           tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           prodh	equ	0xFF4
  6223                           prodl	equ	0xFF3
  6224                           intcon	equ	0xFF2
  6225                           intcon2	equ	0xFF1
  6226                           intcon3	equ	0xFF0
  6227                           postinc0	equ	0xFEE
  6228                           wreg	equ	0xFE8
  6229                           postdec1	equ	0xFE5
  6230                           fsr1h	equ	0xFE2
  6231                           fsr1l	equ	0xFE1
  6232                           indf2	equ	0xFDF
  6233                           fsr2h	equ	0xFDA
  6234                           fsr2l	equ	0xFD9
  6235                           status	equ	0xFD8
  6236                           
  6237 ;; *************** function _I2C_read *****************
  6238 ;; Defined at:
  6239 ;;		line 346 in file "I2C.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  channel         1    wreg     unsigned char 
  6242 ;;  dataRetAdr      2    0[BANK0 ] PTR unsigned char 
  6243 ;;		 -> RAM(3577), 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  channel         1    2[BANK0 ] unsigned char 
  6246 ;;  retVal          1    3[BANK0 ] volatile char 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      char 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;Total ram usage:        4 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    3
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_compass_mainRead
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text22
  6271  011DAE                     __ptext22:
  6272                           	opt stack 0
  6273  011DAE                     _I2C_read:
  6274                           	opt stack 26
  6275                           
  6276                           ;incstack = 0
  6277                           ;I2C_read@channel stored from wreg
  6278  011DAE  0100               	movlb	0	; () banked
  6279  011DB0  6F62               	movwf	I2C_read@channel& (0+255),b
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;I2C.c: 348: volatile signed char retVal = 0;
  6283  011DB2  0E00               	movlw	0
  6284  011DB4  0100               	movlb	0	; () banked
  6285  011DB6  6F63               	movwf	I2C_read@retVal& (0+255),b	;volatile
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;I2C.c: 349: if(channel == 1) {
  6289  011DB8  0100               	movlb	0	; () banked
  6290  011DBA  0562               	decf	I2C_read@channel& (0+255),w,b
  6291  011DBC  A4D8               	btfss	status,2,c
  6292  011DBE  D00D               	goto	l1137
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;I2C.c: 350: SSP1CON2bits.RCEN = 1;
  6296  011DC0  86C5               	bsf	4037,3,c	;volatile
  6297                           
  6298                           ;I2C.c: 351: while(!(SSP1STATbits.BF));
  6299  011DC2  D000               	goto	l1138
  6300  011DC4                     l1138:
  6301                           
  6302                           ; BSR set to: 0
  6303  011DC4  A0C7               	btfss	4039,0,c	;volatile
  6304  011DC6  D7FE               	goto	l1138
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;I2C.c: 352: (*dataRetAdr) = SSP1BUF;
  6308                           
  6309                           ; BSR set to: 0
  6310  011DC8  C060  FFD9         	movff	I2C_read@dataRetAdr,fsr2l
  6311  011DCC  C061  FFDA         	movff	I2C_read@dataRetAdr+1,fsr2h
  6312  011DD0  CFC9 FFDF          	movff	4041,indf2	;volatile
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;I2C.c: 353: SSP1CON2bits.ACKEN = 1;
  6316  011DD4  88C5               	bsf	4037,4,c	;volatile
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;I2C.c: 354: SSP1CON2bits.RCEN = 0;
  6320  011DD6  96C5               	bcf	4037,3,c	;volatile
  6321                           
  6322                           ;I2C.c: 355: }
  6323  011DD8  0012               	return	
  6324  011DDA                     l1137:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;I2C.c: 356: else {
  6328                           ;I2C.c: 358: SSP2CON2bits.RCEN = 1;
  6329  011DDA  010F               	movlb	15	; () banked
  6330  011DDC  8718               	bsf	24,3,b	;volatile
  6331                           
  6332                           ;I2C.c: 359: while(!(SSP2STATbits.BF));
  6333  011DDE  D000               	goto	l1142
  6334  011DE0                     l1142:
  6335                           
  6336                           ; BSR set to: 15
  6337  011DE0  010F               	movlb	15	; () banked
  6338  011DE2  A11A               	btfss	26,0,b	;volatile
  6339  011DE4  D7FD               	goto	l1142
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;I2C.c: 360: (*dataRetAdr) = SSP2BUF;
  6343                           
  6344                           ; BSR set to: 15
  6345  011DE6  C060  FFD9         	movff	I2C_read@dataRetAdr,fsr2l
  6346  011DEA  C061  FFDA         	movff	I2C_read@dataRetAdr+1,fsr2h
  6347  011DEE  CF03 FFDF          	movff	3843,indf2	;volatile
  6348                           
  6349                           ; BSR set to: 15
  6350                           ;I2C.c: 361: SSP2CON2bits.ACKEN = 1;
  6351  011DF2  010F               	movlb	15	; () banked
  6352  011DF4  8918               	bsf	24,4,b	;volatile
  6353                           
  6354                           ; BSR set to: 15
  6355                           ;I2C.c: 362: SSP2CON2bits.RCEN = 0;
  6356  011DF6  010F               	movlb	15	; () banked
  6357  011DF8  9718               	bcf	24,3,b	;volatile
  6358                           
  6359                           ; BSR set to: 15
  6360  011DFA  0012               	return	
  6361                           
  6362                           ; BSR set to: 15
  6363                           ;I2C.c: 363: }
  6364                           ;I2C.c: 365: return retVal;
  6365                           ;	Return value of _I2C_read is never used
  6366  011DFC  0012               	return		;funcret
  6367  011DFE                     __end_of_I2C_read:
  6368                           	opt stack 0
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           intcon2	equ	0xFF1
  6377                           intcon3	equ	0xFF0
  6378                           postinc0	equ	0xFEE
  6379                           wreg	equ	0xFE8
  6380                           postdec1	equ	0xFE5
  6381                           fsr1h	equ	0xFE2
  6382                           fsr1l	equ	0xFE1
  6383                           indf2	equ	0xFDF
  6384                           fsr2h	equ	0xFDA
  6385                           fsr2l	equ	0xFD9
  6386                           status	equ	0xFD8
  6387                           
  6388 ;; *************** function _compass_mainBoardInit *****************
  6389 ;; Defined at:
  6390 ;;		line 96 in file "compass.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  retVal          1   10[BANK0 ] char 
  6395 ;;  data            1    9[BANK0 ] char 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      char 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;Total ram usage:        2 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    6
  6412 ;; This function calls:
  6413 ;;		_I2C_writeRegister
  6414 ;; This function is called by:
  6415 ;;		_main
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text23
  6420  011C16                     __ptext23:
  6421                           	opt stack 0
  6422  011C16                     _compass_mainBoardInit:
  6423                           	opt stack 24
  6424                           
  6425                           ;compass.c: 99: signed char retVal, data;
  6426                           ;compass.c: 101: data = SSP2BUF;
  6427                           
  6428                           ;incstack = 0
  6429  011C16  CF03 F069          	movff	3843,compass_mainBoardInit@data	;volatile
  6430                           
  6431                           ;compass.c: 104: retVal = I2C_writeRegister(2, 0x3C, 0x00, 0x50);
  6432  011C1A  0E3C               	movlw	60
  6433  011C1C  0100               	movlb	0	; () banked
  6434  011C1E  6F64               	movwf	I2C_writeRegister@slaveAdr& (0+255),b
  6435  011C20  0E00               	movlw	0
  6436  011C22  0100               	movlb	0	; () banked
  6437  011C24  6F65               	movwf	I2C_writeRegister@startRegAdr& (0+255),b
  6438  011C26  0E50               	movlw	80
  6439  011C28  0100               	movlb	0	; () banked
  6440  011C2A  6F66               	movwf	I2C_writeRegister@data& (0+255),b
  6441  011C2C  0E02               	movlw	2
  6442  011C2E  ECA7  F08B         	call	_I2C_writeRegister
  6443  011C32  0100               	movlb	0	; () banked
  6444  011C34  6F6A               	movwf	compass_mainBoardInit@retVal& (0+255),b
  6445                           
  6446                           ;compass.c: 105: retVal += I2C_writeRegister(2, 0x3C, 0x01, 0x20);
  6447  011C36  0E3C               	movlw	60
  6448  011C38  0100               	movlb	0	; () banked
  6449  011C3A  6F64               	movwf	I2C_writeRegister@slaveAdr& (0+255),b
  6450  011C3C  0E01               	movlw	1
  6451  011C3E  0100               	movlb	0	; () banked
  6452  011C40  6F65               	movwf	I2C_writeRegister@startRegAdr& (0+255),b
  6453  011C42  0E20               	movlw	32
  6454  011C44  0100               	movlb	0	; () banked
  6455  011C46  6F66               	movwf	I2C_writeRegister@data& (0+255),b
  6456  011C48  0E02               	movlw	2
  6457  011C4A  ECA7  F08B         	call	_I2C_writeRegister
  6458  011C4E  0100               	movlb	0	; () banked
  6459  011C50  276A               	addwf	compass_mainBoardInit@retVal& (0+255),f,b
  6460                           
  6461                           ;compass.c: 106: retVal += I2C_writeRegister(2, 0x3C, 0x02, 0x00);
  6462  011C52  0E3C               	movlw	60
  6463  011C54  0100               	movlb	0	; () banked
  6464  011C56  6F64               	movwf	I2C_writeRegister@slaveAdr& (0+255),b
  6465  011C58  0E02               	movlw	2
  6466  011C5A  0100               	movlb	0	; () banked
  6467  011C5C  6F65               	movwf	I2C_writeRegister@startRegAdr& (0+255),b
  6468  011C5E  0E00               	movlw	0
  6469  011C60  0100               	movlb	0	; () banked
  6470  011C62  6F66               	movwf	I2C_writeRegister@data& (0+255),b
  6471  011C64  0E02               	movlw	2
  6472  011C66  ECA7  F08B         	call	_I2C_writeRegister
  6473  011C6A  0100               	movlb	0	; () banked
  6474  011C6C  276A               	addwf	compass_mainBoardInit@retVal& (0+255),f,b
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;compass.c: 108: if(retVal <= -3) {
  6478  011C6E  0100               	movlb	0	; () banked
  6479  011C70  516A               	movf	compass_mainBoardInit@retVal& (0+255),w,b
  6480  011C72  0A80               	xorlw	128
  6481  011C74  0F82               	addlw	130
  6482  011C76  B0D8               	btfsc	status,0,c
  6483  011C78  D003               	goto	l7655
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;compass.c: 109: SSP2CON1bits.WCOL=0;
  6487  011C7A  010F               	movlb	15	; () banked
  6488  011C7C  9F19               	bcf	25,7,b	;volatile
  6489  011C7E  D000               	goto	l7655
  6490  011C80                     l7655:
  6491                           
  6492                           ;compass.c: 110: }
  6493                           ;compass.c: 112: return retVal;
  6494  011C80  0100               	movlb	0	; () banked
  6495  011C82  516A               	movf	compass_mainBoardInit@retVal& (0+255),w,b
  6496  011C84  0012               	return	
  6497                           
  6498                           ; BSR set to: 0
  6499                           
  6500                           ; BSR set to: 0
  6501  011C86  0012               	return		;funcret
  6502  011C88                     __end_of_compass_mainBoardInit:
  6503                           	opt stack 0
  6504                           tblptru	equ	0xFF8
  6505                           tblptrh	equ	0xFF7
  6506                           tblptrl	equ	0xFF6
  6507                           tablat	equ	0xFF5
  6508                           prodh	equ	0xFF4
  6509                           prodl	equ	0xFF3
  6510                           intcon	equ	0xFF2
  6511                           intcon2	equ	0xFF1
  6512                           intcon3	equ	0xFF0
  6513                           postinc0	equ	0xFEE
  6514                           wreg	equ	0xFE8
  6515                           postdec1	equ	0xFE5
  6516                           fsr1h	equ	0xFE2
  6517                           fsr1l	equ	0xFE1
  6518                           indf2	equ	0xFDF
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function _I2C_writeRegister *****************
  6524 ;; Defined at:
  6525 ;;		line 253 in file "I2C.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  channel         1    wreg     unsigned char 
  6528 ;;  slaveAdr        1    4[BANK0 ] unsigned char 
  6529 ;;  startRegAdr     1    5[BANK0 ] unsigned char 
  6530 ;;  data            1    6[BANK0 ] unsigned char 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  channel         1    7[BANK0 ] unsigned char 
  6533 ;;  retVal          1    8[BANK0 ] volatile char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      char 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6543 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;Total ram usage:        5 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    5
  6550 ;; This function calls:
  6551 ;;		_I2C_close
  6552 ;;		_I2C_open
  6553 ;;		_I2C_write
  6554 ;; This function is called by:
  6555 ;;		_compass_mainBoardInit
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text24
  6560  01174E                     __ptext24:
  6561                           	opt stack 0
  6562  01174E                     _I2C_writeRegister:
  6563                           	opt stack 24
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;incstack = 0
  6567                           ;I2C_writeRegister@channel stored from wreg
  6568  01174E  0100               	movlb	0	; () banked
  6569  011750  6F67               	movwf	I2C_writeRegister@channel& (0+255),b
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;I2C.c: 256: volatile signed char retVal;
  6573                           ;I2C.c: 258: I2C_open(channel);
  6574  011752  0100               	movlb	0	; () banked
  6575  011754  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6576  011756  ECC7  F08F         	call	_I2C_open
  6577                           
  6578                           ;I2C.c: 259: retVal = I2C_write(channel, ((slaveAdr << 0) | 0x00) );
  6579  01175A  C064  F062         	movff	I2C_writeRegister@slaveAdr,I2C_write@data
  6580  01175E  0100               	movlb	0	; () banked
  6581  011760  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6582  011762  ECAD  F08E         	call	_I2C_write
  6583  011766  0100               	movlb	0	; () banked
  6584  011768  6F68               	movwf	I2C_writeRegister@retVal& (0+255),b	;volatile
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;I2C.c: 260: if(retVal != 0) {
  6588  01176A  0100               	movlb	0	; () banked
  6589  01176C  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6590  01176E  0100               	movlb	0	; () banked
  6591  011770  B4D8               	btfsc	status,2,c
  6592  011772  D007               	goto	l7483
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;I2C.c: 261: I2C_close(channel);
  6596  011774  0100               	movlb	0	; () banked
  6597  011776  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6598  011778  ECE2  F08F         	call	_I2C_close
  6599                           
  6600                           ;I2C.c: 262: return retVal;
  6601  01177C  0100               	movlb	0	; () banked
  6602  01177E  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6603                           
  6604                           ; BSR set to: 0
  6605  011780  0012               	return	
  6606  011782                     l7483:
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;I2C.c: 263: }
  6610                           ;I2C.c: 265: retVal = I2C_write(channel, startRegAdr);
  6611  011782  C065  F062         	movff	I2C_writeRegister@startRegAdr,I2C_write@data
  6612  011786  0100               	movlb	0	; () banked
  6613  011788  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6614  01178A  ECAD  F08E         	call	_I2C_write
  6615  01178E  0100               	movlb	0	; () banked
  6616  011790  6F68               	movwf	I2C_writeRegister@retVal& (0+255),b	;volatile
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;I2C.c: 266: if(retVal != 0) {
  6620  011792  0100               	movlb	0	; () banked
  6621  011794  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6622  011796  0100               	movlb	0	; () banked
  6623  011798  B4D8               	btfsc	status,2,c
  6624  01179A  D007               	goto	l7493
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;I2C.c: 267: I2C_close(channel);
  6628  01179C  0100               	movlb	0	; () banked
  6629  01179E  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6630  0117A0  ECE2  F08F         	call	_I2C_close
  6631                           
  6632                           ;I2C.c: 268: return retVal;
  6633  0117A4  0100               	movlb	0	; () banked
  6634  0117A6  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6635                           
  6636                           ; BSR set to: 0
  6637  0117A8  0012               	return	
  6638  0117AA                     l7493:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;I2C.c: 269: }
  6642                           ;I2C.c: 271: retVal = I2C_write(channel, data);
  6643  0117AA  C066  F062         	movff	I2C_writeRegister@data,I2C_write@data
  6644  0117AE  0100               	movlb	0	; () banked
  6645  0117B0  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6646  0117B2  ECAD  F08E         	call	_I2C_write
  6647  0117B6  0100               	movlb	0	; () banked
  6648  0117B8  6F68               	movwf	I2C_writeRegister@retVal& (0+255),b	;volatile
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;I2C.c: 272: if(retVal != 0) {
  6652  0117BA  0100               	movlb	0	; () banked
  6653  0117BC  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6654  0117BE  0100               	movlb	0	; () banked
  6655  0117C0  B4D8               	btfsc	status,2,c
  6656  0117C2  D007               	goto	l7503
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;I2C.c: 273: I2C_close(channel);
  6660  0117C4  0100               	movlb	0	; () banked
  6661  0117C6  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6662  0117C8  ECE2  F08F         	call	_I2C_close
  6663                           
  6664                           ;I2C.c: 274: return retVal;
  6665  0117CC  0100               	movlb	0	; () banked
  6666  0117CE  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6667                           
  6668                           ; BSR set to: 0
  6669  0117D0  0012               	return	
  6670  0117D2                     l7503:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;I2C.c: 275: }
  6674                           ;I2C.c: 277: I2C_close(channel);
  6675  0117D2  0100               	movlb	0	; () banked
  6676  0117D4  5167               	movf	I2C_writeRegister@channel& (0+255),w,b
  6677  0117D6  ECE2  F08F         	call	_I2C_close
  6678                           
  6679                           ;I2C.c: 278: return retVal;
  6680  0117DA  0100               	movlb	0	; () banked
  6681  0117DC  5168               	movf	I2C_writeRegister@retVal& (0+255),w,b	;volatile
  6682  0117DE  0012               	return	
  6683                           
  6684                           ; BSR set to: 0
  6685                           
  6686                           ; BSR set to: 0
  6687  0117E0  0012               	return		;funcret
  6688  0117E2                     __end_of_I2C_writeRegister:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           prodh	equ	0xFF4
  6695                           prodl	equ	0xFF3
  6696                           intcon	equ	0xFF2
  6697                           intcon2	equ	0xFF1
  6698                           intcon3	equ	0xFF0
  6699                           postinc0	equ	0xFEE
  6700                           wreg	equ	0xFE8
  6701                           postdec1	equ	0xFE5
  6702                           fsr1h	equ	0xFE2
  6703                           fsr1l	equ	0xFE1
  6704                           indf2	equ	0xFDF
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function _I2C_write *****************
  6710 ;; Defined at:
  6711 ;;		line 159 in file "I2C.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  channel         1    wreg     unsigned char 
  6714 ;;  data            1    2[BANK0 ] unsigned char 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  channel         1    3[BANK0 ] unsigned char 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      char 
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6726 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;Total ram usage:        2 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    4
  6733 ;; This function calls:
  6734 ;;		_I2C_wait
  6735 ;; This function is called by:
  6736 ;;		_compass_mainRead
  6737 ;;		_I2C_writeRegister
  6738 ;;		_I2C_writeRegisters
  6739 ;;		_I2C_readRegisters
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text25
  6744  011D5A                     __ptext25:
  6745                           	opt stack 0
  6746  011D5A                     _I2C_write:
  6747                           	opt stack 25
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;incstack = 0
  6751                           ;I2C_write@channel stored from wreg
  6752  011D5A  0100               	movlb	0	; () banked
  6753  011D5C  6F63               	movwf	I2C_write@channel& (0+255),b
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;I2C.c: 161: if(channel == 1) {
  6757  011D5E  0100               	movlb	0	; () banked
  6758  011D60  0563               	decf	I2C_write@channel& (0+255),w,b
  6759  011D62  A4D8               	btfss	status,2,c
  6760  011D64  D010               	goto	l1088
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;I2C.c: 164: SSP1BUF = data;
  6764  011D66  C062  FFC9         	movff	I2C_write@data,4041	;volatile
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;I2C.c: 165: I2C_wait(1);
  6768  011D6A  0E01               	movlw	1
  6769  011D6C  EC6B  F08F         	call	_I2C_wait
  6770                           
  6771                           ;I2C.c: 166: if(SSP1CON2bits.ACKSTAT) {
  6772  011D70  ACC5               	btfss	4037,6,c	;volatile
  6773  011D72  D002               	goto	l1089
  6774                           
  6775                           ;I2C.c: 168: return -1;
  6776  011D74  0EFF               	movlw	255
  6777  011D76  0012               	return	
  6778  011D78                     l1089:
  6779                           
  6780                           ;I2C.c: 169: }
  6781                           ;I2C.c: 170: if(SSP1CON1bits.WCOL) {
  6782  011D78  AEC6               	btfss	4038,7,c	;volatile
  6783  011D7A  D003               	goto	l6981
  6784                           
  6785                           ;I2C.c: 172: SSP1CON1bits.WCOL = 0;
  6786  011D7C  9EC6               	bcf	4038,7,c	;volatile
  6787                           
  6788                           ;I2C.c: 173: return -2;
  6789  011D7E  0EFE               	movlw	254
  6790  011D80  0012               	return	
  6791  011D82                     l6981:
  6792                           
  6793                           ;I2C.c: 174: }
  6794                           ;I2C.c: 175: return 0;
  6795  011D82  0E00               	movlw	0
  6796                           
  6797                           ;I2C.c: 176: }
  6798  011D84  0012               	return	
  6799  011D86                     l1088:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;I2C.c: 177: else {
  6803                           ;I2C.c: 180: SSP2BUF = data;
  6804  011D86  C062  FF03         	movff	I2C_write@data,3843	;volatile
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;I2C.c: 181: I2C_wait(2);
  6808  011D8A  0E02               	movlw	2
  6809  011D8C  EC6B  F08F         	call	_I2C_wait
  6810                           
  6811                           ;I2C.c: 182: if(SSP2CON2bits.ACKSTAT) {
  6812  011D90  010F               	movlb	15	; () banked
  6813  011D92  AD18               	btfss	24,6,b	;volatile
  6814  011D94  D002               	goto	l1093
  6815                           
  6816                           ; BSR set to: 15
  6817                           ;I2C.c: 184: return -1;
  6818  011D96  0EFF               	movlw	255
  6819                           
  6820                           ; BSR set to: 15
  6821  011D98  0012               	return	
  6822  011D9A                     l1093:
  6823                           
  6824                           ; BSR set to: 15
  6825                           ;I2C.c: 185: }
  6826                           ;I2C.c: 186: if(SSP2CON1bits.WCOL) {
  6827  011D9A  010F               	movlb	15	; () banked
  6828  011D9C  AF19               	btfss	25,7,b	;volatile
  6829  011D9E  D004               	goto	l7001
  6830                           
  6831                           ; BSR set to: 15
  6832                           ;I2C.c: 188: SSP2CON1bits.WCOL = 0;
  6833  011DA0  010F               	movlb	15	; () banked
  6834  011DA2  9F19               	bcf	25,7,b	;volatile
  6835                           
  6836                           ; BSR set to: 15
  6837                           ;I2C.c: 189: return -2;
  6838  011DA4  0EFE               	movlw	254
  6839                           
  6840                           ; BSR set to: 15
  6841  011DA6  0012               	return	
  6842  011DA8                     l7001:
  6843                           
  6844                           ; BSR set to: 15
  6845                           ;I2C.c: 190: }
  6846                           ;I2C.c: 191: return 0;
  6847  011DA8  0E00               	movlw	0
  6848                           
  6849                           ; BSR set to: 15
  6850  011DAA  0012               	return	
  6851                           
  6852                           ; BSR set to: 15
  6853  011DAC  0012               	return		;funcret
  6854  011DAE                     __end_of_I2C_write:
  6855                           	opt stack 0
  6856                           tblptru	equ	0xFF8
  6857                           tblptrh	equ	0xFF7
  6858                           tblptrl	equ	0xFF6
  6859                           tablat	equ	0xFF5
  6860                           prodh	equ	0xFF4
  6861                           prodl	equ	0xFF3
  6862                           intcon	equ	0xFF2
  6863                           intcon2	equ	0xFF1
  6864                           intcon3	equ	0xFF0
  6865                           postinc0	equ	0xFEE
  6866                           wreg	equ	0xFE8
  6867                           postdec1	equ	0xFE5
  6868                           fsr1h	equ	0xFE2
  6869                           fsr1l	equ	0xFE1
  6870                           indf2	equ	0xFDF
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8
  6874                           
  6875 ;; *************** function _I2C_open *****************
  6876 ;; Defined at:
  6877 ;;		line 103 in file "I2C.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  channel         1    wreg     unsigned char 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  channel         1    2[BANK0 ] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      char 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;Total ram usage:        1 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    4
  6898 ;; This function calls:
  6899 ;;		_I2C_wait
  6900 ;; This function is called by:
  6901 ;;		_compass_mainRead
  6902 ;;		_I2C_writeRegister
  6903 ;;		_I2C_writeRegisters
  6904 ;;		_I2C_readRegisters
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           	psect	text26
  6909  011F8E                     __ptext26:
  6910                           	opt stack 0
  6911  011F8E                     _I2C_open:
  6912                           	opt stack 25
  6913                           
  6914                           ;incstack = 0
  6915                           ;I2C_open@channel stored from wreg
  6916  011F8E  0100               	movlb	0	; () banked
  6917  011F90  6F62               	movwf	I2C_open@channel& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;I2C.c: 105: if(channel == 1) {
  6921  011F92  0100               	movlb	0	; () banked
  6922  011F94  0562               	decf	I2C_open@channel& (0+255),w,b
  6923  011F96  A4D8               	btfss	status,2,c
  6924  011F98  D009               	goto	l6959
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;I2C.c: 106: I2C_wait(1);
  6928  011F9A  0E01               	movlw	1
  6929  011F9C  EC6B  F08F         	call	_I2C_wait
  6930                           
  6931                           ;I2C.c: 107: SSP1CON2bits.SEN = 1;
  6932  011FA0  80C5               	bsf	4037,0,c	;volatile
  6933                           
  6934                           ;I2C.c: 108: while(SSP1CON2bits.SEN);
  6935  011FA2  D000               	goto	l1067
  6936  011FA4                     l1067:
  6937  011FA4  A0C5               	btfss	4037,0,c	;volatile
  6938  011FA6  0012               	return	
  6939  011FA8  D7FD               	goto	l1067
  6940                           
  6941                           ;I2C.c: 110: }
  6942                           
  6943                           ;I2C.c: 109: return 0;
  6944                           ;	Return value of _I2C_open is never used
  6945  011FAA  0012               	return	
  6946  011FAC                     l6959:
  6947                           
  6948                           ;I2C.c: 111: else {
  6949                           ;I2C.c: 112: I2C_wait(2);
  6950  011FAC  0E02               	movlw	2
  6951  011FAE  EC6B  F08F         	call	_I2C_wait
  6952                           
  6953                           ;I2C.c: 113: SSP2CON2bits.SEN = 1;
  6954  011FB2  010F               	movlb	15	; () banked
  6955  011FB4  8118               	bsf	24,0,b	;volatile
  6956                           
  6957                           ;I2C.c: 114: while(SSP2CON2bits.SEN);
  6958  011FB6  D000               	goto	l1072
  6959  011FB8                     l1072:
  6960                           
  6961                           ; BSR set to: 15
  6962  011FB8  010F               	movlb	15	; () banked
  6963  011FBA  A118               	btfss	24,0,b	;volatile
  6964  011FBC  0012               	return	
  6965  011FBE  D7FC               	goto	l1072
  6966                           
  6967                           ; BSR set to: 15
  6968                           ;I2C.c: 115: return 0;
  6969                           ;	Return value of _I2C_open is never used
  6970  011FC0  0012               	return	
  6971                           
  6972                           ; BSR set to: 15
  6973  011FC2  0012               	return		;funcret
  6974  011FC4                     __end_of_I2C_open:
  6975                           	opt stack 0
  6976                           tblptru	equ	0xFF8
  6977                           tblptrh	equ	0xFF7
  6978                           tblptrl	equ	0xFF6
  6979                           tablat	equ	0xFF5
  6980                           prodh	equ	0xFF4
  6981                           prodl	equ	0xFF3
  6982                           intcon	equ	0xFF2
  6983                           intcon2	equ	0xFF1
  6984                           intcon3	equ	0xFF0
  6985                           postinc0	equ	0xFEE
  6986                           wreg	equ	0xFE8
  6987                           postdec1	equ	0xFE5
  6988                           fsr1h	equ	0xFE2
  6989                           fsr1l	equ	0xFE1
  6990                           indf2	equ	0xFDF
  6991                           fsr2h	equ	0xFDA
  6992                           fsr2l	equ	0xFD9
  6993                           status	equ	0xFD8
  6994                           
  6995 ;; *************** function _I2C_close *****************
  6996 ;; Defined at:
  6997 ;;		line 131 in file "I2C.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  channel         1    wreg     unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  channel         1    2[BANK0 ] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      char 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;Total ram usage:        1 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    4
  7018 ;; This function calls:
  7019 ;;		_I2C_wait
  7020 ;; This function is called by:
  7021 ;;		_compass_mainRead
  7022 ;;		_I2C_writeRegister
  7023 ;;		_I2C_writeRegisters
  7024 ;;		_I2C_readRegisters
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text27
  7029  011FC4                     __ptext27:
  7030                           	opt stack 0
  7031  011FC4                     _I2C_close:
  7032                           	opt stack 25
  7033                           
  7034                           ;incstack = 0
  7035                           ;I2C_close@channel stored from wreg
  7036  011FC4  0100               	movlb	0	; () banked
  7037  011FC6  6F62               	movwf	I2C_close@channel& (0+255),b
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;I2C.c: 133: if(channel == 1) {
  7041  011FC8  0100               	movlb	0	; () banked
  7042  011FCA  0562               	decf	I2C_close@channel& (0+255),w,b
  7043  011FCC  A4D8               	btfss	status,2,c
  7044  011FCE  D009               	goto	l7013
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;I2C.c: 135: I2C_wait(1);
  7048  011FD0  0E01               	movlw	1
  7049  011FD2  EC6B  F08F         	call	_I2C_wait
  7050                           
  7051                           ;I2C.c: 136: SSP1CON2bits.PEN = 1;
  7052  011FD6  84C5               	bsf	4037,2,c	;volatile
  7053                           
  7054                           ;I2C.c: 137: while(SSP1CON2bits.PEN);
  7055  011FD8  D000               	goto	l1078
  7056  011FDA                     l1078:
  7057  011FDA  A4C5               	btfss	4037,2,c	;volatile
  7058  011FDC  0012               	return	
  7059  011FDE  D7FD               	goto	l1078
  7060                           
  7061                           ;I2C.c: 139: }
  7062                           
  7063                           ;I2C.c: 138: return 0;
  7064                           ;	Return value of _I2C_close is never used
  7065  011FE0  0012               	return	
  7066  011FE2                     l7013:
  7067                           
  7068                           ;I2C.c: 140: else {
  7069                           ;I2C.c: 142: I2C_wait(2);
  7070  011FE2  0E02               	movlw	2
  7071  011FE4  EC6B  F08F         	call	_I2C_wait
  7072                           
  7073                           ;I2C.c: 143: SSP2CON2bits.PEN = 1;
  7074  011FE8  010F               	movlb	15	; () banked
  7075  011FEA  8518               	bsf	24,2,b	;volatile
  7076                           
  7077                           ;I2C.c: 144: while(SSP2CON2bits.PEN);
  7078  011FEC  D000               	goto	l1083
  7079  011FEE                     l1083:
  7080                           
  7081                           ; BSR set to: 15
  7082  011FEE  010F               	movlb	15	; () banked
  7083  011FF0  A518               	btfss	24,2,b	;volatile
  7084  011FF2  0012               	return	
  7085  011FF4  D7FC               	goto	l1083
  7086                           
  7087                           ; BSR set to: 15
  7088                           ;I2C.c: 145: return 0;
  7089                           ;	Return value of _I2C_close is never used
  7090  011FF6  0012               	return	
  7091                           
  7092                           ; BSR set to: 15
  7093  011FF8  0012               	return		;funcret
  7094  011FFA                     __end_of_I2C_close:
  7095                           	opt stack 0
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           intcon2	equ	0xFF1
  7104                           intcon3	equ	0xFF0
  7105                           postinc0	equ	0xFEE
  7106                           wreg	equ	0xFE8
  7107                           postdec1	equ	0xFE5
  7108                           fsr1h	equ	0xFE2
  7109                           fsr1l	equ	0xFE1
  7110                           indf2	equ	0xFDF
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function _I2C_wait *****************
  7116 ;; Defined at:
  7117 ;;		line 83 in file "I2C.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  channel         1    wreg     unsigned char 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  channel         1    1[BANK0 ] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;		None               void
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7133 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;Total ram usage:        2 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    3
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_I2C_open
  7142 ;;		_I2C_close
  7143 ;;		_I2C_write
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text28
  7148  011ED6                     __ptext28:
  7149                           	opt stack 0
  7150  011ED6                     _I2C_wait:
  7151                           	opt stack 25
  7152                           
  7153                           ;incstack = 0
  7154                           ;I2C_wait@channel stored from wreg
  7155  011ED6  0100               	movlb	0	; () banked
  7156  011ED8  6F61               	movwf	I2C_wait@channel& (0+255),b
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;I2C.c: 84: if(channel == 1) {
  7160  011EDA  0100               	movlb	0	; () banked
  7161  011EDC  0561               	decf	I2C_wait@channel& (0+255),w,b
  7162  011EDE  B4D8               	btfsc	status,2,c
  7163  011EE0  D002               	goto	l6703
  7164  011EE2  D00D               	goto	l6707
  7165                           
  7166                           ; BSR set to: 0
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;I2C.c: 85: while ( (SSP1CON2 & 0x1F) || (SSP1STAT & 0x04) );
  7170  011EE4  D000               	goto	l6703
  7171  011EE6                     l6703:
  7172                           
  7173                           ; BSR set to: 0
  7174  011EE6  CFC5 F060          	movff	4037,??_I2C_wait	;volatile
  7175  011EEA  0E1F               	movlw	31
  7176  011EEC  0100               	movlb	0	; () banked
  7177  011EEE  1760               	andwf	??_I2C_wait& (0+255),f,b
  7178  011EF0  A4D8               	btfss	status,2,c
  7179  011EF2  D7F9               	goto	l6703
  7180                           
  7181                           ; BSR set to: 0
  7182  011EF4  A4C7               	btfss	4039,2,c	;volatile
  7183  011EF6  0012               	return	
  7184  011EF8  D7F6               	goto	l6703
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;I2C.c: 87: }
  7188  011EFA  0012               	return	
  7189                           
  7190                           ; BSR set to: 0
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;I2C.c: 88: else {
  7194                           ;I2C.c: 89: while( (SSP2CON2 & 0x1F) || (SSP2STAT & 0x04) );
  7195  011EFC  D000               	goto	l6707
  7196  011EFE                     l6707:
  7197  011EFE  CF18 F060          	movff	3864,??_I2C_wait	;volatile
  7198  011F02  0E1F               	movlw	31
  7199  011F04  0100               	movlb	0	; () banked
  7200  011F06  1760               	andwf	??_I2C_wait& (0+255),f,b
  7201  011F08  A4D8               	btfss	status,2,c
  7202  011F0A  D7F9               	goto	l6707
  7203                           
  7204                           ; BSR set to: 0
  7205  011F0C  010F               	movlb	15	; () banked
  7206  011F0E  A51A               	btfss	26,2,b	;volatile
  7207  011F10  0012               	return	
  7208  011F12  D7F5               	goto	l6707
  7209                           
  7210                           ; BSR set to: 15
  7211  011F14  0012               	return	
  7212                           
  7213                           ; BSR set to: 15
  7214  011F16  0012               	return		;funcret
  7215  011F18                     __end_of_I2C_wait:
  7216                           	opt stack 0
  7217                           tblptru	equ	0xFF8
  7218                           tblptrh	equ	0xFF7
  7219                           tblptrl	equ	0xFF6
  7220                           tablat	equ	0xFF5
  7221                           prodh	equ	0xFF4
  7222                           prodl	equ	0xFF3
  7223                           intcon	equ	0xFF2
  7224                           intcon2	equ	0xFF1
  7225                           intcon3	equ	0xFF0
  7226                           postinc0	equ	0xFEE
  7227                           wreg	equ	0xFE8
  7228                           postdec1	equ	0xFE5
  7229                           fsr1h	equ	0xFE2
  7230                           fsr1l	equ	0xFE1
  7231                           indf2	equ	0xFDF
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _LCD_printString *****************
  7237 ;; Defined at:
  7238 ;;		line 313 in file "LCD.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  x               1    wreg     unsigned char 
  7241 ;;  y               1   27[BANK0 ] unsigned char 
  7242 ;;  input           2   28[BANK0 ] PTR unsigned char 
  7243 ;;		 -> STR_17(7), STR_16(13), STR_9(18), STR_8(15), 
  7244 ;;		 -> STR_7(18), STR_6(17), STR_5(16), STR_4(18), 
  7245 ;;		 -> STR_3(18), LCD_printBin@string(9), LCD_printVal@temp(3), LCD_printChar@string(2), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  x               1   40[BANK2 ] unsigned char 
  7248 ;;  tempString     20    0[BANK2 ] unsigned char [20]
  7249 ;;  val             2   41[BANK2 ] int 
  7250 ;;  tempString      2   45[BANK2 ] unsigned char [2]
  7251 ;;  i               2   49[BANK2 ] int 
  7252 ;;  i               2   47[BANK2 ] int 
  7253 ;;  string         20   20[BANK2 ] unsigned char [20]
  7254 ;;  aptr            2   43[BANK2 ] PTR void [1]
  7255 ;;		 -> ?_LCD_printString(0), 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;		None               void
  7258 ;; Registers used:
  7259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7265 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Totals:         0      11       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;Total ram usage:       62 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    6
  7272 ;; This function calls:
  7273 ;;		_LCD_placeCursor
  7274 ;;		_delay_ms
  7275 ;;		_delay_us
  7276 ;;		_sprintf
  7277 ;;		_strcat
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;;		_LCD_printChar
  7281 ;;		_LCD_printVal
  7282 ;;		_LCD_printBin
  7283 ;;		_selfTest
  7284 ;;		_wanderMode
  7285 ;;		_competitionMode
  7286 ;;		_RCMode
  7287 ;;		_fft_init
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text29
  7292  010000                     __ptext29:
  7293                           	opt stack 0
  7294  010000                     _LCD_printString:
  7295                           	opt stack 24
  7296                           
  7297                           ;incstack = 0
  7298                           ;LCD_printString@x stored from wreg
  7299  010000  0102               	movlb	2	; () banked
  7300  010002  6FDA               	movwf	LCD_printString@x& (0+255),b
  7301                           
  7302                           ; BSR set to: 2
  7303                           ;LCD.c: 315: char string[20] = "\0";
  7304  010004  EE21  F032         	lfsr	2,LCD_printString@F16347
  7305  010008  EE12  F0C6         	lfsr	1,LCD_printString@string
  7306  01000C  0E13               	movlw	19
  7307  01000E                     u5451:
  7308  01000E  CFDB FFE3          	movff	plusw2,plusw1
  7309  010012  06E8               	decf	wreg,f,c
  7310  010014  E2FC               	bc	u5451
  7311                           
  7312                           ; BSR set to: 2
  7313                           ;LCD.c: 317: va_list aptr;
  7314                           ;LCD.c: 318: *aptr = __va_start();
  7315  010016  0E7E               	movlw	low (?_LCD_printString+3)
  7316  010018  0102               	movlb	2	; () banked
  7317  01001A  6FDD               	movwf	LCD_printString@aptr& (0+255),b
  7318  01001C  0E00               	movlw	high (?_LCD_printString+3)
  7319  01001E  0102               	movlb	2	; () banked
  7320  010020  6FDE               	movwf	(LCD_printString@aptr+1)& (0+255),b
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;LCD.c: 320: LCD_placeCursor(x,y);
  7324  010022  C07B  F074         	movff	LCD_printString@y,LCD_placeCursor@y
  7325  010026  0102               	movlb	2	; () banked
  7326  010028  51DA               	movf	LCD_printString@x& (0+255),w,b
  7327  01002A  EC13  F085         	call	_LCD_placeCursor
  7328                           
  7329                           ;LCD.c: 323: for(int i = 0; input[i] != '\0' && i < 200; i++)
  7330  01002E  0E00               	movlw	0
  7331  010030  0102               	movlb	2	; () banked
  7332  010032  6FE2               	movwf	(LCD_printString@i+1)& (0+255),b
  7333  010034  0E00               	movlw	0
  7334  010036  6FE1               	movwf	LCD_printString@i& (0+255),b
  7335  010038  D0C0               	goto	l7571
  7336  01003A                     l7547:
  7337                           
  7338                           ; BSR set to: 2
  7339                           ;LCD.c: 324: {
  7340                           ;LCD.c: 325: if(input[i] == '%')
  7341  01003A  0102               	movlb	2	; () banked
  7342  01003C  51E1               	movf	LCD_printString@i& (0+255),w,b
  7343  01003E  0100               	movlb	0	; () banked
  7344  010040  257C               	addwf	LCD_printString@input& (0+255),w,b
  7345  010042  0100               	movlb	0	; () banked
  7346  010044  6F82               	movwf	??_LCD_printString& (0+255),b
  7347  010046  0102               	movlb	2	; () banked
  7348  010048  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  7349  01004A  0100               	movlb	0	; () banked
  7350  01004C  217D               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  7351  01004E  0100               	movlb	0	; () banked
  7352  010050  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  7353  010052  C082  FFF6         	movff	??_LCD_printString,tblptrl
  7354  010056  C083  FFF7         	movff	??_LCD_printString+1,tblptrh
  7355  01005A  0E00               	movlw	low (__mediumconst shr (0+16))
  7356  01005C  6EF8               	movwf	tblptru,c
  7357  01005E  0E0D               	movlw	(high __ramtop+-1)
  7358  010060  64F7               	cpfsgt	tblptrh,c
  7359  010062  D003               	bra	u5467
  7360  010064  0008               	tblrd		*
  7361  010066  50F5               	movf	tablat,w,c
  7362  010068  D005               	bra	u5460
  7363  01006A                     u5467:
  7364  01006A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7365  01006E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7366  010072  50EF               	movf	indf0,w,c
  7367  010074                     u5460:
  7368  010074  0A25               	xorlw	37
  7369  010076  A4D8               	btfss	status,2,c
  7370  010078  D06B               	goto	l7563
  7371                           
  7372                           ;LCD.c: 326: {
  7373                           ;LCD.c: 327: if(input[i+1] == '%')
  7374  01007A  0E01               	movlw	1
  7375  01007C  0102               	movlb	2	; () banked
  7376  01007E  25E1               	addwf	LCD_printString@i& (0+255),w,b
  7377  010080  0100               	movlb	0	; () banked
  7378  010082  6F82               	movwf	??_LCD_printString& (0+255),b
  7379  010084  0E00               	movlw	0
  7380  010086  0102               	movlb	2	; () banked
  7381  010088  21E2               	addwfc	(LCD_printString@i+1)& (0+255),w,b
  7382  01008A  0100               	movlb	0	; () banked
  7383  01008C  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  7384  01008E  C07C  F084         	movff	LCD_printString@input,??_LCD_printString+2
  7385  010092  C07D  F085         	movff	LCD_printString@input+1,??_LCD_printString+3
  7386  010096  0100               	movlb	0	; () banked
  7387  010098  5182               	movf	??_LCD_printString& (0+255),w,b
  7388  01009A  0100               	movlb	0	; () banked
  7389  01009C  2784               	addwf	(??_LCD_printString+2)& (0+255),f,b
  7390  01009E  0100               	movlb	0	; () banked
  7391  0100A0  5183               	movf	(??_LCD_printString+1)& (0+255),w,b
  7392  0100A2  0100               	movlb	0	; () banked
  7393  0100A4  2385               	addwfc	(??_LCD_printString+3)& (0+255),f,b
  7394  0100A6  C084  FFF6         	movff	??_LCD_printString+2,tblptrl
  7395  0100AA  C085  FFF7         	movff	??_LCD_printString+3,tblptrh
  7396  0100AE  0E00               	movlw	low (__mediumconst shr (0+16))
  7397  0100B0  6EF8               	movwf	tblptru,c
  7398  0100B2  0E0D               	movlw	(high __ramtop+-1)
  7399  0100B4  64F7               	cpfsgt	tblptrh,c
  7400  0100B6  D003               	bra	u5487
  7401  0100B8  0008               	tblrd		*
  7402  0100BA  50F5               	movf	tablat,w,c
  7403  0100BC  D005               	bra	u5480
  7404  0100BE                     u5487:
  7405  0100BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7406  0100C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  7407  0100C6  50EF               	movf	indf0,w,c
  7408  0100C8                     u5480:
  7409  0100C8  0A25               	xorlw	37
  7410  0100CA  A4D8               	btfss	status,2,c
  7411  0100CC  D00F               	goto	l7553
  7412                           
  7413                           ;LCD.c: 328: {
  7414                           ;LCD.c: 329: strcat(string, "%");
  7415  0100CE  0EC6               	movlw	low LCD_printString@string
  7416  0100D0  0100               	movlb	0	; () banked
  7417  0100D2  6F60               	movwf	strcat@to& (0+255),b
  7418  0100D4  0E02               	movlw	high LCD_printString@string
  7419  0100D6  0100               	movlb	0	; () banked
  7420  0100D8  6F61               	movwf	(strcat@to+1)& (0+255),b
  7421  0100DA  0EFC               	movlw	low STR_1
  7422  0100DC  0100               	movlb	0	; () banked
  7423  0100DE  6F62               	movwf	strcat@from& (0+255),b
  7424  0100E0  0EFF               	movlw	high STR_1
  7425  0100E2  0100               	movlb	0	; () banked
  7426  0100E4  6F63               	movwf	(strcat@from+1)& (0+255),b
  7427  0100E6  EC7A  F08E         	call	_strcat	;wreg free
  7428                           
  7429                           ;LCD.c: 330: }
  7430  0100EA  D02E               	goto	l7561
  7431  0100EC                     l7553:
  7432                           
  7433                           ;LCD.c: 331: else
  7434                           ;LCD.c: 332: {
  7435                           ;LCD.c: 333: int val = (*(int *)__va_arg((*(int **)aptr), (int)0));
  7436  0100EC  C2DD  FFD9         	movff	LCD_printString@aptr,fsr2l
  7437  0100F0  C2DE  FFDA         	movff	LCD_printString@aptr+1,fsr2h
  7438  0100F4  CFDE F2DB          	movff	postinc2,LCD_printString@val
  7439  0100F8  CFDD F2DC          	movff	postdec2,LCD_printString@val+1
  7440  0100FC  0E02               	movlw	2
  7441  0100FE  0102               	movlb	2	; () banked
  7442  010100  27DD               	addwf	LCD_printString@aptr& (0+255),f,b
  7443  010102  0E00               	movlw	0
  7444  010104  23DE               	addwfc	(LCD_printString@aptr+1)& (0+255),f,b
  7445                           
  7446                           ; BSR set to: 2
  7447                           ;LCD.c: 334: char tempString[20];
  7448                           ;LCD.c: 335: sprintf(tempString,"%i",val);
  7449  010106  0EB2               	movlw	low LCD_printString@tempString
  7450  010108  0100               	movlb	0	; () banked
  7451  01010A  6F6C               	movwf	sprintf@sp& (0+255),b
  7452  01010C  0E02               	movlw	high LCD_printString@tempString
  7453  01010E  0100               	movlb	0	; () banked
  7454  010110  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  7455  010112  0EC9               	movlw	low (STR_8+12)
  7456  010114  0100               	movlb	0	; () banked
  7457  010116  6F6E               	movwf	sprintf@f& (0+255),b
  7458  010118  0EFF               	movlw	high (STR_8+12)
  7459  01011A  0100               	movlb	0	; () banked
  7460  01011C  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  7461  01011E  C2DB  F070         	movff	LCD_printString@val,?_sprintf+4
  7462  010122  C2DC  F071         	movff	LCD_printString@val+1,?_sprintf+5
  7463  010126  EC16  F088         	call	_sprintf	;wreg free
  7464                           
  7465                           ;LCD.c: 336: strcat(string, tempString);
  7466  01012A  0EC6               	movlw	low LCD_printString@string
  7467  01012C  0100               	movlb	0	; () banked
  7468  01012E  6F60               	movwf	strcat@to& (0+255),b
  7469  010130  0E02               	movlw	high LCD_printString@string
  7470  010132  0100               	movlb	0	; () banked
  7471  010134  6F61               	movwf	(strcat@to+1)& (0+255),b
  7472  010136  0EB2               	movlw	low LCD_printString@tempString
  7473  010138  0100               	movlb	0	; () banked
  7474  01013A  6F62               	movwf	strcat@from& (0+255),b
  7475  01013C  0E02               	movlw	high LCD_printString@tempString
  7476  01013E  0100               	movlb	0	; () banked
  7477  010140  6F63               	movwf	(strcat@from+1)& (0+255),b
  7478  010142  EC7A  F08E         	call	_strcat	;wreg free
  7479  010146  D000               	goto	l7561
  7480  010148                     l7561:
  7481                           
  7482                           ;LCD.c: 337: }
  7483                           ;LCD.c: 338: i++;
  7484  010148  0102               	movlb	2	; () banked
  7485  01014A  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  7486  01014C  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  7487                           
  7488                           ;LCD.c: 339: }
  7489  01014E  D031               	goto	l7569
  7490  010150                     l7563:
  7491                           
  7492                           ;LCD.c: 340: else
  7493                           ;LCD.c: 341: {
  7494                           ;LCD.c: 342: char tempString[2];
  7495                           ;LCD.c: 343: tempString[0] = input[i];
  7496  010150  0102               	movlb	2	; () banked
  7497  010152  51E1               	movf	LCD_printString@i& (0+255),w,b
  7498  010154  0100               	movlb	0	; () banked
  7499  010156  257C               	addwf	LCD_printString@input& (0+255),w,b
  7500  010158  0100               	movlb	0	; () banked
  7501  01015A  6F82               	movwf	??_LCD_printString& (0+255),b
  7502  01015C  0102               	movlb	2	; () banked
  7503  01015E  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  7504  010160  0100               	movlb	0	; () banked
  7505  010162  217D               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  7506  010164  0100               	movlb	0	; () banked
  7507  010166  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  7508  010168  C082  FFF6         	movff	??_LCD_printString,tblptrl
  7509  01016C  C083  FFF7         	movff	??_LCD_printString+1,tblptrh
  7510  010170  0E00               	movlw	low (__mediumconst shr (0+16))
  7511  010172  6EF8               	movwf	tblptru,c
  7512  010174  0E0D               	movlw	(high __ramtop+-1)
  7513  010176  64F7               	cpfsgt	tblptrh,c
  7514  010178  D003               	bra	u5507
  7515  01017A  0008               	tblrd		*
  7516  01017C  50F5               	movf	tablat,w,c
  7517  01017E  D005               	bra	u5500
  7518  010180                     u5507:
  7519  010180  CFF6 FFE9          	movff	tblptrl,fsr0l
  7520  010184  CFF7 FFEA          	movff	tblptrh,fsr0h
  7521  010188  50EF               	movf	indf0,w,c
  7522  01018A                     u5500:
  7523  01018A  0102               	movlb	2	; () banked
  7524  01018C  6FDF               	movwf	LCD_printString@tempString_590& (0+255),b
  7525                           
  7526                           ; BSR set to: 2
  7527                           ;LCD.c: 344: tempString[1] = '\0';
  7528  01018E  0E00               	movlw	0
  7529  010190  0102               	movlb	2	; () banked
  7530  010192  6FE0               	movwf	(LCD_printString@tempString_590+1)& (0+255),b
  7531                           
  7532                           ; BSR set to: 2
  7533                           ;LCD.c: 345: strcat(string,tempString);
  7534  010194  0EC6               	movlw	low LCD_printString@string
  7535  010196  0100               	movlb	0	; () banked
  7536  010198  6F60               	movwf	strcat@to& (0+255),b
  7537  01019A  0E02               	movlw	high LCD_printString@string
  7538  01019C  0100               	movlb	0	; () banked
  7539  01019E  6F61               	movwf	(strcat@to+1)& (0+255),b
  7540  0101A0  0EDF               	movlw	low LCD_printString@tempString_590
  7541  0101A2  0100               	movlb	0	; () banked
  7542  0101A4  6F62               	movwf	strcat@from& (0+255),b
  7543  0101A6  0E02               	movlw	high LCD_printString@tempString_590
  7544  0101A8  0100               	movlb	0	; () banked
  7545  0101AA  6F63               	movwf	(strcat@from+1)& (0+255),b
  7546  0101AC  EC7A  F08E         	call	_strcat	;wreg free
  7547  0101B0  D000               	goto	l7569
  7548  0101B2                     l7569:
  7549  0101B2  0102               	movlb	2	; () banked
  7550  0101B4  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  7551  0101B6  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  7552  0101B8  D000               	goto	l7571
  7553  0101BA                     l7571:
  7554                           
  7555                           ; BSR set to: 2
  7556  0101BA  0102               	movlb	2	; () banked
  7557  0101BC  51E1               	movf	LCD_printString@i& (0+255),w,b
  7558  0101BE  0100               	movlb	0	; () banked
  7559  0101C0  257C               	addwf	LCD_printString@input& (0+255),w,b
  7560  0101C2  0100               	movlb	0	; () banked
  7561  0101C4  6F82               	movwf	??_LCD_printString& (0+255),b
  7562  0101C6  0102               	movlb	2	; () banked
  7563  0101C8  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  7564  0101CA  0100               	movlb	0	; () banked
  7565  0101CC  217D               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  7566  0101CE  0100               	movlb	0	; () banked
  7567  0101D0  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  7568  0101D2  C082  FFF6         	movff	??_LCD_printString,tblptrl
  7569  0101D6  C083  FFF7         	movff	??_LCD_printString+1,tblptrh
  7570  0101DA  0E00               	movlw	low (__mediumconst shr (0+16))
  7571  0101DC  6EF8               	movwf	tblptru,c
  7572  0101DE  0E0D               	movlw	(high __ramtop+-1)
  7573  0101E0  64F7               	cpfsgt	tblptrh,c
  7574  0101E2  D003               	bra	u5517
  7575  0101E4  0008               	tblrd		*
  7576  0101E6  50F5               	movf	tablat,w,c
  7577  0101E8  D005               	bra	u5510
  7578  0101EA                     u5517:
  7579  0101EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7580  0101EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7581  0101F2  50EF               	movf	indf0,w,c
  7582  0101F4                     u5510:
  7583  0101F4  0900               	iorlw	0
  7584  0101F6  B4D8               	btfsc	status,2,c
  7585  0101F8  D00D               	goto	l7575
  7586  0101FA  0102               	movlb	2	; () banked
  7587  0101FC  BFE2               	btfsc	(LCD_printString@i+1)& (0+255),7,b
  7588  0101FE  D71D               	goto	l7547
  7589  010200  0102               	movlb	2	; () banked
  7590  010202  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  7591  010204  E107               	bnz	l7575
  7592  010206  0EC8               	movlw	200
  7593  010208  0102               	movlb	2	; () banked
  7594  01020A  5DE1               	subwf	LCD_printString@i& (0+255),w,b
  7595  01020C  B0D8               	btfsc	status,0,c
  7596  01020E  D002               	goto	l7575
  7597  010210  D714               	goto	l7547
  7598                           
  7599                           ; BSR set to: 2
  7600  010212  D000               	goto	l7575
  7601  010214                     l7575:
  7602                           
  7603                           ;LCD.c: 346: }
  7604                           ;LCD.c: 347: }
  7605                           ;LCD.c: 349: ;
  7606                           ;LCD.c: 352: for(int i = 0; string[i] != '\0' && i < 200; i++)
  7607  010214  0E00               	movlw	0
  7608  010216  0102               	movlb	2	; () banked
  7609  010218  6FE4               	movwf	(LCD_printString@i_591+1)& (0+255),b
  7610  01021A  0E00               	movlw	0
  7611  01021C  6FE3               	movwf	LCD_printString@i_591& (0+255),b
  7612  01021E  D239               	goto	l7627
  7613  010220                     l7577:
  7614                           
  7615                           ; BSR set to: 2
  7616                           ;LCD.c: 353: {
  7617                           ;LCD.c: 354: if(string[i] == '\n')
  7618  010220  0EC6               	movlw	low LCD_printString@string
  7619  010222  0102               	movlb	2	; () banked
  7620  010224  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7621  010226  6ED9               	movwf	fsr2l,c
  7622  010228  0E02               	movlw	high LCD_printString@string
  7623  01022A  0102               	movlb	2	; () banked
  7624  01022C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7625  01022E  6EDA               	movwf	fsr2h,c
  7626  010230  0E0A               	movlw	10
  7627  010232  18DE               	xorwf	postinc2,w,c
  7628  010234  A4D8               	btfss	status,2,c
  7629  010236  D008               	goto	l7581
  7630                           
  7631                           ; BSR set to: 2
  7632                           ;LCD.c: 355: {
  7633                           ;LCD.c: 356: LCD_placeCursor(0,y+1);
  7634  010238  0100               	movlb	0	; () banked
  7635  01023A  297B               	incf	LCD_printString@y& (0+255),w,b
  7636  01023C  0100               	movlb	0	; () banked
  7637  01023E  6F74               	movwf	LCD_placeCursor@y& (0+255),b
  7638  010240  0E00               	movlw	0
  7639  010242  EC13  F085         	call	_LCD_placeCursor
  7640                           
  7641                           ;LCD.c: 357: }
  7642  010246  D221               	goto	l7625
  7643  010248                     l7581:
  7644                           
  7645                           ;LCD.c: 358: else
  7646                           ;LCD.c: 359: {
  7647                           ;LCD.c: 360: delay_ms(2);
  7648  010248  0E02               	movlw	2
  7649  01024A  0100               	movlb	0	; () banked
  7650  01024C  6F64               	movwf	delay_ms@x& (0+255),b
  7651  01024E  0E00               	movlw	0
  7652  010250  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  7653  010252  0E00               	movlw	0
  7654  010254  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  7655  010256  0E00               	movlw	0
  7656  010258  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  7657  01025A  ECF1  F08B         	call	_delay_ms	;wreg free
  7658                           
  7659                           ;LCD.c: 361: PORTDbits.RD0 = 1;
  7660  01025E  8083               	bsf	3971,0,c	;volatile
  7661                           
  7662                           ;LCD.c: 363: switch(mode)
  7663  010260  D1FF               	goto	l7619
  7664  010262                     l7585:
  7665                           
  7666                           ;LCD.c: 366: delay_us(40);;
  7667  010262  0E28               	movlw	40
  7668  010264  0100               	movlb	0	; () banked
  7669  010266  6F60               	movwf	delay_us@x& (0+255),b
  7670  010268  0E00               	movlw	0
  7671  01026A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7672  01026C  0E00               	movlw	0
  7673  01026E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7674  010270  0E00               	movlw	0
  7675  010272  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7676  010274  EC8C  F08F         	call	_delay_us	;wreg free
  7677                           
  7678                           ;LCD.c: 367: PORTEbits.RE4 = 1;
  7679  010278  8884               	bsf	3972,4,c	;volatile
  7680                           
  7681                           ;LCD.c: 368: { PORTHbits.RH5 = (((string[i] >> 4) >> 3) & 1); PORTEbits.RE1 = (((string[
      +                          i] >> 4) >> 2) & 1); PORTEbits.RE0 = (((string[i] >> 4) >> 1) & 1); PORTEbits.RE2 = ((st
      +                          ring[i] >> 4) & 1); };
  7682  01027A  0EC6               	movlw	low LCD_printString@string
  7683  01027C  0102               	movlb	2	; () banked
  7684  01027E  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7685  010280  6ED9               	movwf	fsr2l,c
  7686  010282  0E02               	movlw	high LCD_printString@string
  7687  010284  0102               	movlb	2	; () banked
  7688  010286  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7689  010288  6EDA               	movwf	fsr2h,c
  7690  01028A  50DF               	movf	indf2,w,c
  7691  01028C  0100               	movlb	0	; () banked
  7692  01028E  6F82               	movwf	??_LCD_printString& (0+255),b
  7693  010290  0100               	movlb	0	; () banked
  7694  010292  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7695  010294  0E0F               	movlw	15
  7696  010296  1782               	andwf	??_LCD_printString& (0+255),f,b
  7697  010298  0100               	movlb	0	; () banked
  7698  01029A  90D8               	bcf	status,0,c
  7699  01029C  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7700  01029E  0100               	movlb	0	; () banked
  7701  0102A0  90D8               	bcf	status,0,c
  7702  0102A2  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7703  0102A4  0100               	movlb	0	; () banked
  7704  0102A6  90D8               	bcf	status,0,c
  7705  0102A8  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7706  0102AA  0E01               	movlw	1
  7707  0102AC  0100               	movlb	0	; () banked
  7708  0102AE  1782               	andwf	??_LCD_printString& (0+255),f,b
  7709  0102B0  0100               	movlb	0	; () banked
  7710  0102B2  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7711  0102B4  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7712  0102B6  5087               	movf	3975,w,c	;volatile
  7713  0102B8  0100               	movlb	0	; () banked
  7714  0102BA  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7715  0102BC  0BDF               	andlw	-33
  7716  0102BE  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7717  0102C0  6E87               	movwf	3975,c	;volatile
  7718                           
  7719                           ; BSR set to: 0
  7720  0102C2  0EC6               	movlw	low LCD_printString@string
  7721  0102C4  0102               	movlb	2	; () banked
  7722  0102C6  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7723  0102C8  6ED9               	movwf	fsr2l,c
  7724  0102CA  0E02               	movlw	high LCD_printString@string
  7725  0102CC  0102               	movlb	2	; () banked
  7726  0102CE  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7727  0102D0  6EDA               	movwf	fsr2h,c
  7728  0102D2  50DF               	movf	indf2,w,c
  7729  0102D4  0100               	movlb	0	; () banked
  7730  0102D6  6F82               	movwf	??_LCD_printString& (0+255),b
  7731  0102D8  0100               	movlb	0	; () banked
  7732  0102DA  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7733  0102DC  0E0F               	movlw	15
  7734  0102DE  1782               	andwf	??_LCD_printString& (0+255),f,b
  7735  0102E0  0100               	movlb	0	; () banked
  7736  0102E2  90D8               	bcf	status,0,c
  7737  0102E4  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7738  0102E6  0100               	movlb	0	; () banked
  7739  0102E8  90D8               	bcf	status,0,c
  7740  0102EA  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7741  0102EC  0E01               	movlw	1
  7742  0102EE  0100               	movlb	0	; () banked
  7743  0102F0  1782               	andwf	??_LCD_printString& (0+255),f,b
  7744  0102F2  0100               	movlb	0	; () banked
  7745  0102F4  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7746  0102F6  5084               	movf	3972,w,c	;volatile
  7747  0102F8  0100               	movlb	0	; () banked
  7748  0102FA  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7749  0102FC  0BFD               	andlw	-3
  7750  0102FE  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7751  010300  6E84               	movwf	3972,c	;volatile
  7752                           
  7753                           ; BSR set to: 0
  7754  010302  0EC6               	movlw	low LCD_printString@string
  7755  010304  0102               	movlb	2	; () banked
  7756  010306  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7757  010308  6ED9               	movwf	fsr2l,c
  7758  01030A  0E02               	movlw	high LCD_printString@string
  7759  01030C  0102               	movlb	2	; () banked
  7760  01030E  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7761  010310  6EDA               	movwf	fsr2h,c
  7762  010312  50DF               	movf	indf2,w,c
  7763  010314  0100               	movlb	0	; () banked
  7764  010316  6F82               	movwf	??_LCD_printString& (0+255),b
  7765  010318  0100               	movlb	0	; () banked
  7766  01031A  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7767  01031C  0E0F               	movlw	15
  7768  01031E  1782               	andwf	??_LCD_printString& (0+255),f,b
  7769  010320  0100               	movlb	0	; () banked
  7770  010322  90D8               	bcf	status,0,c
  7771  010324  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7772  010326  0E01               	movlw	1
  7773  010328  0100               	movlb	0	; () banked
  7774  01032A  1782               	andwf	??_LCD_printString& (0+255),f,b
  7775  01032C  5084               	movf	3972,w,c	;volatile
  7776  01032E  0100               	movlb	0	; () banked
  7777  010330  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7778  010332  0BFE               	andlw	-2
  7779  010334  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7780  010336  6E84               	movwf	3972,c	;volatile
  7781                           
  7782                           ; BSR set to: 0
  7783  010338  0EC6               	movlw	low LCD_printString@string
  7784  01033A  0102               	movlb	2	; () banked
  7785  01033C  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7786  01033E  6ED9               	movwf	fsr2l,c
  7787  010340  0E02               	movlw	high LCD_printString@string
  7788  010342  0102               	movlb	2	; () banked
  7789  010344  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7790  010346  6EDA               	movwf	fsr2h,c
  7791  010348  50DF               	movf	indf2,w,c
  7792  01034A  0100               	movlb	0	; () banked
  7793  01034C  6F82               	movwf	??_LCD_printString& (0+255),b
  7794  01034E  0100               	movlb	0	; () banked
  7795  010350  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7796  010352  0E0F               	movlw	15
  7797  010354  1782               	andwf	??_LCD_printString& (0+255),f,b
  7798  010356  0E01               	movlw	1
  7799  010358  0100               	movlb	0	; () banked
  7800  01035A  1782               	andwf	??_LCD_printString& (0+255),f,b
  7801  01035C  0100               	movlb	0	; () banked
  7802  01035E  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7803  010360  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7804  010362  5084               	movf	3972,w,c	;volatile
  7805  010364  0100               	movlb	0	; () banked
  7806  010366  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7807  010368  0BFB               	andlw	-5
  7808  01036A  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7809  01036C  6E84               	movwf	3972,c	;volatile
  7810                           
  7811                           ;LCD.c: 369: delay_us(40);;
  7812  01036E  0E28               	movlw	40
  7813  010370  0100               	movlb	0	; () banked
  7814  010372  6F60               	movwf	delay_us@x& (0+255),b
  7815  010374  0E00               	movlw	0
  7816  010376  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7817  010378  0E00               	movlw	0
  7818  01037A  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7819  01037C  0E00               	movlw	0
  7820  01037E  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7821  010380  EC8C  F08F         	call	_delay_us	;wreg free
  7822                           
  7823                           ;LCD.c: 370: PORTEbits.RE4 = 0;
  7824  010384  9884               	bcf	3972,4,c	;volatile
  7825                           
  7826                           ;LCD.c: 372: delay_us(40);;
  7827  010386  0E28               	movlw	40
  7828  010388  0100               	movlb	0	; () banked
  7829  01038A  6F60               	movwf	delay_us@x& (0+255),b
  7830  01038C  0E00               	movlw	0
  7831  01038E  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7832  010390  0E00               	movlw	0
  7833  010392  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7834  010394  0E00               	movlw	0
  7835  010396  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7836  010398  EC8C  F08F         	call	_delay_us	;wreg free
  7837                           
  7838                           ;LCD.c: 373: PORTEbits.RE4 = 1;
  7839  01039C  8884               	bsf	3972,4,c	;volatile
  7840                           
  7841                           ;LCD.c: 374: { PORTHbits.RH5 = (((string[i] & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((strin
      +                          g[i] & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((string[i] & 0x0F) >> 1) & 1); PORTEbits.RE2 
      +                          = ((string[i] & 0x0F) & 1); };
  7842  01039E  0EC6               	movlw	low LCD_printString@string
  7843  0103A0  0102               	movlb	2	; () banked
  7844  0103A2  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7845  0103A4  6ED9               	movwf	fsr2l,c
  7846  0103A6  0E02               	movlw	high LCD_printString@string
  7847  0103A8  0102               	movlb	2	; () banked
  7848  0103AA  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7849  0103AC  6EDA               	movwf	fsr2h,c
  7850  0103AE  50DF               	movf	indf2,w,c
  7851  0103B0  0100               	movlb	0	; () banked
  7852  0103B2  6F82               	movwf	??_LCD_printString& (0+255),b
  7853  0103B4  0100               	movlb	0	; () banked
  7854  0103B6  90D8               	bcf	status,0,c
  7855  0103B8  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7856  0103BA  0100               	movlb	0	; () banked
  7857  0103BC  90D8               	bcf	status,0,c
  7858  0103BE  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7859  0103C0  0100               	movlb	0	; () banked
  7860  0103C2  90D8               	bcf	status,0,c
  7861  0103C4  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7862  0103C6  0E01               	movlw	1
  7863  0103C8  0100               	movlb	0	; () banked
  7864  0103CA  1782               	andwf	??_LCD_printString& (0+255),f,b
  7865  0103CC  0100               	movlb	0	; () banked
  7866  0103CE  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7867  0103D0  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7868  0103D2  5087               	movf	3975,w,c	;volatile
  7869  0103D4  0100               	movlb	0	; () banked
  7870  0103D6  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7871  0103D8  0BDF               	andlw	-33
  7872  0103DA  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7873  0103DC  6E87               	movwf	3975,c	;volatile
  7874                           
  7875                           ; BSR set to: 0
  7876  0103DE  0EC6               	movlw	low LCD_printString@string
  7877  0103E0  0102               	movlb	2	; () banked
  7878  0103E2  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7879  0103E4  6ED9               	movwf	fsr2l,c
  7880  0103E6  0E02               	movlw	high LCD_printString@string
  7881  0103E8  0102               	movlb	2	; () banked
  7882  0103EA  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7883  0103EC  6EDA               	movwf	fsr2h,c
  7884  0103EE  50DF               	movf	indf2,w,c
  7885  0103F0  0100               	movlb	0	; () banked
  7886  0103F2  6F82               	movwf	??_LCD_printString& (0+255),b
  7887  0103F4  0100               	movlb	0	; () banked
  7888  0103F6  90D8               	bcf	status,0,c
  7889  0103F8  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7890  0103FA  0100               	movlb	0	; () banked
  7891  0103FC  90D8               	bcf	status,0,c
  7892  0103FE  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7893  010400  0E01               	movlw	1
  7894  010402  0100               	movlb	0	; () banked
  7895  010404  1782               	andwf	??_LCD_printString& (0+255),f,b
  7896  010406  0100               	movlb	0	; () banked
  7897  010408  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7898  01040A  5084               	movf	3972,w,c	;volatile
  7899  01040C  0100               	movlb	0	; () banked
  7900  01040E  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7901  010410  0BFD               	andlw	-3
  7902  010412  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7903  010414  6E84               	movwf	3972,c	;volatile
  7904                           
  7905                           ; BSR set to: 0
  7906  010416  0EC6               	movlw	low LCD_printString@string
  7907  010418  0102               	movlb	2	; () banked
  7908  01041A  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7909  01041C  6ED9               	movwf	fsr2l,c
  7910  01041E  0E02               	movlw	high LCD_printString@string
  7911  010420  0102               	movlb	2	; () banked
  7912  010422  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7913  010424  6EDA               	movwf	fsr2h,c
  7914  010426  50DF               	movf	indf2,w,c
  7915  010428  0100               	movlb	0	; () banked
  7916  01042A  6F82               	movwf	??_LCD_printString& (0+255),b
  7917  01042C  0100               	movlb	0	; () banked
  7918  01042E  90D8               	bcf	status,0,c
  7919  010430  3382               	rrcf	??_LCD_printString& (0+255),f,b
  7920  010432  0E01               	movlw	1
  7921  010434  0100               	movlb	0	; () banked
  7922  010436  1782               	andwf	??_LCD_printString& (0+255),f,b
  7923  010438  5084               	movf	3972,w,c	;volatile
  7924  01043A  0100               	movlb	0	; () banked
  7925  01043C  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7926  01043E  0BFE               	andlw	-2
  7927  010440  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7928  010442  6E84               	movwf	3972,c	;volatile
  7929                           
  7930                           ; BSR set to: 0
  7931  010444  0EC6               	movlw	low LCD_printString@string
  7932  010446  0102               	movlb	2	; () banked
  7933  010448  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7934  01044A  6ED9               	movwf	fsr2l,c
  7935  01044C  0E02               	movlw	high LCD_printString@string
  7936  01044E  0102               	movlb	2	; () banked
  7937  010450  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7938  010452  6EDA               	movwf	fsr2h,c
  7939  010454  50DF               	movf	indf2,w,c
  7940  010456  0100               	movlb	0	; () banked
  7941  010458  6F82               	movwf	??_LCD_printString& (0+255),b
  7942  01045A  0E01               	movlw	1
  7943  01045C  0100               	movlb	0	; () banked
  7944  01045E  1782               	andwf	??_LCD_printString& (0+255),f,b
  7945  010460  0100               	movlb	0	; () banked
  7946  010462  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7947  010464  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7948  010466  5084               	movf	3972,w,c	;volatile
  7949  010468  0100               	movlb	0	; () banked
  7950  01046A  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7951  01046C  0BFB               	andlw	-5
  7952  01046E  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7953  010470  6E84               	movwf	3972,c	;volatile
  7954                           
  7955                           ;LCD.c: 375: delay_us(40);;
  7956  010472  0E28               	movlw	40
  7957  010474  0100               	movlb	0	; () banked
  7958  010476  6F60               	movwf	delay_us@x& (0+255),b
  7959  010478  0E00               	movlw	0
  7960  01047A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7961  01047C  0E00               	movlw	0
  7962  01047E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7963  010480  0E00               	movlw	0
  7964  010482  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7965  010484  EC8C  F08F         	call	_delay_us	;wreg free
  7966  010488  D0E9               	goto	l7615
  7967  01048A                     l116:
  7968  01048A  F000               	nop		;# 
  7969                           
  7970                           ;LCD.c: 381: PORTEbits.RE4 = 1;
  7971  01048C  8884               	bsf	3972,4,c	;volatile
  7972                           
  7973                           ;LCD.c: 382: { PORTHbits.RH5 = ((string[i] >> 7) & 1); PORTEbits.RE1 = ((string[i] >> 6)
      +                           & 1); PORTEbits.RE0 = ((string[i] >> 5) & 1); PORTEbits.RE2 = ((string[i] >> 4) & 1); P
      +                          ORTHbits.RH0 = ((string[i] >> 3) & 1); PORTHbits.RH1 = ((string[i] >> 2) & 1); PORTHbit
  7974  01048E  0EC6               	movlw	low LCD_printString@string
  7975  010490  0102               	movlb	2	; () banked
  7976  010492  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  7977  010494  6ED9               	movwf	fsr2l,c
  7978  010496  0E02               	movlw	high LCD_printString@string
  7979  010498  0102               	movlb	2	; () banked
  7980  01049A  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  7981  01049C  6EDA               	movwf	fsr2h,c
  7982  01049E  50DF               	movf	indf2,w,c
  7983  0104A0  0100               	movlb	0	; () banked
  7984  0104A2  6F82               	movwf	??_LCD_printString& (0+255),b
  7985  0104A4  0E00               	movlw	0
  7986  0104A6  BF82               	btfsc	??_LCD_printString& (0+255),7,b
  7987  0104A8  0E01               	movlw	1
  7988  0104AA  6F82               	movwf	??_LCD_printString& (0+255),b
  7989  0104AC  0E01               	movlw	1
  7990  0104AE  0100               	movlb	0	; () banked
  7991  0104B0  1782               	andwf	??_LCD_printString& (0+255),f,b
  7992  0104B2  0100               	movlb	0	; () banked
  7993  0104B4  3B82               	swapf	??_LCD_printString& (0+255),f,b
  7994  0104B6  4782               	rlncf	??_LCD_printString& (0+255),f,b
  7995  0104B8  5087               	movf	3975,w,c	;volatile
  7996  0104BA  0100               	movlb	0	; () banked
  7997  0104BC  1982               	xorwf	??_LCD_printString& (0+255),w,b
  7998  0104BE  0BDF               	andlw	-33
  7999  0104C0  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8000  0104C2  6E87               	movwf	3975,c	;volatile
  8001  0104C4  0EC6               	movlw	low LCD_printString@string
  8002  0104C6  0102               	movlb	2	; () banked
  8003  0104C8  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8004  0104CA  6ED9               	movwf	fsr2l,c
  8005  0104CC  0E02               	movlw	high LCD_printString@string
  8006  0104CE  0102               	movlb	2	; () banked
  8007  0104D0  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8008  0104D2  6EDA               	movwf	fsr2h,c
  8009  0104D4  50DF               	movf	indf2,w,c
  8010  0104D6  0100               	movlb	0	; () banked
  8011  0104D8  6F82               	movwf	??_LCD_printString& (0+255),b
  8012  0104DA  0E06               	movlw	6
  8013  0104DC  0100               	movlb	0	; () banked
  8014  0104DE  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  8015  0104E0                     u5555:
  8016  0104E0  0100               	movlb	0	; () banked
  8017  0104E2  90D8               	bcf	status,0,c
  8018  0104E4  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8019  0104E6  0100               	movlb	0	; () banked
  8020  0104E8  2F83               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  8021  0104EA  D7FA               	goto	u5555
  8022  0104EC  0E01               	movlw	1
  8023  0104EE  0100               	movlb	0	; () banked
  8024  0104F0  1782               	andwf	??_LCD_printString& (0+255),f,b
  8025  0104F2  0100               	movlb	0	; () banked
  8026  0104F4  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8027  0104F6  5084               	movf	3972,w,c	;volatile
  8028  0104F8  0100               	movlb	0	; () banked
  8029  0104FA  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8030  0104FC  0BFD               	andlw	-3
  8031  0104FE  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8032  010500  6E84               	movwf	3972,c	;volatile
  8033  010502  0EC6               	movlw	low LCD_printString@string
  8034  010504  0102               	movlb	2	; () banked
  8035  010506  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8036  010508  6ED9               	movwf	fsr2l,c
  8037  01050A  0E02               	movlw	high LCD_printString@string
  8038  01050C  0102               	movlb	2	; () banked
  8039  01050E  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8040  010510  6EDA               	movwf	fsr2h,c
  8041  010512  50DF               	movf	indf2,w,c
  8042  010514  0100               	movlb	0	; () banked
  8043  010516  6F82               	movwf	??_LCD_printString& (0+255),b
  8044  010518  0E05               	movlw	5
  8045  01051A  0100               	movlb	0	; () banked
  8046  01051C  6F83               	movwf	(??_LCD_printString+1)& (0+255),b
  8047  01051E                     u5565:
  8048  01051E  0100               	movlb	0	; () banked
  8049  010520  90D8               	bcf	status,0,c
  8050  010522  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8051  010524  0100               	movlb	0	; () banked
  8052  010526  2F83               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  8053  010528  D7FA               	goto	u5565
  8054  01052A  0E01               	movlw	1
  8055  01052C  0100               	movlb	0	; () banked
  8056  01052E  1782               	andwf	??_LCD_printString& (0+255),f,b
  8057  010530  5084               	movf	3972,w,c	;volatile
  8058  010532  0100               	movlb	0	; () banked
  8059  010534  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8060  010536  0BFE               	andlw	-2
  8061  010538  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8062  01053A  6E84               	movwf	3972,c	;volatile
  8063  01053C  0EC6               	movlw	low LCD_printString@string
  8064  01053E  0102               	movlb	2	; () banked
  8065  010540  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8066  010542  6ED9               	movwf	fsr2l,c
  8067  010544  0E02               	movlw	high LCD_printString@string
  8068  010546  0102               	movlb	2	; () banked
  8069  010548  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8070  01054A  6EDA               	movwf	fsr2h,c
  8071  01054C  50DF               	movf	indf2,w,c
  8072  01054E  0100               	movlb	0	; () banked
  8073  010550  6F82               	movwf	??_LCD_printString& (0+255),b
  8074  010552  0100               	movlb	0	; () banked
  8075  010554  3B82               	swapf	??_LCD_printString& (0+255),f,b
  8076  010556  0E0F               	movlw	15
  8077  010558  1782               	andwf	??_LCD_printString& (0+255),f,b
  8078  01055A  0E01               	movlw	1
  8079  01055C  0100               	movlb	0	; () banked
  8080  01055E  1782               	andwf	??_LCD_printString& (0+255),f,b
  8081  010560  0100               	movlb	0	; () banked
  8082  010562  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8083  010564  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8084  010566  5084               	movf	3972,w,c	;volatile
  8085  010568  0100               	movlb	0	; () banked
  8086  01056A  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8087  01056C  0BFB               	andlw	-5
  8088  01056E  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8089  010570  6E84               	movwf	3972,c	;volatile
  8090  010572  0EC6               	movlw	low LCD_printString@string
  8091  010574  0102               	movlb	2	; () banked
  8092  010576  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8093  010578  6ED9               	movwf	fsr2l,c
  8094  01057A  0E02               	movlw	high LCD_printString@string
  8095  01057C  0102               	movlb	2	; () banked
  8096  01057E  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8097  010580  6EDA               	movwf	fsr2h,c
  8098  010582  50DF               	movf	indf2,w,c
  8099  010584  0100               	movlb	0	; () banked
  8100  010586  6F82               	movwf	??_LCD_printString& (0+255),b
  8101  010588  0100               	movlb	0	; () banked
  8102  01058A  90D8               	bcf	status,0,c
  8103  01058C  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8104  01058E  0100               	movlb	0	; () banked
  8105  010590  90D8               	bcf	status,0,c
  8106  010592  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8107  010594  0100               	movlb	0	; () banked
  8108  010596  90D8               	bcf	status,0,c
  8109  010598  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8110  01059A  0E01               	movlw	1
  8111  01059C  0100               	movlb	0	; () banked
  8112  01059E  1782               	andwf	??_LCD_printString& (0+255),f,b
  8113  0105A0  5087               	movf	3975,w,c	;volatile
  8114  0105A2  0100               	movlb	0	; () banked
  8115  0105A4  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8116  0105A6  0BFE               	andlw	-2
  8117  0105A8  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8118  0105AA  6E87               	movwf	3975,c	;volatile
  8119  0105AC  0EC6               	movlw	low LCD_printString@string
  8120  0105AE  0102               	movlb	2	; () banked
  8121  0105B0  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8122  0105B2  6ED9               	movwf	fsr2l,c
  8123  0105B4  0E02               	movlw	high LCD_printString@string
  8124  0105B6  0102               	movlb	2	; () banked
  8125  0105B8  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8126  0105BA  6EDA               	movwf	fsr2h,c
  8127  0105BC  50DF               	movf	indf2,w,c
  8128  0105BE  0100               	movlb	0	; () banked
  8129  0105C0  6F82               	movwf	??_LCD_printString& (0+255),b
  8130  0105C2  0100               	movlb	0	; () banked
  8131  0105C4  90D8               	bcf	status,0,c
  8132  0105C6  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8133  0105C8  0100               	movlb	0	; () banked
  8134  0105CA  90D8               	bcf	status,0,c
  8135  0105CC  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8136  0105CE  0E01               	movlw	1
  8137  0105D0  0100               	movlb	0	; () banked
  8138  0105D2  1782               	andwf	??_LCD_printString& (0+255),f,b
  8139  0105D4  0100               	movlb	0	; () banked
  8140  0105D6  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8141  0105D8  5087               	movf	3975,w,c	;volatile
  8142  0105DA  0100               	movlb	0	; () banked
  8143  0105DC  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8144  0105DE  0BFD               	andlw	-3
  8145  0105E0  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8146  0105E2  6E87               	movwf	3975,c	;volatile
  8147  0105E4  0EC6               	movlw	low LCD_printString@string
  8148  0105E6  0102               	movlb	2	; () banked
  8149  0105E8  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8150  0105EA  6ED9               	movwf	fsr2l,c
  8151  0105EC  0E02               	movlw	high LCD_printString@string
  8152  0105EE  0102               	movlb	2	; () banked
  8153  0105F0  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8154  0105F2  6EDA               	movwf	fsr2h,c
  8155  0105F4  50DF               	movf	indf2,w,c
  8156  0105F6  0100               	movlb	0	; () banked
  8157  0105F8  6F82               	movwf	??_LCD_printString& (0+255),b
  8158  0105FA  0100               	movlb	0	; () banked
  8159  0105FC  90D8               	bcf	status,0,c
  8160  0105FE  3382               	rrcf	??_LCD_printString& (0+255),f,b
  8161  010600  0E01               	movlw	1
  8162  010602  0100               	movlb	0	; () banked
  8163  010604  1782               	andwf	??_LCD_printString& (0+255),f,b
  8164  010606  0100               	movlb	0	; () banked
  8165  010608  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8166  01060A  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8167  01060C  5087               	movf	3975,w,c	;volatile
  8168  01060E  0100               	movlb	0	; () banked
  8169  010610  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8170  010612  0BFB               	andlw	-5
  8171  010614  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8172  010616  6E87               	movwf	3975,c	;volatile
  8173  010618  0EC6               	movlw	low LCD_printString@string
  8174  01061A  0102               	movlb	2	; () banked
  8175  01061C  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8176  01061E  6ED9               	movwf	fsr2l,c
  8177  010620  0E02               	movlw	high LCD_printString@string
  8178  010622  0102               	movlb	2	; () banked
  8179  010624  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8180  010626  6EDA               	movwf	fsr2h,c
  8181  010628  50DF               	movf	indf2,w,c
  8182  01062A  0100               	movlb	0	; () banked
  8183  01062C  6F82               	movwf	??_LCD_printString& (0+255),b
  8184  01062E  0E01               	movlw	1
  8185  010630  0100               	movlb	0	; () banked
  8186  010632  1782               	andwf	??_LCD_printString& (0+255),f,b
  8187  010634  0100               	movlb	0	; () banked
  8188  010636  3B82               	swapf	??_LCD_printString& (0+255),f,b
  8189  010638  4782               	rlncf	??_LCD_printString& (0+255),f,b
  8190  01063A  5084               	movf	3972,w,c	;volatile
  8191  01063C  0100               	movlb	0	; () banked
  8192  01063E  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8193  010640  0BDF               	andlw	-33
  8194  010642  1982               	xorwf	??_LCD_printString& (0+255),w,b
  8195  010644  6E84               	movwf	3972,c	;volatile
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;LCD.c: 383: delay_us(40);;
  8199  010646  0E28               	movlw	40
  8200  010648  0100               	movlb	0	; () banked
  8201  01064A  6F60               	movwf	delay_us@x& (0+255),b
  8202  01064C  0E00               	movlw	0
  8203  01064E  6F61               	movwf	(delay_us@x+1)& (0+255),b
  8204  010650  0E00               	movlw	0
  8205  010652  6F62               	movwf	(delay_us@x+2)& (0+255),b
  8206  010654  0E00               	movlw	0
  8207  010656  6F63               	movwf	(delay_us@x+3)& (0+255),b
  8208  010658  EC8C  F08F         	call	_delay_us	;wreg free
  8209  01065C                     l7615:
  8210                           
  8211                           ;LCD.c: 384: PORTEbits.RE4 = 0;
  8212  01065C  9884               	bcf	3972,4,c	;volatile
  8213                           
  8214                           ;LCD.c: 386: }
  8215                           
  8216                           ;LCD.c: 385: break;
  8217  01065E  D008               	goto	l7621
  8218  010660                     l7619:
  8219  010660  503C               	movf	_mode,w,c	;volatile
  8220                           
  8221                           ; Switch size 1, requested type "space"
  8222                           ; Number of cases is 2, Range of values is 1 to 2
  8223                           ; switch strategies available:
  8224                           ; Name         Instructions Cycles
  8225                           ; simple_byte            7     4 (average)
  8226                           ;	Chosen strategy is simple_byte
  8227  010662  0A01               	xorlw	1	; case 1
  8228  010664  B4D8               	btfsc	status,2,c
  8229  010666  D5FD               	goto	l7585
  8230  010668  0A03               	xorlw	3	; case 2
  8231  01066A  B4D8               	btfsc	status,2,c
  8232  01066C  D70E               	goto	l116
  8233  01066E  D000               	goto	l7621
  8234  010670                     l7621:
  8235                           
  8236                           ;LCD.c: 387: delay_ms(2);
  8237  010670  0E02               	movlw	2
  8238  010672  0100               	movlb	0	; () banked
  8239  010674  6F64               	movwf	delay_ms@x& (0+255),b
  8240  010676  0E00               	movlw	0
  8241  010678  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  8242  01067A  0E00               	movlw	0
  8243  01067C  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  8244  01067E  0E00               	movlw	0
  8245  010680  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  8246  010682  ECF1  F08B         	call	_delay_ms	;wreg free
  8247                           
  8248                           ;LCD.c: 388: PORTDbits.RD0 = 0;
  8249  010686  9083               	bcf	3971,0,c	;volatile
  8250  010688  D000               	goto	l7625
  8251  01068A                     l7625:
  8252  01068A  0102               	movlb	2	; () banked
  8253  01068C  4BE3               	infsnz	LCD_printString@i_591& (0+255),f,b
  8254  01068E  2BE4               	incf	(LCD_printString@i_591+1)& (0+255),f,b
  8255  010690  D000               	goto	l7627
  8256  010692                     l7627:
  8257                           
  8258                           ; BSR set to: 2
  8259  010692  0EC6               	movlw	low LCD_printString@string
  8260  010694  0102               	movlb	2	; () banked
  8261  010696  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8262  010698  6ED9               	movwf	fsr2l,c
  8263  01069A  0E02               	movlw	high LCD_printString@string
  8264  01069C  0102               	movlb	2	; () banked
  8265  01069E  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8266  0106A0  6EDA               	movwf	fsr2h,c
  8267  0106A2  50DF               	movf	indf2,w,c
  8268  0106A4  B4D8               	btfsc	status,2,c
  8269  0106A6  0012               	return	
  8270                           
  8271                           ; BSR set to: 2
  8272  0106A8  0102               	movlb	2	; () banked
  8273  0106AA  BFE4               	btfsc	(LCD_printString@i_591+1)& (0+255),7,b
  8274  0106AC  D5B9               	goto	l7577
  8275  0106AE  0102               	movlb	2	; () banked
  8276  0106B0  51E4               	movf	(LCD_printString@i_591+1)& (0+255),w,b
  8277  0106B2  E107               	bnz	l120
  8278  0106B4  0EC8               	movlw	200
  8279  0106B6  0102               	movlb	2	; () banked
  8280  0106B8  5DE3               	subwf	LCD_printString@i_591& (0+255),w,b
  8281  0106BA  B0D8               	btfsc	status,0,c
  8282  0106BC  0012               	return	
  8283  0106BE  D5B0               	goto	l7577
  8284                           
  8285                           ; BSR set to: 2
  8286  0106C0  0012               	return	
  8287  0106C2                     l120:
  8288                           
  8289                           ; BSR set to: 2
  8290  0106C2  0012               	return		;funcret
  8291  0106C4                     __end_of_LCD_printString:
  8292                           	opt stack 0
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           intcon3	equ	0xFF0
  8302                           indf0	equ	0xFEF
  8303                           postinc0	equ	0xFEE
  8304                           fsr0h	equ	0xFEA
  8305                           fsr0l	equ	0xFE9
  8306                           wreg	equ	0xFE8
  8307                           postdec1	equ	0xFE5
  8308                           plusw1	equ	0xFE3
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           indf2	equ	0xFDF
  8312                           postinc2	equ	0xFDE
  8313                           postdec2	equ	0xFDD
  8314                           plusw2	equ	0xFDB
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319 ;; *************** function _strcat *****************
  8320 ;; Defined at:
  8321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8324 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  8325 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8326 ;;		 -> UART_transmitString@tempString_1915(2), UART_transmitString@tempString(20), STR_10(2), LCD_printString@tempStrin
      +g_590(2), 
  8327 ;;		 -> LCD_printString@tempString(20), STR_1(2), 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8330 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  2    0[BANK0 ] PTR unsigned char 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;Total ram usage:        6 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    3
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_LCD_printString
  8351 ;;		_UART_transmitString
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text30
  8356  011CF4                     __ptext30:
  8357                           	opt stack 0
  8358  011CF4                     _strcat:
  8359                           	opt stack 26
  8360                           
  8361                           ; BSR set to: 2
  8362                           ;incstack = 0
  8363  011CF4  C060  F064         	movff	strcat@to,strcat@cp
  8364  011CF8  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8365  011CFC  D004               	goto	l7359
  8366  011CFE                     l7357:
  8367  011CFE  0100               	movlb	0	; () banked
  8368  011D00  4B64               	infsnz	strcat@cp& (0+255),f,b
  8369  011D02  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8370  011D04  D000               	goto	l7359
  8371  011D06                     l7359:
  8372  011D06  C064  FFD9         	movff	strcat@cp,fsr2l
  8373  011D0A  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8374  011D0E  50DF               	movf	indf2,w,c
  8375  011D10  B4D8               	btfsc	status,2,c
  8376  011D12  D009               	goto	l7363
  8377  011D14  D7F4               	goto	l7357
  8378  011D16  D007               	goto	l7363
  8379  011D18                     l7361:
  8380  011D18  0100               	movlb	0	; () banked
  8381  011D1A  4B64               	infsnz	strcat@cp& (0+255),f,b
  8382  011D1C  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8383  011D1E  0100               	movlb	0	; () banked
  8384  011D20  4B62               	infsnz	strcat@from& (0+255),f,b
  8385  011D22  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8386  011D24  D000               	goto	l7363
  8387  011D26                     l7363:
  8388  011D26  C062  FFF6         	movff	strcat@from,tblptrl
  8389  011D2A  C063  FFF7         	movff	strcat@from+1,tblptrh
  8390  011D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  8391  011D30  6EF8               	movwf	tblptru,c
  8392  011D32  C064  FFD9         	movff	strcat@cp,fsr2l
  8393  011D36  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8394  011D3A  0E0D               	movlw	(high __ramtop+-1)
  8395  011D3C  64F7               	cpfsgt	tblptrh,c
  8396  011D3E  D003               	bra	u5267
  8397  011D40  0008               	tblrd		*
  8398  011D42  50F5               	movf	tablat,w,c
  8399  011D44  D005               	bra	u5260
  8400  011D46                     u5267:
  8401  011D46  CFF6 FFE9          	movff	tblptrl,fsr0l
  8402  011D4A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8403  011D4E  50EF               	movf	indf0,w,c
  8404  011D50                     u5260:
  8405  011D50  6EDF               	movwf	indf2,c
  8406  011D52  50DF               	movf	indf2,w,c
  8407  011D54  A4D8               	btfss	status,2,c
  8408  011D56  D7E0               	goto	l7361
  8409                           
  8410                           ;	Return value of _strcat is never used
  8411  011D58  0012               	return		;funcret
  8412  011D5A                     __end_of_strcat:
  8413                           	opt stack 0
  8414                           tblptru	equ	0xFF8
  8415                           tblptrh	equ	0xFF7
  8416                           tblptrl	equ	0xFF6
  8417                           tablat	equ	0xFF5
  8418                           prodh	equ	0xFF4
  8419                           prodl	equ	0xFF3
  8420                           intcon	equ	0xFF2
  8421                           intcon2	equ	0xFF1
  8422                           intcon3	equ	0xFF0
  8423                           indf0	equ	0xFEF
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           postdec1	equ	0xFE5
  8429                           plusw1	equ	0xFE3
  8430                           fsr1h	equ	0xFE2
  8431                           fsr1l	equ	0xFE1
  8432                           indf2	equ	0xFDF
  8433                           postinc2	equ	0xFDE
  8434                           postdec2	equ	0xFDD
  8435                           plusw2	equ	0xFDB
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _sprintf *****************
  8441 ;; Defined at:
  8442 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8445 ;;		 -> UART_transmitString@tempString(20), LCD_printString@tempString(20), 
  8446 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8447 ;;		 -> STR_11(3), STR_2(3), 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  tmpval          4    0        struct .
  8450 ;;  cp              3    0        PTR const unsigned char 
  8451 ;;  val             2   23[BANK0 ] unsigned int 
  8452 ;;  ap              2   19[BANK0 ] PTR void [1]
  8453 ;;		 -> ?_sprintf(2), 
  8454 ;;  len             2    0        unsigned int 
  8455 ;;  c               1   25[BANK0 ] char 
  8456 ;;  prec            1   22[BANK0 ] char 
  8457 ;;  flag            1   21[BANK0 ] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  2   12[BANK0 ] int 
  8460 ;; Registers used:
  8461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8467 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;Total ram usage:       14 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    4
  8474 ;; This function calls:
  8475 ;;		___lwdiv
  8476 ;;		___lwmod
  8477 ;; This function is called by:
  8478 ;;		_LCD_printString
  8479 ;;		_UART_transmitString
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text31
  8484  01102C                     __ptext31:
  8485                           	opt stack 0
  8486  01102C                     _sprintf:
  8487                           	opt stack 25
  8488                           
  8489                           ;doprnt.c: 494: va_list ap;
  8490                           ;doprnt.c: 499: signed char c;
  8491                           ;doprnt.c: 506: signed char prec;
  8492                           ;doprnt.c: 508: unsigned char flag;
  8493                           ;doprnt.c: 523: union {
  8494                           ;doprnt.c: 524: unsigned long vd;
  8495                           ;doprnt.c: 525: double integ;
  8496                           ;doprnt.c: 526: } tmpval;
  8497                           ;doprnt.c: 528: unsigned int val;
  8498                           ;doprnt.c: 529: unsigned len;
  8499                           ;doprnt.c: 530: const char * cp;
  8500                           ;doprnt.c: 533: *ap = __va_start();
  8501                           
  8502                           ;incstack = 0
  8503  01102C  0E70               	movlw	low (?_sprintf+4)
  8504  01102E  0100               	movlb	0	; () banked
  8505  011030  6F73               	movwf	sprintf@ap& (0+255),b
  8506  011032  0E00               	movlw	high (?_sprintf+4)
  8507  011034  0100               	movlb	0	; () banked
  8508  011036  6F74               	movwf	(sprintf@ap+1)& (0+255),b
  8509                           
  8510                           ;doprnt.c: 536: while(c = *f++) {
  8511  011038  D0BA               	goto	l7419
  8512  01103A                     l7367:
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;doprnt.c: 538: if(c != '%')
  8516  01103A  0E25               	movlw	37
  8517  01103C  0100               	movlb	0	; () banked
  8518  01103E  1979               	xorwf	sprintf@c& (0+255),w,b
  8519  011040  B4D8               	btfsc	status,2,c
  8520  011042  D00A               	goto	l7373
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;doprnt.c: 540: {
  8524                           ;doprnt.c: 541: ((*sp++ = (c)));
  8525  011044  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8526  011048  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8527  01104C  C079  FFDF         	movff	sprintf@c,indf2
  8528                           
  8529                           ; BSR set to: 0
  8530  011050  0100               	movlb	0	; () banked
  8531  011052  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  8532  011054  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  8533                           
  8534                           ;doprnt.c: 542: continue;
  8535  011056  D0AB               	goto	l7419
  8536  011058                     l7373:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;doprnt.c: 543: }
  8540                           ;doprnt.c: 548: flag = 0;
  8541  011058  0E00               	movlw	0
  8542  01105A  0100               	movlb	0	; () banked
  8543  01105C  6F75               	movwf	sprintf@flag& (0+255),b
  8544                           
  8545                           ;doprnt.c: 635: switch(c = *f++) {
  8546  01105E  D004               	goto	l7377
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;doprnt.c: 638: goto alldone;
  8550                           
  8551                           ;doprnt.c: 637: case 0:
  8552  011060  D0B8               	goto	l7421
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;doprnt.c: 698: case 'i':
  8556                           ;doprnt.c: 699: break;
  8557                           
  8558                           ; BSR set to: 0
  8559                           
  8560                           ;doprnt.c: 697: case 'd':
  8561  011062  D019               	goto	l7379
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;doprnt.c: 813: continue;
  8565                           
  8566                           ;doprnt.c: 802: default:
  8567  011064  D0A4               	goto	l7419
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;doprnt.c: 822: }
  8571  011066  D017               	goto	l7379
  8572  011068                     l7377:
  8573                           
  8574                           ; BSR set to: 0
  8575  011068  C06E  FFF6         	movff	sprintf@f,tblptrl
  8576  01106C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8577  011070  0100               	movlb	0	; () banked
  8578  011072  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8579  011074  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8580  011076                     	if	0	;tblptru may be non-zero
  8581  011076                     	endif
  8582  011076                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8583  011076  0E00               	movlw	low (__mediumconst shr (0+16))
  8584  011078  6EF8               	movwf	tblptru,c
  8585  01107A                     	endif
  8586  01107A  0008               	tblrd		*
  8587  01107C  CFF5 F079          	movff	tablat,sprintf@c
  8588  011080  0100               	movlb	0	; () banked
  8589  011082  5179               	movf	sprintf@c& (0+255),w,b
  8590                           
  8591                           ; Switch size 1, requested type "space"
  8592                           ; Number of cases is 3, Range of values is 0 to 105
  8593                           ; switch strategies available:
  8594                           ; Name         Instructions Cycles
  8595                           ; simple_byte           10     6 (average)
  8596                           ;	Chosen strategy is simple_byte
  8597  011084  0A00               	xorlw	0	; case 0
  8598  011086  B4D8               	btfsc	status,2,c
  8599  011088  D0A4               	goto	l7421
  8600  01108A  0A64               	xorlw	100	; case 100
  8601  01108C  B4D8               	btfsc	status,2,c
  8602  01108E  D003               	goto	l7379
  8603  011090  0A0D               	xorlw	13	; case 105
  8604  011092  A4D8               	btfss	status,2,c
  8605  011094  D08C               	goto	l7419
  8606  011096                     l7379:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;doprnt.c: 1253: {
  8610                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8611  011096  C073  FFD9         	movff	sprintf@ap,fsr2l
  8612  01109A  C074  FFDA         	movff	sprintf@ap+1,fsr2h
  8613  01109E  CFDE F077          	movff	postinc2,sprintf@val
  8614  0110A2  CFDD F078          	movff	postdec2,sprintf@val+1
  8615                           
  8616                           ; BSR set to: 0
  8617  0110A6  0E02               	movlw	2
  8618  0110A8  0100               	movlb	0	; () banked
  8619  0110AA  2773               	addwf	sprintf@ap& (0+255),f,b
  8620  0110AC  0E00               	movlw	0
  8621  0110AE  2374               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;doprnt.c: 1261: if((int)val < 0) {
  8625  0110B0  0100               	movlb	0	; () banked
  8626  0110B2  AF78               	btfss	(sprintf@val+1)& (0+255),7,b
  8627  0110B4  D009               	goto	l7389
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;doprnt.c: 1262: flag |= 0x03;
  8631  0110B6  0E03               	movlw	3
  8632  0110B8  0100               	movlb	0	; () banked
  8633  0110BA  1375               	iorwf	sprintf@flag& (0+255),f,b
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;doprnt.c: 1263: val = -val;
  8637  0110BC  0100               	movlb	0	; () banked
  8638  0110BE  6D77               	negf	sprintf@val& (0+255),b
  8639  0110C0  1F78               	comf	(sprintf@val+1)& (0+255),f,b
  8640  0110C2  B0D8               	btfsc	status,0,c
  8641  0110C4  2B78               	incf	(sprintf@val+1)& (0+255),f,b
  8642  0110C6  D000               	goto	l7389
  8643  0110C8                     l7389:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;doprnt.c: 1264: }
  8647                           ;doprnt.c: 1266: }
  8648                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8649  0110C8  0E01               	movlw	1
  8650  0110CA  0100               	movlb	0	; () banked
  8651  0110CC  6F79               	movwf	sprintf@c& (0+255),b
  8652  0110CE                     l7391:
  8653                           
  8654                           ; BSR set to: 0
  8655  0110CE  0E05               	movlw	5
  8656  0110D0  0100               	movlb	0	; () banked
  8657  0110D2  1979               	xorwf	sprintf@c& (0+255),w,b
  8658  0110D4  B4D8               	btfsc	status,2,c
  8659  0110D6  D01D               	goto	l7403
  8660  0110D8  D001               	goto	l7395
  8661                           
  8662                           ; BSR set to: 0
  8663  0110DA  D01B               	goto	l7403
  8664  0110DC                     l7395:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;doprnt.c: 1306: if(val < dpowers[c])
  8668  0110DC  0100               	movlb	0	; () banked
  8669  0110DE  5179               	movf	sprintf@c& (0+255),w,b
  8670  0110E0  0D02               	mullw	2
  8671  0110E2  0E15               	movlw	low _dpowers
  8672  0110E4  24F3               	addwf	prodl,w,c
  8673  0110E6  6EF6               	movwf	tblptrl,c
  8674  0110E8  0EFF               	movlw	high _dpowers
  8675  0110EA  20F4               	addwfc	prodh,w,c
  8676  0110EC  6EF7               	movwf	tblptrh,c
  8677  0110EE                     	if	1	;There are 3 active tblptr bytes
  8678  0110EE  6AF8               	clrf	tblptru,c
  8679  0110F0  0E00               	movlw	low (__mediumconst shr (0+16))
  8680  0110F2  22F8               	addwfc	tblptru,f,c
  8681  0110F4                     	endif
  8682  0110F4  0009               	tblrd		*+
  8683  0110F6  50F5               	movf	tablat,w,c
  8684  0110F8  0100               	movlb	0	; () banked
  8685  0110FA  5D77               	subwf	sprintf@val& (0+255),w,b
  8686  0110FC  0009               	tblrd		*+
  8687  0110FE  50F5               	movf	tablat,w,c
  8688  011100  0100               	movlb	0	; () banked
  8689  011102  5978               	subwfb	(sprintf@val+1)& (0+255),w,b
  8690  011104  A0D8               	btfss	status,0,c
  8691  011106  D005               	goto	l7403
  8692  011108  D001               	goto	l7399
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;doprnt.c: 1307: break;
  8696  01110A  D003               	goto	l7403
  8697  01110C                     l7399:
  8698                           
  8699                           ; BSR set to: 0
  8700  01110C  0100               	movlb	0	; () banked
  8701  01110E  2B79               	incf	sprintf@c& (0+255),f,b
  8702  011110  D7DE               	goto	l7391
  8703  011112                     l7403:
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;doprnt.c: 1422: {
  8707                           ;doprnt.c: 1438: if(flag & 0x03)
  8708  011112  C075  F072         	movff	sprintf@flag,??_sprintf
  8709  011116  0E03               	movlw	3
  8710  011118  0100               	movlb	0	; () banked
  8711  01111A  1772               	andwf	??_sprintf& (0+255),f,b
  8712  01111C  B4D8               	btfsc	status,2,c
  8713  01111E  D00A               	goto	l7409
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8717  011120  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8718  011124  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8719  011128  0E2D               	movlw	45
  8720  01112A  6EDF               	movwf	indf2,c
  8721                           
  8722                           ; BSR set to: 0
  8723  01112C  0100               	movlb	0	; () banked
  8724  01112E  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  8725  011130  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  8726  011132  D000               	goto	l7409
  8727  011134                     l7409:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;doprnt.c: 1469: }
  8731                           ;doprnt.c: 1472: prec = c;
  8732  011134  C079  F076         	movff	sprintf@c,sprintf@prec
  8733                           
  8734                           ;doprnt.c: 1474: while(prec--) {
  8735  011138  D032               	goto	l7417
  8736  01113A                     l7411:
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;doprnt.c: 1478: {
  8740                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8741  01113A  0100               	movlb	0	; () banked
  8742  01113C  5176               	movf	sprintf@prec& (0+255),w,b
  8743  01113E  0D02               	mullw	2
  8744  011140  0E15               	movlw	low _dpowers
  8745  011142  24F3               	addwf	prodl,w,c
  8746  011144  6EF6               	movwf	tblptrl,c
  8747  011146  0EFF               	movlw	high _dpowers
  8748  011148  20F4               	addwfc	prodh,w,c
  8749  01114A  6EF7               	movwf	tblptrh,c
  8750  01114C                     	if	1	;There are 3 active tblptr bytes
  8751  01114C  6AF8               	clrf	tblptru,c
  8752  01114E  0E00               	movlw	low (__mediumconst shr (0+16))
  8753  011150  22F8               	addwfc	tblptru,f,c
  8754  011152                     	endif
  8755  011152  0009               	tblrd		*+
  8756  011154  CFF5 F062          	movff	tablat,___lwdiv@divisor
  8757  011158  000A               	tblrd		*-
  8758  01115A  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  8759  01115E  C077  F060         	movff	sprintf@val,___lwdiv@dividend
  8760  011162  C078  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  8761  011166  EC4F  F08D         	call	___lwdiv	;wreg free
  8762  01116A  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  8763  01116E  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  8764  011172  0E00               	movlw	0
  8765  011174  0100               	movlb	0	; () banked
  8766  011176  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  8767  011178  0E0A               	movlw	10
  8768  01117A  6F69               	movwf	___lwmod@divisor& (0+255),b
  8769  01117C  EC44  F08E         	call	___lwmod	;wreg free
  8770  011180  0100               	movlb	0	; () banked
  8771  011182  5167               	movf	?___lwmod& (0+255),w,b
  8772  011184  0F30               	addlw	48
  8773  011186  0100               	movlb	0	; () banked
  8774  011188  6F79               	movwf	sprintf@c& (0+255),b
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;doprnt.c: 1523: }
  8778                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8779  01118A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8780  01118E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8781  011192  C079  FFDF         	movff	sprintf@c,indf2
  8782                           
  8783                           ; BSR set to: 0
  8784  011196  0100               	movlb	0	; () banked
  8785  011198  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  8786  01119A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  8787  01119C  D000               	goto	l7417
  8788  01119E                     l7417:
  8789                           
  8790                           ; BSR set to: 0
  8791  01119E  0100               	movlb	0	; () banked
  8792  0111A0  0776               	decf	sprintf@prec& (0+255),f,b
  8793  0111A2  0100               	movlb	0	; () banked
  8794  0111A4  2976               	incf	sprintf@prec& (0+255),w,b
  8795  0111A6  B4D8               	btfsc	status,2,c
  8796  0111A8  D002               	goto	l7419
  8797  0111AA  D7C7               	goto	l7411
  8798                           
  8799                           ; BSR set to: 0
  8800  0111AC  D000               	goto	l7419
  8801  0111AE                     l7419:
  8802                           
  8803                           ; BSR set to: 0
  8804  0111AE  C06E  FFF6         	movff	sprintf@f,tblptrl
  8805  0111B2  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8806  0111B6  0100               	movlb	0	; () banked
  8807  0111B8  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8808  0111BA  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8809  0111BC                     	if	0	;tblptru may be non-zero
  8810  0111BC                     	endif
  8811  0111BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8812  0111BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8813  0111BE  6EF8               	movwf	tblptru,c
  8814  0111C0                     	endif
  8815  0111C0  0008               	tblrd		*
  8816  0111C2  CFF5 F079          	movff	tablat,sprintf@c
  8817  0111C6  0100               	movlb	0	; () banked
  8818  0111C8  5179               	movf	sprintf@c& (0+255),w,b
  8819  0111CA  B4D8               	btfsc	status,2,c
  8820  0111CC  D002               	goto	l7421
  8821  0111CE  D735               	goto	l7367
  8822                           
  8823                           ; BSR set to: 0
  8824  0111D0  D000               	goto	l7421
  8825  0111D2                     l7421:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;doprnt.c: 1538: *sp = 0;
  8829  0111D2  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8830  0111D6  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8831  0111DA  0E00               	movlw	0
  8832  0111DC  6EDF               	movwf	indf2,c
  8833  0111DE  0012               	return	
  8834                           
  8835                           ; BSR set to: 0
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;doprnt.c: 1540: return 0;
  8839                           ;	Return value of _sprintf is never used
  8840  0111E0  0012               	return		;funcret
  8841  0111E2                     __end_of_sprintf:
  8842                           	opt stack 0
  8843                           tblptru	equ	0xFF8
  8844                           tblptrh	equ	0xFF7
  8845                           tblptrl	equ	0xFF6
  8846                           tablat	equ	0xFF5
  8847                           prodh	equ	0xFF4
  8848                           prodl	equ	0xFF3
  8849                           intcon	equ	0xFF2
  8850                           intcon2	equ	0xFF1
  8851                           intcon3	equ	0xFF0
  8852                           indf0	equ	0xFEF
  8853                           postinc0	equ	0xFEE
  8854                           fsr0h	equ	0xFEA
  8855                           fsr0l	equ	0xFE9
  8856                           wreg	equ	0xFE8
  8857                           postdec1	equ	0xFE5
  8858                           plusw1	equ	0xFE3
  8859                           fsr1h	equ	0xFE2
  8860                           fsr1l	equ	0xFE1
  8861                           indf2	equ	0xFDF
  8862                           postinc2	equ	0xFDE
  8863                           postdec2	equ	0xFDD
  8864                           plusw2	equ	0xFDB
  8865                           fsr2h	equ	0xFDA
  8866                           fsr2l	equ	0xFD9
  8867                           status	equ	0xFD8
  8868                           
  8869 ;; *************** function ___lwmod *****************
  8870 ;; Defined at:
  8871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  dividend        2    7[BANK0 ] unsigned int 
  8874 ;;  divisor         2    9[BANK0 ] unsigned int 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  counter         1   11[BANK0 ] unsigned char 
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  2    7[BANK0 ] unsigned int 
  8879 ;; Registers used:
  8880 ;;		wreg, status,2, status,0
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;Total ram usage:        5 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    3
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_sprintf
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text32
  8901  011C88                     __ptext32:
  8902                           	opt stack 0
  8903  011C88                     ___lwmod:
  8904                           	opt stack 25
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;incstack = 0
  8908  011C88  0100               	movlb	0	; () banked
  8909  011C8A  5169               	movf	___lwmod@divisor& (0+255),w,b
  8910  011C8C  0100               	movlb	0	; () banked
  8911  011C8E  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  8912  011C90  B4D8               	btfsc	status,2,c
  8913  011C92  D02B               	goto	l1934
  8914                           
  8915                           ; BSR set to: 0
  8916  011C94  0E01               	movlw	1
  8917  011C96  0100               	movlb	0	; () banked
  8918  011C98  6F6B               	movwf	___lwmod@counter& (0+255),b
  8919  011C9A  D007               	goto	l7045
  8920  011C9C                     l7043:
  8921                           
  8922                           ; BSR set to: 0
  8923  011C9C  0100               	movlb	0	; () banked
  8924  011C9E  90D8               	bcf	status,0,c
  8925  011CA0  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  8926  011CA2  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  8927  011CA4  0100               	movlb	0	; () banked
  8928  011CA6  2B6B               	incf	___lwmod@counter& (0+255),f,b
  8929  011CA8  D000               	goto	l7045
  8930  011CAA                     l7045:
  8931                           
  8932                           ; BSR set to: 0
  8933  011CAA  0100               	movlb	0	; () banked
  8934  011CAC  BF6A               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  8935  011CAE  D002               	goto	l7047
  8936  011CB0  D7F5               	goto	l7043
  8937                           
  8938                           ; BSR set to: 0
  8939  011CB2  D000               	goto	l7047
  8940  011CB4                     l7047:
  8941                           
  8942                           ; BSR set to: 0
  8943  011CB4  0100               	movlb	0	; () banked
  8944  011CB6  5169               	movf	___lwmod@divisor& (0+255),w,b
  8945  011CB8  0100               	movlb	0	; () banked
  8946  011CBA  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  8947  011CBC  0100               	movlb	0	; () banked
  8948  011CBE  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8949  011CC0  0100               	movlb	0	; () banked
  8950  011CC2  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  8951  011CC4  A0D8               	btfss	status,0,c
  8952  011CC6  D009               	goto	l7051
  8953                           
  8954                           ; BSR set to: 0
  8955  011CC8  0100               	movlb	0	; () banked
  8956  011CCA  5169               	movf	___lwmod@divisor& (0+255),w,b
  8957  011CCC  0100               	movlb	0	; () banked
  8958  011CCE  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  8959  011CD0  0100               	movlb	0	; () banked
  8960  011CD2  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8961  011CD4  0100               	movlb	0	; () banked
  8962  011CD6  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  8963  011CD8  D000               	goto	l7051
  8964  011CDA                     l7051:
  8965                           
  8966                           ; BSR set to: 0
  8967  011CDA  0100               	movlb	0	; () banked
  8968  011CDC  90D8               	bcf	status,0,c
  8969  011CDE  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  8970  011CE0  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  011CE2  0100               	movlb	0	; () banked
  8974  011CE4  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  8975  011CE6  D7E6               	goto	l7047
  8976  011CE8  D000               	goto	l1934
  8977  011CEA                     l1934:
  8978                           
  8979                           ; BSR set to: 0
  8980  011CEA  C067  F067         	movff	___lwmod@dividend,?___lwmod
  8981  011CEE  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  8982                           
  8983                           ; BSR set to: 0
  8984  011CF2  0012               	return		;funcret
  8985  011CF4                     __end_of___lwmod:
  8986                           	opt stack 0
  8987                           tblptru	equ	0xFF8
  8988                           tblptrh	equ	0xFF7
  8989                           tblptrl	equ	0xFF6
  8990                           tablat	equ	0xFF5
  8991                           prodh	equ	0xFF4
  8992                           prodl	equ	0xFF3
  8993                           intcon	equ	0xFF2
  8994                           intcon2	equ	0xFF1
  8995                           intcon3	equ	0xFF0
  8996                           indf0	equ	0xFEF
  8997                           postinc0	equ	0xFEE
  8998                           fsr0h	equ	0xFEA
  8999                           fsr0l	equ	0xFE9
  9000                           wreg	equ	0xFE8
  9001                           postdec1	equ	0xFE5
  9002                           plusw1	equ	0xFE3
  9003                           fsr1h	equ	0xFE2
  9004                           fsr1l	equ	0xFE1
  9005                           indf2	equ	0xFDF
  9006                           postinc2	equ	0xFDE
  9007                           postdec2	equ	0xFDD
  9008                           plusw2	equ	0xFDB
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function ___lwdiv *****************
  9014 ;; Defined at:
  9015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  dividend        2    0[BANK0 ] unsigned int 
  9018 ;;  divisor         2    2[BANK0 ] unsigned int 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  quotient        2    5[BANK0 ] unsigned int 
  9021 ;;  counter         1    4[BANK0 ] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2    0[BANK0 ] unsigned int 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;Total ram usage:        7 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    3
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_sprintf
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text33
  9046  011A9E                     __ptext33:
  9047                           	opt stack 0
  9048  011A9E                     ___lwdiv:
  9049                           	opt stack 25
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;incstack = 0
  9053  011A9E  0E00               	movlw	0
  9054  011AA0  0100               	movlb	0	; () banked
  9055  011AA2  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9056  011AA4  0E00               	movlw	0
  9057  011AA6  6F65               	movwf	___lwdiv@quotient& (0+255),b
  9058                           
  9059                           ; BSR set to: 0
  9060  011AA8  0100               	movlb	0	; () banked
  9061  011AAA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9062  011AAC  0100               	movlb	0	; () banked
  9063  011AAE  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9064  011AB0  B4D8               	btfsc	status,2,c
  9065  011AB2  D031               	goto	l1924
  9066                           
  9067                           ; BSR set to: 0
  9068  011AB4  0E01               	movlw	1
  9069  011AB6  0100               	movlb	0	; () banked
  9070  011AB8  6F64               	movwf	___lwdiv@counter& (0+255),b
  9071  011ABA  D007               	goto	l7025
  9072  011ABC                     l7023:
  9073                           
  9074                           ; BSR set to: 0
  9075  011ABC  0100               	movlb	0	; () banked
  9076  011ABE  90D8               	bcf	status,0,c
  9077  011AC0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9078  011AC2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9079  011AC4  0100               	movlb	0	; () banked
  9080  011AC6  2B64               	incf	___lwdiv@counter& (0+255),f,b
  9081  011AC8  D000               	goto	l7025
  9082  011ACA                     l7025:
  9083                           
  9084                           ; BSR set to: 0
  9085  011ACA  0100               	movlb	0	; () banked
  9086  011ACC  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  9087  011ACE  D002               	goto	l7027
  9088  011AD0  D7F5               	goto	l7023
  9089                           
  9090                           ; BSR set to: 0
  9091  011AD2  D000               	goto	l7027
  9092  011AD4                     l7027:
  9093                           
  9094                           ; BSR set to: 0
  9095  011AD4  0100               	movlb	0	; () banked
  9096  011AD6  90D8               	bcf	status,0,c
  9097  011AD8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  9098  011ADA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9099                           
  9100                           ; BSR set to: 0
  9101  011ADC  0100               	movlb	0	; () banked
  9102  011ADE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9103  011AE0  0100               	movlb	0	; () banked
  9104  011AE2  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9105  011AE4  0100               	movlb	0	; () banked
  9106  011AE6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9107  011AE8  0100               	movlb	0	; () banked
  9108  011AEA  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9109  011AEC  A0D8               	btfss	status,0,c
  9110  011AEE  D00B               	goto	l7035
  9111                           
  9112                           ; BSR set to: 0
  9113  011AF0  0100               	movlb	0	; () banked
  9114  011AF2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9115  011AF4  0100               	movlb	0	; () banked
  9116  011AF6  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9117  011AF8  0100               	movlb	0	; () banked
  9118  011AFA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9119  011AFC  0100               	movlb	0	; () banked
  9120  011AFE  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9121                           
  9122                           ; BSR set to: 0
  9123  011B00  0100               	movlb	0	; () banked
  9124  011B02  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  9125  011B04  D000               	goto	l7035
  9126  011B06                     l7035:
  9127                           
  9128                           ; BSR set to: 0
  9129  011B06  0100               	movlb	0	; () banked
  9130  011B08  90D8               	bcf	status,0,c
  9131  011B0A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9132  011B0C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9133                           
  9134                           ; BSR set to: 0
  9135  011B0E  0100               	movlb	0	; () banked
  9136  011B10  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  9137  011B12  D7E0               	goto	l7027
  9138  011B14  D000               	goto	l1924
  9139  011B16                     l1924:
  9140                           
  9141                           ; BSR set to: 0
  9142  011B16  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  9143  011B1A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9144                           
  9145                           ; BSR set to: 0
  9146  011B1E  0012               	return		;funcret
  9147  011B20                     __end_of___lwdiv:
  9148                           	opt stack 0
  9149                           tblptru	equ	0xFF8
  9150                           tblptrh	equ	0xFF7
  9151                           tblptrl	equ	0xFF6
  9152                           tablat	equ	0xFF5
  9153                           prodh	equ	0xFF4
  9154                           prodl	equ	0xFF3
  9155                           intcon	equ	0xFF2
  9156                           intcon2	equ	0xFF1
  9157                           intcon3	equ	0xFF0
  9158                           indf0	equ	0xFEF
  9159                           postinc0	equ	0xFEE
  9160                           fsr0h	equ	0xFEA
  9161                           fsr0l	equ	0xFE9
  9162                           wreg	equ	0xFE8
  9163                           postdec1	equ	0xFE5
  9164                           plusw1	equ	0xFE3
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           plusw2	equ	0xFDB
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function _LCD_placeCursor *****************
  9176 ;; Defined at:
  9177 ;;		line 280 in file "LCD.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  x               1    wreg     unsigned char 
  9180 ;;  y               1   20[BANK0 ] unsigned char 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  x               1   25[BANK0 ] unsigned char 
  9183 ;;  address         1   26[BANK0 ] unsigned char 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;		None               void
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9193 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;Total ram usage:        7 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    5
  9200 ;; This function calls:
  9201 ;;		_delay_ms
  9202 ;;		_delay_us
  9203 ;; This function is called by:
  9204 ;;		_LCD_printString
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text34
  9209  010A26                     __ptext34:
  9210                           	opt stack 0
  9211  010A26                     _LCD_placeCursor:
  9212                           	opt stack 24
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;incstack = 0
  9216                           ;LCD_placeCursor@x stored from wreg
  9217  010A26  0100               	movlb	0	; () banked
  9218  010A28  6F79               	movwf	LCD_placeCursor@x& (0+255),b
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;LCD.c: 284: char address = 0x80 + x + (0x40 * y);
  9222  010A2A  0100               	movlb	0	; () banked
  9223  010A2C  5174               	movf	LCD_placeCursor@y& (0+255),w,b
  9224  010A2E  0D40               	mullw	64
  9225  010A30  50F3               	movf	prodl,w,c
  9226  010A32  0100               	movlb	0	; () banked
  9227  010A34  2579               	addwf	LCD_placeCursor@x& (0+255),w,b
  9228  010A36  0F80               	addlw	128
  9229  010A38  0100               	movlb	0	; () banked
  9230  010A3A  6F7A               	movwf	LCD_placeCursor@address& (0+255),b
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;LCD.c: 285: delay_ms(3);
  9234  010A3C  0E03               	movlw	3
  9235  010A3E  0100               	movlb	0	; () banked
  9236  010A40  6F64               	movwf	delay_ms@x& (0+255),b
  9237  010A42  0E00               	movlw	0
  9238  010A44  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  9239  010A46  0E00               	movlw	0
  9240  010A48  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  9241  010A4A  0E00               	movlw	0
  9242  010A4C  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  9243  010A4E  ECF1  F08B         	call	_delay_ms	;wreg free
  9244                           
  9245                           ;LCD.c: 286: switch(mode)
  9246  010A52  D18D               	goto	l7353
  9247  010A54                     l7319:
  9248                           
  9249                           ;LCD.c: 289: delay_us(40);;
  9250  010A54  0E28               	movlw	40
  9251  010A56  0100               	movlb	0	; () banked
  9252  010A58  6F60               	movwf	delay_us@x& (0+255),b
  9253  010A5A  0E00               	movlw	0
  9254  010A5C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9255  010A5E  0E00               	movlw	0
  9256  010A60  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9257  010A62  0E00               	movlw	0
  9258  010A64  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9259  010A66  EC8C  F08F         	call	_delay_us	;wreg free
  9260                           
  9261                           ;LCD.c: 290: PORTEbits.RE4 = 1;
  9262  010A6A  8884               	bsf	3972,4,c	;volatile
  9263                           
  9264                           ;LCD.c: 291: { PORTHbits.RH5 = ((0x80 + (address >> 4) >> 3) & 1); PORTEbits.RE1 = ((0x8
      +                          0 + (address >> 4) >> 2) & 1); PORTEbits.RE0 = ((0x80 + (address >> 4) >> 1) & 1); PORTE
      +                          bits.RE2 = (0x80 + (address >> 4) & 1); };
  9265  010A6C  0100               	movlb	0	; () banked
  9266  010A6E  397A               	swapf	LCD_placeCursor@address& (0+255),w,b
  9267  010A70  0B0F               	andlw	15
  9268  010A72  0100               	movlb	0	; () banked
  9269  010A74  6F75               	movwf	??_LCD_placeCursor& (0+255),b
  9270  010A76  6B76               	clrf	(??_LCD_placeCursor+1)& (0+255),b
  9271  010A78  0E80               	movlw	128
  9272  010A7A  0100               	movlb	0	; () banked
  9273  010A7C  2775               	addwf	??_LCD_placeCursor& (0+255),f,b
  9274  010A7E  0E00               	movlw	0
  9275  010A80  2376               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
  9276  010A82  0100               	movlb	0	; () banked
  9277  010A84  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9278  010A86  3376               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
  9279  010A88  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9280  010A8A  0100               	movlb	0	; () banked
  9281  010A8C  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9282  010A8E  3376               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
  9283  010A90  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9284  010A92  0100               	movlb	0	; () banked
  9285  010A94  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9286  010A96  3376               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
  9287  010A98  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9288  010A9A  0E01               	movlw	1
  9289  010A9C  0100               	movlb	0	; () banked
  9290  010A9E  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9291  010AA0  0100               	movlb	0	; () banked
  9292  010AA2  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9293  010AA4  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9294  010AA6  5087               	movf	3975,w,c	;volatile
  9295  010AA8  0100               	movlb	0	; () banked
  9296  010AAA  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9297  010AAC  0BDF               	andlw	-33
  9298  010AAE  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9299  010AB0  6E87               	movwf	3975,c	;volatile
  9300                           
  9301                           ; BSR set to: 0
  9302  010AB2  0100               	movlb	0	; () banked
  9303  010AB4  397A               	swapf	LCD_placeCursor@address& (0+255),w,b
  9304  010AB6  0B0F               	andlw	15
  9305  010AB8  0100               	movlb	0	; () banked
  9306  010ABA  6F75               	movwf	??_LCD_placeCursor& (0+255),b
  9307  010ABC  6B76               	clrf	(??_LCD_placeCursor+1)& (0+255),b
  9308  010ABE  0E80               	movlw	128
  9309  010AC0  0100               	movlb	0	; () banked
  9310  010AC2  2775               	addwf	??_LCD_placeCursor& (0+255),f,b
  9311  010AC4  0E00               	movlw	0
  9312  010AC6  2376               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
  9313  010AC8  0100               	movlb	0	; () banked
  9314  010ACA  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9315  010ACC  3376               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
  9316  010ACE  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9317  010AD0  0100               	movlb	0	; () banked
  9318  010AD2  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9319  010AD4  3376               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
  9320  010AD6  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9321  010AD8  0E01               	movlw	1
  9322  010ADA  0100               	movlb	0	; () banked
  9323  010ADC  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9324  010ADE  0100               	movlb	0	; () banked
  9325  010AE0  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9326  010AE2  5084               	movf	3972,w,c	;volatile
  9327  010AE4  0100               	movlb	0	; () banked
  9328  010AE6  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9329  010AE8  0BFD               	andlw	-3
  9330  010AEA  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9331  010AEC  6E84               	movwf	3972,c	;volatile
  9332                           
  9333                           ; BSR set to: 0
  9334  010AEE  0100               	movlb	0	; () banked
  9335  010AF0  397A               	swapf	LCD_placeCursor@address& (0+255),w,b
  9336  010AF2  0B0F               	andlw	15
  9337  010AF4  0100               	movlb	0	; () banked
  9338  010AF6  6F75               	movwf	??_LCD_placeCursor& (0+255),b
  9339  010AF8  6B76               	clrf	(??_LCD_placeCursor+1)& (0+255),b
  9340  010AFA  0E80               	movlw	128
  9341  010AFC  0100               	movlb	0	; () banked
  9342  010AFE  2775               	addwf	??_LCD_placeCursor& (0+255),f,b
  9343  010B00  0E00               	movlw	0
  9344  010B02  2376               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
  9345  010B04  0100               	movlb	0	; () banked
  9346  010B06  3576               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9347  010B08  3176               	rrcf	(??_LCD_placeCursor+1)& (0+255),w,b
  9348  010B0A  0100               	movlb	0	; () banked
  9349  010B0C  6F78               	movwf	(??_LCD_placeCursor+3)& (0+255),b
  9350  010B0E  0100               	movlb	0	; () banked
  9351  010B10  3175               	rrcf	??_LCD_placeCursor& (0+255),w,b
  9352  010B12  0100               	movlb	0	; () banked
  9353  010B14  6F77               	movwf	(??_LCD_placeCursor+2)& (0+255),b
  9354  010B16  0E01               	movlw	1
  9355  010B18  0100               	movlb	0	; () banked
  9356  010B1A  1777               	andwf	(??_LCD_placeCursor+2)& (0+255),f,b
  9357  010B1C  5084               	movf	3972,w,c	;volatile
  9358  010B1E  0100               	movlb	0	; () banked
  9359  010B20  1977               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
  9360  010B22  0BFE               	andlw	-2
  9361  010B24  1977               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
  9362  010B26  6E84               	movwf	3972,c	;volatile
  9363                           
  9364                           ; BSR set to: 0
  9365  010B28  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9366  010B2C  0100               	movlb	0	; () banked
  9367  010B2E  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9368  010B30  0E0F               	movlw	15
  9369  010B32  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9370  010B34  0E80               	movlw	128
  9371  010B36  0100               	movlb	0	; () banked
  9372  010B38  2775               	addwf	??_LCD_placeCursor& (0+255),f,b
  9373  010B3A  0E01               	movlw	1
  9374  010B3C  0100               	movlb	0	; () banked
  9375  010B3E  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9376  010B40  0100               	movlb	0	; () banked
  9377  010B42  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9378  010B44  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9379  010B46  5084               	movf	3972,w,c	;volatile
  9380  010B48  0100               	movlb	0	; () banked
  9381  010B4A  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9382  010B4C  0BFB               	andlw	-5
  9383  010B4E  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9384  010B50  6E84               	movwf	3972,c	;volatile
  9385                           
  9386                           ;LCD.c: 292: delay_us(40);;
  9387  010B52  0E28               	movlw	40
  9388  010B54  0100               	movlb	0	; () banked
  9389  010B56  6F60               	movwf	delay_us@x& (0+255),b
  9390  010B58  0E00               	movlw	0
  9391  010B5A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9392  010B5C  0E00               	movlw	0
  9393  010B5E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9394  010B60  0E00               	movlw	0
  9395  010B62  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9396  010B64  EC8C  F08F         	call	_delay_us	;wreg free
  9397                           
  9398                           ;LCD.c: 293: PORTEbits.RE4 = 0;
  9399  010B68  9884               	bcf	3972,4,c	;volatile
  9400                           
  9401                           ;LCD.c: 295: delay_us(40);;
  9402  010B6A  0E28               	movlw	40
  9403  010B6C  0100               	movlb	0	; () banked
  9404  010B6E  6F60               	movwf	delay_us@x& (0+255),b
  9405  010B70  0E00               	movlw	0
  9406  010B72  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9407  010B74  0E00               	movlw	0
  9408  010B76  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9409  010B78  0E00               	movlw	0
  9410  010B7A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9411  010B7C  EC8C  F08F         	call	_delay_us	;wreg free
  9412                           
  9413                           ;LCD.c: 296: PORTEbits.RE4 = 1;
  9414  010B80  8884               	bsf	3972,4,c	;volatile
  9415                           
  9416                           ;LCD.c: 297: { PORTHbits.RH5 = (((address & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((address
      +                           & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((address & 0x0F) >> 1) & 1); PORTEbits.RE2 = ((ad
      +                          dress & 0x0F) & 1); };
  9417  010B82  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9418  010B86  0100               	movlb	0	; () banked
  9419  010B88  90D8               	bcf	status,0,c
  9420  010B8A  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9421  010B8C  0100               	movlb	0	; () banked
  9422  010B8E  90D8               	bcf	status,0,c
  9423  010B90  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9424  010B92  0100               	movlb	0	; () banked
  9425  010B94  90D8               	bcf	status,0,c
  9426  010B96  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9427  010B98  0E01               	movlw	1
  9428  010B9A  0100               	movlb	0	; () banked
  9429  010B9C  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9430  010B9E  0100               	movlb	0	; () banked
  9431  010BA0  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9432  010BA2  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9433  010BA4  5087               	movf	3975,w,c	;volatile
  9434  010BA6  0100               	movlb	0	; () banked
  9435  010BA8  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9436  010BAA  0BDF               	andlw	-33
  9437  010BAC  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9438  010BAE  6E87               	movwf	3975,c	;volatile
  9439                           
  9440                           ; BSR set to: 0
  9441  010BB0  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9442  010BB4  0100               	movlb	0	; () banked
  9443  010BB6  90D8               	bcf	status,0,c
  9444  010BB8  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9445  010BBA  0100               	movlb	0	; () banked
  9446  010BBC  90D8               	bcf	status,0,c
  9447  010BBE  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9448  010BC0  0E01               	movlw	1
  9449  010BC2  0100               	movlb	0	; () banked
  9450  010BC4  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9451  010BC6  0100               	movlb	0	; () banked
  9452  010BC8  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9453  010BCA  5084               	movf	3972,w,c	;volatile
  9454  010BCC  0100               	movlb	0	; () banked
  9455  010BCE  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9456  010BD0  0BFD               	andlw	-3
  9457  010BD2  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9458  010BD4  6E84               	movwf	3972,c	;volatile
  9459                           
  9460                           ; BSR set to: 0
  9461  010BD6  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9462  010BDA  0100               	movlb	0	; () banked
  9463  010BDC  90D8               	bcf	status,0,c
  9464  010BDE  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9465  010BE0  0E01               	movlw	1
  9466  010BE2  0100               	movlb	0	; () banked
  9467  010BE4  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9468  010BE6  5084               	movf	3972,w,c	;volatile
  9469  010BE8  0100               	movlb	0	; () banked
  9470  010BEA  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9471  010BEC  0BFE               	andlw	-2
  9472  010BEE  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9473  010BF0  6E84               	movwf	3972,c	;volatile
  9474                           
  9475                           ; BSR set to: 0
  9476  010BF2  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9477  010BF6  0E01               	movlw	1
  9478  010BF8  0100               	movlb	0	; () banked
  9479  010BFA  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9480  010BFC  0100               	movlb	0	; () banked
  9481  010BFE  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9482  010C00  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9483  010C02  5084               	movf	3972,w,c	;volatile
  9484  010C04  0100               	movlb	0	; () banked
  9485  010C06  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9486  010C08  0BFB               	andlw	-5
  9487  010C0A  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9488  010C0C  6E84               	movwf	3972,c	;volatile
  9489                           
  9490                           ;LCD.c: 298: delay_us(40);;
  9491  010C0E  0E28               	movlw	40
  9492  010C10  0100               	movlb	0	; () banked
  9493  010C12  6F60               	movwf	delay_us@x& (0+255),b
  9494  010C14  0E00               	movlw	0
  9495  010C16  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9496  010C18  0E00               	movlw	0
  9497  010C1A  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9498  010C1C  0E00               	movlw	0
  9499  010C1E  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9500  010C20  EC8C  F08F         	call	_delay_us	;wreg free
  9501                           
  9502                           ;LCD.c: 299: PORTEbits.RE4 = 0;
  9503  010C24  9884               	bcf	3972,4,c	;volatile
  9504                           
  9505                           ;LCD.c: 300: break;
  9506  010C26  0012               	return	
  9507  010C28                     l94:
  9508  010C28  F000               	nop		;# 
  9509                           
  9510                           ;LCD.c: 304: PORTEbits.RE4 = 1;
  9511  010C2A  8884               	bsf	3972,4,c	;volatile
  9512                           
  9513                           ;LCD.c: 305: { PORTHbits.RH5 = ((address >> 7) & 1); PORTEbits.RE1 = ((address >> 6) & 1
      +                          ); PORTEbits.RE0 = ((address >> 5) & 1); PORTEbits.RE2 = ((address >> 4) & 1); PORTHbits
      +                          .RH0 = ((address >> 3) & 1); PORTHbits.RH1 = ((address >> 2) & 1); PORTHbits.RH2 = ((ad
  9514  010C2C  0100               	movlb	0	; () banked
  9515  010C2E  6B75               	clrf	??_LCD_placeCursor& (0+255),b
  9516  010C30  AF7A               	btfss	LCD_placeCursor@address& (0+255),7,b
  9517  010C32  D002               	bra	u5225
  9518  010C34  0100               	movlb	0	; () banked
  9519  010C36  2B75               	incf	??_LCD_placeCursor& (0+255),f,b
  9520  010C38                     u5225:
  9521  010C38  0E01               	movlw	1
  9522  010C3A  0100               	movlb	0	; () banked
  9523  010C3C  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9524  010C3E  0100               	movlb	0	; () banked
  9525  010C40  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9526  010C42  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9527  010C44  5087               	movf	3975,w,c	;volatile
  9528  010C46  0100               	movlb	0	; () banked
  9529  010C48  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9530  010C4A  0BDF               	andlw	-33
  9531  010C4C  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9532  010C4E  6E87               	movwf	3975,c	;volatile
  9533  010C50  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9534  010C54  0E06               	movlw	6
  9535  010C56  0100               	movlb	0	; () banked
  9536  010C58  6F76               	movwf	(??_LCD_placeCursor+1)& (0+255),b
  9537  010C5A                     u5235:
  9538  010C5A  0100               	movlb	0	; () banked
  9539  010C5C  90D8               	bcf	status,0,c
  9540  010C5E  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9541  010C60  0100               	movlb	0	; () banked
  9542  010C62  2F76               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
  9543  010C64  D7FA               	goto	u5235
  9544  010C66  0E01               	movlw	1
  9545  010C68  0100               	movlb	0	; () banked
  9546  010C6A  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9547  010C6C  0100               	movlb	0	; () banked
  9548  010C6E  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9549  010C70  5084               	movf	3972,w,c	;volatile
  9550  010C72  0100               	movlb	0	; () banked
  9551  010C74  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9552  010C76  0BFD               	andlw	-3
  9553  010C78  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9554  010C7A  6E84               	movwf	3972,c	;volatile
  9555  010C7C  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9556  010C80  0E05               	movlw	5
  9557  010C82  0100               	movlb	0	; () banked
  9558  010C84  6F76               	movwf	(??_LCD_placeCursor+1)& (0+255),b
  9559  010C86                     u5245:
  9560  010C86  0100               	movlb	0	; () banked
  9561  010C88  90D8               	bcf	status,0,c
  9562  010C8A  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9563  010C8C  0100               	movlb	0	; () banked
  9564  010C8E  2F76               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
  9565  010C90  D7FA               	goto	u5245
  9566  010C92  0E01               	movlw	1
  9567  010C94  0100               	movlb	0	; () banked
  9568  010C96  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9569  010C98  5084               	movf	3972,w,c	;volatile
  9570  010C9A  0100               	movlb	0	; () banked
  9571  010C9C  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9572  010C9E  0BFE               	andlw	-2
  9573  010CA0  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9574  010CA2  6E84               	movwf	3972,c	;volatile
  9575  010CA4  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9576  010CA8  0100               	movlb	0	; () banked
  9577  010CAA  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9578  010CAC  0E0F               	movlw	15
  9579  010CAE  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9580  010CB0  0E01               	movlw	1
  9581  010CB2  0100               	movlb	0	; () banked
  9582  010CB4  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9583  010CB6  0100               	movlb	0	; () banked
  9584  010CB8  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9585  010CBA  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9586  010CBC  5084               	movf	3972,w,c	;volatile
  9587  010CBE  0100               	movlb	0	; () banked
  9588  010CC0  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9589  010CC2  0BFB               	andlw	-5
  9590  010CC4  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9591  010CC6  6E84               	movwf	3972,c	;volatile
  9592  010CC8  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9593  010CCC  0100               	movlb	0	; () banked
  9594  010CCE  90D8               	bcf	status,0,c
  9595  010CD0  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9596  010CD2  0100               	movlb	0	; () banked
  9597  010CD4  90D8               	bcf	status,0,c
  9598  010CD6  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9599  010CD8  0100               	movlb	0	; () banked
  9600  010CDA  90D8               	bcf	status,0,c
  9601  010CDC  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9602  010CDE  0E01               	movlw	1
  9603  010CE0  0100               	movlb	0	; () banked
  9604  010CE2  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9605  010CE4  5087               	movf	3975,w,c	;volatile
  9606  010CE6  0100               	movlb	0	; () banked
  9607  010CE8  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9608  010CEA  0BFE               	andlw	-2
  9609  010CEC  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9610  010CEE  6E87               	movwf	3975,c	;volatile
  9611  010CF0  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9612  010CF4  0100               	movlb	0	; () banked
  9613  010CF6  90D8               	bcf	status,0,c
  9614  010CF8  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9615  010CFA  0100               	movlb	0	; () banked
  9616  010CFC  90D8               	bcf	status,0,c
  9617  010CFE  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9618  010D00  0E01               	movlw	1
  9619  010D02  0100               	movlb	0	; () banked
  9620  010D04  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9621  010D06  0100               	movlb	0	; () banked
  9622  010D08  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9623  010D0A  5087               	movf	3975,w,c	;volatile
  9624  010D0C  0100               	movlb	0	; () banked
  9625  010D0E  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9626  010D10  0BFD               	andlw	-3
  9627  010D12  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9628  010D14  6E87               	movwf	3975,c	;volatile
  9629  010D16  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9630  010D1A  0100               	movlb	0	; () banked
  9631  010D1C  90D8               	bcf	status,0,c
  9632  010D1E  3375               	rrcf	??_LCD_placeCursor& (0+255),f,b
  9633  010D20  0E01               	movlw	1
  9634  010D22  0100               	movlb	0	; () banked
  9635  010D24  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9636  010D26  0100               	movlb	0	; () banked
  9637  010D28  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9638  010D2A  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9639  010D2C  5087               	movf	3975,w,c	;volatile
  9640  010D2E  0100               	movlb	0	; () banked
  9641  010D30  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9642  010D32  0BFB               	andlw	-5
  9643  010D34  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9644  010D36  6E87               	movwf	3975,c	;volatile
  9645  010D38  C07A  F075         	movff	LCD_placeCursor@address,??_LCD_placeCursor
  9646  010D3C  0E01               	movlw	1
  9647  010D3E  0100               	movlb	0	; () banked
  9648  010D40  1775               	andwf	??_LCD_placeCursor& (0+255),f,b
  9649  010D42  0100               	movlb	0	; () banked
  9650  010D44  3B75               	swapf	??_LCD_placeCursor& (0+255),f,b
  9651  010D46  4775               	rlncf	??_LCD_placeCursor& (0+255),f,b
  9652  010D48  5084               	movf	3972,w,c	;volatile
  9653  010D4A  0100               	movlb	0	; () banked
  9654  010D4C  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9655  010D4E  0BDF               	andlw	-33
  9656  010D50  1975               	xorwf	??_LCD_placeCursor& (0+255),w,b
  9657  010D52  6E84               	movwf	3972,c	;volatile
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;LCD.c: 306: delay_us(40);;
  9661  010D54  0E28               	movlw	40
  9662  010D56  0100               	movlb	0	; () banked
  9663  010D58  6F60               	movwf	delay_us@x& (0+255),b
  9664  010D5A  0E00               	movlw	0
  9665  010D5C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9666  010D5E  0E00               	movlw	0
  9667  010D60  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9668  010D62  0E00               	movlw	0
  9669  010D64  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9670  010D66  EC8C  F08F         	call	_delay_us	;wreg free
  9671                           
  9672                           ;LCD.c: 307: PORTEbits.RE4 = 0;
  9673  010D6A  9884               	bcf	3972,4,c	;volatile
  9674                           
  9675                           ;LCD.c: 309: }
  9676                           
  9677                           ;LCD.c: 308: break;
  9678  010D6C  0012               	return	
  9679  010D6E                     l7353:
  9680  010D6E  503C               	movf	_mode,w,c	;volatile
  9681                           
  9682                           ; Switch size 1, requested type "space"
  9683                           ; Number of cases is 2, Range of values is 1 to 2
  9684                           ; switch strategies available:
  9685                           ; Name         Instructions Cycles
  9686                           ; simple_byte            7     4 (average)
  9687                           ;	Chosen strategy is simple_byte
  9688  010D70  0A01               	xorlw	1	; case 1
  9689  010D72  B4D8               	btfsc	status,2,c
  9690  010D74  D66F               	goto	l7319
  9691  010D76  0A03               	xorlw	3	; case 2
  9692  010D78  A4D8               	btfss	status,2,c
  9693  010D7A  0012               	return	
  9694  010D7C  D755               	goto	l94
  9695  010D7E  0012               	return		;funcret
  9696  010D80                     __end_of_LCD_placeCursor:
  9697                           	opt stack 0
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           intcon	equ	0xFF2
  9705                           intcon2	equ	0xFF1
  9706                           intcon3	equ	0xFF0
  9707                           indf0	equ	0xFEF
  9708                           postinc0	equ	0xFEE
  9709                           fsr0h	equ	0xFEA
  9710                           fsr0l	equ	0xFE9
  9711                           wreg	equ	0xFE8
  9712                           postdec1	equ	0xFE5
  9713                           plusw1	equ	0xFE3
  9714                           fsr1h	equ	0xFE2
  9715                           fsr1l	equ	0xFE1
  9716                           indf2	equ	0xFDF
  9717                           postinc2	equ	0xFDE
  9718                           postdec2	equ	0xFDD
  9719                           plusw2	equ	0xFDB
  9720                           fsr2h	equ	0xFDA
  9721                           fsr2l	equ	0xFD9
  9722                           status	equ	0xFD8
  9723                           
  9724 ;; *************** function _delay_us *****************
  9725 ;; Defined at:
  9726 ;;		line 51 in file "delays.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  x               4    0[BANK0 ] long 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;		None               void
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;Total ram usage:        4 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    3
  9747 ;; This function calls:
  9748 ;;		Nothing
  9749 ;; This function is called by:
  9750 ;;		_LCD_init4bit
  9751 ;;		_LCD_placeCursor
  9752 ;;		_LCD_printString
  9753 ;;		_LCD_init8bit
  9754 ;;		_LCD_clearDisplay
  9755 ;;		_fft_init
  9756 ;;		_PS2_init
  9757 ;;		_PS2_readGamepad
  9758 ;;		_PS2_shiftInOut
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text35
  9763  011F18                     __ptext35:
  9764                           	opt stack 0
  9765  011F18                     _delay_us:
  9766                           	opt stack 25
  9767                           
  9768                           ;delays.c: 53: x -= 3;
  9769                           
  9770                           ;incstack = 0
  9771  011F18  0EFD               	movlw	253
  9772  011F1A  D005               	goto	L1
  9773  011F1C                     l6767:
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;delays.c: 55: {
  9777                           ;delays.c: 56: _delay((unsigned long)((1)*(64000000/4000000.0)));
  9778  011F1C  0E05               	movlw	5
  9779  011F1E                     u6597:
  9780  011F1E  2EE8               	decfsz	wreg,f,c
  9781  011F20  D7FE               	goto	u6597
  9782  011F22  F000               	nop	
  9783                           
  9784                           ;delays.c: 57: x -= 2;
  9785  011F24  0EFE               	movlw	254
  9786  011F26                     L1:
  9787  011F26  0100               	movlb	0	; () banked
  9788  011F28  2760               	addwf	delay_us@x& (0+255),f,b
  9789  011F2A  0EFF               	movlw	255
  9790  011F2C  2361               	addwfc	(delay_us@x+1)& (0+255),f,b
  9791  011F2E  0EFF               	movlw	255
  9792  011F30  2362               	addwfc	(delay_us@x+2)& (0+255),f,b
  9793  011F32  0EFF               	movlw	255
  9794  011F34  2363               	addwfc	(delay_us@x+3)& (0+255),f,b
  9795  011F36  D000               	goto	l6771
  9796  011F38                     l6771:
  9797                           
  9798                           ; BSR set to: 0
  9799  011F38  0100               	movlb	0	; () banked
  9800  011F3A  BF63               	btfsc	(delay_us@x+3)& (0+255),7,b
  9801  011F3C  0012               	return	
  9802  011F3E  0100               	movlb	0	; () banked
  9803  011F40  5163               	movf	(delay_us@x+3)& (0+255),w,b
  9804  011F42  0100               	movlb	0	; () banked
  9805  011F44  1162               	iorwf	(delay_us@x+2)& (0+255),w,b
  9806  011F46  0100               	movlb	0	; () banked
  9807  011F48  1161               	iorwf	(delay_us@x+1)& (0+255),w,b
  9808  011F4A  E1E8               	bnz	l6767
  9809  011F4C  0100               	movlb	0	; () banked
  9810  011F4E  0560               	decf	delay_us@x& (0+255),w,b
  9811  011F50  B0D8               	btfsc	status,0,c
  9812  011F52  D7E4               	goto	l6767
  9813                           
  9814                           ; BSR set to: 0
  9815                           
  9816                           ; BSR set to: 0
  9817  011F54  0012               	return		;funcret
  9818  011F56                     __end_of_delay_us:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           intcon2	equ	0xFF1
  9828                           intcon3	equ	0xFF0
  9829                           indf0	equ	0xFEF
  9830                           postinc0	equ	0xFEE
  9831                           fsr0h	equ	0xFEA
  9832                           fsr0l	equ	0xFE9
  9833                           wreg	equ	0xFE8
  9834                           postdec1	equ	0xFE5
  9835                           plusw1	equ	0xFE3
  9836                           fsr1h	equ	0xFE2
  9837                           fsr1l	equ	0xFE1
  9838                           indf2	equ	0xFDF
  9839                           postinc2	equ	0xFDE
  9840                           postdec2	equ	0xFDD
  9841                           plusw2	equ	0xFDB
  9842                           fsr2h	equ	0xFDA
  9843                           fsr2l	equ	0xFD9
  9844                           status	equ	0xFD8
  9845                           
  9846 ;; *************** function _delay_ms *****************
  9847 ;; Defined at:
  9848 ;;		line 62 in file "delays.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  x               4    4[BANK0 ] long 
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;  time            4   16[BANK0 ] unsigned long 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;		None               void
  9855 ;; Registers used:
  9856 ;;		wreg, status,2, status,0, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9862 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9863 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9865 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9866 ;;Total ram usage:       16 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:    4
  9869 ;; This function calls:
  9870 ;;		_millis
  9871 ;; This function is called by:
  9872 ;;		_LCD_init4bit
  9873 ;;		_LCD_placeCursor
  9874 ;;		_LCD_printString
  9875 ;;		_LCD_init8bit
  9876 ;;		_RCMode
  9877 ;;		_FONA_init
  9878 ;;		_FONA_Text
  9879 ;;		_FONA_CheckStrength
  9880 ;;		_PS2_readGamepad
  9881 ;;		_PS2_sendCommandString
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text36
  9886  0117E2                     __ptext36:
  9887                           	opt stack 0
  9888  0117E2                     _delay_ms:
  9889                           	opt stack 24
  9890                           
  9891                           ;delays.c: 64: unsigned long time = millis();
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;incstack = 0
  9895  0117E2  EC8C  F090         	call	_millis	;wreg free
  9896  0117E6  C060  F070         	movff	?_millis,delay_ms@time
  9897  0117EA  C061  F071         	movff	?_millis+1,delay_ms@time+1
  9898  0117EE  C062  F072         	movff	?_millis+2,delay_ms@time+2
  9899  0117F2  C063  F073         	movff	?_millis+3,delay_ms@time+3
  9900                           
  9901                           ;delays.c: 65: while(millis() - time < x);
  9902  0117F6  D000               	goto	l6763
  9903  0117F8                     l6763:
  9904  0117F8  C070  F068         	movff	delay_ms@time,??_delay_ms
  9905  0117FC  C071  F069         	movff	delay_ms@time+1,??_delay_ms+1
  9906  011800  C072  F06A         	movff	delay_ms@time+2,??_delay_ms+2
  9907  011804  C073  F06B         	movff	delay_ms@time+3,??_delay_ms+3
  9908  011808  0100               	movlb	0	; () banked
  9909  01180A  1F68               	comf	??_delay_ms& (0+255),f,b
  9910  01180C  1F69               	comf	(??_delay_ms+1)& (0+255),f,b
  9911  01180E  1F6A               	comf	(??_delay_ms+2)& (0+255),f,b
  9912  011810  1F6B               	comf	(??_delay_ms+3)& (0+255),f,b
  9913  011812  2B68               	incf	??_delay_ms& (0+255),f,b
  9914  011814  0E00               	movlw	0
  9915  011816  2369               	addwfc	(??_delay_ms+1)& (0+255),f,b
  9916  011818  236A               	addwfc	(??_delay_ms+2)& (0+255),f,b
  9917  01181A  236B               	addwfc	(??_delay_ms+3)& (0+255),f,b
  9918  01181C  EC8C  F090         	call	_millis	;wreg free
  9919  011820  0100               	movlb	0	; () banked
  9920  011822  5168               	movf	??_delay_ms& (0+255),w,b
  9921  011824  0100               	movlb	0	; () banked
  9922  011826  2560               	addwf	?_millis& (0+255),w,b
  9923  011828  0100               	movlb	0	; () banked
  9924  01182A  6F6C               	movwf	(??_delay_ms+4)& (0+255),b
  9925  01182C  0100               	movlb	0	; () banked
  9926  01182E  5169               	movf	(??_delay_ms+1)& (0+255),w,b
  9927  011830  0100               	movlb	0	; () banked
  9928  011832  2161               	addwfc	(?_millis+1)& (0+255),w,b
  9929  011834  0100               	movlb	0	; () banked
  9930  011836  6F6D               	movwf	(??_delay_ms+5)& (0+255),b
  9931  011838  0100               	movlb	0	; () banked
  9932  01183A  516A               	movf	(??_delay_ms+2)& (0+255),w,b
  9933  01183C  0100               	movlb	0	; () banked
  9934  01183E  2162               	addwfc	(?_millis+2)& (0+255),w,b
  9935  011840  0100               	movlb	0	; () banked
  9936  011842  6F6E               	movwf	(??_delay_ms+6)& (0+255),b
  9937  011844  0100               	movlb	0	; () banked
  9938  011846  516B               	movf	(??_delay_ms+3)& (0+255),w,b
  9939  011848  0100               	movlb	0	; () banked
  9940  01184A  2163               	addwfc	(?_millis+3)& (0+255),w,b
  9941  01184C  0100               	movlb	0	; () banked
  9942  01184E  6F6F               	movwf	(??_delay_ms+7)& (0+255),b
  9943  011850  0100               	movlb	0	; () banked
  9944  011852  5164               	movf	delay_ms@x& (0+255),w,b
  9945  011854  0100               	movlb	0	; () banked
  9946  011856  5D6C               	subwf	(??_delay_ms+4)& (0+255),w,b
  9947  011858  0100               	movlb	0	; () banked
  9948  01185A  5165               	movf	(delay_ms@x+1)& (0+255),w,b
  9949  01185C  0100               	movlb	0	; () banked
  9950  01185E  596D               	subwfb	(??_delay_ms+5)& (0+255),w,b
  9951  011860  0100               	movlb	0	; () banked
  9952  011862  5166               	movf	(delay_ms@x+2)& (0+255),w,b
  9953  011864  0100               	movlb	0	; () banked
  9954  011866  596E               	subwfb	(??_delay_ms+6)& (0+255),w,b
  9955  011868  0100               	movlb	0	; () banked
  9956  01186A  5167               	movf	(delay_ms@x+3)& (0+255),w,b
  9957  01186C  0100               	movlb	0	; () banked
  9958  01186E  596F               	subwfb	(??_delay_ms+7)& (0+255),w,b
  9959  011870  A0D8               	btfss	status,0,c
  9960  011872  D7C2               	goto	l6763
  9961                           
  9962                           ; BSR set to: 0
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;delays.c: 66: return;
  9966  011874  0012               	return		;funcret
  9967  011876                     __end_of_delay_ms:
  9968                           	opt stack 0
  9969                           tblptru	equ	0xFF8
  9970                           tblptrh	equ	0xFF7
  9971                           tblptrl	equ	0xFF6
  9972                           tablat	equ	0xFF5
  9973                           prodh	equ	0xFF4
  9974                           prodl	equ	0xFF3
  9975                           intcon	equ	0xFF2
  9976                           intcon2	equ	0xFF1
  9977                           intcon3	equ	0xFF0
  9978                           indf0	equ	0xFEF
  9979                           postinc0	equ	0xFEE
  9980                           fsr0h	equ	0xFEA
  9981                           fsr0l	equ	0xFE9
  9982                           wreg	equ	0xFE8
  9983                           postdec1	equ	0xFE5
  9984                           plusw1	equ	0xFE3
  9985                           fsr1h	equ	0xFE2
  9986                           fsr1l	equ	0xFE1
  9987                           indf2	equ	0xFDF
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           plusw2	equ	0xFDB
  9991                           fsr2h	equ	0xFDA
  9992                           fsr2l	equ	0xFD9
  9993                           status	equ	0xFD8
  9994                           
  9995 ;; *************** function _millis *****************
  9996 ;; Defined at:
  9997 ;;		line 110 in file "delays.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  4    0[BANK0 ] unsigned long 
 10004 ;; Registers used:
 10005 ;;		None
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;Total ram usage:        4 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    3
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_delay_ms
 10022 ;;		_delay_s
 10023 ;;		_PS2_readGamepad
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text37
 10028  012118                     __ptext37:
 10029                           	opt stack 0
 10030  012118                     _millis:
 10031                           	opt stack 24
 10032                           
 10033                           ;delays.c: 112: return millisCount;
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;incstack = 0
 10037  012118  C0DA  F060         	movff	_millisCount,?_millis
 10038  01211C  C0DB  F061         	movff	_millisCount+1,?_millis+1
 10039  012120  C0DC  F062         	movff	_millisCount+2,?_millis+2
 10040  012124  C0DD  F063         	movff	_millisCount+3,?_millis+3
 10041  012128  0012               	return		;funcret
 10042  01212A                     __end_of_millis:
 10043                           	opt stack 0
 10044                           tblptru	equ	0xFF8
 10045                           tblptrh	equ	0xFF7
 10046                           tblptrl	equ	0xFF6
 10047                           tablat	equ	0xFF5
 10048                           prodh	equ	0xFF4
 10049                           prodl	equ	0xFF3
 10050                           intcon	equ	0xFF2
 10051                           intcon2	equ	0xFF1
 10052                           intcon3	equ	0xFF0
 10053                           indf0	equ	0xFEF
 10054                           postinc0	equ	0xFEE
 10055                           fsr0h	equ	0xFEA
 10056                           fsr0l	equ	0xFE9
 10057                           wreg	equ	0xFE8
 10058                           postdec1	equ	0xFE5
 10059                           plusw1	equ	0xFE3
 10060                           fsr1h	equ	0xFE2
 10061                           fsr1l	equ	0xFE1
 10062                           indf2	equ	0xFDF
 10063                           postinc2	equ	0xFDE
 10064                           postdec2	equ	0xFDD
 10065                           plusw2	equ	0xFDB
 10066                           fsr2h	equ	0xFDA
 10067                           fsr2l	equ	0xFD9
 10068                           status	equ	0xFD8
 10069                           
 10070 ;; *************** function _encoderInterrupt *****************
 10071 ;; Defined at:
 10072 ;;		line 40 in file "encoders.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;		None
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;		None               void
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;Total ram usage:       17 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    2
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		Interrupt level 1
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	intcodelo
 10101  000018                     __pintcodelo:
 10102                           	opt stack 0
 10103  000018                     _encoderInterrupt:
 10104                           	opt stack 24
 10105                           
 10106                           ;incstack = 0
 10107  000018  CFD8 F001          	movff	status,??_encoderInterrupt
 10108  00001C  CFE8 F002          	movff	wreg,??_encoderInterrupt+1
 10109  000020  CFE0 F003          	movff	bsr,??_encoderInterrupt+2
 10110  000024  CFFA F004          	movff	pclath,??_encoderInterrupt+3
 10111  000028  CFFB F005          	movff	pclatu,??_encoderInterrupt+4
 10112  00002C  CFE9 F006          	movff	fsr0l,??_encoderInterrupt+5
 10113  000030  CFEA F007          	movff	fsr0h,??_encoderInterrupt+6
 10114  000034  CFE1 F008          	movff	fsr1l,??_encoderInterrupt+7
 10115  000038  CFE2 F009          	movff	fsr1h,??_encoderInterrupt+8
 10116  00003C  CFD9 F00A          	movff	fsr2l,??_encoderInterrupt+9
 10117  000040  CFDA F00B          	movff	fsr2h,??_encoderInterrupt+10
 10118  000044  CFF3 F00C          	movff	prodl,??_encoderInterrupt+11
 10119  000048  CFF4 F00D          	movff	prodh,??_encoderInterrupt+12
 10120  00004C  CFF6 F00E          	movff	tblptrl,??_encoderInterrupt+13
 10121  000050  CFF7 F00F          	movff	tblptrh,??_encoderInterrupt+14
 10122  000054  CFF8 F010          	movff	tblptru,??_encoderInterrupt+15
 10123  000058  CFF5 F011          	movff	tablat,??_encoderInterrupt+16
 10124                           
 10125                           ;encoders.c: 42: if(INT1IF == 1)
 10126  00005C  A0F0               	btfss	intcon3,0,c	;volatile
 10127  00005E  D013               	goto	i1l376
 10128                           
 10129                           ;encoders.c: 43: {
 10130                           ;encoders.c: 44: if(PORTBbits.RB0 == 1)
 10131  000060  A081               	btfss	3969,0,c	;volatile
 10132  000062  D008               	goto	i1l3969
 10133                           
 10134                           ;encoders.c: 45: {
 10135                           ;encoders.c: 46: left_count--;
 10136  000064  0EFF               	movlw	255
 10137  000066  2624               	addwf	_left_count,f,c	;volatile
 10138  000068  0EFF               	movlw	255
 10139  00006A  2225               	addwfc	_left_count+1,f,c	;volatile
 10140  00006C  0EFF               	movlw	255
 10141  00006E  2226               	addwfc	_left_count+2,f,c	;volatile
 10142  000070  0EFF               	movlw	255
 10143  000072  D005               	goto	L2
 10144  000074                     i1l3969:
 10145                           
 10146                           ;encoders.c: 48: else
 10147                           ;encoders.c: 49: {
 10148                           ;encoders.c: 50: left_count++;
 10149  000074  0E01               	movlw	1
 10150  000076  2624               	addwf	_left_count,f,c	;volatile
 10151  000078  0E00               	movlw	0
 10152  00007A  2225               	addwfc	_left_count+1,f,c	;volatile
 10153  00007C  2226               	addwfc	_left_count+2,f,c	;volatile
 10154  00007E                     L2:
 10155  00007E  2227               	addwfc	_left_count+3,f,c	;volatile
 10156  000080  D000               	goto	i1l3971
 10157  000082                     i1l3971:
 10158                           
 10159                           ;encoders.c: 51: }
 10160                           ;encoders.c: 52: INT1IF = 0;
 10161  000082  90F0               	bcf	intcon3,0,c	;volatile
 10162                           
 10163                           ;encoders.c: 53: }
 10164  000084  D015               	goto	i1l383
 10165  000086                     i1l376:
 10166                           
 10167                           ;encoders.c: 54: else if(INT3IF == 1)
 10168  000086  A4F0               	btfss	intcon3,2,c	;volatile
 10169  000088  D013               	goto	i1l383
 10170                           
 10171                           ;encoders.c: 55: {
 10172                           ;encoders.c: 56: if(PORTBbits.RB2 == 1)
 10173  00008A  A481               	btfss	3969,2,c	;volatile
 10174  00008C  D008               	goto	i1l3977
 10175                           
 10176                           ;encoders.c: 57: {
 10177                           ;encoders.c: 58: right_count--;
 10178  00008E  0EFF               	movlw	255
 10179  000090  2628               	addwf	_right_count,f,c	;volatile
 10180  000092  0EFF               	movlw	255
 10181  000094  2229               	addwfc	_right_count+1,f,c	;volatile
 10182  000096  0EFF               	movlw	255
 10183  000098  222A               	addwfc	_right_count+2,f,c	;volatile
 10184  00009A  0EFF               	movlw	255
 10185  00009C  D005               	goto	L3
 10186  00009E                     i1l3977:
 10187                           
 10188                           ;encoders.c: 60: else
 10189                           ;encoders.c: 61: {
 10190                           ;encoders.c: 62: right_count++;
 10191  00009E  0E01               	movlw	1
 10192  0000A0  2628               	addwf	_right_count,f,c	;volatile
 10193  0000A2  0E00               	movlw	0
 10194  0000A4  2229               	addwfc	_right_count+1,f,c	;volatile
 10195  0000A6  222A               	addwfc	_right_count+2,f,c	;volatile
 10196  0000A8                     L3:
 10197  0000A8  222B               	addwfc	_right_count+3,f,c	;volatile
 10198  0000AA  D000               	goto	i1l3979
 10199  0000AC                     i1l3979:
 10200                           
 10201                           ;encoders.c: 63: }
 10202                           ;encoders.c: 64: INT3IF = 0;
 10203  0000AC  94F0               	bcf	intcon3,2,c	;volatile
 10204  0000AE  D000               	goto	i1l383
 10205  0000B0                     i1l383:
 10206  0000B0  C011  FFF5         	movff	??_encoderInterrupt+16,tablat
 10207  0000B4  C010  FFF8         	movff	??_encoderInterrupt+15,tblptru
 10208  0000B8  C00F  FFF7         	movff	??_encoderInterrupt+14,tblptrh
 10209  0000BC  C00E  FFF6         	movff	??_encoderInterrupt+13,tblptrl
 10210  0000C0  C00D  FFF4         	movff	??_encoderInterrupt+12,prodh
 10211  0000C4  C00C  FFF3         	movff	??_encoderInterrupt+11,prodl
 10212  0000C8  C00B  FFDA         	movff	??_encoderInterrupt+10,fsr2h
 10213  0000CC  C00A  FFD9         	movff	??_encoderInterrupt+9,fsr2l
 10214  0000D0  C009  FFE2         	movff	??_encoderInterrupt+8,fsr1h
 10215  0000D4  C008  FFE1         	movff	??_encoderInterrupt+7,fsr1l
 10216  0000D8  C007  FFEA         	movff	??_encoderInterrupt+6,fsr0h
 10217  0000DC  C006  FFE9         	movff	??_encoderInterrupt+5,fsr0l
 10218  0000E0  C005  FFFB         	movff	??_encoderInterrupt+4,pclatu
 10219  0000E4  C004  FFFA         	movff	??_encoderInterrupt+3,pclath
 10220  0000E8  C003  FFE0         	movff	??_encoderInterrupt+2,bsr
 10221  0000EC  C002  FFE8         	movff	??_encoderInterrupt+1,wreg
 10222  0000F0  C001  FFD8         	movff	??_encoderInterrupt,status
 10223  0000F4  0010               	retfie	
 10224  0000F6                     __end_of_encoderInterrupt:
 10225                           	opt stack 0
 10226                           pclatu	equ	0xFFB
 10227                           pclath	equ	0xFFA
 10228                           tblptru	equ	0xFF8
 10229                           tblptrh	equ	0xFF7
 10230                           tblptrl	equ	0xFF6
 10231                           tablat	equ	0xFF5
 10232                           prodh	equ	0xFF4
 10233                           prodl	equ	0xFF3
 10234                           intcon	equ	0xFF2
 10235                           intcon2	equ	0xFF1
 10236                           intcon3	equ	0xFF0
 10237                           indf0	equ	0xFEF
 10238                           postinc0	equ	0xFEE
 10239                           fsr0h	equ	0xFEA
 10240                           fsr0l	equ	0xFE9
 10241                           wreg	equ	0xFE8
 10242                           postdec1	equ	0xFE5
 10243                           plusw1	equ	0xFE3
 10244                           fsr1h	equ	0xFE2
 10245                           fsr1l	equ	0xFE1
 10246                           bsr	equ	0xFE0
 10247                           indf2	equ	0xFDF
 10248                           postinc2	equ	0xFDE
 10249                           postdec2	equ	0xFDD
 10250                           plusw2	equ	0xFDB
 10251                           fsr2h	equ	0xFDA
 10252                           fsr2l	equ	0xFD9
 10253                           status	equ	0xFD8
 10254                           
 10255 ;; *************** function _communicationInterruptHandler *****************
 10256 ;; Defined at:
 10257 ;;		line 216 in file "main.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;		None               void
 10264 ;; Registers used:
 10265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10274 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10275 ;;Total ram usage:       14 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    1
 10278 ;; This function calls:
 10279 ;;		_tickMillis
 10280 ;; This function is called by:
 10281 ;;		Interrupt level 2
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	intcode
 10286  000008                     __pintcode:
 10287                           	opt stack 0
 10288  000008                     _communicationInterruptHandler:
 10289                           	opt stack 24
 10290                           
 10291                           ;incstack = 0
 10292  000008  CFFA F012          	movff	pclath,??_communicationInterruptHandler
 10293  00000C  CFFB F013          	movff	pclatu,??_communicationInterruptHandler+1
 10294  000010  CFE9 F014          	movff	fsr0l,??_communicationInterruptHandler+2
 10295  000014  EFDE  F089         	goto	int_func
 10296                           pclatu	equ	0xFFB
 10297                           pclath	equ	0xFFA
 10298                           tblptru	equ	0xFF8
 10299                           tblptrh	equ	0xFF7
 10300                           tblptrl	equ	0xFF6
 10301                           tablat	equ	0xFF5
 10302                           prodh	equ	0xFF4
 10303                           prodl	equ	0xFF3
 10304                           intcon	equ	0xFF2
 10305                           intcon2	equ	0xFF1
 10306                           intcon3	equ	0xFF0
 10307                           indf0	equ	0xFEF
 10308                           postinc0	equ	0xFEE
 10309                           fsr0h	equ	0xFEA
 10310                           fsr0l	equ	0xFE9
 10311                           wreg	equ	0xFE8
 10312                           postdec1	equ	0xFE5
 10313                           plusw1	equ	0xFE3
 10314                           fsr1h	equ	0xFE2
 10315                           fsr1l	equ	0xFE1
 10316                           bsr	equ	0xFE0
 10317                           indf2	equ	0xFDF
 10318                           postinc2	equ	0xFDE
 10319                           postdec2	equ	0xFDD
 10320                           plusw2	equ	0xFDB
 10321                           fsr2h	equ	0xFDA
 10322                           fsr2l	equ	0xFD9
 10323                           status	equ	0xFD8
 10324                           
 10325                           	psect	intcode_body
 10326  0113BC                     __pintcode_body:
 10327                           	opt stack 24
 10328  0113BC                     int_func:
 10329                           	opt stack 24
 10330  0113BC  CFEA F015          	movff	fsr0h,??_communicationInterruptHandler+3
 10331  0113C0  CFE1 F016          	movff	fsr1l,??_communicationInterruptHandler+4
 10332  0113C4  CFE2 F017          	movff	fsr1h,??_communicationInterruptHandler+5
 10333  0113C8  CFD9 F018          	movff	fsr2l,??_communicationInterruptHandler+6
 10334  0113CC  CFDA F019          	movff	fsr2h,??_communicationInterruptHandler+7
 10335  0113D0  CFF3 F01A          	movff	prodl,??_communicationInterruptHandler+8
 10336  0113D4  CFF4 F01B          	movff	prodh,??_communicationInterruptHandler+9
 10337  0113D8  CFF6 F01C          	movff	tblptrl,??_communicationInterruptHandler+10
 10338  0113DC  CFF7 F01D          	movff	tblptrh,??_communicationInterruptHandler+11
 10339  0113E0  CFF8 F01E          	movff	tblptru,??_communicationInterruptHandler+12
 10340  0113E4  CFF5 F01F          	movff	tablat,??_communicationInterruptHandler+13
 10341                           
 10342                           ;main.c: 218: if(TMR0IF == 1)
 10343  0113E8  A4F2               	btfss	intcon,2,c	;volatile
 10344  0113EA  D008               	goto	i2l265
 10345                           
 10346                           ;main.c: 219: {
 10347                           ;main.c: 220: TMR0L = 193;
 10348  0113EC  0EC1               	movlw	193
 10349  0113EE  6ED6               	movwf	4054,c	;volatile
 10350                           
 10351                           ;main.c: 221: TMR0IF = 0;
 10352  0113F0  94F2               	bcf	intcon,2,c	;volatile
 10353                           
 10354                           ;main.c: 222: TMR0IE = 1;
 10355  0113F2  8AF2               	bsf	intcon,5,c	;volatile
 10356                           
 10357                           ;main.c: 223: tickMillis();
 10358  0113F4  EC95  F090         	call	_tickMillis	;wreg free
 10359                           
 10360                           ;main.c: 224: return;
 10361  0113F8  D02C               	goto	i2l263
 10362                           
 10363                           ;main.c: 225: }
 10364                           ;main.c: 230: if(0) {
 10365  0113FA  D000               	goto	i2l265
 10366  0113FC                     i2l265:
 10367                           
 10368                           ;main.c: 237: }
 10369                           ;main.c: 238: if(PIR1bits.RC1IF)
 10370  0113FC  AA9E               	btfss	3998,5,c	;volatile
 10371  0113FE  D00C               	goto	i2l6303
 10372                           
 10373                           ;main.c: 239: {
 10374                           ;main.c: 240: FONA_BUFF[FONA_INDEX] = RCREG1;
 10375  011400  5036               	movf	_FONA_INDEX,w,c	;volatile
 10376  011402  0D01               	mullw	1
 10377  011404  0E00               	movlw	low _FONA_BUFF
 10378  011406  24F3               	addwf	prodl,w,c
 10379  011408  6ED9               	movwf	fsr2l,c
 10380  01140A  0E01               	movlw	high _FONA_BUFF
 10381  01140C  20F4               	addwfc	prodh,w,c
 10382  01140E  6EDA               	movwf	fsr2h,c
 10383  011410  CFAE FFDF          	movff	4014,indf2	;volatile
 10384                           
 10385                           ;main.c: 241: FONA_INDEX++;
 10386  011414  2A36               	incf	_FONA_INDEX,f,c	;volatile
 10387  011416  D000               	goto	i2l6303
 10388  011418                     i2l6303:
 10389                           
 10390                           ;main.c: 242: }
 10391                           ;main.c: 243: if(PIR3bits.RC2IF)
 10392  011418  50A4               	movf	4004,w,c	;volatile
 10393                           
 10394                           ;main.c: 246: }
 10395                           ;main.c: 247: if(PIR6bits.RC3IF)
 10396                           
 10397                           ;main.c: 244: {
 10398  01141A  AAA6               	btfss	4006,5,c	;volatile
 10399  01141C  D00C               	goto	i2l6309
 10400                           
 10401                           ;main.c: 248: {
 10402                           ;main.c: 249: PIXY_BUFF[PIXY_INDEX] = RCREG3;
 10403  01141E  5037               	movf	_PIXY_INDEX,w,c	;volatile
 10404  011420  0D01               	mullw	1
 10405  011422  0EC8               	movlw	low _PIXY_BUFF
 10406  011424  24F3               	addwf	prodl,w,c
 10407  011426  6ED9               	movwf	fsr2l,c
 10408  011428  0E03               	movlw	high _PIXY_BUFF
 10409  01142A  20F4               	addwfc	prodh,w,c
 10410  01142C  6EDA               	movwf	fsr2h,c
 10411  01142E  CF2A FFDF          	movff	3882,indf2	;volatile
 10412                           
 10413                           ;main.c: 250: PIXY_INDEX++;
 10414  011432  2A37               	incf	_PIXY_INDEX,f,c	;volatile
 10415  011434  D000               	goto	i2l6309
 10416  011436                     i2l6309:
 10417                           
 10418                           ;main.c: 251: }
 10419                           ;main.c: 252: if(PIR6bits.RC4IF)
 10420  011436  AEA6               	btfss	4006,7,c	;volatile
 10421  011438  D00C               	goto	i2l263
 10422                           
 10423                           ;main.c: 253: {
 10424                           ;main.c: 254: USB_BUFF[USB_INDEX] = RCREG4;
 10425  01143A  5039               	movf	_USB_INDEX,w,c	;volatile
 10426  01143C  0D01               	mullw	1
 10427  01143E  0EBC               	movlw	low _USB_BUFF
 10428  011440  24F3               	addwf	prodl,w,c
 10429  011442  6ED9               	movwf	fsr2l,c
 10430  011444  0E05               	movlw	high _USB_BUFF
 10431  011446  20F4               	addwfc	prodh,w,c
 10432  011448  6EDA               	movwf	fsr2h,c
 10433  01144A  CEFA FFDF          	movff	3834,indf2	;volatile
 10434                           
 10435                           ;main.c: 255: USB_INDEX++;
 10436  01144E  2A39               	incf	_USB_INDEX,f,c	;volatile
 10437  011450  D000               	goto	i2l263
 10438  011452                     i2l263:
 10439  011452  C01F  FFF5         	movff	??_communicationInterruptHandler+13,tablat
 10440  011456  C01E  FFF8         	movff	??_communicationInterruptHandler+12,tblptru
 10441  01145A  C01D  FFF7         	movff	??_communicationInterruptHandler+11,tblptrh
 10442  01145E  C01C  FFF6         	movff	??_communicationInterruptHandler+10,tblptrl
 10443  011462  C01B  FFF4         	movff	??_communicationInterruptHandler+9,prodh
 10444  011466  C01A  FFF3         	movff	??_communicationInterruptHandler+8,prodl
 10445  01146A  C019  FFDA         	movff	??_communicationInterruptHandler+7,fsr2h
 10446  01146E  C018  FFD9         	movff	??_communicationInterruptHandler+6,fsr2l
 10447  011472  C017  FFE2         	movff	??_communicationInterruptHandler+5,fsr1h
 10448  011476  C016  FFE1         	movff	??_communicationInterruptHandler+4,fsr1l
 10449  01147A  C015  FFEA         	movff	??_communicationInterruptHandler+3,fsr0h
 10450  01147E  C014  FFE9         	movff	??_communicationInterruptHandler+2,fsr0l
 10451  011482  C013  FFFB         	movff	??_communicationInterruptHandler+1,pclatu
 10452  011486  C012  FFFA         	movff	??_communicationInterruptHandler,pclath
 10453  01148A  0011               	retfie		f
 10454  01148C                     __end_of_communicationInterruptHandler:
 10455                           	opt stack 0
 10456                           pclatu	equ	0xFFB
 10457                           pclath	equ	0xFFA
 10458                           tblptru	equ	0xFF8
 10459                           tblptrh	equ	0xFF7
 10460                           tblptrl	equ	0xFF6
 10461                           tablat	equ	0xFF5
 10462                           prodh	equ	0xFF4
 10463                           prodl	equ	0xFF3
 10464                           intcon	equ	0xFF2
 10465                           intcon2	equ	0xFF1
 10466                           intcon3	equ	0xFF0
 10467                           indf0	equ	0xFEF
 10468                           postinc0	equ	0xFEE
 10469                           fsr0h	equ	0xFEA
 10470                           fsr0l	equ	0xFE9
 10471                           wreg	equ	0xFE8
 10472                           postdec1	equ	0xFE5
 10473                           plusw1	equ	0xFE3
 10474                           fsr1h	equ	0xFE2
 10475                           fsr1l	equ	0xFE1
 10476                           bsr	equ	0xFE0
 10477                           indf2	equ	0xFDF
 10478                           postinc2	equ	0xFDE
 10479                           postdec2	equ	0xFDD
 10480                           plusw2	equ	0xFDB
 10481                           fsr2h	equ	0xFDA
 10482                           fsr2l	equ	0xFD9
 10483                           status	equ	0xFD8
 10484                           
 10485 ;; *************** function _tickMillis *****************
 10486 ;; Defined at:
 10487 ;;		line 121 in file "delays.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;		None
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;		None               void
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10505 ;;Total ram usage:        0 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_communicationInterruptHandler
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text40
 10515  01212A                     __ptext40:
 10516                           	opt stack 0
 10517  01212A                     _tickMillis:
 10518                           	opt stack 24
 10519                           
 10520                           ;delays.c: 123: ++millisCount;
 10521                           
 10522                           ;incstack = 0
 10523  01212A  0E01               	movlw	1
 10524  01212C  0100               	movlb	0	; () banked
 10525  01212E  27DA               	addwf	_millisCount& (0+255),f,b
 10526  012130  0E00               	movlw	0
 10527  012132  23DB               	addwfc	(_millisCount+1)& (0+255),f,b
 10528  012134  23DC               	addwfc	(_millisCount+2)& (0+255),f,b
 10529  012136  23DD               	addwfc	(_millisCount+3)& (0+255),f,b
 10530                           
 10531                           ; BSR set to: 0
 10532  012138  0012               	return		;funcret
 10533  01213A                     __end_of_tickMillis:
 10534                           	opt stack 0
 10535                           pclatu	equ	0xFFB
 10536                           pclath	equ	0xFFA
 10537                           tblptru	equ	0xFF8
 10538                           tblptrh	equ	0xFF7
 10539                           tblptrl	equ	0xFF6
 10540                           tablat	equ	0xFF5
 10541                           prodh	equ	0xFF4
 10542                           prodl	equ	0xFF3
 10543                           intcon	equ	0xFF2
 10544                           intcon2	equ	0xFF1
 10545                           intcon3	equ	0xFF0
 10546                           indf0	equ	0xFEF
 10547                           postinc0	equ	0xFEE
 10548                           fsr0h	equ	0xFEA
 10549                           fsr0l	equ	0xFE9
 10550                           wreg	equ	0xFE8
 10551                           postdec1	equ	0xFE5
 10552                           plusw1	equ	0xFE3
 10553                           fsr1h	equ	0xFE2
 10554                           fsr1l	equ	0xFE1
 10555                           bsr	equ	0xFE0
 10556                           indf2	equ	0xFDF
 10557                           postinc2	equ	0xFDE
 10558                           postdec2	equ	0xFDD
 10559                           plusw2	equ	0xFDB
 10560                           fsr2h	equ	0xFDA
 10561                           fsr2l	equ	0xFD9
 10562                           status	equ	0xFD8
 10563                           pclatu	equ	0xFFB
 10564                           pclath	equ	0xFFA
 10565                           tblptru	equ	0xFF8
 10566                           tblptrh	equ	0xFF7
 10567                           tblptrl	equ	0xFF6
 10568                           tablat	equ	0xFF5
 10569                           prodh	equ	0xFF4
 10570                           prodl	equ	0xFF3
 10571                           intcon	equ	0xFF2
 10572                           intcon2	equ	0xFF1
 10573                           intcon3	equ	0xFF0
 10574                           indf0	equ	0xFEF
 10575                           postinc0	equ	0xFEE
 10576                           fsr0h	equ	0xFEA
 10577                           fsr0l	equ	0xFE9
 10578                           wreg	equ	0xFE8
 10579                           postdec1	equ	0xFE5
 10580                           plusw1	equ	0xFE3
 10581                           fsr1h	equ	0xFE2
 10582                           fsr1l	equ	0xFE1
 10583                           bsr	equ	0xFE0
 10584                           indf2	equ	0xFDF
 10585                           postinc2	equ	0xFDE
 10586                           postdec2	equ	0xFDD
 10587                           plusw2	equ	0xFDB
 10588                           fsr2h	equ	0xFDA
 10589                           fsr2l	equ	0xFD9
 10590                           status	equ	0xFD8
 10591                           
 10592                           	psect	rparam
 10593  0000                     pclatu	equ	0xFFB
 10594                           pclath	equ	0xFFA
 10595                           tblptru	equ	0xFF8
 10596                           tblptrh	equ	0xFF7
 10597                           tblptrl	equ	0xFF6
 10598                           tablat	equ	0xFF5
 10599                           prodh	equ	0xFF4
 10600                           prodl	equ	0xFF3
 10601                           intcon	equ	0xFF2
 10602                           intcon2	equ	0xFF1
 10603                           intcon3	equ	0xFF0
 10604                           indf0	equ	0xFEF
 10605                           postinc0	equ	0xFEE
 10606                           fsr0h	equ	0xFEA
 10607                           fsr0l	equ	0xFE9
 10608                           wreg	equ	0xFE8
 10609                           postdec1	equ	0xFE5
 10610                           plusw1	equ	0xFE3
 10611                           fsr1h	equ	0xFE2
 10612                           fsr1l	equ	0xFE1
 10613                           bsr	equ	0xFE0
 10614                           indf2	equ	0xFDF
 10615                           postinc2	equ	0xFDE
 10616                           postdec2	equ	0xFDD
 10617                           plusw2	equ	0xFDB
 10618                           fsr2h	equ	0xFDA
 10619                           fsr2l	equ	0xFD9
 10620                           status	equ	0xFD8


Data Sizes:
    Strings     190
    Constant    1579
    Data        88
    BSS         1643
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      64
    BANK0           160     45     126
    BANK1           256      0     239
    BANK2           256     51     229
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString_1915(COMRAM[2]), UART_transmitString@tempString(COMRAM[20]), STR_10(CODE[2]), LCD_printString@tempString_590(BANK2[2]), 
		 -> LCD_printString@tempString(BANK2[20]), STR_1(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString(COMRAM[20]), LCD_printString@tempString(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    I2C_read@dataRetAdr	PTR unsigned char  size(2) Largest target is 3577
		 -> RAM(DATA[3577]), 

    compass_mainRead@positionData	PTR unsigned char  size(2) Largest target is 6
		 -> main@positionData(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 21
		 -> FONA_CheckStrength@genString(COMRAM[21]), FONA_Text@genString(COMRAM[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    LCD_printString@input	PTR unsigned char  size(2) Largest target is 18
		 -> STR_17(CODE[7]), STR_16(CODE[13]), STR_9(CODE[18]), STR_8(CODE[15]), 
		 -> STR_7(CODE[18]), STR_6(CODE[17]), STR_5(CODE[16]), STR_4(CODE[18]), 
		 -> STR_3(CODE[18]), LCD_printBin@string(COMRAM[9]), LCD_printVal@temp(COMRAM[3]), LCD_printChar@string(COMRAM[2]), 

    LCD_printString@aptr	PTR void [1] size(2) Largest target is 0
		 -> ?_LCD_printString(BANK0[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _communicationInterruptHandler in COMRAM

    None.

Critical Paths under _encoderInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCD_printString
    _motorDrive_init->_motorDrive_setSpeeds
    _motorDrive_setSpeeds->___awdiv
    ___awdiv->___wmul
    _LCD_init4bit->_delay_ms
    _delay_s->___lmul
    _compass_mainRead->_I2C_read
    _compass_mainRead->_I2C_write
    _compass_mainBoardInit->_I2C_writeRegister
    _I2C_writeRegister->_I2C_write
    _I2C_write->_I2C_wait
    _I2C_open->_I2C_wait
    _I2C_close->_I2C_wait
    _LCD_printString->_LCD_placeCursor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_placeCursor->_delay_ms
    _delay_ms->_millis

Critical Paths under _communicationInterruptHandler in BANK0

    None.

Critical Paths under _encoderInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _communicationInterruptHandler in BANK1

    None.

Critical Paths under _encoderInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_LCD_printString

Critical Paths under _communicationInterruptHandler in BANK2

    None.

Critical Paths under _encoderInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _communicationInterruptHandler in BANK3

    None.

Critical Paths under _encoderInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _communicationInterruptHandler in BANK4

    None.

Critical Paths under _encoderInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _communicationInterruptHandler in BANK5

    None.

Critical Paths under _encoderInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _communicationInterruptHandler in BANK6

    None.

Critical Paths under _encoderInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _communicationInterruptHandler in BANK7

    None.

Critical Paths under _encoderInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _communicationInterruptHandler in BANK8

    None.

Critical Paths under _encoderInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _communicationInterruptHandler in BANK9

    None.

Critical Paths under _encoderInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _communicationInterruptHandler in BANK10

    None.

Critical Paths under _encoderInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _communicationInterruptHandler in BANK11

    None.

Critical Paths under _encoderInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _communicationInterruptHandler in BANK12

    None.

Critical Paths under _encoderInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _communicationInterruptHandler in BANK13

    None.

Critical Paths under _encoderInterrupt in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   34818
                                             38 BANK0      7     7      0
                    _LCD_printString
              _compass_mainBoardInit
                   _compass_mainRead
                            _delay_s
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   11243
                           _I2C_init
                       _LCD_init4bit
                          _UART_init
                        _clearMillis
                      _encoders_init
                    _motorDrive_init
                      _settings_init
 ---------------------------------------------------------------------------------
 (2) _settings_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorDrive_init                                      0     0      0    5720
                          _OpenEPWM1
                          _OpenEPWM3
                         _SetDCEPWM1
                         _SetDCEPWM3
                     _SetOutputEPWM1
                     _SetOutputEPWM3
               _motorDrive_setSpeeds
 ---------------------------------------------------------------------------------
 (3) _motorDrive_setSpeeds                                24    23      1    4070
                                             14 BANK0     24    23      1
                         _SetDCEPWM1
                         _SetDCEPWM3
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1230
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1215
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM3                                           6     4      2     253
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM1                                           6     4      2     253
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM3                                       3     2      1     340
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM1                                       3     2      1     340
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM3                                            3     2      1     232
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM1                                            3     2      1     232
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _encoders_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearMillis                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init4bit                                         0     0      0    5492
                         _delay_init
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_s                                             16    12      4    1239
                                             12 BANK0     16    12      4
                             ___lmul
                             _millis
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1020
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _compass_mainRead                                     6     4      2    1513
                                              4 BANK0      6     4      2
                          _I2C_close
                           _I2C_open
                           _I2C_read
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             4     2      2     180
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _compass_mainBoardInit                                2     2      0    2429
                                              9 BANK0      2     2      0
                  _I2C_writeRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_writeRegister                                    5     2      3    2355
                                              4 BANK0      5     2      3
                          _I2C_close
                           _I2C_open
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            2     1      1     971
                                              2 BANK0      2     1      1
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_open                                             1     1      0      62
                                              2 BANK0      1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_close                                            1     1      0      62
                                              2 BANK0      1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_wait                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_printString                                     62    55      7   18326
                                             27 BANK0     11     4      7
                                              0 BANK2     51    51      0
                    _LCD_placeCursor
                           _delay_ms
                           _delay_us
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    1067
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1785
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_placeCursor                                      7     6      1    6207
                                             20 BANK0      7     6      1
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             4     0      4    3964
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                            16    12      4    1528
                                              4 BANK0     16    12      4
                             _millis
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _encoderInterrupt                                    17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _communicationInterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
                         _tickMillis
 ---------------------------------------------------------------------------------
 (7) _tickMillis                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_printString
     _LCD_placeCursor
       _delay_ms
         _millis
       _delay_us
     _delay_ms
       _millis
     _delay_us
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat
   _compass_mainBoardInit
     _I2C_writeRegister
       _I2C_close
         _I2C_wait
       _I2C_open
         _I2C_wait
       _I2C_write
         _I2C_wait
   _compass_mainRead
     _I2C_close
       _I2C_wait
     _I2C_open
       _I2C_wait
     _I2C_read
     _I2C_write
       _I2C_wait
   _delay_s
     ___lmul
     _millis
   _init
     _I2C_init
     _LCD_init4bit
       _delay_init
       _delay_ms
         _millis
       _delay_us
     _UART_init
     _clearMillis
     _encoders_init
     _motorDrive_init
       _OpenEPWM1
       _OpenEPWM3
       _SetDCEPWM1
       _SetDCEPWM3
       _SetOutputEPWM1
       _SetOutputEPWM3
       _motorDrive_setSpeeds
         _SetDCEPWM1
         _SetDCEPWM3
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _settings_init

 _encoderInterrupt (ROOT)

 _communicationInterruptHandler (ROOT)
   _tickMillis

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0     3E8      33       28.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     33      E5      10       89.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      7E       5       78.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      40       1       67.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35A       8        0.0%
DATA                 0      0     742       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May 08 06:09:07 2015

                      _compass_mainRead 1A1C                              __CFG_BW$16 000000  
          compass_mainRead@positionData 0064                             __CFG_ABW$MM 000000  
                                    l94 0C28                            ___awdiv@sign 006B  
                    __size_of_I2C_close 0036                                      bsr 000FE0  
                   ___wmul@multiplicand 0062                             __CFG_BORV$1 000000  
                        _SetOutputEPWM1 16A8                          _SetOutputEPWM3 15FA  
                    I2C_read@dataRetAdr 0060                            __CFG_CP0$OFF 000000  
                    __size_of_I2C_write 0054                   _compass_mainBoardInit 1C16  
                                   l120 06C2                                     l116 048A  
                                   l308 2006                                     _GIE 007F97  
                                   _RG0 007C30                                     _RG1 007C31  
                                   _RG2 007C32                                     _RG3 007C33  
                                   _RG4 007C34                                     _RL1 007721  
                                   _RL2 007722                                     _RL3 007723  
                                   _PR2 000FCB                                     _PR4 000F05  
                                   _PR6 000F3E                                     _PR8 000F3B  
                       FONA_init@F16396 01DB                                     prod 000FF3  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F32                              _TXSTA3bits 000F2E  
                            _TXSTA4bits 000EFE                                    l1050 1E24  
                                  l1142 1DE0                                    l1072 1FB8  
                                  l1137 1DDA                                    l1138 1DC4  
                                  l1083 1FEE                                    l1067 1FA4  
                                  l1093 1D9A                                    l1078 1FDA  
                                  l1351 168C                                    l1088 1D86  
                                  l1352 169E                                    l1089 1D78  
                                  l1353 16A2                                    l1290 1732  
                                  l1346 1676                                    l1291 1744  
                                  l1292 1748                                    l1285 171C  
                                  l1924 1B16                                    l1934 1CEA  
                                  l7001 1DA8                                    l7013 1FE2  
                                  l7023 1ABC                                    l7025 1ACA  
                                  l7035 1B06                                    l7027 1AD4  
                                  l7051 1CDA                                    l7043 1C9C  
                                  l7045 1CAA                                    l7047 1CB4  
                                  l7411 113A                                    l7403 1112  
                                  l7421 11D2                                    l7319 0A54  
                                  l6703 1EE6                                    l7503 17D2  
                                  l7353 0D6E                                    l7417 119E  
                                  l7409 1134                                    l7361 1D18  
                                  l6801 0E82                                    l7419 11AE  
                                  l7363 1D26                                    l6707 1EFE  
                                  l7531 1BB0                                    l6731 1322  
                                  l6803 0E92                                    l7373 1058  
                                  l7357 1CFE                                    l7621 0670  
                                  l6741 1358                                    l6725 130A  
                                  l6813 0F02                                    l8261 1B2A  
                                  l7391 10CE                                    l7367 103A  
                                  l7359 1D06                                    l7615 065C  
                                  l7535 1BD8                                    l6911 18EC  
                                  l6903 18B8                                    l6823 0F7E  
                                  l6815 0F36                                    l7377 1068  
                                  l7625 068A                                    l7561 0148  
                                  l7553 00EC                                    l6737 1340  
                                  l6753 139A                                    l6825 0F9A  
                                  l6817 0F40                                    l6809 0EEC  
                                  l6763 17F8                                    l6771 1F38  
                                  l7395 10DC                                    l7379 1096  
                                  l7619 0660                                    l7627 0692  
                                  l7563 0150                                    l7547 003A  
                                  l7571 01BA                                    l7483 1782  
                                  l6907 18D2                                    l6931 164E  
                                  l6739 134E                                    l8275 1B80  
                                  l7389 10C8                                    l7581 0248  
                                  l7493 17AA                                    l7661 14A2  
                                  l6853 1A00                                    l6845 19CC  
                                  l6757 13B0                                    l6749 138A  
                                  l6767 1F1C                                    l7399 110C  
                                  l7575 0214                                    l7655 1C80  
                                  l7671 1A62                                    l6871 16EC  
                                  l6943 167A                                    l6935 165C  
                                  l7585 0262                                    l7577 0220  
                                  l7569 01B2                                    l6849 19E6  
                                  l6873 16F4                                    l6929 1646  
                                  l6793 0E56                                    l6785 0E2A  
                                  l6777 0DFE                                    l7667 1A58  
                                  l6795 0E66                                    l6787 0E3A  
                                  l6779 0E0E                                    _ADON 007E0F  
                                  l6981 1D82                                    l7677 1A94  
                                  l6885 1720                                    l6877 1702  
                                  l6959 1FAC                                    STR_1 FFFC  
                                  STR_2 FFC9                                    STR_3 FF8A  
                                  STR_4 FF66                                    STR_5 FFAD  
                                  STR_6 FF9C                                    STR_7 FF54  
                                  STR_8 FFBD                                    STR_9 FF78  
                                  _CPEN 0076C7                                    _LCDA 0076D5  
                                  _DONE 007E00                                    _IPEN 007E87  
                                  u5225 0C38                                    u5235 0C5A  
                                  u5260 1D50                                    u5500 018A  
                                  u5245 0C86                                    u5510 01F4  
                                  u5267 1D46                                    u5507 0180  
                                  u5451 000E                                    u5460 0074  
                                  u5517 01EA                                    u4725 0D8E  
                                  u4575 1E9C                                    u4815 0F4E  
                                  u4735 0DC0                                    u5480 00C8  
                                  u4585 1E54                                    u5555 04E0  
                                  u5467 006A                                    u5565 051E  
                                  u5487 00BE                                    u4785 0EA0  
                                  _SAMP 007E01                                    u6597 1F1E  
                                  _main 1B20                                    _init 20DA  
                                  _mode 003C                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    pclat 000FFA  
                         __CFG_BOREN$ON 000000                        __end_of_I2C_init 1E4A  
                      __end_of_I2C_read 1DFE                                    prodh 000FF4  
                                  prodl 000FF3                        __end_of_I2C_open 1FC4  
                    __CFG_WDTWIN$PS25_0 000000                        __end_of_I2C_wait 1F18  
                                  start 00F6                           __CFG_IESO$OFF 000000  
                    __CFG_LS48MHZ$SYSX2 000000                         _motorDrive_init 1908  
                          ___param_bank 000010                  __end_of_SetOutputEPWM1 174E  
                __end_of_SetOutputEPWM3 16A8                           I2C_write@data 0062  
                          _BAUDCON1bits 000F67                            _BAUDCON2bits 000F31  
                          _BAUDCON3bits 000F2D                            _BAUDCON4bits 000EFD  
                         __CFG_WAIT$OFF 000000                                   ?_main 0001  
                                 ?_init 0001                         __end_of___awdiv 13BC  
                 OpenEPWM3@timer_source 0060                                   STR_12 FFD9  
                                 STR_13 FFEC                                   STR_14 FF40  
                                 STR_15 FFE3                                   STR_16 FFCC  
                                 STR_17 FFF5                                   _RD163 007D8F  
                                 _T0CON 000FD5                         ___awdiv@divisor 0068  
                                 _LCDMD 00778B                                   _RC1IE 007CED  
                                 _RC2IE 007D1D                                   _RC3IE 007B0D  
                                 _RC4IE 007B0F                         __end_of___lwdiv 1B20  
                       __end_of___lwmod 1CF4                                   i1l383 00B0  
                                 i1l376 0086                                   i2l263 1452  
                                 i2l265 13FC                         ___awdiv@counter 006A  
                                 _TX1IE 007CEC                                   _TMR0L 000FD6  
                                 _TMR3H 000FB3                                   _TX2IE 007D1C  
                                 _TMR3L 000FB2                                   _TX3IE 007B0C  
                                 _TX4IE 007B0E                           ?_LCD_init4bit 0001  
                         __CFG_WPSA$128 000000                         __end_of_delay_s 1546  
                   ___lmul@multiplicand 0064                          __CFG_EASHFT$ON 000000  
                       ??_encoders_init 0020                      __size_of_UART_init 010A  
                       __end_of_dpowers FF1F                         ??_settings_init 0020  
                                 _errno 002E                                   _spbrg 0032  
                                 tablat 000FF5                       __end_of_I2C_close 1FFA  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                         __end_of_sprintf 11E2  
                     __end_of_I2C_write 1DAE                              _SetDCEPWM1 1E92  
                            _SetDCEPWM3 1E4A                    __size_of_clearMillis 0018  
                       __initialization 1546                            __end_of_main 1B9C  
                          __end_of_init 2100                         ?_SetOutputEPWM1 0060  
                       ?_SetOutputEPWM3 0060                  ?_compass_mainBoardInit 0001  
                                ??_main 0020                                  ??_init 0020  
             I2C_writeRegister@slaveAdr 0064                           __activetblptr 000003  
                        ??_LCD_init4bit 0020                        __end_of_SineWave FF15  
                   __CFG_WPEND$WPENDMEM 000000                          __CFG_RETEN$OFF 000000  
                  _motorDrive_setSpeeds 0D80                        I2C_close@channel 0062  
                                _CCPR1L 000FBA                                  _CCPR3L 000F4A  
                        __CFG_VBTBOR$ON 000000                                  _ANCON1 000E47  
                                _ANCON2 000E46                                  _ANCON3 000E45  
                      ___awdiv@dividend 0066                __size_of_LCD_placeCursor 035A  
                                _ANSEL6 00723E                                  _ANSEL9 007231  
           compass_mainBoardInit@retVal 006A                                  _INT1IF 007F80  
                                _INT3IF 007F82                                  i1l3971 0082  
                                _IOLOCK 007B36                          __CFG_WDTEN$OFF 000000  
                                i1l3977 009E                                  i1l3969 0074  
                                i1l3979 00AC                                  i2l6303 1418  
                                i2l6309 1436                                  _RCREG1 000FAE  
                                _RCREG3 000F2A                                  _RCREG4 000EFA  
                      _encoderInterrupt 0018                                  _NVCFG0 00746D  
                                _PVCFG0 00746E                                  _PVCFG1 00746F  
               __end_of_motorDrive_init 1998                                  _TMR0IE 007F95  
                                _SPBRG1 000FAF                                  _TMR0IF 007F92  
                                _SPBRG2 000F1F                                  _SPBRG3 000F2B  
                                _SPBRG4 000EFB                                  _TMR0IP 007F8A  
                                _TMR3IE 007D01                                  _TMR3ON 007D88  
                                _TMR4ON 007822                                  _TMR6ON 0079EA  
                                _TRISE0 007CB0                                  _TRISE1 007CB1  
                                _TRISE2 007CB2                                  _TRISE3 007CB3  
                                _TRISE4 007CB4                                  _TRISE5 007CB5  
                                _TRISH0 007CC8                                  _TRISE6 007CB6  
                                _TRISH1 007CC9                                  _TRISE7 007CB7  
                                _TRISH2 007CCA                                  _TRISH3 007CCB  
                                _TRISG7 007CC7                                  _TRISK1 007749  
                                _TRISL0 007730                                  _TXREG1 000FAD  
                                _TXREG2 000F1D                                  _TXREG4 000EF9  
                      __end_of_delay_ms 1876                        __end_of_delay_us 1F56  
                        __CFG_XINST$OFF 000000                      __size_of_OpenEPWM1 0084  
                    __size_of_OpenEPWM3 0092                                  ___lmul 1B9C  
                                ___wmul 1F56                       __end_of_UART_init 12EC  
                             ??___awdiv 0020                          __CFG_STVREN$ON 000000  
                             ??___lwdiv 0020                               ??___lwmod 0020  
                                _config 003A                                  _millis 2118  
                                clear_0 154E                                  clear_1 1560  
                                clear_2 156C                                  clear_3 1578  
                                clear_4 1584                                  clear_5 1590  
                      ___awdiv@quotient 006C                               ??_delay_s 0070  
                       __CFG_CLKOEN$OFF 000000                                  _strcat 1CF4  
                          __pdataCOMRAM 003E                   ?_motorDrive_setSpeeds 006E  
                          __mediumconst F914                               ?_I2C_init 0001  
                             ?_I2C_read 0060                               ?_I2C_open 0001  
                             ?_I2C_wait 0001                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
              __end_of_compass_mainRead 1A9E                         __CFG_DSBITEN$ON 000000  
                             ??_sprintf 0072                         __CFG_DSBOREN$ON 000000  
                            __accesstop 0060                 __end_of__initialization 15F4  
                    __CFG_DSWDTOSC$LPRC 000000                           ___rparam_used 000001  
                       __CFG_T5GSEL$T5G 000000                         __CFG_IOL1WAY$ON 000000  
                           ?_SetDCEPWM1 0060                             ?_SetDCEPWM3 0060  
              I2C_writeRegister@channel 0067                          __pcstackCOMRAM 0001  
                          __pidataBANK0 205A                            __pidataBANK1 20B0  
                LCD_placeCursor@address 007A                         __CFG_DSWDTEN$ON 000000  
                     __CFG_PLLDIV$NODIV 000000                         OpenEPWM1@period 0062  
                       OpenEPWM3@period 0062                              ??_I2C_init 0020  
                            ??_I2C_read 0020                              ??_I2C_open 0020  
                            ??_I2C_wait 0060                       __end_of_OpenEPWM1 1A1C  
                     __end_of_OpenEPWM3 1908                __size_of_LCD_printString 06C4  
                            __pbssBANK0 00B9                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                      ?_motorDrive_init 0001                       ??_LCD_placeCursor 0075  
                  __end_of_LCD_init4bit 0A26                       compass_mainRead@x 0069  
          I2C_writeRegister@startRegAdr 0065                              _delay_init 1FFA  
                               ?___lmul 0060                                 ?___wmul 0060  
                               _ADCBUF0 000FC2                                 _ADCHS0H 000E87  
                               _ADCHS0L 000E86                                 _ADCON3L 000E8A  
                               _CCP1CON 000FB9                                 _CCP3CON 000F49  
                        ___lmul@product 0068                                 ?_millis 0060  
                               _ANSEL10 007232                                 _ANSEL11 007233  
                               _ANSEL21 00722D                                 _ANSEL14 007236  
                               _ANSEL16 007228                                 _ANSEL17 007229  
                               _ANSEL18 00722A                                 _ANSEL19 00722B  
                               ?_strcat 0060                                 _T3CKPS0 007D8C  
                               _T3CKPS1 007D8D                                 _T4CKPS1 007821  
                               _PADCFG1 000F54                                 _T6CKPS1 0079E9  
                ??_motorDrive_setSpeeds 006F                         __CFG_WDTCLK$FRC 000000  
                             ?_delay_ms 0064                               ?_delay_us 0060  
                   __size_of_SetDCEPWM1 0044                     __size_of_SetDCEPWM3 0048  
                               _TMR3CS0 007D8E                                 _TMR3CS1 007D8F  
                               _SPBRGH1 000F30                                 _SPBRGH2 000F20  
                               _SPBRGH3 000F2C                                 _SPBRGH4 000EFC  
                               _PS2data 00B9                                 _SSP1ADD 000FC8  
                               _SSP2ADD 000F02                                 _SSP1BUF 000FC9  
                               _SSP2BUF 000F03                SetOutputEPWM1@outputmode 0060  
                      ??_SetOutputEPWM1 0020                        ??_SetOutputEPWM3 0020  
                            _left_count 0024                               _I2C_close 1FC4  
                               __Hparam 0000                                 __Lparam 0000  
                             _I2C_write 1D5A                 ??_compass_mainBoardInit 0020  
                               ___awdiv 12EC                         __size_of___lmul 007A  
                       __size_of___wmul 0038                                 ___lwdiv 1A9E  
                               ___lwmod 1C88                                 __pcinit 1546  
                            _read_delay 003D                                 _delay_s 148C  
                       __size_of_millis 0012                                 __ramtop 0E00  
              __end_of_encoderInterrupt 00F6                        delay_init@config 0034  
                               __ptext0 1B20                                 __ptext1 20DA  
                               __ptext2 202C                                 __ptext3 1908  
                               __ptext4 0D80                                 __ptext5 1F56  
                               __ptext6 12EC                                 __ptext7 1E4A  
                               __ptext8 1E92                                 __ptext9 15FA  
                       __size_of_strcat 0066                                 _dpowers FF15  
                             _T2CONbits 000FCA                                 _buttons 002C  
                             _FONA_BUFF 0100                               _T4CONbits 000F04  
                            ??_delay_ms 0068                              ??_delay_us 0020  
                             _T6CONbits 000F3D                               _T8CONbits 000F3A  
                               _sprintf 102C                        LCD_placeCursor@x 0079  
                      LCD_placeCursor@y 0074                          __pintcode_body 13BC  
                  end_of_initialization 15F4                   __end_of_encoders_init 20B0  
                 __end_of_settings_init 205A                SetOutputEPWM3@outputmode 0060  
             LCD_printString@tempString 02B2                                 int_func 13BC  
                         ??_clearMillis 0020                              _tickMillis 212A  
                  LCD_printString@i_591 02E3                         _controller_type 003B  
                     ??_LCD_printString 0082               motorDrive_setSpeeds@templ 0073  
             motorDrive_setSpeeds@tempr 0075                              ?_I2C_close 0001  
                           ?_delay_init 0001                    LCD_printString@input 007C  
                            ?_I2C_write 0062                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE                               _RPOR10_11 000E17  
                      __CFG_FSCM$CSDCMD 000000                               _RPOR12_13 000E18  
                             _RPOR30_31 000E21                               _RPOR22_23 000E1D  
                             _RPOR34_35 000E23                FONA_CheckStrength@F16408 01C6  
                             _PIXY_BUFF 03C8                               _PORTBbits 000F81  
                             _UART_init 11E2                               _PORTDbits 000F83  
                             _PORTEbits 000F84                               _PORTFbits 000F85  
                             _PORTGbits 000F86                               _PORTHbits 000F87  
                 PS2_readGamepad@F16091 008D                   PS2_readGamepad@F16093 00CE  
                             _PORTJbits 000F88                               _PORTKbits 000EE7  
                             _PORTLbits 000EE4                        __CFG_FOSC$FRCPLL 000000  
             compass_mainBoardInit@data 0069                             _ADCON1Hbits 000FC1  
                             _TRISBbits 000F93                               _USB_INDEX 0039  
                             _TRISCbits 000F94              motorDrive_setSpeeds@lSpeed 0085  
                             _TRISDbits 000F95                               _TRISEbits 000F96  
                             _TRISFbits 000F97                               _TRISGbits 000F98  
                             _TRISHbits 000F99                               _TRISJbits 000F9A  
                             _TRISLbits 000EE6                  compass_mainRead@retVal 0068  
            motorDrive_setSpeeds@rSpeed 006E                       ?_compass_mainRead 0064  
                     __size_of_I2C_init 004C                       __size_of_I2C_read 0050  
                     __size_of_I2C_open 0036                       __size_of_I2C_wait 0042  
                  __CFG_CINASEL$DEFAULT 000000                   __size_of_LCD_init4bit 0362  
                    ??_compass_mainRead 0066                       _I2C_writeRegister 174E  
                    ?_I2C_writeRegister 0064                              main@retVal 008C  
                          ??_SetDCEPWM1 0062                            ??_SetDCEPWM3 0062  
                     __CFG_WPFP$WPFP255 000000                     __end_of_clearMillis 2118  
                   ??_I2C_writeRegister 0020                          __end_of___lmul 1C16  
                        __end_of___wmul 1F8E                           __pidataCOMRAM 213A  
                            ?_UART_init 0001                          __end_of_millis 212A  
 __end_of_communicationInterruptHandler 148C  __size_of_communicationInterruptHandler 1484  
         _communicationInterruptHandler 0008                          __end_of_strcat 1D5A  
                          _LCD_init4bit 06C4                     start_initialization 1546  
                   __size_of_delay_init 0032                         _LCD_placeCursor 0A26  
                    __end_of_SetDCEPWM1 1ED6                      __end_of_SetDCEPWM3 1E92  
                  SetOutputEPWM1@eccpmx 0061                            _enter_config 00B4  
             __end_of_I2C_writeRegister 17E2                    SetOutputEPWM3@eccpmx 0061  
                             _OpenEPWM1 1998                               _OpenEPWM3 1876  
                           ?_tickMillis 0001                             ??_I2C_close 0020  
                           ??_I2C_write 0020                        _imaginaryNumbers 0232  
                              ??___lmul 0020                                ??___wmul 0020  
                           __pdataBANK0 008D                             __pdataBANK1 01C6  
                              ??_millis 0020                                ??_strcat 0020  
                          _last_buttons 0030                             __pbssBIGRAM 03C8  
                           __pbssCOMRAM 0020                           __pcstackBANK0 0060  
                         __pcstackBANK2 02B2                        I2C_write@channel 0063  
                   SetDCEPWM1@dutycycle 0060                 I2C_writeRegister@retVal 0068  
                     __size_of_delay_ms 0094                       __size_of_delay_us 003E  
                            ?_OpenEPWM1 0060                              ?_OpenEPWM3 0060  
                           sprintf@flag 0075                             sprintf@prec 0076  
                           _clearMillis 2100                   I2C_writeRegister@data 0066  
                      ___lwdiv@dividend 0060                               __pintcode 0008  
                         __pmediumconst F914                __size_of_motorDrive_init 0090  
                              ?___awdiv 0066                     SetDCEPWM3@dutycycle 0060  
                              ?___lwdiv 0060                                ?___lwmod 0067  
        __size_of_compass_mainBoardInit 0072           __end_of_compass_mainBoardInit 1C88  
                           __pintcodelo 0018                                ?_delay_s 006C  
                           ??_UART_init 0020                       ?_encoderInterrupt 0001  
               __end_of_LCD_placeCursor 0D80                     __size_of_tickMillis 0010  
                      __CFG_POSCMD$NONE 000000              SetOutputEPWM1@outputconfig 0062  
                    ??_encoderInterrupt 0001                                _I2C_init 1DFE  
                              _I2C_read 1DAE                                _I2C_open 1F8E  
         __size_of_motorDrive_setSpeeds 02AC                                _I2C_wait 1ED6  
                              _CCPTMRS0 000F36                         _LCD_printString 0000  
                           _PADCFG1bits 000F54          ?_communicationInterruptHandler 0001  
                             _last_read 0020                        ___lwdiv@quotient 0065  
                              ?_sprintf 006C              __size_of_I2C_writeRegister 0094  
                    LCD_printVal@F16365 003E                          ___wmul@product 0064  
                              _LATDbits 000F8C                               delay_ms@x 0064  
                             delay_us@x 0060                  compass_pixyInit@F16151 009F  
                          ??_delay_init 0020                     LCD_printString@aptr 02DD  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
                              _PIR6bits 000FA6                         I2C_init@channel 0060  
                      __CFG_WDTPS$32768 000000                                _RPINR0_1 000E2A  
                              _RPINR4_5 000E2C                                _RPINR6_7 000E2D  
                              _SSP1CON1 000FC6                                _SSP1CON2 000FC5  
                              _SSP1CON3 000F69                                _SSP2CON1 000F19  
                              _SSP2CON2 000F18                                _SSP2CON3 000F39  
                              _SSP1STAT 000FC7                                _SSP2STAT 000F1A  
                              _USB_BUFF 05BC                         I2C_read@channel 0062  
                     ___wmul@multiplier 0060                        __CFG_SOSCSEL$DIG 000000  
                            _CM1CONbits 000F53                     __end_ofatan@coeff_a FF31  
                   __end_ofatan@coeff_b FF40                        __CFG_WPDIS$WPDIS 000000  
                    __end_of_delay_init 202C                       ___lmul@multiplier 0060  
                           _INTCON2bits 000FF1                            delay_ms@time 0070  
                           _INTCON3bits 000FF0                               copy_data0 15AA  
                             copy_data1 15CA                               _type_read 0096  
                           ??_OpenEPWM1 0061                             ??_OpenEPWM3 0061  
                              __Hrparam 0000                                _SineWave F915  
                      SetDCEPWM1@DCycle 0064                                __Lrparam 0000  
             __size_of_compass_mainRead 0082                        SetDCEPWM3@DCycle 0064  
                      __size_of___awdiv 00D0                        __size_of___lwdiv 0082  
                      __size_of___lwmod 006C                  __size_of_encoders_init 002A  
                 OpenEPWM1@timer_source 0060                  __size_of_settings_init 002E  
               __size_of_SetOutputEPWM1 00A6                 __size_of_SetOutputEPWM3 00AE  
               __end_of_LCD_printString 06C4                        __size_of_delay_s 00BA  
                      ?_LCD_placeCursor 0074                       ??_motorDrive_init 0020  
                            sprintf@val 0077               UART_transmitString@F16323 0300  
                            strcat@from 0062                                _delay_ms 17E2  
                              _delay_us 1F18                         ___lwdiv@divisor 0062  
                       ___lwdiv@counter 0064                                __ptext10 16A8  
                              __ptext11 1876                                __ptext20 1B9C  
                              __ptext12 1998                                __ptext21 1A1C  
                              __ptext13 2086                                __ptext30 1CF4  
                              __ptext22 1DAE                                __ptext14 2100  
                              __ptext31 102C                                __ptext23 1C16  
                              __ptext15 11E2                                __ptext40 212A  
                              __ptext32 1C88                                __ptext24 174E  
                              __ptext16 06C4                                __ptext33 1A9E  
                              __ptext25 1D5A                                __ptext17 1FFA  
                              __ptext34 0A26                                __ptext26 1F8E  
                              __ptext18 1DFE                                __ptext35 1F18  
                              __ptext27 1FC4                                __ptext19 148C  
                              __ptext36 17E2                                __ptext28 1ED6  
                              __ptext37 2118                                __ptext29 0000  
                          _SSP1CON1bits 000FC6                            _SSP1CON2bits 000FC5  
                            _LCDCONbits 000ED9                             _realNumbers 0146  
                           _exit_config 00A2                            _SSP2CON1bits 000F19  
                          _SSP2CON2bits 000F18                        __size_of_sprintf 01B6  
                          ??_tickMillis 0012                        main@positionData 0086  
                         __size_of_main 007C                           __size_of_init 0026  
                           _millisCount 00DA                              _FONA_INDEX 0036  
                    __CFG_MSSPMSK1$MSK7 000000                      __CFG_MSSPMSK2$MSK7 000000  
                              delay_s@x 006C                      LCD_printString@val 02DB  
                              _set_mode 00AB                             _UART4_INDEX 0038  
                            _MEMCONbits 000EE3               _motorDrive_setSpeeds$2400 0081  
             _motorDrive_setSpeeds$2401 0083               _motorDrive_setSpeeds$2395 0077  
             _motorDrive_setSpeeds$2396 0079               _motorDrive_setSpeeds$2397 007B  
             _motorDrive_setSpeeds$2398 007D               _motorDrive_setSpeeds$2399 007F  
                 LCD_printString@F16347 0132                            _SSP1STATbits 000FC7  
                           delay_s@time 0078                          I2C_read@retVal 0063  
                          _SSP2STATbits 000F1A                             atan@coeff_a FF1F  
                           atan@coeff_b FF31                              _INTCONbits 000FF2  
                    __end_of_tickMillis 213A                                intlevel1 0000  
                              intlevel2 0000                               sprintf@ap 0073  
                             sprintf@sp 006C                         I2C_open@channel 0062  
                         _encoders_init 2086                           _settings_init 202C  
                      ___lwmod@dividend 0067                             _right_count 0028  
                          ?_clearMillis 0001                              _RCSTA1bits 000FAB  
                            _RCSTA2bits 000F33                              _RCSTA3bits 000F2F  
                            _RCSTA4bits 000EFF                   LCD_printString@string 02C6  
                            _RPINR26_27 000E37                              _RPINR28_29 000E38  
                      ?_LCD_printString 007B                            _ADCBUF0Hbits 000FC3  
                              sprintf@c 0079                                sprintf@f 006E  
                              strcat@cp 0064                            _ADCBUF0Lbits 000FC2  
                              strcat@to 0060                         ___lwmod@divisor 0069  
                       ___lwmod@counter 006B                              _PIXY_INDEX 0037  
            SetOutputEPWM3@outputconfig 0062                        LCD_printString@i 02E1  
                            _PSPCONbits 000FA7                        LCD_printString@x 02DA  
                      LCD_printString@y 007B                             _USART4_BUFF 0200  
                        ?_encoders_init 0001                     __CFG_WPCFG$WPCFGDIS 000000  
                        ?_settings_init 0001           LCD_printString@tempString_590 02DF  
                    __CFG_WINDIS$WDTSTD 000000               __size_of_encoderInterrupt 00DE  
                       I2C_wait@channel 0061            __end_of_motorDrive_setSpeeds 102C  
                __CFG_DSWDTPS$DSWDTPS1F 000000         ??_communicationInterruptHandler 0012  
