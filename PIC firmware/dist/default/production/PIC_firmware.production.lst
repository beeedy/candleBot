

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May 07 01:57:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F97J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataCOMRAM
    75  012442                     __pidataCOMRAM:
    76                           	opt stack 0
    77                           
    78                           ;initializer for LCD_printVal@F16365
    79  012442  25                 	db	37
    80  012443  69                 	db	105
    81  012444  00                 	db	0
    82                           
    83                           	psect	idataBANK0
    84  0122E8                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for PS2_readGamepad@F16091
    88  0122E8  01                 	db	1
    89  0122E9  42                 	db	66
    90  0122EA  00                 	db	0
    91  0122EB  00                 	db	0
    92  0122EC  00                 	db	0
    93  0122ED  00                 	db	0
    94  0122EE  00                 	db	0
    95  0122EF  00                 	db	0
    96  0122F0  00                 	db	0
    97                           
    98                           ;initializer for _type_read
    99  0122F1  01                 	db	1
   100  0122F2  45                 	db	69
   101  0122F3  00                 	db	0
   102  0122F4  5A                 	db	90
   103  0122F5  5A                 	db	90
   104  0122F6  5A                 	db	90
   105  0122F7  5A                 	db	90
   106  0122F8  5A                 	db	90
   107  0122F9  5A                 	db	90
   108                           
   109                           ;initializer for _exit_config
   110  0122FA  01                 	db	1
   111  0122FB  43                 	db	67
   112  0122FC  00                 	db	0
   113  0122FD  00                 	db	0
   114  0122FE  5A                 	db	90
   115  0122FF  5A                 	db	90
   116  012300  5A                 	db	90
   117  012301  5A                 	db	90
   118  012302  5A                 	db	90
   119                           
   120                           ;initializer for _set_mode
   121  012303  01                 	db	1
   122  012304  44                 	db	68
   123  012305  00                 	db	0
   124  012306  01                 	db	1
   125  012307  03                 	db	3
   126  012308  00                 	db	0
   127  012309  00                 	db	0
   128  01230A  00                 	db	0
   129  01230B  00                 	db	0
   130                           
   131                           ;initializer for _enter_config
   132  01230C  01                 	db	1
   133  01230D  43                 	db	67
   134  01230E  00                 	db	0
   135  01230F  01                 	db	1
   136  012310  00                 	db	0
   137                           
   138                           	psect	idataBANK1
   139  012311                     __pidataBANK1:
   140                           	opt stack 0
   141                           
   142                           ;initializer for FONA_CheckStrength@F16408
   143  012311  30                 	db	48
   144  012312  30                 	db	48
   145  012313  30                 	db	48
   146  012314  30                 	db	48
   147  012315  30                 	db	48
   148  012316  30                 	db	48
   149  012317  30                 	db	48
   150  012318  30                 	db	48
   151  012319  30                 	db	48
   152  01231A  30                 	db	48
   153  01231B  30                 	db	48
   154  01231C  30                 	db	48
   155  01231D  30                 	db	48
   156  01231E  30                 	db	48
   157  01231F  30                 	db	48
   158  012320  30                 	db	48
   159  012321  30                 	db	48
   160  012322  30                 	db	48
   161  012323  30                 	db	48
   162  012324  30                 	db	48
   163  012325  00                 	db	0
   164                           
   165                           ;initializer for FONA_init@F16396
   166  012326  41                 	db	65
   167  012327  54                 	db	84
   168  012328  0D                 	db	13
   169  012329  0A                 	db	10
   170  01232A  4F                 	db	79
   171  01232B  4B                 	db	75
   172  01232C  0D                 	db	13
   173  01232D  0A                 	db	10
   174  01232E  00                 	db	0
   175  01232F  00                 	db	0
   176  012330  00                 	db	0
   177  012331  00                 	db	0
   178  012332  00                 	db	0
   179  012333  00                 	db	0
   180  012334  00                 	db	0
   181  012335  00                 	db	0
   182  012336  00                 	db	0
   183  012337  00                 	db	0
   184  012338  00                 	db	0
   185  012339  00                 	db	0
   186                           
   187                           	psect	mediumconst
   188  00F8D2                     __pmediumconst:
   189                           	opt stack 0
   190  00F8D2  00                 	db	0
   191  00F8D3                     _SineWave:
   192                           	opt stack 0
   193  00F8D3  0000               	dw	0
   194  00F8D5  00C9               	dw	201
   195  00F8D7  0192               	dw	402
   196  00F8D9  025B               	dw	603
   197  00F8DB  0324               	dw	804
   198  00F8DD  03ED               	dw	1005
   199  00F8DF  04B6               	dw	1206
   200  00F8E1  057E               	dw	1406
   201  00F8E3  0647               	dw	1607
   202  00F8E5  0710               	dw	1808
   203  00F8E7  07D9               	dw	2009
   204  00F8E9  08A1               	dw	2209
   205  00F8EB  096A               	dw	2410
   206  00F8ED  0A32               	dw	2610
   207  00F8EF  0AFB               	dw	2811
   208  00F8F1  0BC3               	dw	3011
   209  00F8F3  0C8B               	dw	3211
   210  00F8F5  0D53               	dw	3411
   211  00F8F7  0E1B               	dw	3611
   212  00F8F9  0EE3               	dw	3811
   213  00F8FB  0FAB               	dw	4011
   214  00F8FD  1072               	dw	4210
   215  00F8FF  1139               	dw	4409
   216  00F901  1200               	dw	4608
   217  00F903  12C7               	dw	4807
   218  00F905  138E               	dw	5006
   219  00F907  1455               	dw	5205
   220  00F909  151B               	dw	5403
   221  00F90B  15E1               	dw	5601
   222  00F90D  16A7               	dw	5799
   223  00F90F  176D               	dw	5997
   224  00F911  1833               	dw	6195
   225  00F913  18F8               	dw	6392
   226  00F915  19BD               	dw	6589
   227  00F917  1A82               	dw	6786
   228  00F919  1B46               	dw	6982
   229  00F91B  1C0B               	dw	7179
   230  00F91D  1CCF               	dw	7375
   231  00F91F  1D93               	dw	7571
   232  00F921  1E56               	dw	7766
   233  00F923  1F19               	dw	7961
   234  00F925  1FDC               	dw	8156
   235  00F927  209F               	dw	8351
   236  00F929  2161               	dw	8545
   237  00F92B  2223               	dw	8739
   238  00F92D  22E4               	dw	8932
   239  00F92F  23A6               	dw	9126
   240  00F931  2467               	dw	9319
   241  00F933  2527               	dw	9511
   242  00F935  25E7               	dw	9703
   243  00F937  26A7               	dw	9895
   244  00F939  2767               	dw	10087
   245  00F93B  2826               	dw	10278
   246  00F93D  28E5               	dw	10469
   247  00F93F  29A3               	dw	10659
   248  00F941  2A61               	dw	10849
   249  00F943  2B1E               	dw	11038
   250  00F945  2BDB               	dw	11227
   251  00F947  2C98               	dw	11416
   252  00F949  2D54               	dw	11604
   253  00F94B  2E10               	dw	11792
   254  00F94D  2ECC               	dw	11980
   255  00F94F  2F86               	dw	12166
   256  00F951  3041               	dw	12353
   257  00F953  30FB               	dw	12539
   258  00F955  31B4               	dw	12724
   259  00F957  326D               	dw	12909
   260  00F959  3326               	dw	13094
   261  00F95B  33DE               	dw	13278
   262  00F95D  3496               	dw	13462
   263  00F95F  354D               	dw	13645
   264  00F961  3603               	dw	13827
   265  00F963  36B9               	dw	14009
   266  00F965  376F               	dw	14191
   267  00F967  3824               	dw	14372
   268  00F969  38D8               	dw	14552
   269  00F96B  398C               	dw	14732
   270  00F96D  3A3F               	dw	14911
   271  00F96F  3AF2               	dw	15090
   272  00F971  3BA4               	dw	15268
   273  00F973  3C56               	dw	15446
   274  00F975  3D07               	dw	15623
   275  00F977  3DB7               	dw	15799
   276  00F979  3E67               	dw	15975
   277  00F97B  3F16               	dw	16150
   278  00F97D  3FC5               	dw	16325
   279  00F97F  4073               	dw	16499
   280  00F981  4120               	dw	16672
   281  00F983  41CD               	dw	16845
   282  00F985  4279               	dw	17017
   283  00F987  4325               	dw	17189
   284  00F989  43D0               	dw	17360
   285  00F98B  447A               	dw	17530
   286  00F98D  4523               	dw	17699
   287  00F98F  45CC               	dw	17868
   288  00F991  4674               	dw	18036
   289  00F993  471C               	dw	18204
   290  00F995  47C3               	dw	18371
   291  00F997  4869               	dw	18537
   292  00F999  490E               	dw	18702
   293  00F99B  49B3               	dw	18867
   294  00F99D  4A57               	dw	19031
   295  00F99F  4AFA               	dw	19194
   296  00F9A1  4B9D               	dw	19357
   297  00F9A3  4C3F               	dw	19519
   298  00F9A5  4CE0               	dw	19680
   299  00F9A7  4D80               	dw	19840
   300  00F9A9  4E20               	dw	20000
   301  00F9AB  4EBF               	dw	20159
   302  00F9AD  4F5D               	dw	20317
   303  00F9AF  4FFA               	dw	20474
   304  00F9B1  5097               	dw	20631
   305  00F9B3  5133               	dw	20787
   306  00F9B5  51CE               	dw	20942
   307  00F9B7  5268               	dw	21096
   308  00F9B9  5301               	dw	21249
   309  00F9BB  539A               	dw	21402
   310  00F9BD  5432               	dw	21554
   311  00F9BF  54C9               	dw	21705
   312  00F9C1  555F               	dw	21855
   313  00F9C3  55F4               	dw	22004
   314  00F9C5  5689               	dw	22153
   315  00F9C7  571D               	dw	22301
   316  00F9C9  57B0               	dw	22448
   317  00F9CB  5842               	dw	22594
   318  00F9CD  58D3               	dw	22739
   319  00F9CF  5963               	dw	22883
   320  00F9D1  59F3               	dw	23027
   321  00F9D3  5A81               	dw	23169
   322  00F9D5  5B0F               	dw	23311
   323  00F9D7  5B9C               	dw	23452
   324  00F9D9  5C28               	dw	23592
   325  00F9DB  5CB3               	dw	23731
   326  00F9DD  5D3D               	dw	23869
   327  00F9DF  5DC6               	dw	24006
   328  00F9E1  5E4F               	dw	24143
   329  00F9E3  5ED6               	dw	24278
   330  00F9E5  5F5D               	dw	24413
   331  00F9E7  5FE2               	dw	24546
   332  00F9E9  6067               	dw	24679
   333  00F9EB  60EB               	dw	24811
   334  00F9ED  616E               	dw	24942
   335  00F9EF  61F0               	dw	25072
   336  00F9F1  6271               	dw	25201
   337  00F9F3  62F1               	dw	25329
   338  00F9F5  6370               	dw	25456
   339  00F9F7  63EE               	dw	25582
   340  00F9F9  646B               	dw	25707
   341  00F9FB  64E7               	dw	25831
   342  00F9FD  6562               	dw	25954
   343  00F9FF  65DD               	dw	26077
   344  00FA01  6656               	dw	26198
   345  00FA03  66CE               	dw	26318
   346  00FA05  6745               	dw	26437
   347  00FA07  67BC               	dw	26556
   348  00FA09  6831               	dw	26673
   349  00FA0B  68A5               	dw	26789
   350  00FA0D  6919               	dw	26905
   351  00FA0F  698B               	dw	27019
   352  00FA11  69FC               	dw	27132
   353  00FA13  6A6C               	dw	27244
   354  00FA15  6ADB               	dw	27355
   355  00FA17  6B4A               	dw	27466
   356  00FA19  6BB7               	dw	27575
   357  00FA1B  6C23               	dw	27683
   358  00FA1D  6C8E               	dw	27790
   359  00FA1F  6CF8               	dw	27896
   360  00FA21  6D61               	dw	28001
   361  00FA23  6DC9               	dw	28105
   362  00FA25  6E30               	dw	28208
   363  00FA27  6E95               	dw	28309
   364  00FA29  6EFA               	dw	28410
   365  00FA2B  6F5E               	dw	28510
   366  00FA2D  6FC0               	dw	28608
   367  00FA2F  7022               	dw	28706
   368  00FA31  7082               	dw	28802
   369  00FA33  70E1               	dw	28897
   370  00FA35  7140               	dw	28992
   371  00FA37  719D               	dw	29085
   372  00FA39  71F9               	dw	29177
   373  00FA3B  7254               	dw	29268
   374  00FA3D  72AE               	dw	29358
   375  00FA3F  7306               	dw	29446
   376  00FA41  735E               	dw	29534
   377  00FA43  73B5               	dw	29621
   378  00FA45  740A               	dw	29706
   379  00FA47  745E               	dw	29790
   380  00FA49  74B1               	dw	29873
   381  00FA4B  7503               	dw	29955
   382  00FA4D  7554               	dw	30036
   383  00FA4F  75A4               	dw	30116
   384  00FA51  75F3               	dw	30195
   385  00FA53  7640               	dw	30272
   386  00FA55  768D               	dw	30349
   387  00FA57  76D8               	dw	30424
   388  00FA59  7722               	dw	30498
   389  00FA5B  776B               	dw	30571
   390  00FA5D  77B3               	dw	30643
   391  00FA5F  77F9               	dw	30713
   392  00FA61  783F               	dw	30783
   393  00FA63  7883               	dw	30851
   394  00FA65  78C6               	dw	30918
   395  00FA67  7908               	dw	30984
   396  00FA69  7949               	dw	31049
   397  00FA6B  7989               	dw	31113
   398  00FA6D  79C7               	dw	31175
   399  00FA6F  7A04               	dw	31236
   400  00FA71  7A41               	dw	31297
   401  00FA73  7A7C               	dw	31356
   402  00FA75  7AB5               	dw	31413
   403  00FA77  7AEE               	dw	31470
   404  00FA79  7B25               	dw	31525
   405  00FA7B  7B5C               	dw	31580
   406  00FA7D  7B91               	dw	31633
   407  00FA7F  7BC4               	dw	31684
   408  00FA81  7BF7               	dw	31735
   409  00FA83  7C29               	dw	31785
   410  00FA85  7C59               	dw	31833
   411  00FA87  7C88               	dw	31880
   412  00FA89  7CB6               	dw	31926
   413  00FA8B  7CE2               	dw	31970
   414  00FA8D  7D0E               	dw	32014
   415  00FA8F  7D38               	dw	32056
   416  00FA91  7D61               	dw	32097
   417  00FA93  7D89               	dw	32137
   418  00FA95  7DB0               	dw	32176
   419  00FA97  7DD5               	dw	32213
   420  00FA99  7DF9               	dw	32249
   421  00FA9B  7E1C               	dw	32284
   422  00FA9D  7E3E               	dw	32318
   423  00FA9F  7E5E               	dw	32350
   424  00FAA1  7E7E               	dw	32382
   425  00FAA3  7E9C               	dw	32412
   426  00FAA5  7EB9               	dw	32441
   427  00FAA7  7ED4               	dw	32468
   428  00FAA9  7EEF               	dw	32495
   429  00FAAB  7F08               	dw	32520
   430  00FAAD  7F20               	dw	32544
   431  00FAAF  7F37               	dw	32567
   432  00FAB1  7F4C               	dw	32588
   433  00FAB3  7F61               	dw	32609
   434  00FAB5  7F74               	dw	32628
   435  00FAB7  7F86               	dw	32646
   436  00FAB9  7F96               	dw	32662
   437  00FABB  7FA6               	dw	32678
   438  00FABD  7FB4               	dw	32692
   439  00FABF  7FC1               	dw	32705
   440  00FAC1  7FCD               	dw	32717
   441  00FAC3  7FD7               	dw	32727
   442  00FAC5  7FE0               	dw	32736
   443  00FAC7  7FE8               	dw	32744
   444  00FAC9  7FEF               	dw	32751
   445  00FACB  7FF5               	dw	32757
   446  00FACD  7FF9               	dw	32761
   447  00FACF  7FFC               	dw	32764
   448  00FAD1  7FFE               	dw	32766
   449  00FAD3  7FFF               	dw	32767
   450  00FAD5  7FFE               	dw	32766
   451  00FAD7  7FFC               	dw	32764
   452  00FAD9  7FF9               	dw	32761
   453  00FADB  7FF5               	dw	32757
   454  00FADD  7FEF               	dw	32751
   455  00FADF  7FE8               	dw	32744
   456  00FAE1  7FE0               	dw	32736
   457  00FAE3  7FD7               	dw	32727
   458  00FAE5  7FCD               	dw	32717
   459  00FAE7  7FC1               	dw	32705
   460  00FAE9  7FB4               	dw	32692
   461  00FAEB  7FA6               	dw	32678
   462  00FAED  7F96               	dw	32662
   463  00FAEF  7F86               	dw	32646
   464  00FAF1  7F74               	dw	32628
   465  00FAF3  7F61               	dw	32609
   466  00FAF5  7F4C               	dw	32588
   467  00FAF7  7F37               	dw	32567
   468  00FAF9  7F20               	dw	32544
   469  00FAFB  7F08               	dw	32520
   470  00FAFD  7EEF               	dw	32495
   471  00FAFF  7ED4               	dw	32468
   472  00FB01  7EB9               	dw	32441
   473  00FB03  7E9C               	dw	32412
   474  00FB05  7E7E               	dw	32382
   475  00FB07  7E5E               	dw	32350
   476  00FB09  7E3E               	dw	32318
   477  00FB0B  7E1C               	dw	32284
   478  00FB0D  7DF9               	dw	32249
   479  00FB0F  7DD5               	dw	32213
   480  00FB11  7DB0               	dw	32176
   481  00FB13  7D89               	dw	32137
   482  00FB15  7D61               	dw	32097
   483  00FB17  7D38               	dw	32056
   484  00FB19  7D0E               	dw	32014
   485  00FB1B  7CE2               	dw	31970
   486  00FB1D  7CB6               	dw	31926
   487  00FB1F  7C88               	dw	31880
   488  00FB21  7C59               	dw	31833
   489  00FB23  7C29               	dw	31785
   490  00FB25  7BF7               	dw	31735
   491  00FB27  7BC4               	dw	31684
   492  00FB29  7B91               	dw	31633
   493  00FB2B  7B5C               	dw	31580
   494  00FB2D  7B25               	dw	31525
   495  00FB2F  7AEE               	dw	31470
   496  00FB31  7AB5               	dw	31413
   497  00FB33  7A7C               	dw	31356
   498  00FB35  7A41               	dw	31297
   499  00FB37  7A04               	dw	31236
   500  00FB39  79C7               	dw	31175
   501  00FB3B  7989               	dw	31113
   502  00FB3D  7949               	dw	31049
   503  00FB3F  7908               	dw	30984
   504  00FB41  78C6               	dw	30918
   505  00FB43  7883               	dw	30851
   506  00FB45  783F               	dw	30783
   507  00FB47  77F9               	dw	30713
   508  00FB49  77B3               	dw	30643
   509  00FB4B  776B               	dw	30571
   510  00FB4D  7722               	dw	30498
   511  00FB4F  76D8               	dw	30424
   512  00FB51  768D               	dw	30349
   513  00FB53  7640               	dw	30272
   514  00FB55  75F3               	dw	30195
   515  00FB57  75A4               	dw	30116
   516  00FB59  7554               	dw	30036
   517  00FB5B  7503               	dw	29955
   518  00FB5D  74B1               	dw	29873
   519  00FB5F  745E               	dw	29790
   520  00FB61  740A               	dw	29706
   521  00FB63  73B5               	dw	29621
   522  00FB65  735E               	dw	29534
   523  00FB67  7306               	dw	29446
   524  00FB69  72AE               	dw	29358
   525  00FB6B  7254               	dw	29268
   526  00FB6D  71F9               	dw	29177
   527  00FB6F  719D               	dw	29085
   528  00FB71  7140               	dw	28992
   529  00FB73  70E1               	dw	28897
   530  00FB75  7082               	dw	28802
   531  00FB77  7022               	dw	28706
   532  00FB79  6FC0               	dw	28608
   533  00FB7B  6F5E               	dw	28510
   534  00FB7D  6EFA               	dw	28410
   535  00FB7F  6E95               	dw	28309
   536  00FB81  6E30               	dw	28208
   537  00FB83  6DC9               	dw	28105
   538  00FB85  6D61               	dw	28001
   539  00FB87  6CF8               	dw	27896
   540  00FB89  6C8E               	dw	27790
   541  00FB8B  6C23               	dw	27683
   542  00FB8D  6BB7               	dw	27575
   543  00FB8F  6B4A               	dw	27466
   544  00FB91  6ADB               	dw	27355
   545  00FB93  6A6C               	dw	27244
   546  00FB95  69FC               	dw	27132
   547  00FB97  698B               	dw	27019
   548  00FB99  6919               	dw	26905
   549  00FB9B  68A5               	dw	26789
   550  00FB9D  6831               	dw	26673
   551  00FB9F  67BC               	dw	26556
   552  00FBA1  6745               	dw	26437
   553  00FBA3  66CE               	dw	26318
   554  00FBA5  6656               	dw	26198
   555  00FBA7  65DD               	dw	26077
   556  00FBA9  6562               	dw	25954
   557  00FBAB  64E7               	dw	25831
   558  00FBAD  646B               	dw	25707
   559  00FBAF  63EE               	dw	25582
   560  00FBB1  6370               	dw	25456
   561  00FBB3  62F1               	dw	25329
   562  00FBB5  6271               	dw	25201
   563  00FBB7  61F0               	dw	25072
   564  00FBB9  616E               	dw	24942
   565  00FBBB  60EB               	dw	24811
   566  00FBBD  6067               	dw	24679
   567  00FBBF  5FE2               	dw	24546
   568  00FBC1  5F5D               	dw	24413
   569  00FBC3  5ED6               	dw	24278
   570  00FBC5  5E4F               	dw	24143
   571  00FBC7  5DC6               	dw	24006
   572  00FBC9  5D3D               	dw	23869
   573  00FBCB  5CB3               	dw	23731
   574  00FBCD  5C28               	dw	23592
   575  00FBCF  5B9C               	dw	23452
   576  00FBD1  5B0F               	dw	23311
   577  00FBD3  5A81               	dw	23169
   578  00FBD5  59F3               	dw	23027
   579  00FBD7  5963               	dw	22883
   580  00FBD9  58D3               	dw	22739
   581  00FBDB  5842               	dw	22594
   582  00FBDD  57B0               	dw	22448
   583  00FBDF  571D               	dw	22301
   584  00FBE1  5689               	dw	22153
   585  00FBE3  55F4               	dw	22004
   586  00FBE5  555F               	dw	21855
   587  00FBE7  54C9               	dw	21705
   588  00FBE9  5432               	dw	21554
   589  00FBEB  539A               	dw	21402
   590  00FBED  5301               	dw	21249
   591  00FBEF  5268               	dw	21096
   592  00FBF1  51CE               	dw	20942
   593  00FBF3  5133               	dw	20787
   594  00FBF5  5097               	dw	20631
   595  00FBF7  4FFA               	dw	20474
   596  00FBF9  4F5D               	dw	20317
   597  00FBFB  4EBF               	dw	20159
   598  00FBFD  4E20               	dw	20000
   599  00FBFF  4D80               	dw	19840
   600  00FC01  4CE0               	dw	19680
   601  00FC03  4C3F               	dw	19519
   602  00FC05  4B9D               	dw	19357
   603  00FC07  4AFA               	dw	19194
   604  00FC09  4A57               	dw	19031
   605  00FC0B  49B3               	dw	18867
   606  00FC0D  490E               	dw	18702
   607  00FC0F  4869               	dw	18537
   608  00FC11  47C3               	dw	18371
   609  00FC13  471C               	dw	18204
   610  00FC15  4674               	dw	18036
   611  00FC17  45CC               	dw	17868
   612  00FC19  4523               	dw	17699
   613  00FC1B  447A               	dw	17530
   614  00FC1D  43D0               	dw	17360
   615  00FC1F  4325               	dw	17189
   616  00FC21  4279               	dw	17017
   617  00FC23  41CD               	dw	16845
   618  00FC25  4120               	dw	16672
   619  00FC27  4073               	dw	16499
   620  00FC29  3FC5               	dw	16325
   621  00FC2B  3F16               	dw	16150
   622  00FC2D  3E67               	dw	15975
   623  00FC2F  3DB7               	dw	15799
   624  00FC31  3D07               	dw	15623
   625  00FC33  3C56               	dw	15446
   626  00FC35  3BA4               	dw	15268
   627  00FC37  3AF2               	dw	15090
   628  00FC39  3A3F               	dw	14911
   629  00FC3B  398C               	dw	14732
   630  00FC3D  38D8               	dw	14552
   631  00FC3F  3824               	dw	14372
   632  00FC41  376F               	dw	14191
   633  00FC43  36B9               	dw	14009
   634  00FC45  3603               	dw	13827
   635  00FC47  354D               	dw	13645
   636  00FC49  3496               	dw	13462
   637  00FC4B  33DE               	dw	13278
   638  00FC4D  3326               	dw	13094
   639  00FC4F  326D               	dw	12909
   640  00FC51  31B4               	dw	12724
   641  00FC53  30FB               	dw	12539
   642  00FC55  3041               	dw	12353
   643  00FC57  2F86               	dw	12166
   644  00FC59  2ECC               	dw	11980
   645  00FC5B  2E10               	dw	11792
   646  00FC5D  2D54               	dw	11604
   647  00FC5F  2C98               	dw	11416
   648  00FC61  2BDB               	dw	11227
   649  00FC63  2B1E               	dw	11038
   650  00FC65  2A61               	dw	10849
   651  00FC67  29A3               	dw	10659
   652  00FC69  28E5               	dw	10469
   653  00FC6B  2826               	dw	10278
   654  00FC6D  2767               	dw	10087
   655  00FC6F  26A7               	dw	9895
   656  00FC71  25E7               	dw	9703
   657  00FC73  2527               	dw	9511
   658  00FC75  2467               	dw	9319
   659  00FC77  23A6               	dw	9126
   660  00FC79  22E4               	dw	8932
   661  00FC7B  2223               	dw	8739
   662  00FC7D  2161               	dw	8545
   663  00FC7F  209F               	dw	8351
   664  00FC81  1FDC               	dw	8156
   665  00FC83  1F19               	dw	7961
   666  00FC85  1E56               	dw	7766
   667  00FC87  1D93               	dw	7571
   668  00FC89  1CCF               	dw	7375
   669  00FC8B  1C0B               	dw	7179
   670  00FC8D  1B46               	dw	6982
   671  00FC8F  1A82               	dw	6786
   672  00FC91  19BD               	dw	6589
   673  00FC93  18F8               	dw	6392
   674  00FC95  1833               	dw	6195
   675  00FC97  176D               	dw	5997
   676  00FC99  16A7               	dw	5799
   677  00FC9B  15E1               	dw	5601
   678  00FC9D  151B               	dw	5403
   679  00FC9F  1455               	dw	5205
   680  00FCA1  138E               	dw	5006
   681  00FCA3  12C7               	dw	4807
   682  00FCA5  1200               	dw	4608
   683  00FCA7  1139               	dw	4409
   684  00FCA9  1072               	dw	4210
   685  00FCAB  0FAB               	dw	4011
   686  00FCAD  0EE3               	dw	3811
   687  00FCAF  0E1B               	dw	3611
   688  00FCB1  0D53               	dw	3411
   689  00FCB3  0C8B               	dw	3211
   690  00FCB5  0BC3               	dw	3011
   691  00FCB7  0AFB               	dw	2811
   692  00FCB9  0A32               	dw	2610
   693  00FCBB  096A               	dw	2410
   694  00FCBD  08A1               	dw	2209
   695  00FCBF  07D9               	dw	2009
   696  00FCC1  0710               	dw	1808
   697  00FCC3  0647               	dw	1607
   698  00FCC5  057E               	dw	1406
   699  00FCC7  04B6               	dw	1206
   700  00FCC9  03ED               	dw	1005
   701  00FCCB  0324               	dw	804
   702  00FCCD  025B               	dw	603
   703  00FCCF  0192               	dw	402
   704  00FCD1  00C9               	dw	201
   705  00FCD3  0000               	dw	0
   706  00FCD5  FF37               	dw	65335
   707  00FCD7  FE6E               	dw	65134
   708  00FCD9  FDA5               	dw	64933
   709  00FCDB  FCDC               	dw	64732
   710  00FCDD  FC13               	dw	64531
   711  00FCDF  FB4A               	dw	64330
   712  00FCE1  FA82               	dw	64130
   713  00FCE3  F9B9               	dw	63929
   714  00FCE5  F8F0               	dw	63728
   715  00FCE7  F827               	dw	63527
   716  00FCE9  F75F               	dw	63327
   717  00FCEB  F696               	dw	63126
   718  00FCED  F5CE               	dw	62926
   719  00FCEF  F505               	dw	62725
   720  00FCF1  F43D               	dw	62525
   721  00FCF3  F375               	dw	62325
   722  00FCF5  F2AD               	dw	62125
   723  00FCF7  F1E5               	dw	61925
   724  00FCF9  F11D               	dw	61725
   725  00FCFB  F055               	dw	61525
   726  00FCFD  EF8E               	dw	61326
   727  00FCFF  EEC7               	dw	61127
   728  00FD01  EE00               	dw	60928
   729  00FD03  ED39               	dw	60729
   730  00FD05  EC72               	dw	60530
   731  00FD07  EBAB               	dw	60331
   732  00FD09  EAE5               	dw	60133
   733  00FD0B  EA1F               	dw	59935
   734  00FD0D  E959               	dw	59737
   735  00FD0F  E893               	dw	59539
   736  00FD11  E7CD               	dw	59341
   737  00FD13  E708               	dw	59144
   738  00FD15  E643               	dw	58947
   739  00FD17  E57E               	dw	58750
   740  00FD19  E4BA               	dw	58554
   741  00FD1B  E3F5               	dw	58357
   742  00FD1D  E331               	dw	58161
   743  00FD1F  E26D               	dw	57965
   744  00FD21  E1AA               	dw	57770
   745  00FD23  E0E7               	dw	57575
   746  00FD25  E024               	dw	57380
   747  00FD27  DF61               	dw	57185
   748  00FD29  DE9F               	dw	56991
   749  00FD2B  DDDD               	dw	56797
   750  00FD2D  DD1C               	dw	56604
   751  00FD2F  DC5A               	dw	56410
   752  00FD31  DB99               	dw	56217
   753  00FD33  DAD9               	dw	56025
   754  00FD35  DA19               	dw	55833
   755  00FD37  D959               	dw	55641
   756  00FD39  D899               	dw	55449
   757  00FD3B  D7DA               	dw	55258
   758  00FD3D  D71B               	dw	55067
   759  00FD3F  D65D               	dw	54877
   760  00FD41  D59F               	dw	54687
   761  00FD43  D4E2               	dw	54498
   762  00FD45  D425               	dw	54309
   763  00FD47  D368               	dw	54120
   764  00FD49  D2AC               	dw	53932
   765  00FD4B  D1F0               	dw	53744
   766  00FD4D  D134               	dw	53556
   767  00FD4F  D07A               	dw	53370
   768  00FD51  CFBF               	dw	53183
   769  00FD53  CF05               	dw	52997
   770  00FD55  CE4C               	dw	52812
   771  00FD57  CD93               	dw	52627
   772  00FD59  CCDA               	dw	52442
   773  00FD5B  CC22               	dw	52258
   774  00FD5D  CB6A               	dw	52074
   775  00FD5F  CAB3               	dw	51891
   776  00FD61  C9FD               	dw	51709
   777  00FD63  C947               	dw	51527
   778  00FD65  C891               	dw	51345
   779  00FD67  C7DC               	dw	51164
   780  00FD69  C728               	dw	50984
   781  00FD6B  C674               	dw	50804
   782  00FD6D  C5C1               	dw	50625
   783  00FD6F  C50E               	dw	50446
   784  00FD71  C45C               	dw	50268
   785  00FD73  C3AA               	dw	50090
   786  00FD75  C2F9               	dw	49913
   787  00FD77  C249               	dw	49737
   788  00FD79  C199               	dw	49561
   789  00FD7B  C0EA               	dw	49386
   790  00FD7D  C03B               	dw	49211
   791  00FD7F  BF8D               	dw	49037
   792  00FD81  BEE0               	dw	48864
   793  00FD83  BE33               	dw	48691
   794  00FD85  BD87               	dw	48519
   795  00FD87  BCDB               	dw	48347
   796  00FD89  BC30               	dw	48176
   797  00FD8B  BB86               	dw	48006
   798  00FD8D  BADD               	dw	47837
   799  00FD8F  BA34               	dw	47668
   800  00FD91  B98C               	dw	47500
   801  00FD93  B8E4               	dw	47332
   802  00FD95  B83D               	dw	47165
   803  00FD97  B797               	dw	46999
   804  00FD99  B6F2               	dw	46834
   805  00FD9B  B64D               	dw	46669
   806  00FD9D  B5A9               	dw	46505
   807  00FD9F  B506               	dw	46342
   808  00FDA1  B463               	dw	46179
   809  00FDA3  B3C1               	dw	46017
   810  00FDA5  B320               	dw	45856
   811  00FDA7  B280               	dw	45696
   812  00FDA9  B1E0               	dw	45536
   813  00FDAB  B141               	dw	45377
   814  00FDAD  B0A3               	dw	45219
   815  00FDAF  B006               	dw	45062
   816  00FDB1  AF69               	dw	44905
   817  00FDB3  AECD               	dw	44749
   818  00FDB5  AE32               	dw	44594
   819  00FDB7  AD98               	dw	44440
   820  00FDB9  ACFF               	dw	44287
   821  00FDBB  AC66               	dw	44134
   822  00FDBD  ABCE               	dw	43982
   823  00FDBF  AB37               	dw	43831
   824  00FDC1  AAA1               	dw	43681
   825  00FDC3  AA0C               	dw	43532
   826  00FDC5  A977               	dw	43383
   827  00FDC7  A8E3               	dw	43235
   828  00FDC9  A850               	dw	43088
   829  00FDCB  A7BE               	dw	42942
   830  00FDCD  A72D               	dw	42797
   831  00FDCF  A69D               	dw	42653
   832  00FDD1  A60D               	dw	42509
   833  00FDD3  A57F               	dw	42367
   834  00FDD5  A4F1               	dw	42225
   835  00FDD7  A464               	dw	42084
   836  00FDD9  A3D8               	dw	41944
   837  00FDDB  A34D               	dw	41805
   838  00FDDD  A2C3               	dw	41667
   839  00FDDF  A23A               	dw	41530
   840  00FDE1  A1B1               	dw	41393
   841  00FDE3  A12A               	dw	41258
   842  00FDE5  A0A3               	dw	41123
   843  00FDE7  A01E               	dw	40990
   844  00FDE9  9F99               	dw	40857
   845  00FDEB  9F15               	dw	40725
   846  00FDED  9E92               	dw	40594
   847  00FDEF  9E10               	dw	40464
   848  00FDF1  9D8F               	dw	40335
   849  00FDF3  9D0F               	dw	40207
   850  00FDF5  9C90               	dw	40080
   851  00FDF7  9C12               	dw	39954
   852  00FDF9  9B95               	dw	39829
   853  00FDFB  9B19               	dw	39705
   854  00FDFD  9A9E               	dw	39582
   855  00FDFF  9A23               	dw	39459
   856  00FE01  99AA               	dw	39338
   857  00FE03  9932               	dw	39218
   858  00FE05  98BB               	dw	39099
   859  00FE07  9844               	dw	38980
   860  00FE09  97CF               	dw	38863
   861  00FE0B  975B               	dw	38747
   862  00FE0D  96E7               	dw	38631
   863  00FE0F  9675               	dw	38517
   864  00FE11  9604               	dw	38404
   865  00FE13  9594               	dw	38292
   866  00FE15  9525               	dw	38181
   867  00FE17  94B6               	dw	38070
   868  00FE19  9449               	dw	37961
   869  00FE1B  93DD               	dw	37853
   870  00FE1D  9372               	dw	37746
   871  00FE1F  9308               	dw	37640
   872  00FE21  929F               	dw	37535
   873  00FE23  9237               	dw	37431
   874  00FE25  91D0               	dw	37328
   875  00FE27  916B               	dw	37227
   876  00FE29  9106               	dw	37126
   877  00FE2B  90A2               	dw	37026
   878  00FE2D  9040               	dw	36928
   879  00FE2F  8FDE               	dw	36830
   880  00FE31  8F7E               	dw	36734
   881  00FE33  8F1F               	dw	36639
   882  00FE35  8EC0               	dw	36544
   883  00FE37  8E63               	dw	36451
   884  00FE39  8E07               	dw	36359
   885  00FE3B  8DAC               	dw	36268
   886  00FE3D  8D52               	dw	36178
   887  00FE3F  8CFA               	dw	36090
   888  00FE41  8CA2               	dw	36002
   889  00FE43  8C4B               	dw	35915
   890  00FE45  8BF6               	dw	35830
   891  00FE47  8BA2               	dw	35746
   892  00FE49  8B4F               	dw	35663
   893  00FE4B  8AFD               	dw	35581
   894  00FE4D  8AAC               	dw	35500
   895  00FE4F  8A5C               	dw	35420
   896  00FE51  8A0D               	dw	35341
   897  00FE53  89C0               	dw	35264
   898  00FE55  8973               	dw	35187
   899  00FE57  8928               	dw	35112
   900  00FE59  88DE               	dw	35038
   901  00FE5B  8895               	dw	34965
   902  00FE5D  884D               	dw	34893
   903  00FE5F  8807               	dw	34823
   904  00FE61  87C1               	dw	34753
   905  00FE63  877D               	dw	34685
   906  00FE65  873A               	dw	34618
   907  00FE67  86F8               	dw	34552
   908  00FE69  86B7               	dw	34487
   909  00FE6B  8677               	dw	34423
   910  00FE6D  8639               	dw	34361
   911  00FE6F  85FC               	dw	34300
   912  00FE71  85BF               	dw	34239
   913  00FE73  8584               	dw	34180
   914  00FE75  854B               	dw	34123
   915  00FE77  8512               	dw	34066
   916  00FE79  84DB               	dw	34011
   917  00FE7B  84A4               	dw	33956
   918  00FE7D  846F               	dw	33903
   919  00FE7F  843C               	dw	33852
   920  00FE81  8409               	dw	33801
   921  00FE83  83D7               	dw	33751
   922  00FE85  83A7               	dw	33703
   923  00FE87  8378               	dw	33656
   924  00FE89  834A               	dw	33610
   925  00FE8B  831E               	dw	33566
   926  00FE8D  82F2               	dw	33522
   927  00FE8F  82C8               	dw	33480
   928  00FE91  829F               	dw	33439
   929  00FE93  8277               	dw	33399
   930  00FE95  8250               	dw	33360
   931  00FE97  822B               	dw	33323
   932  00FE99  8207               	dw	33287
   933  00FE9B  81E4               	dw	33252
   934  00FE9D  81C2               	dw	33218
   935  00FE9F  81A2               	dw	33186
   936  00FEA1  8182               	dw	33154
   937  00FEA3  8164               	dw	33124
   938  00FEA5  8147               	dw	33095
   939  00FEA7  812C               	dw	33068
   940  00FEA9  8111               	dw	33041
   941  00FEAB  80F8               	dw	33016
   942  00FEAD  80E0               	dw	32992
   943  00FEAF  80C9               	dw	32969
   944  00FEB1  80B4               	dw	32948
   945  00FEB3  809F               	dw	32927
   946  00FEB5  808C               	dw	32908
   947  00FEB7  807A               	dw	32890
   948  00FEB9  806A               	dw	32874
   949  00FEBB  805A               	dw	32858
   950  00FEBD  804C               	dw	32844
   951  00FEBF  803F               	dw	32831
   952  00FEC1  8033               	dw	32819
   953  00FEC3  8029               	dw	32809
   954  00FEC5  8020               	dw	32800
   955  00FEC7  8018               	dw	32792
   956  00FEC9  8011               	dw	32785
   957  00FECB  800B               	dw	32779
   958  00FECD  8007               	dw	32775
   959  00FECF  8004               	dw	32772
   960  00FED1  8002               	dw	32770
   961  00FED3                     __end_of_SineWave:
   962                           	opt stack 0
   963  00FED3                     _dpowers:
   964                           	opt stack 0
   965  00FED3  0001               	dw	1
   966  00FED5  000A               	dw	10
   967  00FED7  0064               	dw	100
   968  00FED9  03E8               	dw	1000
   969  00FEDB  2710               	dw	10000
   970  00FEDD                     __end_of_dpowers:
   971                           	opt stack 0
   972  00FEDD  3C                 	db	60
   973  00FEDE  04                 	db	4
   974  00FEDF  42                 	db	66
   975  00FEE0  9F                 	db	159
   976  00FEE1  6A                 	db	106
   977  00FEE2  42                 	db	66
   978  00FEE3  90                 	db	144
   979  00FEE4  01                 	db	1
   980  00FEE5  42                 	db	66
   981  00FEE6  4D                 	db	77
   982  00FEE7  BB                 	db	187
   983  00FEE8  40                 	db	64
   984  00FEE9  EC                 	db	236
   985  00FEEA  47                 	db	71
   986  00FEEB  3E                 	db	62
   987  00FEEC  8E                 	db	142
   988  00FEED  1F                 	db	31
   989  00FEEE  BB                 	db	187
   990  00FEEF                     __end_ofatan@coeff_a:
   991                           	opt stack 0
   992  00FEEF  3C                 	db	60
   993  00FEF0  04                 	db	4
   994  00FEF1  42                 	db	66
   995  00FEF2  5A                 	db	90
   996  00FEF3  8B                 	db	139
   997  00FEF4  42                 	db	66
   998  00FEF5  04                 	db	4
   999  00FEF6  44                 	db	68
  1000  00FEF7  42                 	db	66
  1001  00FEF8  9C                 	db	156
  1002  00FEF9  4F                 	db	79
  1003  00FEFA  41                 	db	65
  1004  00FEFB  00                 	db	0
  1005  00FEFC  80                 	db	128
  1006  00FEFD  3F                 	db	63
  1007  00FEFE                     __end_ofatan@coeff_b:
  1008                           	opt stack 0
  1009  0000                     _ADCHS0H	set	3719
  1010  0000                     _ADCHS0L	set	3718
  1011  0000                     _ADCON3L	set	3722
  1012  0000                     _ANCON1	set	3655
  1013  0000                     _ANCON2	set	3654
  1014  0000                     _ANCON3	set	3653
  1015  0000                     _BAUDCON4bits	set	3837
  1016  0000                     _LCDCONbits	set	3801
  1017  0000                     _MEMCONbits	set	3811
  1018  0000                     _PORTKbits	set	3815
  1019  0000                     _PORTLbits	set	3812
  1020  0000                     _RCREG4	set	3834
  1021  0000                     _RCSTA4bits	set	3839
  1022  0000                     _RPINR0_1	set	3626
  1023  0000                     _RPINR26_27	set	3639
  1024  0000                     _RPINR28_29	set	3640
  1025  0000                     _RPINR4_5	set	3628
  1026  0000                     _RPINR6_7	set	3629
  1027  0000                     _RPOR10_11	set	3607
  1028  0000                     _RPOR12_13	set	3608
  1029  0000                     _RPOR22_23	set	3613
  1030  0000                     _RPOR30_31	set	3617
  1031  0000                     _RPOR34_35	set	3619
  1032  0000                     _SPBRG4	set	3835
  1033  0000                     _SPBRGH4	set	3836
  1034  0000                     _TRISLbits	set	3814
  1035  0000                     _TXREG4	set	3833
  1036  0000                     _TXSTA4bits	set	3838
  1037  0000                     _ANSEL10	set	29234
  1038  0000                     _ANSEL11	set	29235
  1039  0000                     _ANSEL14	set	29238
  1040  0000                     _ANSEL16	set	29224
  1041  0000                     _ANSEL17	set	29225
  1042  0000                     _ANSEL18	set	29226
  1043  0000                     _ANSEL19	set	29227
  1044  0000                     _ANSEL21	set	29229
  1045  0000                     _ANSEL6	set	29246
  1046  0000                     _ANSEL9	set	29233
  1047  0000                     _CPEN	set	30407
  1048  0000                     _LCDA	set	30421
  1049  0000                     _LCDMD	set	30603
  1050  0000                     _NVCFG0	set	29805
  1051  0000                     _PVCFG0	set	29806
  1052  0000                     _PVCFG1	set	29807
  1053  0000                     _RL1	set	30497
  1054  0000                     _RL2	set	30498
  1055  0000                     _RL3	set	30499
  1056  0000                     _TRISK1	set	30537
  1057  0000                     _TRISL0	set	30512
  1058  0000                     _BAUDCON2bits	set	3889
  1059  0000                     _BAUDCON3bits	set	3885
  1060  0000                     _CCP3CON	set	3913
  1061  0000                     _CCPR3L	set	3914
  1062  0000                     _CCPTMRS0	set	3894
  1063  0000                     _CM1CONbits	set	3923
  1064  0000                     _PADCFG1	set	3924
  1065  0000                     _PADCFG1bits	set	3924
  1066  0000                     _PR4	set	3845
  1067  0000                     _PR6	set	3902
  1068  0000                     _PR8	set	3899
  1069  0000                     _RCREG3	set	3882
  1070  0000                     _RCSTA2bits	set	3891
  1071  0000                     _RCSTA3bits	set	3887
  1072  0000                     _SPBRG2	set	3871
  1073  0000                     _SPBRG3	set	3883
  1074  0000                     _SPBRGH1	set	3888
  1075  0000                     _SPBRGH2	set	3872
  1076  0000                     _SPBRGH3	set	3884
  1077  0000                     _SSP2ADD	set	3842
  1078  0000                     _SSP2BUF	set	3843
  1079  0000                     _SSP2CON1	set	3865
  1080  0000                     _SSP2CON1bits	set	3865
  1081  0000                     _SSP2CON2bits	set	3864
  1082  0000                     _SSP2CON3	set	3897
  1083  0000                     _SSP2STAT	set	3866
  1084  0000                     _SSP2STATbits	set	3866
  1085  0000                     _T4CONbits	set	3844
  1086  0000                     _T6CONbits	set	3901
  1087  0000                     _T8CONbits	set	3898
  1088  0000                     _TXREG2	set	3869
  1089  0000                     _TXSTA2bits	set	3890
  1090  0000                     _TXSTA3bits	set	3886
  1091  0000                     _T4CKPS1	set	30753
  1092  0000                     _T6CKPS1	set	31209
  1093  0000                     _TMR4ON	set	30754
  1094  0000                     _TMR6ON	set	31210
  1095  0000                     _ADCBUF0	set	4034
  1096  0000                     _ADCBUF0Hbits	set	4035
  1097  0000                     _ADCBUF0Lbits	set	4034
  1098  0000                     _ADCON1Hbits	set	4033
  1099  0000                     _BAUDCON1bits	set	3943
  1100  0000                     _CCP1CON	set	4025
  1101  0000                     _CCPR1L	set	4026
  1102  0000                     _INTCON2bits	set	4081
  1103  0000                     _INTCON3bits	set	4080
  1104  0000                     _INTCONbits	set	4082
  1105  0000                     _PIR1bits	set	3998
  1106  0000                     _PIR3bits	set	4004
  1107  0000                     _PIR6bits	set	4006
  1108  0000                     _PORTBbits	set	3969
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _PORTEbits	set	3972
  1111  0000                     _PORTFbits	set	3973
  1112  0000                     _PORTGbits	set	3974
  1113  0000                     _PORTHbits	set	3975
  1114  0000                     _PORTJbits	set	3976
  1115  0000                     _PR2	set	4043
  1116  0000                     _PSPCONbits	set	4007
  1117  0000                     _RCREG1	set	4014
  1118  0000                     _RCSTA1bits	set	4011
  1119  0000                     _SPBRG1	set	4015
  1120  0000                     _SSP1ADD	set	4040
  1121  0000                     _SSP1BUF	set	4041
  1122  0000                     _SSP1CON1	set	4038
  1123  0000                     _SSP1CON1bits	set	4038
  1124  0000                     _SSP1CON2	set	4037
  1125  0000                     _SSP1CON2bits	set	4037
  1126  0000                     _SSP1CON3	set	3945
  1127  0000                     _SSP1STAT	set	4039
  1128  0000                     _SSP1STATbits	set	4039
  1129  0000                     _T0CON	set	4053
  1130  0000                     _T2CONbits	set	4042
  1131  0000                     _TMR0L	set	4054
  1132  0000                     _TMR3H	set	4019
  1133  0000                     _TMR3L	set	4018
  1134  0000                     _TRISBbits	set	3987
  1135  0000                     _TRISCbits	set	3988
  1136  0000                     _TRISDbits	set	3989
  1137  0000                     _TRISEbits	set	3990
  1138  0000                     _TRISFbits	set	3991
  1139  0000                     _TRISGbits	set	3992
  1140  0000                     _TRISHbits	set	3993
  1141  0000                     _TRISJbits	set	3994
  1142  0000                     _TXREG1	set	4013
  1143  0000                     _TXSTA1bits	set	4012
  1144  0000                     _ADON	set	32271
  1145  0000                     _DONE	set	32256
  1146  0000                     _INT1IF	set	32640
  1147  0000                     _INT3IF	set	32642
  1148  0000                     _IOLOCK	set	31542
  1149  0000                     _IPEN	set	32391
  1150  0000                     _RC1IE	set	31981
  1151  0000                     _RC2IE	set	32029
  1152  0000                     _RC3IE	set	31501
  1153  0000                     _RC4IE	set	31503
  1154  0000                     _RD163	set	32143
  1155  0000                     _RG0	set	31792
  1156  0000                     _RG1	set	31793
  1157  0000                     _RG2	set	31794
  1158  0000                     _RG3	set	31795
  1159  0000                     _RG4	set	31796
  1160  0000                     _SAMP	set	32257
  1161  0000                     _T3CKPS0	set	32140
  1162  0000                     _T3CKPS1	set	32141
  1163  0000                     _TMR0IE	set	32661
  1164  0000                     _TMR0IF	set	32658
  1165  0000                     _TMR0IP	set	32650
  1166  0000                     _TMR3CS0	set	32142
  1167  0000                     _TMR3CS1	set	32143
  1168  0000                     _TMR3IE	set	32001
  1169  0000                     _TMR3ON	set	32136
  1170  0000                     _TRISE0	set	31920
  1171  0000                     _TRISE1	set	31921
  1172  0000                     _TRISE2	set	31922
  1173  0000                     _TRISE3	set	31923
  1174  0000                     _TRISE4	set	31924
  1175  0000                     _TRISE5	set	31925
  1176  0000                     _TRISE6	set	31926
  1177  0000                     _TRISE7	set	31927
  1178  0000                     _TRISG7	set	31943
  1179  0000                     _TRISH0	set	31944
  1180  0000                     _TRISH1	set	31945
  1181  0000                     _TRISH2	set	31946
  1182  0000                     _TRISH3	set	31947
  1183  0000                     _TX1IE	set	31980
  1184  0000                     _TX2IE	set	32028
  1185  0000                     _TX3IE	set	31500
  1186  0000                     _TX4IE	set	31502
  1187  00FEFE  4D                 	db	77	;'M'
  1188  00FEFF  45                 	db	69	;'E'
  1189  00FF00  53                 	db	83	;'S'
  1190  00FF01  53                 	db	83	;'S'
  1191  00FF02  41                 	db	65	;'A'
  1192  00FF03  47                 	db	71	;'G'
  1193  00FF04  45                 	db	69	;'E'
  1194  00FF05  5F                 	db	95	;'_'
  1195  00FF06  47                 	db	71	;'G'
  1196  00FF07  4F                 	db	79	;'O'
  1197  00FF08  45                 	db	69	;'E'
  1198  00FF09  53                 	db	83	;'S'
  1199  00FF0A  5F                 	db	95	;'_'
  1200  00FF0B  48                 	db	72	;'H'
  1201  00FF0C  45                 	db	69	;'E'
  1202  00FF0D  52                 	db	82	;'R'
  1203  00FF0E  45                 	db	69	;'E'
  1204  00FF0F  0D                 	db	13
  1205  00FF10  0A                 	db	10
  1206  00FF11  00                 	db	0
  1207  00FF12                     STR_7:
  1208  00FF12  52                 	db	82	;'R'
  1209  00FF13  43                 	db	67	;'C'
  1210  00FF14  20                 	db	32
  1211  00FF15  4D                 	db	77	;'M'
  1212  00FF16  6F                 	db	111	;'o'
  1213  00FF17  64                 	db	100	;'d'
  1214  00FF18  65                 	db	101	;'e'
  1215  00FF19  0A                 	db	10
  1216  00FF1A  45                 	db	69	;'E'
  1217  00FF1B  52                 	db	82	;'R'
  1218  00FF1C  52                 	db	82	;'R'
  1219  00FF1D  3A                 	db	58	;':'
  1220  00FF1E  20                 	db	32
  1221  00FF1F  25                 	db	37
  1222  00FF20  69                 	db	105	;'i'
  1223  00FF21  20                 	db	32
  1224  00FF22  20                 	db	32
  1225  00FF23  00                 	db	0
  1226  00FF24                     STR_4:
  1227  00FF24  57                 	db	87	;'W'
  1228  00FF25  61                 	db	97	;'a'
  1229  00FF26  6E                 	db	110	;'n'
  1230  00FF27  64                 	db	100	;'d'
  1231  00FF28  65                 	db	101	;'e'
  1232  00FF29  72                 	db	114	;'r'
  1233  00FF2A  69                 	db	105	;'i'
  1234  00FF2B  6E                 	db	110	;'n'
  1235  00FF2C  0A                 	db	10
  1236  00FF2D  2D                 	db	45
  1237  00FF2E  2D                 	db	45
  1238  00FF2F  2D                 	db	45
  1239  00FF30  2E                 	db	46
  1240  00FF31  2E                 	db	46
  1241  00FF32  2D                 	db	45
  1242  00FF33  2D                 	db	45
  1243  00FF34  2D                 	db	45
  1244  00FF35  00                 	db	0
  1245  00FF36                     STR_12:
  1246  00FF36  53                 	db	83	;'S'
  1247  00FF37  65                 	db	101	;'e'
  1248  00FF38  6C                 	db	108	;'l'
  1249  00FF39  65                 	db	101	;'e'
  1250  00FF3A  63                 	db	99	;'c'
  1251  00FF3B  74                 	db	116	;'t'
  1252  00FF3C  65                 	db	101	;'e'
  1253  00FF3D  64                 	db	100	;'d'
  1254  00FF3E  0A                 	db	10
  1255  00FF3F  53                 	db	83	;'S'
  1256  00FF40  65                 	db	101	;'e'
  1257  00FF41  6C                 	db	108	;'l'
  1258  00FF42  66                 	db	102	;'f'
  1259  00FF43  54                 	db	84	;'T'
  1260  00FF44  65                 	db	101	;'e'
  1261  00FF45  73                 	db	115	;'s'
  1262  00FF46  74                 	db	116	;'t'
  1263  00FF47  00                 	db	0
  1264  00FF48                     STR_3:
  1265  00FF48  53                 	db	83	;'S'
  1266  00FF49  65                 	db	101	;'e'
  1267  00FF4A  6C                 	db	108	;'l'
  1268  00FF4B  66                 	db	102	;'f'
  1269  00FF4C  20                 	db	32
  1270  00FF4D  43                 	db	67	;'C'
  1271  00FF4E  61                 	db	97	;'a'
  1272  00FF4F  6C                 	db	108	;'l'
  1273  00FF50  0A                 	db	10
  1274  00FF51  57                 	db	87	;'W'
  1275  00FF52  61                 	db	97	;'a'
  1276  00FF53  69                 	db	105	;'i'
  1277  00FF54  74                 	db	116	;'t'
  1278  00FF55  20                 	db	32
  1279  00FF56  50                 	db	80	;'P'
  1280  00FF57  6C                 	db	108	;'l'
  1281  00FF58  7A                 	db	122	;'z'
  1282  00FF59  00                 	db	0
  1283  00FF5A                     STR_6:
  1284  00FF5A  52                 	db	82	;'R'
  1285  00FF5B  43                 	db	67	;'C'
  1286  00FF5C  20                 	db	32
  1287  00FF5D  4D                 	db	77	;'M'
  1288  00FF5E  6F                 	db	111	;'o'
  1289  00FF5F  64                 	db	100	;'d'
  1290  00FF60  65                 	db	101	;'e'
  1291  00FF61  0A                 	db	10
  1292  00FF62  53                 	db	83	;'S'
  1293  00FF63  65                 	db	101	;'e'
  1294  00FF64  61                 	db	97	;'a'
  1295  00FF65  72                 	db	114	;'r'
  1296  00FF66  63                 	db	99	;'c'
  1297  00FF67  68                 	db	104	;'h'
  1298  00FF68  2E                 	db	46
  1299  00FF69  2E                 	db	46
  1300  00FF6A  00                 	db	0
  1301  00FF6B                     STR_9:
  1302  00FF6B  53                 	db	83	;'S'
  1303  00FF6C  65                 	db	101	;'e'
  1304  00FF6D  6C                 	db	108	;'l'
  1305  00FF6E  65                 	db	101	;'e'
  1306  00FF6F  63                 	db	99	;'c'
  1307  00FF70  74                 	db	116	;'t'
  1308  00FF71  65                 	db	101	;'e'
  1309  00FF72  64                 	db	100	;'d'
  1310  00FF73  0A                 	db	10
  1311  00FF74  52                 	db	82	;'R'
  1312  00FF75  43                 	db	67	;'C'
  1313  00FF76  20                 	db	32
  1314  00FF77  4D                 	db	77	;'M'
  1315  00FF78  6F                 	db	111	;'o'
  1316  00FF79  64                 	db	100	;'d'
  1317  00FF7A  65                 	db	101	;'e'
  1318  00FF7B  00                 	db	0
  1319  00FF7C                     STR_14:
  1320  00FF7C  53                 	db	83	;'S'
  1321  00FF7D  65                 	db	101	;'e'
  1322  00FF7E  6C                 	db	108	;'l'
  1323  00FF7F  65                 	db	101	;'e'
  1324  00FF80  63                 	db	99	;'c'
  1325  00FF81  74                 	db	116	;'t'
  1326  00FF82  65                 	db	101	;'e'
  1327  00FF83  64                 	db	100	;'d'
  1328  00FF84  0A                 	db	10
  1329  00FF85  55                 	db	85	;'U'
  1330  00FF86  6E                 	db	110	;'n'
  1331  00FF87  6B                 	db	107	;'k'
  1332  00FF88  6E                 	db	110	;'n'
  1333  00FF89  6F                 	db	111	;'o'
  1334  00FF8A  77                 	db	119	;'w'
  1335  00FF8B  6E                 	db	110	;'n'
  1336  00FF8C  00                 	db	0
  1337  00FF8D                     STR_5:
  1338  00FF8D  57                 	db	87	;'W'
  1339  00FF8E  65                 	db	101	;'e'
  1340  00FF8F  20                 	db	32
  1341  00FF90  61                 	db	97	;'a'
  1342  00FF91  72                 	db	114	;'r'
  1343  00FF92  65                 	db	101	;'e'
  1344  00FF93  0A                 	db	10
  1345  00FF94  77                 	db	119	;'w'
  1346  00FF95  69                 	db	105	;'i'
  1347  00FF96  6E                 	db	110	;'n'
  1348  00FF97  6E                 	db	110	;'n'
  1349  00FF98  69                 	db	105	;'i'
  1350  00FF99  6E                 	db	110	;'n'
  1351  00FF9A  67                 	db	103	;'g'
  1352  00FF9B  21                 	db	33
  1353  00FF9C  00                 	db	0
  1354  00FF9D                     STR_11:
  1355  00FF9D  53                 	db	83	;'S'
  1356  00FF9E  65                 	db	101	;'e'
  1357  00FF9F  6C                 	db	108	;'l'
  1358  00FFA0  65                 	db	101	;'e'
  1359  00FFA1  63                 	db	99	;'c'
  1360  00FFA2  74                 	db	116	;'t'
  1361  00FFA3  65                 	db	101	;'e'
  1362  00FFA4  64                 	db	100	;'d'
  1363  00FFA5  0A                 	db	10
  1364  00FFA6  57                 	db	87	;'W'
  1365  00FFA7  61                 	db	97	;'a'
  1366  00FFA8  6E                 	db	110	;'n'
  1367  00FFA9  64                 	db	100	;'d'
  1368  00FFAA  65                 	db	101	;'e'
  1369  00FFAB  72                 	db	114	;'r'
  1370  00FFAC  00                 	db	0
  1371  00FFAD                     STR_13:
  1372  00FFAD  53                 	db	83	;'S'
  1373  00FFAE  65                 	db	101	;'e'
  1374  00FFAF  6C                 	db	108	;'l'
  1375  00FFB0  65                 	db	101	;'e'
  1376  00FFB1  63                 	db	99	;'c'
  1377  00FFB2  74                 	db	116	;'t'
  1378  00FFB3  65                 	db	101	;'e'
  1379  00FFB4  64                 	db	100	;'d'
  1380  00FFB5  0A                 	db	10
  1381  00FFB6  44                 	db	68	;'D'
  1382  00FFB7  65                 	db	101	;'e'
  1383  00FFB8  62                 	db	98	;'b'
  1384  00FFB9  75                 	db	117	;'u'
  1385  00FFBA  67                 	db	103	;'g'
  1386  00FFBB  00                 	db	0
  1387  00FFBC                     STR_10:
  1388  00FFBC  53                 	db	83	;'S'
  1389  00FFBD  65                 	db	101	;'e'
  1390  00FFBE  6C                 	db	108	;'l'
  1391  00FFBF  65                 	db	101	;'e'
  1392  00FFC0  63                 	db	99	;'c'
  1393  00FFC1  74                 	db	116	;'t'
  1394  00FFC2  65                 	db	101	;'e'
  1395  00FFC3  64                 	db	100	;'d'
  1396  00FFC4  0A                 	db	10
  1397  00FFC5  4D                 	db	77	;'M'
  1398  00FFC6  61                 	db	97	;'a'
  1399  00FFC7  74                 	db	116	;'t'
  1400  00FFC8  63                 	db	99	;'c'
  1401  00FFC9  68                 	db	104	;'h'
  1402  00FFCA  00                 	db	0
  1403  00FFCB                     STR_8:
  1404  00FFCB  61                 	db	97	;'a'
  1405  00FFCC  6E                 	db	110	;'n'
  1406  00FFCD  61                 	db	97	;'a'
  1407  00FFCE  3A                 	db	58	;':'
  1408  00FFCF  25                 	db	37
  1409  00FFD0  69                 	db	105	;'i'
  1410  00FFD1  0A                 	db	10
  1411  00FFD2  74                 	db	116	;'t'
  1412  00FFD3  79                 	db	121	;'y'
  1413  00FFD4  70                 	db	112	;'p'
  1414  00FFD5  65                 	db	101	;'e'
  1415  00FFD6  20                 	db	32
  1416  00FFD7  25                 	db	37
  1417  00FFD8  69                 	db	105	;'i'
  1418  00FFD9  00                 	db	0
  1419  00FFDA  41                 	db	65	;'A'
  1420  00FFDB  54                 	db	84	;'T'
  1421  00FFDC  2B                 	db	43
  1422  00FFDD  43                 	db	67	;'C'
  1423  00FFDE  4D                 	db	77	;'M'
  1424  00FFDF  47                 	db	71	;'G'
  1425  00FFE0  46                 	db	70	;'F'
  1426  00FFE1  3D                 	db	61	;'='
  1427  00FFE2  31                 	db	49	;'1'
  1428  00FFE3  00                 	db	0
  1429  00FFE4  41                 	db	65	;'A'
  1430  00FFE5  54                 	db	84	;'T'
  1431  00FFE6  2B                 	db	43
  1432  00FFE7  43                 	db	67	;'C'
  1433  00FFE8  53                 	db	83	;'S'
  1434  00FFE9  51                 	db	81	;'Q'
  1435  00FFEA  0D                 	db	13
  1436  00FFEB  0A                 	db	10
  1437  00FFEC  00                 	db	0
  1438  00FFED  41                 	db	65	;'A'
  1439  00FFEE  54                 	db	84	;'T'
  1440  00FFEF  2B                 	db	43
  1441  00FFF0  43                 	db	67	;'C'
  1442  00FFF1  4D                 	db	77	;'M'
  1443  00FFF2  47                 	db	71	;'G'
  1444  00FFF3  53                 	db	83	;'S'
  1445  00FFF4  3D                 	db	61	;'='
  1446  00FFF5  00                 	db	0
  1447  00FFF6                     STR_21:
  1448  00FFF6  41                 	db	65	;'A'
  1449  00FFF7  6E                 	db	110	;'n'
  1450  00FFF8  61                 	db	97	;'a'
  1451  00FFF9  3A                 	db	58	;':'
  1452  00FFFA  25                 	db	37
  1453  00FFFB  69                 	db	105	;'i'
  1454  00FFFC  00                 	db	0
  1455  00FFFD                     STR_1:
  1456  00FFFD  25                 	db	37
  1457  00FFFE  00                 	db	0
  1458  0000                     
  1459                           ; #config settings
  1460  00FFFF  00                 	db	0	; dummy byte at the end
  1461  0000                     
  1462                           	psect	cinit
  1463  011A80                     __pcinit:
  1464                           	opt stack 0
  1465  011A80                     start_initialization:
  1466                           	opt stack 0
  1467  011A80                     __initialization:
  1468                           	opt stack 0
  1469                           
  1470                           ; Clear objects allocated to BIGRAM (1000 bytes)
  1471  011A80  EE03  F0C8         	lfsr	0,__pbssBIGRAM
  1472  011A84  EE13 F0E8          	lfsr	1,1000
  1473  011A88                     clear_0:
  1474  011A88  6AEE               	clrf	postinc0,c
  1475  011A8A  50E5               	movf	postdec1,w,c
  1476  011A8C  50E1               	movf	fsr1l,w,c
  1477  011A8E  E1FC               	bnz	clear_0
  1478  011A90  50E2               	movf	fsr1h,w,c
  1479  011A92  E1FA               	bnz	clear_0
  1480                           
  1481                           ; Clear objects allocated to BANK3 (200 bytes)
  1482  011A94  EE03  F000         	lfsr	0,__pbssBANK3
  1483  011A98  0EC8               	movlw	200
  1484  011A9A                     clear_1:
  1485  011A9A  6AEE               	clrf	postinc0,c
  1486  011A9C  06E8               	decf	wreg,f,c
  1487  011A9E  E1FD               	bnz	clear_1
  1488                           
  1489                           ; Clear objects allocated to BANK2 (178 bytes)
  1490  011AA0  EE02  F000         	lfsr	0,__pbssBANK2
  1491  011AA4  0EB2               	movlw	178
  1492  011AA6                     clear_2:
  1493  011AA6  6AEE               	clrf	postinc0,c
  1494  011AA8  06E8               	decf	wreg,f,c
  1495  011AAA  E1FD               	bnz	clear_2
  1496                           
  1497                           ; Clear objects allocated to BANK1 (198 bytes)
  1498  011AAC  EE01  F000         	lfsr	0,__pbssBANK1
  1499  011AB0  0EC6               	movlw	198
  1500  011AB2                     clear_3:
  1501  011AB2  6AEE               	clrf	postinc0,c
  1502  011AB4  06E8               	decf	wreg,f,c
  1503  011AB6  E1FD               	bnz	clear_3
  1504                           
  1505                           ; Clear objects allocated to BANK0 (43 bytes)
  1506  011AB8  EE00  F0AC         	lfsr	0,__pbssBANK0
  1507  011ABC  0E2B               	movlw	43
  1508  011ABE                     clear_4:
  1509  011ABE  6AEE               	clrf	postinc0,c
  1510  011AC0  06E8               	decf	wreg,f,c
  1511  011AC2  E1FD               	bnz	clear_4
  1512                           
  1513                           ; Clear objects allocated to COMRAM (24 bytes)
  1514  011AC4  EE00  F026         	lfsr	0,__pbssCOMRAM
  1515  011AC8  0E18               	movlw	24
  1516  011ACA                     clear_5:
  1517  011ACA  6AEE               	clrf	postinc0,c
  1518  011ACC  06E8               	decf	wreg,f,c
  1519  011ACE  E1FD               	bnz	clear_5
  1520                           
  1521                           ; Initialize objects allocated to BANK1 (41 bytes)
  1522                           ; load TBLPTR registers with __pidataBANK1
  1523  011AD0  0E11               	movlw	low __pidataBANK1
  1524  011AD2  6EF6               	movwf	tblptrl,c
  1525  011AD4  0E23               	movlw	high __pidataBANK1
  1526  011AD6  6EF7               	movwf	tblptrh,c
  1527  011AD8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1528  011ADA  6EF8               	movwf	tblptru,c
  1529  011ADC  EE01  F0C6         	lfsr	0,__pdataBANK1
  1530  011AE0  EE10 F029          	lfsr	1,41
  1531  011AE4                     copy_data0:
  1532  011AE4  0009               	tblrd		*+
  1533  011AE6  CFF5 FFEE          	movff	tablat,postinc0
  1534  011AEA  50E5               	movf	postdec1,w,c
  1535  011AEC  50E1               	movf	fsr1l,w,c
  1536  011AEE  E1FA               	bnz	copy_data0
  1537                           
  1538                           ; Initialize objects allocated to BANK0 (41 bytes)
  1539                           ; load TBLPTR registers with __pidataBANK0
  1540  011AF0  0EE8               	movlw	low __pidataBANK0
  1541  011AF2  6EF6               	movwf	tblptrl,c
  1542  011AF4  0E22               	movlw	high __pidataBANK0
  1543  011AF6  6EF7               	movwf	tblptrh,c
  1544  011AF8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1545  011AFA  6EF8               	movwf	tblptru,c
  1546  011AFC  EE00  F0D7         	lfsr	0,__pdataBANK0
  1547  011B00  EE10 F029          	lfsr	1,41
  1548  011B04                     copy_data1:
  1549  011B04  0009               	tblrd		*+
  1550  011B06  CFF5 FFEE          	movff	tablat,postinc0
  1551  011B0A  50E5               	movf	postdec1,w,c
  1552  011B0C  50E1               	movf	fsr1l,w,c
  1553  011B0E  E1FA               	bnz	copy_data1
  1554                           
  1555                           ; Initialize objects allocated to COMRAM (3 bytes)
  1556                           ; load TBLPTR registers with __pidataCOMRAM
  1557  011B10  0E42               	movlw	low __pidataCOMRAM
  1558  011B12  6EF6               	movwf	tblptrl,c
  1559  011B14  0E24               	movlw	high __pidataCOMRAM
  1560  011B16  6EF7               	movwf	tblptrh,c
  1561  011B18  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1562  011B1A  6EF8               	movwf	tblptru,c
  1563  011B1C  0009               	tblrd		*+	;fetch initializer
  1564  011B1E  CFF5 F03E          	movff	tablat,__pdataCOMRAM
  1565  011B22  0009               	tblrd		*+	;fetch initializer
  1566  011B24  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
  1567  011B28  0009               	tblrd		*+	;fetch initializer
  1568  011B2A  CFF5 F040          	movff	tablat,__pdataCOMRAM+2
  1569  011B2E                     end_of_initialization:
  1570                           	opt stack 0
  1571  011B2E                     __end_of__initialization:
  1572                           	opt stack 0
  1573  011B2E  0100               	movlb	0
  1574  011B30  EF91  F08A         	goto	_main	;jump to C main() function
  1575                           tblptru	equ	0xFF8
  1576                           tblptrh	equ	0xFF7
  1577                           tblptrl	equ	0xFF6
  1578                           tablat	equ	0xFF5
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1h	equ	0xFE2
  1583                           fsr1l	equ	0xFE1
  1584                           
  1585                           	psect	bssCOMRAM
  1586  000026                     __pbssCOMRAM:
  1587                           	opt stack 0
  1588  000026                     _left_count:
  1589                           	opt stack 0
  1590  000026                     	ds	4
  1591  00002A                     _millisCount:
  1592                           	opt stack 0
  1593  00002A                     	ds	4
  1594  00002E                     _right_count:
  1595                           	opt stack 0
  1596  00002E                     	ds	4
  1597  000032                     _errno:
  1598                           	opt stack 0
  1599  000032                     	ds	2
  1600  000034                     _spbrg:
  1601                           	opt stack 0
  1602  000034                     	ds	2
  1603  000036                     delay_init@config:
  1604                           	opt stack 0
  1605  000036                     	ds	2
  1606  000038                     _FONA_INDEX:
  1607                           	opt stack 0
  1608  000038                     	ds	1
  1609  000039                     _PIXY_INDEX:
  1610                           	opt stack 0
  1611  000039                     	ds	1
  1612  00003A                     _UART4_INDEX:
  1613                           	opt stack 0
  1614  00003A                     	ds	1
  1615  00003B                     _USB_INDEX:
  1616                           	opt stack 0
  1617  00003B                     	ds	1
  1618  00003C                     _config:
  1619                           	opt stack 0
  1620  00003C                     	ds	1
  1621  00003D                     _mode:
  1622                           	opt stack 0
  1623  00003D                     	ds	1
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1h	equ	0xFE2
  1632                           fsr1l	equ	0xFE1
  1633                           
  1634                           	psect	dataCOMRAM
  1635  00003E                     __pdataCOMRAM:
  1636                           	opt stack 0
  1637  00003E                     LCD_printVal@F16365:
  1638                           	opt stack 0
  1639  00003E                     	ds	3
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1h	equ	0xFE2
  1648                           fsr1l	equ	0xFE1
  1649                           
  1650                           	psect	bssBANK0
  1651  0000AC                     __pbssBANK0:
  1652                           	opt stack 0
  1653  0000AC                     _PS2data:
  1654                           	opt stack 0
  1655  0000AC                     	ds	21
  1656  0000C1                     PS2_readGamepad@F16093:
  1657                           	opt stack 0
  1658  0000C1                     	ds	12
  1659  0000CD                     _last_read:
  1660                           	opt stack 0
  1661  0000CD                     	ds	4
  1662  0000D1                     _buttons:
  1663                           	opt stack 0
  1664  0000D1                     	ds	2
  1665  0000D3                     _last_buttons:
  1666                           	opt stack 0
  1667  0000D3                     	ds	2
  1668  0000D5                     _controller_type:
  1669                           	opt stack 0
  1670  0000D5                     	ds	1
  1671  0000D6                     _read_delay:
  1672                           	opt stack 0
  1673  0000D6                     	ds	1
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           
  1684                           	psect	dataBANK0
  1685  0000D7                     __pdataBANK0:
  1686                           	opt stack 0
  1687  0000D7                     PS2_readGamepad@F16091:
  1688                           	opt stack 0
  1689  0000D7                     	ds	9
  1690  0000E0                     _type_read:
  1691                           	opt stack 0
  1692  0000E0                     	ds	9
  1693  0000E9                     _exit_config:
  1694                           	opt stack 0
  1695  0000E9                     	ds	9
  1696  0000F2                     _set_mode:
  1697                           	opt stack 0
  1698  0000F2                     	ds	9
  1699  0000FB                     _enter_config:
  1700                           	opt stack 0
  1701  0000FB                     	ds	5
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           
  1712                           	psect	bssBANK1
  1713  000100                     __pbssBANK1:
  1714                           	opt stack 0
  1715  000100                     _FONA_BUFF:
  1716                           	opt stack 0
  1717  000100                     	ds	50
  1718  000132                     LCD_printString@F16347:
  1719                           	opt stack 0
  1720  000132                     	ds	20
  1721  000146                     _realNumbers:
  1722                           	opt stack 0
  1723  000146                     	ds	128
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1h	equ	0xFE2
  1732                           fsr1l	equ	0xFE1
  1733                           
  1734                           	psect	dataBANK1
  1735  0001C6                     __pdataBANK1:
  1736                           	opt stack 0
  1737  0001C6                     FONA_CheckStrength@F16408:
  1738                           	opt stack 0
  1739  0001C6                     	ds	21
  1740  0001DB                     FONA_init@F16396:
  1741                           	opt stack 0
  1742  0001DB                     	ds	20
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	bssBANK2
  1754  000200                     __pbssBANK2:
  1755                           	opt stack 0
  1756  000200                     _USART4_BUFF:
  1757                           	opt stack 0
  1758  000200                     	ds	50
  1759  000232                     _imaginaryNumbers:
  1760                           	opt stack 0
  1761  000232                     	ds	128
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           postdec1	equ	0xFE5
  1769                           fsr1h	equ	0xFE2
  1770                           fsr1l	equ	0xFE1
  1771                           
  1772                           	psect	bssBANK3
  1773  000300                     __pbssBANK3:
  1774                           	opt stack 0
  1775  000300                     UART_transmitString@F16323:
  1776                           	opt stack 0
  1777  000300                     	ds	200
  1778                           tblptru	equ	0xFF8
  1779                           tblptrh	equ	0xFF7
  1780                           tblptrl	equ	0xFF6
  1781                           tablat	equ	0xFF5
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           fsr1h	equ	0xFE2
  1786                           fsr1l	equ	0xFE1
  1787                           
  1788                           	psect	bssBIGRAM
  1789  0003C8                     __pbssBIGRAM:
  1790                           	opt stack 0
  1791  0003C8                     _PIXY_BUFF:
  1792                           	opt stack 0
  1793  0003C8                     	ds	500
  1794  0005BC                     _USB_BUFF:
  1795                           	opt stack 0
  1796  0005BC                     	ds	500
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1h	equ	0xFE2
  1805                           fsr1l	equ	0xFE1
  1806                           
  1807                           	psect	cstackBANK2
  1808  0002B2                     __pcstackBANK2:
  1809                           	opt stack 0
  1810  0002B2                     LCD_printString@tempString:
  1811                           	opt stack 0
  1812                           
  1813                           ; 20 bytes @ 0x0
  1814  0002B2                     	ds	20
  1815  0002C6                     LCD_printString@string:
  1816                           	opt stack 0
  1817                           
  1818                           ; 20 bytes @ 0x14
  1819  0002C6                     	ds	20
  1820  0002DA                     LCD_printString@x:
  1821                           	opt stack 0
  1822                           
  1823                           ; 1 bytes @ 0x28
  1824  0002DA                     	ds	1
  1825  0002DB                     LCD_printString@val:
  1826                           	opt stack 0
  1827                           
  1828                           ; 2 bytes @ 0x29
  1829  0002DB                     	ds	2
  1830  0002DD                     LCD_printString@aptr:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x2B
  1834  0002DD                     	ds	2
  1835  0002DF                     LCD_printString@tempString_590:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x2D
  1839  0002DF                     	ds	2
  1840  0002E1                     LCD_printString@i:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x2F
  1844  0002E1                     	ds	2
  1845  0002E3                     LCD_printString@i_591:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x31
  1849  0002E3                     	ds	2
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           
  1860                           	psect	cstackBANK1
  1861  0001EF                     __pcstackBANK1:
  1862                           	opt stack 0
  1863  0001EF                     RCMode@left_speed:
  1864                           	opt stack 0
  1865                           
  1866                           ; 2 bytes @ 0x0
  1867  0001EF                     	ds	2
  1868  0001F1                     RCMode@right_speed:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0x2
  1872  0001F1                     	ds	2
  1873  0001F3                     RCMode@type:
  1874                           	opt stack 0
  1875                           
  1876                           ; 1 bytes @ 0x4
  1877  0001F3                     	ds	1
  1878  0001F4                     RCMode@done:
  1879                           	opt stack 0
  1880                           
  1881                           ; 1 bytes @ 0x5
  1882  0001F4                     	ds	1
  1883  0001F5                     main@mode:
  1884                           	opt stack 0
  1885                           
  1886                           ; 1 bytes @ 0x6
  1887  0001F5                     	ds	1
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1h	equ	0xFE2
  1896                           fsr1l	equ	0xFE1
  1897                           
  1898                           	psect	cstackBANK0
  1899  000060                     __pcstackBANK0:
  1900                           	opt stack 0
  1901  000060                     ?___awdiv:
  1902                           	opt stack 0
  1903  000060                     PS2_shiftInOut@byte:
  1904                           	opt stack 0
  1905  000060                     ___lwdiv@counter:
  1906                           	opt stack 0
  1907  000060                     ___awdiv@dividend:
  1908                           	opt stack 0
  1909  000060                     delay_ms@x:
  1910                           	opt stack 0
  1911                           
  1912                           ; 4 bytes @ 0x0
  1913  000060                     	ds	1
  1914  000061                     PS2_shiftInOut@tmp:
  1915                           	opt stack 0
  1916  000061                     ___lwdiv@quotient:
  1917                           	opt stack 0
  1918                           
  1919                           ; 2 bytes @ 0x1
  1920  000061                     	ds	1
  1921  000062                     PS2_shiftInOut@i:
  1922                           	opt stack 0
  1923  000062                     ___awdiv@divisor:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x2
  1927  000062                     	ds	1
  1928  000063                     ?___lwmod:
  1929                           	opt stack 0
  1930  000063                     ___lwmod@dividend:
  1931                           	opt stack 0
  1932                           
  1933                           ; 2 bytes @ 0x3
  1934  000063                     	ds	1
  1935  000064                     ??_delay_ms:
  1936  000064                     ___awdiv@counter:
  1937                           	opt stack 0
  1938                           
  1939                           ; 1 bytes @ 0x4
  1940  000064                     	ds	1
  1941  000065                     ___awdiv@sign:
  1942                           	opt stack 0
  1943  000065                     ___lwmod@divisor:
  1944                           	opt stack 0
  1945                           
  1946                           ; 2 bytes @ 0x5
  1947  000065                     	ds	1
  1948  000066                     ___awdiv@quotient:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x6
  1952  000066                     	ds	1
  1953  000067                     ?_sprintf:
  1954                           	opt stack 0
  1955  000067                     sprintf@sp:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x7
  1959  000067                     	ds	1
  1960  000068                     motorDrive_setSpeeds@rSpeed:
  1961                           	opt stack 0
  1962                           
  1963                           ; 1 bytes @ 0x8
  1964  000068                     	ds	1
  1965  000069                     ??_motorDrive_setSpeeds:
  1966  000069                     sprintf@f:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x9
  1970  000069                     	ds	3
  1971  00006C                     delay_ms@time:
  1972                           	opt stack 0
  1973                           
  1974                           ; 4 bytes @ 0xC
  1975  00006C                     	ds	1
  1976  00006D                     motorDrive_setSpeeds@templ:
  1977                           	opt stack 0
  1978  00006D                     sprintf@ap:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0xD
  1982  00006D                     	ds	2
  1983  00006F                     sprintf@flag:
  1984                           	opt stack 0
  1985  00006F                     motorDrive_setSpeeds@tempr:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0xF
  1989  00006F                     	ds	1
  1990  000070                     ??_LCD_placeCursor:
  1991  000070                     sprintf@prec:
  1992                           	opt stack 0
  1993  000070                     PS2_sendCommandString@string:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x10
  1997  000070                     	ds	1
  1998  000071                     _motorDrive_setSpeeds$2400:
  1999                           	opt stack 0
  2000  000071                     sprintf@val:
  2001                           	opt stack 0
  2002                           
  2003                           ; 2 bytes @ 0x11
  2004  000071                     	ds	1
  2005  000072                     PS2_sendCommandString@len:
  2006                           	opt stack 0
  2007                           
  2008                           ; 1 bytes @ 0x12
  2009  000072                     	ds	1
  2010  000073                     ??_PS2_sendCommandString:
  2011  000073                     sprintf@c:
  2012                           	opt stack 0
  2013  000073                     _motorDrive_setSpeeds$2401:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0x13
  2017  000073                     	ds	1
  2018  000074                     LCD_placeCursor@x:
  2019                           	opt stack 0
  2020                           
  2021                           ; 1 bytes @ 0x14
  2022  000074                     	ds	1
  2023  000075                     LCD_placeCursor@address:
  2024                           	opt stack 0
  2025  000075                     _motorDrive_setSpeeds$2402:
  2026                           	opt stack 0
  2027                           
  2028                           ; 2 bytes @ 0x15
  2029  000075                     	ds	1
  2030  000076                     ?_LCD_printString:
  2031                           	opt stack 0
  2032  000076                     LCD_printString@y:
  2033                           	opt stack 0
  2034  000076                     PS2_sendCommandString@y:
  2035                           	opt stack 0
  2036                           
  2037                           ; 2 bytes @ 0x16
  2038  000076                     	ds	1
  2039  000077                     LCD_printString@input:
  2040                           	opt stack 0
  2041  000077                     _motorDrive_setSpeeds$2403:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x17
  2045  000077                     	ds	1
  2046  000078                     ??_PS2_readGamepad:
  2047                           
  2048                           ; 0 bytes @ 0x18
  2049  000078                     	ds	1
  2050  000079                     _motorDrive_setSpeeds$2404:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x19
  2054  000079                     	ds	2
  2055  00007B                     _motorDrive_setSpeeds$2405:
  2056                           	opt stack 0
  2057                           
  2058                           ; 2 bytes @ 0x1B
  2059  00007B                     	ds	2
  2060  00007D                     ??_LCD_printString:
  2061  00007D                     _motorDrive_setSpeeds$2406:
  2062                           	opt stack 0
  2063  00007D                     PS2_readGamepad@dword2:
  2064                           	opt stack 0
  2065                           
  2066                           ; 12 bytes @ 0x1D
  2067  00007D                     	ds	2
  2068  00007F                     motorDrive_setSpeeds@lSpeed:
  2069                           	opt stack 0
  2070                           
  2071                           ; 1 bytes @ 0x1F
  2072  00007F                     	ds	10
  2073  000089                     PS2_readGamepad@dword:
  2074                           	opt stack 0
  2075                           
  2076                           ; 9 bytes @ 0x29
  2077  000089                     	ds	9
  2078  000092                     PS2_readGamepad@temp:
  2079                           	opt stack 0
  2080                           
  2081                           ; 4 bytes @ 0x32
  2082  000092                     	ds	4
  2083  000096                     PS2_readGamepad@i:
  2084                           	opt stack 0
  2085                           
  2086                           ; 2 bytes @ 0x36
  2087  000096                     	ds	2
  2088  000098                     PS2_readGamepad@i_2532:
  2089                           	opt stack 0
  2090                           
  2091                           ; 2 bytes @ 0x38
  2092  000098                     	ds	2
  2093  00009A                     PS2_init@temp:
  2094                           	opt stack 0
  2095                           
  2096                           ; 9 bytes @ 0x3A
  2097  00009A                     	ds	9
  2098  0000A3                     PS2_init@y:
  2099                           	opt stack 0
  2100                           
  2101                           ; 2 bytes @ 0x43
  2102  0000A3                     	ds	2
  2103  0000A5                     PS2_init@i:
  2104                           	opt stack 0
  2105                           
  2106                           ; 2 bytes @ 0x45
  2107  0000A5                     	ds	2
  2108  0000A7                     ??_RCMode:
  2109                           
  2110                           ; 0 bytes @ 0x47
  2111  0000A7                     	ds	1
  2112  0000A8                     ??_main:
  2113                           
  2114                           ; 0 bytes @ 0x48
  2115  0000A8                     	ds	4
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postdec1	equ	0xFE5
  2123                           fsr1h	equ	0xFE2
  2124                           fsr1l	equ	0xFE1
  2125                           
  2126                           	psect	cstackCOMRAM
  2127  000001                     __pcstackCOMRAM:
  2128                           	opt stack 0
  2129  000001                     ??_encoderInterrupt:
  2130  000001                     
  2131                           ; 1 bytes @ 0x0
  2132  000001                     	ds	17
  2133  000012                     ??_communicationInterruptHandler:
  2134                           
  2135                           ; 0 bytes @ 0x11
  2136  000012                     	ds	14
  2137  000020                     ?___wmul:
  2138                           	opt stack 0
  2139  000020                     ?___lwdiv:
  2140                           	opt stack 0
  2141  000020                     ?_millis:
  2142                           	opt stack 0
  2143  000020                     settings_readButton@t:
  2144                           	opt stack 0
  2145  000020                     settings_auto@t:
  2146                           	opt stack 0
  2147  000020                     settings_wander@t:
  2148                           	opt stack 0
  2149  000020                     settings_selfTest@t:
  2150                           	opt stack 0
  2151  000020                     PS2_analog@button:
  2152                           	opt stack 0
  2153  000020                     OpenEPWM1@timer_source:
  2154                           	opt stack 0
  2155  000020                     SetOutputEPWM1@outputmode:
  2156                           	opt stack 0
  2157  000020                     OpenEPWM3@timer_source:
  2158                           	opt stack 0
  2159  000020                     SetOutputEPWM3@outputmode:
  2160                           	opt stack 0
  2161  000020                     SetDCEPWM1@dutycycle:
  2162                           	opt stack 0
  2163  000020                     SetDCEPWM3@dutycycle:
  2164                           	opt stack 0
  2165  000020                     ___wmul@multiplier:
  2166                           	opt stack 0
  2167  000020                     ___lwdiv@dividend:
  2168                           	opt stack 0
  2169  000020                     strcat@to:
  2170                           	opt stack 0
  2171  000020                     delay_us@x:
  2172                           	opt stack 0
  2173                           
  2174                           ; 4 bytes @ 0x1F
  2175  000020                     	ds	1
  2176  000021                     ??_OpenEPWM1:
  2177  000021                     ??_OpenEPWM3:
  2178  000021                     SetOutputEPWM1@eccpmx:
  2179                           	opt stack 0
  2180  000021                     SetOutputEPWM3@eccpmx:
  2181                           	opt stack 0
  2182                           
  2183                           ; 1 bytes @ 0x20
  2184  000021                     	ds	1
  2185  000022                     ??_SetDCEPWM1:
  2186  000022                     ??_SetDCEPWM3:
  2187  000022                     OpenEPWM1@period:
  2188                           	opt stack 0
  2189  000022                     SetOutputEPWM1@outputconfig:
  2190                           	opt stack 0
  2191  000022                     OpenEPWM3@period:
  2192                           	opt stack 0
  2193  000022                     SetOutputEPWM3@outputconfig:
  2194                           	opt stack 0
  2195  000022                     ___wmul@multiplicand:
  2196                           	opt stack 0
  2197  000022                     ___lwdiv@divisor:
  2198                           	opt stack 0
  2199  000022                     strcat@from:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x21
  2203  000022                     	ds	2
  2204  000024                     ??_PS2_shiftInOut:
  2205  000024                     LCD_placeCursor@y:
  2206                           	opt stack 0
  2207  000024                     ___lwmod@counter:
  2208                           	opt stack 0
  2209  000024                     SetDCEPWM1@DCycle:
  2210                           	opt stack 0
  2211  000024                     SetDCEPWM3@DCycle:
  2212                           	opt stack 0
  2213  000024                     ___wmul@product:
  2214                           	opt stack 0
  2215  000024                     strcat@cp:
  2216                           	opt stack 0
  2217                           
  2218                           ; 2 bytes @ 0x23
  2219  000024                     	ds	1
  2220  000025                     ??_sprintf:
  2221                           
  2222                           ; 0 bytes @ 0x24
  2223  000025                     	ds	1
  2224  000026                     tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           postdec1	equ	0xFE5
  2231                           fsr1h	equ	0xFE2
  2232                           fsr1l	equ	0xFE1
  2233                           
  2234                           ; 0 bytes @ 0x25
  2235 ;;
  2236 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2237 ;;
  2238 ;; *************** function _main *****************
  2239 ;; Defined at:
  2240 ;;		line 108 in file "main.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  mode            1    6[BANK1 ] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2257 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2258 ;;Total ram usage:        5 bytes
  2259 ;; Hardware stack levels required when called:   10
  2260 ;; This function calls:
  2261 ;;		_LCD_printString
  2262 ;;		_RCMode
  2263 ;;		_competitionMode
  2264 ;;		_debug
  2265 ;;		_delay_ms
  2266 ;;		_init
  2267 ;;		_selfTest
  2268 ;;		_settings_auto
  2269 ;;		_settings_readButton
  2270 ;;		_settings_selfTest
  2271 ;;		_settings_wander
  2272 ;;		_wanderMode
  2273 ;; This function is called by:
  2274 ;;		Startup code after reset
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text0
  2279  011522                     __ptext0:
  2280                           	opt stack 0
  2281  011522                     _main:
  2282                           	opt stack 21
  2283                           
  2284                           ;main.c: 133: IPEN = 1;
  2285                           
  2286                           ;incstack = 0
  2287  011522  8ED0               	bsf	4048,7,c	;volatile
  2288                           
  2289                           ;main.c: 134: init();
  2290  011524  ECB1  F091         	call	_init	;wreg free
  2291                           
  2292                           ;main.c: 136: while(1)
  2293  011528  D000               	goto	l7751
  2294  01152A                     l7751:
  2295                           
  2296                           ;main.c: 141: {
  2297                           ;main.c: 143: mode = (settings_selfTest() << 2) + (settings_wander() << 1) + settings_au
      +                          to();
  2298  01152A  ECFC  F091         	call	_settings_auto	;wreg free
  2299  01152E  0100               	movlb	0	; () banked
  2300  011530  6FA8               	movwf	??_main& (0+255),b
  2301  011532  EC0C  F092         	call	_settings_wander	;wreg free
  2302  011536  0100               	movlb	0	; () banked
  2303  011538  6FA9               	movwf	(??_main+1)& (0+255),b
  2304  01153A  0100               	movlb	0	; () banked
  2305  01153C  90D8               	bcf	status,0,c
  2306  01153E  35A9               	rlcf	(??_main+1)& (0+255),w,b
  2307  011540  0100               	movlb	0	; () banked
  2308  011542  6FAA               	movwf	(??_main+2)& (0+255),b
  2309  011544  EC13  F092         	call	_settings_selfTest	;wreg free
  2310  011548  0100               	movlb	0	; () banked
  2311  01154A  6FAB               	movwf	(??_main+3)& (0+255),b
  2312  01154C  0100               	movlb	0	; () banked
  2313  01154E  90D8               	bcf	status,0,c
  2314  011550  37AB               	rlcf	(??_main+3)& (0+255),f,b
  2315  011552  0100               	movlb	0	; () banked
  2316  011554  90D8               	bcf	status,0,c
  2317  011556  35AB               	rlcf	(??_main+3)& (0+255),w,b
  2318  011558  0100               	movlb	0	; () banked
  2319  01155A  25AA               	addwf	(??_main+2)& (0+255),w,b
  2320  01155C  0100               	movlb	0	; () banked
  2321  01155E  25A8               	addwf	??_main& (0+255),w,b
  2322  011560  0101               	movlb	1	; () banked
  2323  011562  6FF5               	movwf	main@mode& (0+255),b
  2324                           
  2325                           ;main.c: 145: switch(mode)
  2326  011564  D04E               	goto	l7767
  2327  011566                     l7753:
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;main.c: 148: LCD_printString(0, 0, "Selected\nRC Mode");
  2331  011566  0E00               	movlw	0
  2332  011568  0100               	movlb	0	; () banked
  2333  01156A  6F76               	movwf	LCD_printString@y& (0+255),b
  2334  01156C  0E6B               	movlw	low STR_9
  2335  01156E  0100               	movlb	0	; () banked
  2336  011570  6F77               	movwf	LCD_printString@input& (0+255),b
  2337  011572  0EFF               	movlw	high STR_9
  2338  011574  0100               	movlb	0	; () banked
  2339  011576  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2340  011578  0E00               	movlw	0
  2341  01157A  EC00  F080         	call	_LCD_printString
  2342                           
  2343                           ;main.c: 149: break;
  2344  01157E  D053               	goto	l7769
  2345  011580                     l7755:
  2346                           
  2347                           ;main.c: 152: LCD_printString(0, 0, "Selected\nMatch");
  2348  011580  0E00               	movlw	0
  2349  011582  0100               	movlb	0	; () banked
  2350  011584  6F76               	movwf	LCD_printString@y& (0+255),b
  2351  011586  0EBC               	movlw	low STR_10
  2352  011588  0100               	movlb	0	; () banked
  2353  01158A  6F77               	movwf	LCD_printString@input& (0+255),b
  2354  01158C  0EFF               	movlw	high STR_10
  2355  01158E  0100               	movlb	0	; () banked
  2356  011590  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2357  011592  0E00               	movlw	0
  2358  011594  EC00  F080         	call	_LCD_printString
  2359                           
  2360                           ;main.c: 153: break;
  2361  011598  D046               	goto	l7769
  2362  01159A                     l7757:
  2363                           
  2364                           ;main.c: 156: LCD_printString(0, 0, "Selected\nWander");
  2365  01159A  0E00               	movlw	0
  2366  01159C  0100               	movlb	0	; () banked
  2367  01159E  6F76               	movwf	LCD_printString@y& (0+255),b
  2368  0115A0  0E9D               	movlw	low STR_11
  2369  0115A2  0100               	movlb	0	; () banked
  2370  0115A4  6F77               	movwf	LCD_printString@input& (0+255),b
  2371  0115A6  0EFF               	movlw	high STR_11
  2372  0115A8  0100               	movlb	0	; () banked
  2373  0115AA  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2374  0115AC  0E00               	movlw	0
  2375  0115AE  EC00  F080         	call	_LCD_printString
  2376                           
  2377                           ;main.c: 157: break;
  2378  0115B2  D039               	goto	l7769
  2379  0115B4                     l7759:
  2380                           
  2381                           ;main.c: 160: LCD_printString(0, 0, "Selected\nSelfTest");
  2382  0115B4  0E00               	movlw	0
  2383  0115B6  0100               	movlb	0	; () banked
  2384  0115B8  6F76               	movwf	LCD_printString@y& (0+255),b
  2385  0115BA  0E36               	movlw	low STR_12
  2386  0115BC  0100               	movlb	0	; () banked
  2387  0115BE  6F77               	movwf	LCD_printString@input& (0+255),b
  2388  0115C0  0EFF               	movlw	high STR_12
  2389  0115C2  0100               	movlb	0	; () banked
  2390  0115C4  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2391  0115C6  0E00               	movlw	0
  2392  0115C8  EC00  F080         	call	_LCD_printString
  2393                           
  2394                           ;main.c: 161: break;
  2395  0115CC  D02C               	goto	l7769
  2396  0115CE                     l7761:
  2397                           
  2398                           ;main.c: 164: LCD_printString(0, 0, "Selected\nDebug");
  2399  0115CE  0E00               	movlw	0
  2400  0115D0  0100               	movlb	0	; () banked
  2401  0115D2  6F76               	movwf	LCD_printString@y& (0+255),b
  2402  0115D4  0EAD               	movlw	low STR_13
  2403  0115D6  0100               	movlb	0	; () banked
  2404  0115D8  6F77               	movwf	LCD_printString@input& (0+255),b
  2405  0115DA  0EFF               	movlw	high STR_13
  2406  0115DC  0100               	movlb	0	; () banked
  2407  0115DE  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2408  0115E0  0E00               	movlw	0
  2409  0115E2  EC00  F080         	call	_LCD_printString
  2410                           
  2411                           ;main.c: 165: break;
  2412  0115E6  D01F               	goto	l7769
  2413  0115E8                     l7763:
  2414                           
  2415                           ;main.c: 168: LCD_printString(0, 0, "Selected\nUnknown");
  2416  0115E8  0E00               	movlw	0
  2417  0115EA  0100               	movlb	0	; () banked
  2418  0115EC  6F76               	movwf	LCD_printString@y& (0+255),b
  2419  0115EE  0E7C               	movlw	low STR_14
  2420  0115F0  0100               	movlb	0	; () banked
  2421  0115F2  6F77               	movwf	LCD_printString@input& (0+255),b
  2422  0115F4  0EFF               	movlw	high STR_14
  2423  0115F6  0100               	movlb	0	; () banked
  2424  0115F8  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2425  0115FA  0E00               	movlw	0
  2426  0115FC  EC00  F080         	call	_LCD_printString
  2427                           
  2428                           ;main.c: 170: }
  2429                           
  2430                           ;main.c: 169: break;
  2431  011600  D012               	goto	l7769
  2432  011602                     l7767:
  2433  011602  0101               	movlb	1	; () banked
  2434  011604  51F5               	movf	main@mode& (0+255),w,b
  2435                           
  2436                           ; Switch size 1, requested type "space"
  2437                           ; Number of cases is 5, Range of values is 0 to 5
  2438                           ; switch strategies available:
  2439                           ; Name         Instructions Cycles
  2440                           ; simple_byte           16     9 (average)
  2441                           ;	Chosen strategy is simple_byte
  2442  011606  0A00               	xorlw	0	; case 0
  2443  011608  B4D8               	btfsc	status,2,c
  2444  01160A  D7AD               	goto	l7753
  2445  01160C  0A01               	xorlw	1	; case 1
  2446  01160E  B4D8               	btfsc	status,2,c
  2447  011610  D7B7               	goto	l7755
  2448  011612  0A03               	xorlw	3	; case 2
  2449  011614  B4D8               	btfsc	status,2,c
  2450  011616  D7C1               	goto	l7757
  2451  011618  0A06               	xorlw	6	; case 4
  2452  01161A  B4D8               	btfsc	status,2,c
  2453  01161C  D7CB               	goto	l7759
  2454  01161E  0A01               	xorlw	1	; case 5
  2455  011620  B4D8               	btfsc	status,2,c
  2456  011622  D7D5               	goto	l7761
  2457  011624  D7E1               	goto	l7763
  2458  011626                     l7769:
  2459                           
  2460                           ;main.c: 172: delay_ms(50);
  2461  011626  0E32               	movlw	50
  2462  011628  0100               	movlb	0	; () banked
  2463  01162A  6F60               	movwf	delay_ms@x& (0+255),b
  2464  01162C  0E00               	movlw	0
  2465  01162E  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  2466  011630  0E00               	movlw	0
  2467  011632  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  2468  011634  0E00               	movlw	0
  2469  011636  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  2470  011638  EC2F  F08E         	call	_delay_ms	;wreg free
  2471                           
  2472                           ;main.c: 173: }while(settings_readButton() == 1 || mode > 5);
  2473  01163C  EC04  F092         	call	_settings_readButton	;wreg free
  2474  011640  06E8               	decf	wreg,f,c
  2475  011642  B4D8               	btfsc	status,2,c
  2476  011644  D772               	goto	l7751
  2477  011646  0E06               	movlw	6
  2478  011648  0101               	movlb	1	; () banked
  2479  01164A  61F5               	cpfslt	main@mode& (0+255),b
  2480  01164C  D76E               	goto	l7751
  2481                           
  2482                           ; BSR set to: 1
  2483                           ;main.c: 175: switch(mode)
  2484  01164E  D00F               	goto	l7787
  2485  011650                     l7775:
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;main.c: 178: RCMode();
  2489  011650  EC4B  F08B         	call	_RCMode	;wreg free
  2490                           
  2491                           ;main.c: 179: break;
  2492  011654  D76A               	goto	l7751
  2493  011656                     l7777:
  2494                           
  2495                           ;main.c: 182: competitionMode();
  2496  011656  ECCE  F091         	call	_competitionMode	;wreg free
  2497                           
  2498                           ;main.c: 183: break;
  2499  01165A  D767               	goto	l7751
  2500  01165C                     l7779:
  2501                           
  2502                           ;main.c: 186: wanderMode();
  2503  01165C  ECC0  F091         	call	_wanderMode	;wreg free
  2504                           
  2505                           ;main.c: 187: break;
  2506  011660  D764               	goto	l7751
  2507  011662                     l7781:
  2508                           
  2509                           ;main.c: 190: selfTest();
  2510  011662  ECFC  F090         	call	_selfTest	;wreg free
  2511                           
  2512                           ;main.c: 191: break;
  2513  011666  D761               	goto	l7751
  2514  011668                     l7783:
  2515                           
  2516                           ;main.c: 194: debug();
  2517  011668  EC23  F092         	call	_debug	;wreg free
  2518                           
  2519                           ;main.c: 199: }
  2520                           
  2521                           ;main.c: 198: break;
  2522                           
  2523                           ;main.c: 197: default:
  2524                           
  2525                           ;main.c: 195: break;
  2526  01166C  D75E               	goto	l7751
  2527  01166E                     l7787:
  2528  01166E  0101               	movlb	1	; () banked
  2529  011670  51F5               	movf	main@mode& (0+255),w,b
  2530                           
  2531                           ; Switch size 1, requested type "space"
  2532                           ; Number of cases is 5, Range of values is 0 to 5
  2533                           ; switch strategies available:
  2534                           ; Name         Instructions Cycles
  2535                           ; simple_byte           16     9 (average)
  2536                           ;	Chosen strategy is simple_byte
  2537  011672  0A00               	xorlw	0	; case 0
  2538  011674  B4D8               	btfsc	status,2,c
  2539  011676  D7EC               	goto	l7775
  2540  011678  0A01               	xorlw	1	; case 1
  2541  01167A  B4D8               	btfsc	status,2,c
  2542  01167C  D7EC               	goto	l7777
  2543  01167E  0A03               	xorlw	3	; case 2
  2544  011680  B4D8               	btfsc	status,2,c
  2545  011682  D7EC               	goto	l7779
  2546  011684  0A06               	xorlw	6	; case 4
  2547  011686  B4D8               	btfsc	status,2,c
  2548  011688  D7EC               	goto	l7781
  2549  01168A  0A01               	xorlw	1	; case 5
  2550  01168C  B4D8               	btfsc	status,2,c
  2551  01168E  D7EC               	goto	l7783
  2552                           
  2553                           ; BSR set to: 1
  2554                           
  2555                           ; BSR set to: 1
  2556  011690  D74C               	goto	l7751
  2557                           
  2558                           ; BSR set to: 1
  2559                           
  2560                           ; BSR set to: 1
  2561  011692  EF7B  F000         	goto	start
  2562  011696                     __end_of_main:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           status	equ	0xFD8
  2574                           
  2575 ;; *************** function _wanderMode *****************
  2576 ;; Defined at:
  2577 ;;		line 59 in file "main.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;Total ram usage:        0 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    7
  2598 ;; This function calls:
  2599 ;;		_LCD_printString
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text1
  2606  012380                     __ptext1:
  2607                           	opt stack 0
  2608  012380                     _wanderMode:
  2609                           	opt stack 23
  2610                           
  2611                           ;main.c: 61: LCD_printString(0,0, "Wanderin\n---..---");
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;incstack = 0
  2615  012380  0E00               	movlw	0
  2616  012382  0100               	movlb	0	; () banked
  2617  012384  6F76               	movwf	LCD_printString@y& (0+255),b
  2618  012386  0E24               	movlw	low STR_4
  2619  012388  0100               	movlb	0	; () banked
  2620  01238A  6F77               	movwf	LCD_printString@input& (0+255),b
  2621  01238C  0EFF               	movlw	high STR_4
  2622  01238E  0100               	movlb	0	; () banked
  2623  012390  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2624  012392  0E00               	movlw	0
  2625  012394  EC00  F080         	call	_LCD_printString
  2626  012398  D7FF               	goto	l235
  2627  01239A  0012               	return		;funcret
  2628  01239C                     __end_of_wanderMode:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           postinc0	equ	0xFEE
  2635                           wreg	equ	0xFE8
  2636                           postdec1	equ	0xFE5
  2637                           fsr1h	equ	0xFE2
  2638                           fsr1l	equ	0xFE1
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _settings_wander *****************
  2642 ;; Defined at:
  2643 ;;		line 80 in file "settings.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  t               1   31[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    3
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text2
  2672  012418                     __ptext2:
  2673                           	opt stack 0
  2674  012418                     _settings_wander:
  2675                           	opt stack 27
  2676                           
  2677                           ;settings.c: 82: char t = RG2;
  2678                           
  2679                           ;incstack = 0
  2680  012418  0E00               	movlw	0
  2681  01241A  B486               	btfsc	3974,2,c	;volatile
  2682  01241C  0E01               	movlw	1
  2683  01241E  6E20               	movwf	settings_wander@t,c
  2684                           
  2685                           ;settings.c: 83: return t;
  2686  012420  5020               	movf	settings_wander@t,w,c
  2687  012422  0012               	return	
  2688  012424  0012               	return		;funcret
  2689  012426                     __end_of_settings_wander:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           postdec1	equ	0xFE5
  2698                           fsr1h	equ	0xFE2
  2699                           fsr1l	equ	0xFE1
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _settings_selfTest *****************
  2703 ;; Defined at:
  2704 ;;		line 94 in file "settings.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  t               1   31[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      unsigned char 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text3
  2733  012426                     __ptext3:
  2734                           	opt stack 0
  2735  012426                     _settings_selfTest:
  2736                           	opt stack 27
  2737                           
  2738                           ;settings.c: 96: char t = RG0;
  2739                           
  2740                           ;incstack = 0
  2741  012426  0E00               	movlw	0
  2742  012428  B086               	btfsc	3974,0,c	;volatile
  2743  01242A  0E01               	movlw	1
  2744  01242C  6E20               	movwf	settings_selfTest@t,c
  2745                           
  2746                           ;settings.c: 97: return t;
  2747  01242E  5020               	movf	settings_selfTest@t,w,c
  2748  012430  0012               	return	
  2749  012432  0012               	return		;funcret
  2750  012434                     __end_of_settings_selfTest:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _settings_auto *****************
  2764 ;; Defined at:
  2765 ;;		line 66 in file "settings.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  t               1   31[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      unsigned char 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;Total ram usage:        1 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    3
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text4
  2794  0123F8                     __ptext4:
  2795                           	opt stack 0
  2796  0123F8                     _settings_auto:
  2797                           	opt stack 27
  2798                           
  2799                           ;settings.c: 68: char t = RL1;
  2800                           
  2801                           ;incstack = 0
  2802  0123F8  0E00               	movlw	0
  2803  0123FA  010E               	movlb	14	; () banked
  2804  0123FC  B3E4               	btfsc	228,1,b	;volatile
  2805  0123FE  0E01               	movlw	1
  2806  012400  6E20               	movwf	settings_auto@t,c
  2807                           
  2808                           ;settings.c: 69: return t;
  2809  012402  5020               	movf	settings_auto@t,w,c
  2810  012404  0012               	return	
  2811                           
  2812                           ; BSR set to: 14
  2813                           
  2814                           ; BSR set to: 14
  2815  012406  0012               	return		;funcret
  2816  012408                     __end_of_settings_auto:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           postdec1	equ	0xFE5
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _selfTest *****************
  2830 ;; Defined at:
  2831 ;;		line 49 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;		None               void
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    7
  2852 ;; This function calls:
  2853 ;;		_LCD_printString
  2854 ;;		_settings_readButton
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text5
  2861  0121F8                     __ptext5:
  2862                           	opt stack 0
  2863  0121F8                     _selfTest:
  2864                           	opt stack 23
  2865                           
  2866                           ;main.c: 53: LCD_printString(0,0, "Self Cal\nWait Plz");
  2867                           
  2868                           ; BSR set to: 14
  2869                           ;incstack = 0
  2870  0121F8  0E00               	movlw	0
  2871  0121FA  0100               	movlb	0	; () banked
  2872  0121FC  6F76               	movwf	LCD_printString@y& (0+255),b
  2873  0121FE  0E48               	movlw	low STR_3
  2874  012200  0100               	movlb	0	; () banked
  2875  012202  6F77               	movwf	LCD_printString@input& (0+255),b
  2876  012204  0EFF               	movlw	high STR_3
  2877  012206  0100               	movlb	0	; () banked
  2878  012208  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  2879  01220A  0E00               	movlw	0
  2880  01220C  EC00  F080         	call	_LCD_printString
  2881                           
  2882                           ;main.c: 55: while(settings_readButton() == 0);
  2883  012210  D000               	goto	l7407
  2884  012212                     l7407:
  2885  012212  EC04  F092         	call	_settings_readButton	;wreg free
  2886  012216  0900               	iorlw	0
  2887  012218  A4D8               	btfss	status,2,c
  2888  01221A  D002               	goto	l7409
  2889  01221C  D7FA               	goto	l7407
  2890                           
  2891                           ;main.c: 56: while(settings_readButton() == 1);
  2892  01221E  D000               	goto	l7409
  2893  012220                     l7409:
  2894  012220  EC04  F092         	call	_settings_readButton	;wreg free
  2895  012224  06E8               	decf	wreg,f,c
  2896  012226  B4D8               	btfsc	status,2,c
  2897  012228  D7FB               	goto	l7409
  2898  01222A  0012               	return		;funcret
  2899  01222C                     __end_of_selfTest:
  2900                           	opt stack 0
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postdec1	equ	0xFE5
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _settings_readButton *****************
  2913 ;; Defined at:
  2914 ;;		line 45 in file "settings.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  t               1   31[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;Total ram usage:        1 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    3
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_selfTest
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text6
  2944  012408                     __ptext6:
  2945                           	opt stack 0
  2946  012408                     _settings_readButton:
  2947                           	opt stack 27
  2948                           
  2949                           ;settings.c: 47: char t = RL3;
  2950                           
  2951                           ;incstack = 0
  2952  012408  0E00               	movlw	0
  2953  01240A  010E               	movlb	14	; () banked
  2954  01240C  B7E4               	btfsc	228,3,b	;volatile
  2955  01240E  0E01               	movlw	1
  2956  012410  6E20               	movwf	settings_readButton@t,c
  2957                           
  2958                           ;settings.c: 48: return t;
  2959  012412  5020               	movf	settings_readButton@t,w,c
  2960  012414  0012               	return	
  2961                           
  2962                           ; BSR set to: 14
  2963                           
  2964                           ; BSR set to: 14
  2965  012416  0012               	return		;funcret
  2966  012418                     __end_of_settings_readButton:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           postdec1	equ	0xFE5
  2975                           fsr1h	equ	0xFE2
  2976                           fsr1l	equ	0xFE1
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _init *****************
  2980 ;; Defined at:
  2981 ;;		line 30 in file "main.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;		None               void
  2988 ;; Registers used:
  2989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    8
  3002 ;; This function calls:
  3003 ;;		_LCD_init4bit
  3004 ;;		_UART_init
  3005 ;;		_clearMillis
  3006 ;;		_encoders_init
  3007 ;;		_fft_init
  3008 ;;		_motorDrive_init
  3009 ;;		_settings_init
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text7
  3016  012362                     __ptext7:
  3017                           	opt stack 0
  3018  012362                     _init:
  3019                           	opt stack 22
  3020                           
  3021                           ;main.c: 32: settings_init();
  3022                           
  3023                           ; BSR set to: 14
  3024                           ;incstack = 0
  3025  012362  EC48  F091         	call	_settings_init	;wreg free
  3026                           
  3027                           ;main.c: 33: motorDrive_init();
  3028  012366  ECFC  F08E         	call	_motorDrive_init	;wreg free
  3029                           
  3030                           ;main.c: 34: LCD_init4bit();
  3031  01236A  ECF7  F084         	call	_LCD_init4bit	;wreg free
  3032                           
  3033                           ;main.c: 35: UART_init();
  3034  01236E  ECEB  F08B         	call	_UART_init	;wreg free
  3035                           
  3036                           ;main.c: 36: encoders_init();
  3037  012372  EC5F  F091         	call	_encoders_init	;wreg free
  3038                           
  3039                           ;main.c: 37: fft_init();
  3040  012376  ECB5  F08F         	call	_fft_init	;wreg free
  3041                           
  3042                           ;main.c: 41: clearMillis();
  3043  01237A  ECE8  F091         	call	_clearMillis	;wreg free
  3044  01237E  0012               	return		;funcret
  3045  012380                     __end_of_init:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           postinc0	equ	0xFEE
  3052                           wreg	equ	0xFE8
  3053                           postdec1	equ	0xFE5
  3054                           fsr1h	equ	0xFE2
  3055                           fsr1l	equ	0xFE1
  3056                           status	equ	0xFD8
  3057                           
  3058 ;; *************** function _settings_init *****************
  3059 ;; Defined at:
  3060 ;;		line 16 in file "settings.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, status,2
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    3
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_init
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text8
  3089  012290                     __ptext8:
  3090                           	opt stack 0
  3091  012290                     _settings_init:
  3092                           	opt stack 26
  3093                           
  3094                           ;settings.c: 18: CM1CONbits.CON = 0;
  3095                           
  3096                           ;incstack = 0
  3097  012290  010F               	movlb	15	; () banked
  3098  012292  9F53               	bcf	83,7,b	;volatile
  3099                           
  3100                           ; BSR set to: 15
  3101                           ;settings.c: 19: ANCON1 = 0;
  3102  012294  0E00               	movlw	0
  3103  012296  010E               	movlb	14	; () banked
  3104  012298  6F47               	movwf	71,b	;volatile
  3105                           
  3106                           ;settings.c: 20: ANCON2 = 0;
  3107  01229A  0E00               	movlw	0
  3108  01229C  010E               	movlb	14	; () banked
  3109  01229E  6F46               	movwf	70,b	;volatile
  3110                           
  3111                           ; BSR set to: 14
  3112                           ;settings.c: 22: TRISGbits.TRISG0 = 1;
  3113  0122A0  8098               	bsf	3992,0,c	;volatile
  3114                           
  3115                           ; BSR set to: 14
  3116                           ;settings.c: 23: TRISGbits.TRISG1 = 1;
  3117  0122A2  8298               	bsf	3992,1,c	;volatile
  3118                           
  3119                           ; BSR set to: 14
  3120                           ;settings.c: 24: TRISGbits.TRISG2 = 1;
  3121  0122A4  8498               	bsf	3992,2,c	;volatile
  3122                           
  3123                           ; BSR set to: 14
  3124                           ;settings.c: 25: TRISGbits.TRISG3 = 1;
  3125  0122A6  8698               	bsf	3992,3,c	;volatile
  3126                           
  3127                           ; BSR set to: 14
  3128                           ;settings.c: 26: TRISGbits.TRISG4 = 1;
  3129  0122A8  8898               	bsf	3992,4,c	;volatile
  3130                           
  3131                           ; BSR set to: 14
  3132                           ;settings.c: 27: TRISLbits.TRISL1 = 1;
  3133  0122AA  010E               	movlb	14	; () banked
  3134  0122AC  83E6               	bsf	230,1,b	;volatile
  3135                           
  3136                           ; BSR set to: 14
  3137                           ;settings.c: 28: TRISLbits.TRISL2 = 1;
  3138  0122AE  010E               	movlb	14	; () banked
  3139  0122B0  85E6               	bsf	230,2,b	;volatile
  3140                           
  3141                           ; BSR set to: 14
  3142                           ;settings.c: 29: TRISLbits.TRISL3 = 1;
  3143  0122B2  010E               	movlb	14	; () banked
  3144  0122B4  87E6               	bsf	230,3,b	;volatile
  3145                           
  3146                           ;settings.c: 32: PADCFG1 = 0b00010001;
  3147  0122B6  0E11               	movlw	17
  3148  0122B8  010F               	movlb	15	; () banked
  3149  0122BA  6F54               	movwf	84,b	;volatile
  3150                           
  3151                           ; BSR set to: 15
  3152  0122BC  0012               	return		;funcret
  3153  0122BE                     __end_of_settings_init:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           postdec1	equ	0xFE5
  3162                           fsr1h	equ	0xFE2
  3163                           fsr1l	equ	0xFE1
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _motorDrive_init *****************
  3167 ;; Defined at:
  3168 ;;		line 15 in file "motorDrive.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    5
  3189 ;; This function calls:
  3190 ;;		_OpenEPWM1
  3191 ;;		_OpenEPWM3
  3192 ;;		_SetDCEPWM1
  3193 ;;		_SetDCEPWM3
  3194 ;;		_SetOutputEPWM1
  3195 ;;		_SetOutputEPWM3
  3196 ;;		_motorDrive_setSpeeds
  3197 ;; This function is called by:
  3198 ;;		_init
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text9
  3203  011DF8                     __ptext9:
  3204                           	opt stack 0
  3205  011DF8                     _motorDrive_init:
  3206                           	opt stack 24
  3207                           
  3208                           ;motorDrive.c: 22: IOLOCK = 0;
  3209                           
  3210                           ; BSR set to: 15
  3211                           ;incstack = 0
  3212  011DF8  9C66               	bcf	3942,6,c	;volatile
  3213                           
  3214                           ;motorDrive.c: 24: RPOR34_35 |= 0xF8;
  3215  011DFA  0EF8               	movlw	248
  3216  011DFC  010E               	movlb	14	; () banked
  3217  011DFE  1323               	iorwf	35,f,b	;volatile
  3218                           
  3219                           ; BSR set to: 14
  3220                           ;motorDrive.c: 25: TRISE6 = 0;
  3221  011E00  9C96               	bcf	3990,6,c	;volatile
  3222                           
  3223                           ;motorDrive.c: 29: RPOR30_31 |= 0x4F;
  3224  011E02  0E4F               	movlw	79
  3225  011E04  010E               	movlb	14	; () banked
  3226  011E06  1321               	iorwf	33,f,b	;volatile
  3227                           
  3228                           ; BSR set to: 14
  3229                           ;motorDrive.c: 30: TRISE7 = 0;
  3230  011E08  9E96               	bcf	3990,7,c	;volatile
  3231                           
  3232                           ; BSR set to: 14
  3233                           ;motorDrive.c: 32: IOLOCK = 1;
  3234  011E0A  8C66               	bsf	3942,6,c	;volatile
  3235                           
  3236                           ; BSR set to: 14
  3237                           ;motorDrive.c: 38: TRISL0 = 0;
  3238  011E0C  010E               	movlb	14	; () banked
  3239  011E0E  91E6               	bcf	230,0,b	;volatile
  3240                           
  3241                           ; BSR set to: 14
  3242                           ;motorDrive.c: 39: TRISK1 = 0;
  3243  011E10  010E               	movlb	14	; () banked
  3244  011E12  93E9               	bcf	233,1,b	;volatile
  3245                           
  3246                           ; BSR set to: 14
  3247                           ;motorDrive.c: 43: TMR4ON = 1;
  3248  011E14  010F               	movlb	15	; () banked
  3249  011E16  8504               	bsf	4,2,b	;volatile
  3250                           
  3251                           ; BSR set to: 15
  3252                           ;motorDrive.c: 44: T4CKPS1 = 1;
  3253  011E18  010F               	movlb	15	; () banked
  3254  011E1A  8304               	bsf	4,1,b	;volatile
  3255                           
  3256                           ; BSR set to: 15
  3257                           ;motorDrive.c: 46: TMR6ON = 1;
  3258  011E1C  010F               	movlb	15	; () banked
  3259  011E1E  853D               	bsf	61,2,b	;volatile
  3260                           
  3261                           ; BSR set to: 15
  3262                           ;motorDrive.c: 47: T6CKPS1 = 1;
  3263  011E20  010F               	movlb	15	; () banked
  3264  011E22  833D               	bsf	61,1,b	;volatile
  3265                           
  3266                           ; BSR set to: 15
  3267                           ;motorDrive.c: 50: OpenEPWM1(0x33, 0b10101111);
  3268  011E24  0EAF               	movlw	175
  3269  011E26  6E20               	movwf	OpenEPWM1@timer_source,c
  3270  011E28  0E33               	movlw	51
  3271  011E2A  EC3E  F08F         	call	_OpenEPWM1
  3272                           
  3273                           ;motorDrive.c: 51: SetDCEPWM1(0x0);
  3274  011E2E  0E00               	movlw	0
  3275  011E30  6E21               	movwf	SetDCEPWM1@dutycycle+1,c
  3276  011E32  0E00               	movlw	0
  3277  011E34  6E20               	movwf	SetDCEPWM1@dutycycle,c
  3278  011E36  ECC4  F090         	call	_SetDCEPWM1	;wreg free
  3279                           
  3280                           ;motorDrive.c: 52: SetOutputEPWM1( 0b00111111, 0b11111100);
  3281  011E3A  0EFC               	movlw	252
  3282  011E3C  6E20               	movwf	SetOutputEPWM1@outputmode,c
  3283  011E3E  0E3F               	movlw	63
  3284  011E40  ECB9  F08E         	call	_SetOutputEPWM1
  3285                           
  3286                           ;motorDrive.c: 55: CCP1CON = 0b00001100;
  3287  011E44  0E0C               	movlw	12
  3288  011E46  6EB9               	movwf	4025,c	;volatile
  3289                           
  3290                           ;motorDrive.c: 56: CCPTMRS0 = 0b01001001;
  3291  011E48  0E49               	movlw	73
  3292  011E4A  010F               	movlb	15	; () banked
  3293  011E4C  6F36               	movwf	54,b	;volatile
  3294                           
  3295                           ; BSR set to: 15
  3296                           ;motorDrive.c: 60: OpenEPWM3(0x33, 0b11101111);
  3297  011E4E  0EEF               	movlw	239
  3298  011E50  6E20               	movwf	OpenEPWM3@timer_source,c
  3299  011E52  0E33               	movlw	51
  3300  011E54  EC75  F08E         	call	_OpenEPWM3
  3301                           
  3302                           ;motorDrive.c: 61: SetDCEPWM3(0x0);
  3303  011E58  0E00               	movlw	0
  3304  011E5A  6E21               	movwf	SetDCEPWM3@dutycycle+1,c
  3305  011E5C  0E00               	movlw	0
  3306  011E5E  6E20               	movwf	SetDCEPWM3@dutycycle,c
  3307  011E60  ECA5  F090         	call	_SetDCEPWM3	;wreg free
  3308                           
  3309                           ;motorDrive.c: 62: SetOutputEPWM3( 0b00111111, 0b11111100);
  3310  011E64  0EFC               	movlw	252
  3311  011E66  6E20               	movwf	SetOutputEPWM3@outputmode,c
  3312  011E68  0E3F               	movlw	63
  3313  011E6A  ECE8  F08D         	call	_SetOutputEPWM3
  3314                           
  3315                           ;motorDrive.c: 64: motorDrive_setSpeeds(0,0);
  3316  011E6E  0E00               	movlw	0
  3317  011E70  0100               	movlb	0	; () banked
  3318  011E72  6F68               	movwf	motorDrive_setSpeeds@rSpeed& (0+255),b
  3319  011E74  0E00               	movlw	0
  3320  011E76  EC90  F086         	call	_motorDrive_setSpeeds
  3321  011E7A  0012               	return		;funcret
  3322  011E7C                     __end_of_motorDrive_init:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1h	equ	0xFE2
  3332                           fsr1l	equ	0xFE1
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _SetOutputEPWM3 *****************
  3336 ;; Defined at:
  3337 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setoc.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  outputconfig    1    wreg     unsigned char 
  3340 ;;  outputmode      1   31[COMRAM] unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  outputconfig    1   33[COMRAM] unsigned char 
  3343 ;;  eccpmx          1   32[COMRAM] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;Total ram usage:        3 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    3
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_motorDrive_init
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text10
  3368  011BD0                     __ptext10:
  3369                           	opt stack 0
  3370  011BD0                     _SetOutputEPWM3:
  3371                           	opt stack 25
  3372                           
  3373                           ;incstack = 0
  3374                           ;SetOutputEPWM3@outputconfig stored from wreg
  3375  011BD0  6E22               	movwf	SetOutputEPWM3@outputconfig,c
  3376  011BD2  0E00               	movlw	0
  3377  011BD4  6E21               	movwf	SetOutputEPWM3@eccpmx,c
  3378  011BD6  0E3F               	movlw	63
  3379  011BD8  1222               	iorwf	SetOutputEPWM3@outputconfig,f,c
  3380  011BDA  0EFC               	movlw	252
  3381  011BDC  1220               	iorwf	SetOutputEPWM3@outputmode,f,c
  3382  011BDE  010F               	movlb	15	; () banked
  3383  011BE0  5149               	movf	73,w,b	;volatile
  3384  011BE2  09C0               	iorlw	192
  3385  011BE4  1422               	andwf	SetOutputEPWM3@outputconfig,w,c
  3386  011BE6  010F               	movlb	15	; () banked
  3387  011BE8  6F49               	movwf	73,b	;volatile
  3388                           
  3389                           ; BSR set to: 15
  3390  011BEA  010F               	movlb	15	; () banked
  3391  011BEC  5149               	movf	73,w,b	;volatile
  3392  011BEE  090F               	iorlw	15
  3393  011BF0  1420               	andwf	SetOutputEPWM3@outputmode,w,c
  3394  011BF2  010F               	movlb	15	; () banked
  3395  011BF4  6F49               	movwf	73,b	;volatile
  3396                           
  3397                           ; BSR set to: 15
  3398  011BF6  0E05               	movlw	5
  3399  011BF8  6EF6               	movwf	tblptrl,c
  3400  011BFA                     	if	1	;There is more than 1 active tblptr byte
  3401  011BFA  0E00               	movlw	0
  3402  011BFC  6EF7               	movwf	tblptrh,c
  3403  011BFE                     	endif
  3404  011BFE                     	if	1	;There are 3 active tblptr bytes
  3405  011BFE  0E30               	movlw	48
  3406  011C00  6EF8               	movwf	tblptru,c
  3407  011C02                     	endif
  3408  011C02  0008               	tblrd		*
  3409  011C04  0100               	movlb	12288	; () banked
  3410  011C06  A2F5               	btfss	tablat,1,c
  3411  011C08  D002               	goto	l6763
  3412                           
  3413                           ; BSR set to: 0
  3414  011C0A  6821               	setf	SetOutputEPWM3@eccpmx,c
  3415  011C0C  D003               	goto	l6765
  3416  011C0E                     l6763:
  3417                           
  3418                           ; BSR set to: 0
  3419  011C0E  0E00               	movlw	0
  3420  011C10  6E21               	movwf	SetOutputEPWM3@eccpmx,c
  3421  011C12  D000               	goto	l6765
  3422  011C14                     l6765:
  3423                           
  3424                           ; BSR set to: 0
  3425  011C14  0E3F               	movlw	63
  3426  011C16  1822               	xorwf	SetOutputEPWM3@outputconfig,w,c
  3427  011C18  A4D8               	btfss	status,2,c
  3428  011C1A  D002               	goto	l6769
  3429                           
  3430                           ; BSR set to: 0
  3431  011C1C  9098               	bcf	3992,0,c	;volatile
  3432  011C1E  0012               	return	
  3433  011C20                     l6769:
  3434                           
  3435                           ; BSR set to: 0
  3436  011C20  0EBF               	movlw	191
  3437  011C22  1822               	xorwf	SetOutputEPWM3@outputconfig,w,c
  3438  011C24  A4D8               	btfss	status,2,c
  3439  011C26  D008               	goto	l6777
  3440                           
  3441                           ; BSR set to: 0
  3442  011C28  9098               	bcf	3992,0,c	;volatile
  3443                           
  3444                           ; BSR set to: 0
  3445  011C2A  5021               	movf	SetOutputEPWM3@eccpmx,w,c
  3446  011C2C  B4D8               	btfsc	status,2,c
  3447  011C2E  D002               	goto	l1246
  3448                           
  3449                           ; BSR set to: 0
  3450  011C30  9896               	bcf	3990,4,c	;volatile
  3451  011C32  0012               	return	
  3452  011C34                     l1246:
  3453                           
  3454                           ; BSR set to: 0
  3455  011C34  9A99               	bcf	3993,5,c	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458  011C36  0012               	return	
  3459  011C38                     l6777:
  3460                           
  3461                           ; BSR set to: 0
  3462  011C38  0E7F               	movlw	127
  3463  011C3A  1822               	xorwf	SetOutputEPWM3@outputconfig,w,c
  3464  011C3C  B4D8               	btfsc	status,2,c
  3465  011C3E  D003               	goto	l1251
  3466                           
  3467                           ; BSR set to: 0
  3468  011C40  2822               	incf	SetOutputEPWM3@outputconfig,w,c
  3469  011C42  A4D8               	btfss	status,2,c
  3470  011C44  0012               	return	
  3471  011C46                     l1251:
  3472                           
  3473                           ; BSR set to: 0
  3474  011C46  9098               	bcf	3992,0,c	;volatile
  3475                           
  3476                           ; BSR set to: 0
  3477  011C48  5021               	movf	SetOutputEPWM3@eccpmx,w,c
  3478  011C4A  B4D8               	btfsc	status,2,c
  3479  011C4C  D003               	goto	l1252
  3480                           
  3481                           ; BSR set to: 0
  3482  011C4E  9896               	bcf	3990,4,c	;volatile
  3483  011C50  9696               	bcf	3990,3,c	;volatile
  3484  011C52  D002               	goto	l1253
  3485  011C54                     l1252:
  3486                           
  3487                           ; BSR set to: 0
  3488  011C54  9A99               	bcf	3993,5,c	;volatile
  3489  011C56  9899               	bcf	3993,4,c	;volatile
  3490  011C58                     l1253:
  3491                           
  3492                           ; BSR set to: 0
  3493  011C58  9698               	bcf	3992,3,c	;volatile
  3494                           
  3495                           ; BSR set to: 0
  3496                           
  3497                           ; BSR set to: 0
  3498  011C5A  0012               	return	
  3499                           
  3500                           ; BSR set to: 0
  3501                           
  3502                           ; BSR set to: 0
  3503  011C5C  0012               	return		;funcret
  3504  011C5E                     __end_of_SetOutputEPWM3:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           postdec1	equ	0xFE5
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _SetOutputEPWM1 *****************
  3518 ;; Defined at:
  3519 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setoc.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  outputconfig    1    wreg     unsigned char 
  3522 ;;  outputmode      1   31[COMRAM] unsigned char 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  outputconfig    1   33[COMRAM] unsigned char 
  3525 ;;  eccpmx          1   32[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;		None               void
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3535 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;Total ram usage:        3 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    3
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_motorDrive_init
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text11
  3550  011D72                     __ptext11:
  3551                           	opt stack 0
  3552  011D72                     _SetOutputEPWM1:
  3553                           	opt stack 25
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;incstack = 0
  3557                           ;SetOutputEPWM1@outputconfig stored from wreg
  3558  011D72  6E22               	movwf	SetOutputEPWM1@outputconfig,c
  3559  011D74  0E00               	movlw	0
  3560  011D76  6E21               	movwf	SetOutputEPWM1@eccpmx,c
  3561  011D78  0E3F               	movlw	63
  3562  011D7A  1222               	iorwf	SetOutputEPWM1@outputconfig,f,c
  3563  011D7C  0EFC               	movlw	252
  3564  011D7E  1220               	iorwf	SetOutputEPWM1@outputmode,f,c
  3565  011D80  50B9               	movf	4025,w,c	;volatile
  3566  011D82  09C0               	iorlw	192
  3567  011D84  1422               	andwf	SetOutputEPWM1@outputconfig,w,c
  3568  011D86  6EB9               	movwf	4025,c	;volatile
  3569  011D88  50B9               	movf	4025,w,c	;volatile
  3570  011D8A  090F               	iorlw	15
  3571  011D8C  1420               	andwf	SetOutputEPWM1@outputmode,w,c
  3572  011D8E  6EB9               	movwf	4025,c	;volatile
  3573  011D90  0E05               	movlw	5
  3574  011D92  6EF6               	movwf	tblptrl,c
  3575  011D94                     	if	1	;There is more than 1 active tblptr byte
  3576  011D94  0E00               	movlw	0
  3577  011D96  6EF7               	movwf	tblptrh,c
  3578  011D98                     	endif
  3579  011D98                     	if	1	;There are 3 active tblptr bytes
  3580  011D98  0E30               	movlw	48
  3581  011D9A  6EF8               	movwf	tblptru,c
  3582  011D9C                     	endif
  3583  011D9C  0008               	tblrd		*
  3584  011D9E  0100               	movlb	12288	; () banked
  3585  011DA0  A2F5               	btfss	tablat,1,c
  3586  011DA2  D002               	goto	l6705
  3587                           
  3588                           ; BSR set to: 0
  3589  011DA4  6821               	setf	SetOutputEPWM1@eccpmx,c
  3590  011DA6  D003               	goto	l6707
  3591  011DA8                     l6705:
  3592                           
  3593                           ; BSR set to: 0
  3594  011DA8  0E00               	movlw	0
  3595  011DAA  6E21               	movwf	SetOutputEPWM1@eccpmx,c
  3596  011DAC  D000               	goto	l6707
  3597  011DAE                     l6707:
  3598                           
  3599                           ; BSR set to: 0
  3600  011DAE  0E3F               	movlw	63
  3601  011DB0  1822               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3602  011DB2  A4D8               	btfss	status,2,c
  3603  011DB4  D002               	goto	l6711
  3604                           
  3605                           ; BSR set to: 0
  3606  011DB6  9494               	bcf	3988,2,c	;volatile
  3607  011DB8  0012               	return	
  3608  011DBA                     l6711:
  3609                           
  3610                           ; BSR set to: 0
  3611  011DBA  0EBF               	movlw	191
  3612  011DBC  1822               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3613  011DBE  A4D8               	btfss	status,2,c
  3614  011DC0  D008               	goto	l6719
  3615                           
  3616                           ; BSR set to: 0
  3617  011DC2  9494               	bcf	3988,2,c	;volatile
  3618                           
  3619                           ; BSR set to: 0
  3620  011DC4  5021               	movf	SetOutputEPWM1@eccpmx,w,c
  3621  011DC6  B4D8               	btfsc	status,2,c
  3622  011DC8  D002               	goto	l1185
  3623                           
  3624                           ; BSR set to: 0
  3625  011DCA  9C96               	bcf	3990,6,c	;volatile
  3626  011DCC  0012               	return	
  3627  011DCE                     l1185:
  3628                           
  3629                           ; BSR set to: 0
  3630  011DCE  9E99               	bcf	3993,7,c	;volatile
  3631                           
  3632                           ; BSR set to: 0
  3633  011DD0  0012               	return	
  3634  011DD2                     l6719:
  3635                           
  3636                           ; BSR set to: 0
  3637  011DD2  0E7F               	movlw	127
  3638  011DD4  1822               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3639  011DD6  B4D8               	btfsc	status,2,c
  3640  011DD8  D003               	goto	l1190
  3641                           
  3642                           ; BSR set to: 0
  3643  011DDA  2822               	incf	SetOutputEPWM1@outputconfig,w,c
  3644  011DDC  A4D8               	btfss	status,2,c
  3645  011DDE  0012               	return	
  3646  011DE0                     l1190:
  3647                           
  3648                           ; BSR set to: 0
  3649  011DE0  9494               	bcf	3988,2,c	;volatile
  3650                           
  3651                           ; BSR set to: 0
  3652  011DE2  5021               	movf	SetOutputEPWM1@eccpmx,w,c
  3653  011DE4  B4D8               	btfsc	status,2,c
  3654  011DE6  D003               	goto	l1191
  3655                           
  3656                           ; BSR set to: 0
  3657  011DE8  9C96               	bcf	3990,6,c	;volatile
  3658  011DEA  9A96               	bcf	3990,5,c	;volatile
  3659  011DEC  D002               	goto	l1192
  3660  011DEE                     l1191:
  3661                           
  3662                           ; BSR set to: 0
  3663  011DEE  9E99               	bcf	3993,7,c	;volatile
  3664  011DF0  9C99               	bcf	3993,6,c	;volatile
  3665  011DF2                     l1192:
  3666                           
  3667                           ; BSR set to: 0
  3668  011DF2  9898               	bcf	3992,4,c	;volatile
  3669                           
  3670                           ; BSR set to: 0
  3671                           
  3672                           ; BSR set to: 0
  3673  011DF4  0012               	return	
  3674                           
  3675                           ; BSR set to: 0
  3676                           
  3677                           ; BSR set to: 0
  3678  011DF6  0012               	return		;funcret
  3679  011DF8                     __end_of_SetOutputEPWM1:
  3680                           	opt stack 0
  3681                           tblptru	equ	0xFF8
  3682                           tblptrh	equ	0xFF7
  3683                           tblptrl	equ	0xFF6
  3684                           tablat	equ	0xFF5
  3685                           postinc0	equ	0xFEE
  3686                           wreg	equ	0xFE8
  3687                           postdec1	equ	0xFE5
  3688                           fsr1h	equ	0xFE2
  3689                           fsr1l	equ	0xFE1
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function _OpenEPWM3 *****************
  3693 ;; Defined at:
  3694 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3open.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  period          1    wreg     unsigned char 
  3697 ;;  timer_source    1   31[COMRAM] unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  period          1   33[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;		None               void
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3709 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;Total ram usage:        3 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    3
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_motorDrive_init
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text12
  3724  011CEA                     __ptext12:
  3725                           	opt stack 0
  3726  011CEA                     _OpenEPWM3:
  3727                           	opt stack 25
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;incstack = 0
  3731                           ;OpenEPWM3@period stored from wreg
  3732  011CEA  6E22               	movwf	OpenEPWM3@period,c
  3733  011CEC  0E0C               	movlw	12
  3734  011CEE  010F               	movlb	15	; () banked
  3735  011CF0  6F49               	movwf	73,b	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738  011CF2  0E3F               	movlw	63
  3739  011CF4  010F               	movlb	15	; () banked
  3740  011CF6  1736               	andwf	54,f,b	;volatile
  3741                           
  3742                           ; BSR set to: 15
  3743  011CF8  C020  F021         	movff	OpenEPWM3@timer_source,??_OpenEPWM3
  3744  011CFC  0E30               	movlw	48
  3745  011CFE  1621               	andwf	??_OpenEPWM3,f,c
  3746  011D00  90D8               	bcf	status,0,c
  3747  011D02  3621               	rlcf	??_OpenEPWM3,f,c
  3748  011D04  90D8               	bcf	status,0,c
  3749  011D06  3421               	rlcf	??_OpenEPWM3,w,c
  3750  011D08  010F               	movlb	15	; () banked
  3751  011D0A  1336               	iorwf	54,f,b	;volatile
  3752                           
  3753                           ; BSR set to: 15
  3754  011D0C  CF36 F021          	movff	3894,??_OpenEPWM3	;volatile
  3755  011D10  0EC0               	movlw	192
  3756  011D12  1621               	andwf	??_OpenEPWM3,f,c
  3757  011D14  A4D8               	btfss	status,2,c
  3758  011D16  D005               	goto	l6737
  3759                           
  3760                           ; BSR set to: 15
  3761  011D18  94CA               	bcf	4042,2,c	;volatile
  3762  011D1A  C022  FFCB         	movff	OpenEPWM3@period,4043	;volatile
  3763  011D1E  84CA               	bsf	4042,2,c	;volatile
  3764  011D20  0012               	return	
  3765  011D22                     l6737:
  3766                           
  3767                           ; BSR set to: 15
  3768  011D22  010F               	movlb	15	; () banked
  3769  011D24  5136               	movf	54,w,b	;volatile
  3770  011D26  0BC0               	andlw	192
  3771  011D28  0A40               	xorlw	64
  3772  011D2A  A4D8               	btfss	status,2,c
  3773  011D2C  D007               	goto	l6741
  3774                           
  3775                           ; BSR set to: 15
  3776  011D2E  010F               	movlb	15	; () banked
  3777  011D30  9504               	bcf	4,2,b	;volatile
  3778  011D32  C022  FF05         	movff	OpenEPWM3@period,3845	;volatile
  3779  011D36  010F               	movlb	15	; () banked
  3780  011D38  8504               	bsf	4,2,b	;volatile
  3781  011D3A  0012               	return	
  3782  011D3C                     l6741:
  3783                           
  3784                           ; BSR set to: 15
  3785  011D3C  010F               	movlb	15	; () banked
  3786  011D3E  5136               	movf	54,w,b	;volatile
  3787  011D40  0BC0               	andlw	192
  3788  011D42  0A80               	xorlw	128
  3789  011D44  A4D8               	btfss	status,2,c
  3790  011D46  D007               	goto	l6745
  3791                           
  3792                           ; BSR set to: 15
  3793  011D48  010F               	movlb	15	; () banked
  3794  011D4A  953D               	bcf	61,2,b	;volatile
  3795  011D4C  C022  FF3E         	movff	OpenEPWM3@period,3902	;volatile
  3796  011D50  010F               	movlb	15	; () banked
  3797  011D52  853D               	bsf	61,2,b	;volatile
  3798  011D54  0012               	return	
  3799  011D56                     l6745:
  3800                           
  3801                           ; BSR set to: 15
  3802  011D56  010F               	movlb	15	; () banked
  3803  011D58  5136               	movf	54,w,b	;volatile
  3804  011D5A  0BC0               	andlw	192
  3805  011D5C  0AC0               	xorlw	192
  3806  011D5E  A4D8               	btfss	status,2,c
  3807  011D60  0012               	return	
  3808                           
  3809                           ; BSR set to: 15
  3810  011D62  010F               	movlb	15	; () banked
  3811  011D64  953A               	bcf	58,2,b	;volatile
  3812  011D66  C022  FF3B         	movff	OpenEPWM3@period,3899	;volatile
  3813  011D6A  010F               	movlb	15	; () banked
  3814  011D6C  853A               	bsf	58,2,b	;volatile
  3815                           
  3816                           ; BSR set to: 15
  3817                           
  3818                           ; BSR set to: 15
  3819                           
  3820                           ; BSR set to: 15
  3821  011D6E  0012               	return	
  3822                           
  3823                           ; BSR set to: 15
  3824                           
  3825                           ; BSR set to: 15
  3826  011D70  0012               	return		;funcret
  3827  011D72                     __end_of_OpenEPWM3:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           postdec1	equ	0xFE5
  3836                           fsr1h	equ	0xFE2
  3837                           fsr1l	equ	0xFE1
  3838                           status	equ	0xFD8
  3839                           
  3840 ;; *************** function _OpenEPWM1 *****************
  3841 ;; Defined at:
  3842 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1open.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  period          1    wreg     unsigned char 
  3845 ;;  timer_source    1   31[COMRAM] unsigned char 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  period          1   33[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;		None               void
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;Total ram usage:        3 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    3
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_motorDrive_init
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text13
  3872  011E7C                     __ptext13:
  3873                           	opt stack 0
  3874  011E7C                     _OpenEPWM1:
  3875                           	opt stack 25
  3876                           
  3877                           ; BSR set to: 15
  3878                           ;incstack = 0
  3879                           ;OpenEPWM1@period stored from wreg
  3880  011E7C  6E22               	movwf	OpenEPWM1@period,c
  3881  011E7E  0E0C               	movlw	12
  3882  011E80  6EB9               	movwf	4025,c	;volatile
  3883  011E82  0EFC               	movlw	252
  3884  011E84  010F               	movlb	15	; () banked
  3885  011E86  1736               	andwf	54,f,b	;volatile
  3886                           
  3887                           ; BSR set to: 15
  3888  011E88  3820               	swapf	OpenEPWM1@timer_source,w,c
  3889  011E8A  46E8               	rlncf	wreg,f,c
  3890  011E8C  0B1F               	andlw	31
  3891  011E8E  0B03               	andlw	3
  3892  011E90  010F               	movlb	15	; () banked
  3893  011E92  1336               	iorwf	54,f,b	;volatile
  3894                           
  3895                           ; BSR set to: 15
  3896  011E94  CF36 F021          	movff	3894,??_OpenEPWM1	;volatile
  3897  011E98  0E07               	movlw	7
  3898  011E9A  1621               	andwf	??_OpenEPWM1,f,c
  3899  011E9C  A4D8               	btfss	status,2,c
  3900  011E9E  D005               	goto	l6679
  3901                           
  3902                           ; BSR set to: 15
  3903  011EA0  94CA               	bcf	4042,2,c	;volatile
  3904  011EA2  C022  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  3905  011EA6  84CA               	bsf	4042,2,c	;volatile
  3906  011EA8  0012               	return	
  3907  011EAA                     l6679:
  3908                           
  3909                           ; BSR set to: 15
  3910  011EAA  010F               	movlb	15	; () banked
  3911  011EAC  5136               	movf	54,w,b	;volatile
  3912  011EAE  0B07               	andlw	7
  3913  011EB0  06E8               	decf	wreg,f,c
  3914  011EB2  A4D8               	btfss	status,2,c
  3915  011EB4  D007               	goto	l6683
  3916                           
  3917                           ; BSR set to: 15
  3918  011EB6  010F               	movlb	15	; () banked
  3919  011EB8  9504               	bcf	4,2,b	;volatile
  3920  011EBA  C022  FF05         	movff	OpenEPWM1@period,3845	;volatile
  3921  011EBE  010F               	movlb	15	; () banked
  3922  011EC0  8504               	bsf	4,2,b	;volatile
  3923  011EC2  0012               	return	
  3924  011EC4                     l6683:
  3925                           
  3926                           ; BSR set to: 15
  3927  011EC4  010F               	movlb	15	; () banked
  3928  011EC6  5136               	movf	54,w,b	;volatile
  3929  011EC8  0B07               	andlw	7
  3930  011ECA  0A02               	xorlw	2
  3931  011ECC  A4D8               	btfss	status,2,c
  3932  011ECE  D007               	goto	l6687
  3933                           
  3934                           ; BSR set to: 15
  3935  011ED0  010F               	movlb	15	; () banked
  3936  011ED2  953D               	bcf	61,2,b	;volatile
  3937  011ED4  C022  FF3E         	movff	OpenEPWM1@period,3902	;volatile
  3938  011ED8  010F               	movlb	15	; () banked
  3939  011EDA  853D               	bsf	61,2,b	;volatile
  3940  011EDC  0012               	return	
  3941  011EDE                     l6687:
  3942                           
  3943                           ; BSR set to: 15
  3944  011EDE  010F               	movlb	15	; () banked
  3945  011EE0  5136               	movf	54,w,b	;volatile
  3946  011EE2  0B07               	andlw	7
  3947  011EE4  0A03               	xorlw	3
  3948  011EE6  A4D8               	btfss	status,2,c
  3949  011EE8  0012               	return	
  3950                           
  3951                           ; BSR set to: 15
  3952  011EEA  010F               	movlb	15	; () banked
  3953  011EEC  953A               	bcf	58,2,b	;volatile
  3954  011EEE  C022  FF3B         	movff	OpenEPWM1@period,3899	;volatile
  3955  011EF2  010F               	movlb	15	; () banked
  3956  011EF4  853A               	bsf	58,2,b	;volatile
  3957                           
  3958                           ; BSR set to: 15
  3959                           
  3960                           ; BSR set to: 15
  3961                           
  3962                           ; BSR set to: 15
  3963  011EF6  0012               	return	
  3964                           
  3965                           ; BSR set to: 15
  3966                           
  3967                           ; BSR set to: 15
  3968  011EF8  0012               	return		;funcret
  3969  011EFA                     __end_of_OpenEPWM1:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           postdec1	equ	0xFE5
  3978                           fsr1h	equ	0xFE2
  3979                           fsr1l	equ	0xFE1
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _fft_init *****************
  3983 ;; Defined at:
  3984 ;;		line 9 in file "fft.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    7
  4005 ;; This function calls:
  4006 ;;		_LCD_printString
  4007 ;;		_delay_us
  4008 ;; This function is called by:
  4009 ;;		_init
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text14
  4014  011F6A                     __ptext14:
  4015                           	opt stack 0
  4016  011F6A                     _fft_init:
  4017                           	opt stack 22
  4018                           
  4019                           ;fft.c: 12: ANCON3 |= 0b00100000;
  4020                           
  4021                           ; BSR set to: 15
  4022                           ;incstack = 0
  4023  011F6A  010E               	movlb	14	; () banked
  4024  011F6C  8B45               	bsf	69,5,b	;volatile
  4025                           
  4026                           ; BSR set to: 14
  4027                           ;fft.c: 15: ADCON1Hbits.MODE12 = 1;
  4028  011F6E  84C1               	bsf	4033,2,c	;volatile
  4029                           
  4030                           ; BSR set to: 14
  4031                           ;fft.c: 18: PVCFG0 = 0;
  4032  011F70  010E               	movlb	14	; () banked
  4033  011F72  9D8D               	bcf	141,6,b	;volatile
  4034                           
  4035                           ; BSR set to: 14
  4036                           ;fft.c: 19: PVCFG1 = 0;
  4037  011F74  010E               	movlb	14	; () banked
  4038  011F76  9F8D               	bcf	141,7,b	;volatile
  4039                           
  4040                           ; BSR set to: 14
  4041                           ;fft.c: 20: NVCFG0 = 0;
  4042  011F78  010E               	movlb	14	; () banked
  4043  011F7A  9B8D               	bcf	141,5,b	;volatile
  4044                           
  4045                           ; BSR set to: 14
  4046                           ;fft.c: 23: ADCON3L = 0x3F;
  4047  011F7C  0E3F               	movlw	63
  4048  011F7E  010E               	movlb	14	; () banked
  4049  011F80  6F8A               	movwf	138,b	;volatile
  4050                           
  4051                           ; BSR set to: 14
  4052                           ;fft.c: 26: ANSEL14 = 1;
  4053  011F82  010E               	movlb	14	; () banked
  4054  011F84  8D46               	bsf	70,6,b	;volatile
  4055                           
  4056                           ; BSR set to: 14
  4057                           ;fft.c: 27: TRISHbits.TRISH6 = 1;
  4058  011F86  8C99               	bsf	3993,6,c	;volatile
  4059                           
  4060                           ; BSR set to: 14
  4061                           ;fft.c: 28: ADCHS0L = 0x0E;
  4062  011F88  0E0E               	movlw	14
  4063  011F8A  010E               	movlb	14	; () banked
  4064  011F8C  6F86               	movwf	134,b	;volatile
  4065                           
  4066                           ; BSR set to: 14
  4067                           ;fft.c: 29: ADCHS0H = 0x0E;
  4068  011F8E  0E0E               	movlw	14
  4069  011F90  010E               	movlb	14	; () banked
  4070  011F92  6F87               	movwf	135,b	;volatile
  4071                           
  4072                           ; BSR set to: 14
  4073                           ;fft.c: 32: ADON = 1;
  4074  011F94  8EC1               	bsf	4033,7,c	;volatile
  4075                           
  4076                           ; BSR set to: 14
  4077                           ;fft.c: 35: delay_us(50);
  4078  011F96  0E32               	movlw	50
  4079  011F98  6E20               	movwf	delay_us@x,c
  4080  011F9A  0E00               	movlw	0
  4081  011F9C  6E21               	movwf	delay_us@x+1,c
  4082  011F9E  0E00               	movlw	0
  4083  011FA0  6E22               	movwf	delay_us@x+2,c
  4084  011FA2  0E00               	movlw	0
  4085  011FA4  6E23               	movwf	delay_us@x+3,c
  4086  011FA6  EC2F  F091         	call	_delay_us	;wreg free
  4087  011FAA  D000               	goto	l7285
  4088  011FAC                     l7285:
  4089                           
  4090                           ;fft.c: 38: {
  4091                           ;fft.c: 39: SAMP = 1;
  4092  011FAC  82C0               	bsf	4032,1,c	;volatile
  4093                           
  4094                           ;fft.c: 40: while(!DONE);
  4095  011FAE  D000               	goto	l715
  4096  011FB0                     l715:
  4097  011FB0  A0C0               	btfss	4032,0,c	;volatile
  4098  011FB2  D7FE               	goto	l715
  4099                           
  4100                           ;fft.c: 41: LCD_printString(0,0, "Ana:%i",ADCBUF0);
  4101  011FB4  0E00               	movlw	0
  4102  011FB6  0100               	movlb	0	; () banked
  4103  011FB8  6F76               	movwf	LCD_printString@y& (0+255),b
  4104  011FBA  0EF6               	movlw	low STR_21
  4105  011FBC  0100               	movlb	0	; () banked
  4106  011FBE  6F77               	movwf	LCD_printString@input& (0+255),b
  4107  011FC0  0EFF               	movlw	high STR_21
  4108  011FC2  0100               	movlb	0	; () banked
  4109  011FC4  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  4110  011FC6  CFC2 F079          	movff	4034,?_LCD_printString+3	;volatile
  4111  011FCA  CFC3 F07A          	movff	4035,?_LCD_printString+4	;volatile
  4112  011FCE  0E00               	movlw	0
  4113  011FD0  EC00  F080         	call	_LCD_printString
  4114  011FD4  D7EB               	goto	l7285
  4115  011FD6  0012               	return		;funcret
  4116  011FD8                     __end_of_fft_init:
  4117                           	opt stack 0
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _encoders_init *****************
  4130 ;; Defined at:
  4131 ;;		line 6 in file "encoders.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_init
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text15
  4160  0122BE                     __ptext15:
  4161                           	opt stack 0
  4162  0122BE                     _encoders_init:
  4163                           	opt stack 26
  4164                           
  4165                           ;encoders.c: 9: TRISBbits.TRISB0 = 1;
  4166                           
  4167                           ;incstack = 0
  4168  0122BE  8093               	bsf	3987,0,c	;volatile
  4169                           
  4170                           ;encoders.c: 10: TRISBbits.TRISB1 = 1;
  4171  0122C0  8293               	bsf	3987,1,c	;volatile
  4172                           
  4173                           ;encoders.c: 11: TRISBbits.TRISB2 = 1;
  4174  0122C2  8493               	bsf	3987,2,c	;volatile
  4175                           
  4176                           ;encoders.c: 12: TRISBbits.TRISB3 = 1;
  4177  0122C4  8693               	bsf	3987,3,c	;volatile
  4178                           
  4179                           ;encoders.c: 21: IOLOCK = 0;
  4180  0122C6  9C66               	bcf	3942,6,c	;volatile
  4181                           
  4182                           ;encoders.c: 22: RPINR26_27 &= 0xF2;
  4183  0122C8  0EF2               	movlw	242
  4184  0122CA  010E               	movlb	14	; () banked
  4185  0122CC  1737               	andwf	55,f,b	;volatile
  4186                           
  4187                           ;encoders.c: 23: RPINR28_29 &= 0xF1;
  4188  0122CE  0EF1               	movlw	241
  4189  0122D0  010E               	movlb	14	; () banked
  4190  0122D2  1738               	andwf	56,f,b	;volatile
  4191                           
  4192                           ; BSR set to: 14
  4193                           ;encoders.c: 24: IOLOCK = 1;
  4194  0122D4  8C66               	bsf	3942,6,c	;volatile
  4195                           
  4196                           ; BSR set to: 14
  4197                           ;encoders.c: 26: INTCON2bits.INTEDG1 = 1;
  4198  0122D6  8AF1               	bsf	intcon2,5,c	;volatile
  4199                           
  4200                           ; BSR set to: 14
  4201                           ;encoders.c: 27: INTCON3bits.INT1IP = 0;
  4202  0122D8  9CF0               	bcf	intcon3,6,c	;volatile
  4203                           
  4204                           ; BSR set to: 14
  4205                           ;encoders.c: 28: INTCON3bits.INT1IF = 0;
  4206  0122DA  90F0               	bcf	intcon3,0,c	;volatile
  4207                           
  4208                           ; BSR set to: 14
  4209                           ;encoders.c: 29: INTCON3bits.INT1IE = 1;
  4210  0122DC  86F0               	bsf	intcon3,3,c	;volatile
  4211                           
  4212                           ; BSR set to: 14
  4213                           ;encoders.c: 32: INTCON2bits.INTEDG3 = 1;
  4214  0122DE  86F1               	bsf	intcon2,3,c	;volatile
  4215                           
  4216                           ; BSR set to: 14
  4217                           ;encoders.c: 33: INTCON2bits.INT3IP = 0;
  4218  0122E0  92F1               	bcf	intcon2,1,c	;volatile
  4219                           
  4220                           ; BSR set to: 14
  4221                           ;encoders.c: 34: INTCON3bits.INT3IF = 0;
  4222  0122E2  94F0               	bcf	intcon3,2,c	;volatile
  4223                           
  4224                           ; BSR set to: 14
  4225                           ;encoders.c: 35: INTCON3bits.INT3IE = 1;
  4226  0122E4  8AF0               	bsf	intcon3,5,c	;volatile
  4227                           
  4228                           ; BSR set to: 14
  4229  0122E6  0012               	return		;funcret
  4230  0122E8                     __end_of_encoders_init:
  4231                           	opt stack 0
  4232                           tblptru	equ	0xFF8
  4233                           tblptrh	equ	0xFF7
  4234                           tblptrl	equ	0xFF6
  4235                           tablat	equ	0xFF5
  4236                           intcon2	equ	0xFF1
  4237                           intcon3	equ	0xFF0
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           postdec1	equ	0xFE5
  4241                           fsr1h	equ	0xFE2
  4242                           fsr1l	equ	0xFE1
  4243                           status	equ	0xFD8
  4244                           
  4245 ;; *************** function _clearMillis *****************
  4246 ;; Defined at:
  4247 ;;		line 115 in file "delays.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;		None               void
  4254 ;; Registers used:
  4255 ;;		wreg, status,2
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    3
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_init
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text16
  4276  0123D0                     __ptext16:
  4277                           	opt stack 0
  4278  0123D0                     _clearMillis:
  4279                           	opt stack 26
  4280                           
  4281                           ;delays.c: 117: TMR0L = 193;
  4282                           
  4283                           ; BSR set to: 14
  4284                           ;incstack = 0
  4285  0123D0  0EC1               	movlw	193
  4286  0123D2  6ED6               	movwf	4054,c	;volatile
  4287                           
  4288                           ;delays.c: 118: millisCount = 0;
  4289  0123D4  0E00               	movlw	0
  4290  0123D6  6E2A               	movwf	_millisCount,c
  4291  0123D8  0E00               	movlw	0
  4292  0123DA  6E2B               	movwf	_millisCount+1,c
  4293  0123DC  0E00               	movlw	0
  4294  0123DE  6E2C               	movwf	_millisCount+2,c
  4295  0123E0  0E00               	movlw	0
  4296  0123E2  6E2D               	movwf	_millisCount+3,c
  4297  0123E4  0012               	return		;funcret
  4298  0123E6                     __end_of_clearMillis:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           intcon2	equ	0xFF1
  4305                           intcon3	equ	0xFF0
  4306                           postinc0	equ	0xFEE
  4307                           wreg	equ	0xFE8
  4308                           postdec1	equ	0xFE5
  4309                           fsr1h	equ	0xFE2
  4310                           fsr1l	equ	0xFE1
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _UART_init *****************
  4314 ;; Defined at:
  4315 ;;		line 21 in file "UART.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;		None               void
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    3
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_init
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text17
  4344  0117D6                     __ptext17:
  4345                           	opt stack 0
  4346  0117D6                     _UART_init:
  4347                           	opt stack 26
  4348                           
  4349                           ;UART.c: 43: IOLOCK = 0;
  4350                           
  4351                           ;incstack = 0
  4352  0117D6  9C66               	bcf	3942,6,c	;volatile
  4353                           
  4354                           ;UART.c: 45: RPINR6_7 &= 0xF6;
  4355  0117D8  0EF6               	movlw	246
  4356  0117DA  010E               	movlb	14	; () banked
  4357  0117DC  172D               	andwf	45,f,b	;volatile
  4358                           
  4359                           ;UART.c: 46: RPOR22_23 |= 0xF1;
  4360  0117DE  0EF1               	movlw	241
  4361  0117E0  010E               	movlb	14	; () banked
  4362  0117E2  131D               	iorwf	29,f,b	;volatile
  4363                           
  4364                           ;UART.c: 48: RPINR4_5 &= 0xF4;
  4365  0117E4  0EF4               	movlw	244
  4366  0117E6  010E               	movlb	14	; () banked
  4367  0117E8  172C               	andwf	44,f,b	;volatile
  4368                           
  4369                           ;UART.c: 49: RPOR10_11 |= 0x2F;
  4370  0117EA  0E2F               	movlw	47
  4371  0117EC  010E               	movlb	14	; () banked
  4372  0117EE  1317               	iorwf	23,f,b	;volatile
  4373                           
  4374                           ;UART.c: 51: RPINR0_1 &= 0xF6;
  4375  0117F0  0EF6               	movlw	246
  4376  0117F2  010E               	movlb	14	; () banked
  4377  0117F4  172A               	andwf	42,f,b	;volatile
  4378                           
  4379                           ;UART.c: 52: RPOR12_13 |= 0x3F;
  4380  0117F6  0E3F               	movlw	63
  4381  0117F8  010E               	movlb	14	; () banked
  4382  0117FA  1318               	iorwf	24,f,b	;volatile
  4383                           
  4384                           ; BSR set to: 14
  4385                           ;UART.c: 54: IOLOCK = 1;
  4386  0117FC  8C66               	bsf	3942,6,c	;volatile
  4387                           
  4388                           ; BSR set to: 14
  4389                           ;UART.c: 56: INTCONbits.GIE = 1;
  4390  0117FE  8EF2               	bsf	intcon,7,c	;volatile
  4391                           
  4392                           ; BSR set to: 14
  4393                           ;UART.c: 59: INTCONbits.PEIE = 1;
  4394  011800  8CF2               	bsf	intcon,6,c	;volatile
  4395                           
  4396                           ; BSR set to: 14
  4397                           ;UART.c: 69: SPBRG1 = 34;
  4398  011802  0E22               	movlw	34
  4399  011804  6EAF               	movwf	4015,c	;volatile
  4400                           
  4401                           ; BSR set to: 14
  4402                           ;UART.c: 70: SPBRGH1 = 0;
  4403  011806  0E00               	movlw	0
  4404  011808  010F               	movlb	15	; () banked
  4405  01180A  6F30               	movwf	48,b	;volatile
  4406                           
  4407                           ; BSR set to: 15
  4408                           ;UART.c: 72: TXSTA1bits.BRGH = 0;
  4409  01180C  94AC               	bcf	4012,2,c	;volatile
  4410                           
  4411                           ; BSR set to: 15
  4412                           ;UART.c: 74: BAUDCON1bits.ABDOVF = 0;
  4413  01180E  9E67               	bcf	3943,7,c	;volatile
  4414                           
  4415                           ; BSR set to: 15
  4416                           ;UART.c: 75: BAUDCON1bits.BRG16 = 1;
  4417  011810  8667               	bsf	3943,3,c	;volatile
  4418                           
  4419                           ; BSR set to: 15
  4420                           ;UART.c: 76: BAUDCON1bits.RCIDL = 0;
  4421  011812  9C67               	bcf	3943,6,c	;volatile
  4422                           
  4423                           ; BSR set to: 15
  4424                           ;UART.c: 77: BAUDCON1bits.RXDTP = 0;
  4425  011814  9A67               	bcf	3943,5,c	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;UART.c: 79: TXSTA1bits.SYNC = 0;
  4429  011816  98AC               	bcf	4012,4,c	;volatile
  4430                           
  4431                           ; BSR set to: 15
  4432                           ;UART.c: 80: RCSTA1bits.SPEN = 1;
  4433  011818  8EAB               	bsf	4011,7,c	;volatile
  4434                           
  4435                           ; BSR set to: 15
  4436                           ;UART.c: 81: RCSTA1bits.RX9 = 0;
  4437  01181A  9CAB               	bcf	4011,6,c	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;UART.c: 82: RCSTA1bits.CREN = 1;
  4441  01181C  88AB               	bsf	4011,4,c	;volatile
  4442                           
  4443                           ; BSR set to: 15
  4444                           ;UART.c: 84: TXSTA1bits.TXEN = 1;
  4445  01181E  8AAC               	bsf	4012,5,c	;volatile
  4446                           
  4447                           ; BSR set to: 15
  4448                           ;UART.c: 85: TXSTA1bits.TX9 = 0;
  4449  011820  9CAC               	bcf	4012,6,c	;volatile
  4450                           
  4451                           ; BSR set to: 15
  4452                           ;UART.c: 88: TX1IE = 0;
  4453  011822  989D               	bcf	3997,4,c	;volatile
  4454                           
  4455                           ; BSR set to: 15
  4456                           ;UART.c: 89: RC1IE = 1;
  4457  011824  8A9D               	bsf	3997,5,c	;volatile
  4458                           
  4459                           ; BSR set to: 15
  4460                           ;UART.c: 99: SPBRG2 = 34;
  4461  011826  0E22               	movlw	34
  4462  011828  010F               	movlb	15	; () banked
  4463  01182A  6F1F               	movwf	31,b	;volatile
  4464                           
  4465                           ; BSR set to: 15
  4466                           ;UART.c: 100: SPBRGH2 = 0;
  4467  01182C  0E00               	movlw	0
  4468  01182E  010F               	movlb	15	; () banked
  4469  011830  6F20               	movwf	32,b	;volatile
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;UART.c: 102: TXSTA2bits.BRGH = 0;
  4473  011832  010F               	movlb	15	; () banked
  4474  011834  9532               	bcf	50,2,b	;volatile
  4475                           
  4476                           ; BSR set to: 15
  4477                           ;UART.c: 104: BAUDCON2bits.ABDOVF = 0;
  4478  011836  010F               	movlb	15	; () banked
  4479  011838  9F31               	bcf	49,7,b	;volatile
  4480                           
  4481                           ; BSR set to: 15
  4482                           ;UART.c: 105: BAUDCON2bits.BRG16 = 1;
  4483  01183A  010F               	movlb	15	; () banked
  4484  01183C  8731               	bsf	49,3,b	;volatile
  4485                           
  4486                           ; BSR set to: 15
  4487                           ;UART.c: 106: BAUDCON2bits.RCIDL = 0;
  4488  01183E  010F               	movlb	15	; () banked
  4489  011840  9D31               	bcf	49,6,b	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;UART.c: 107: BAUDCON2bits.RXDTP = 0;
  4493  011842  010F               	movlb	15	; () banked
  4494  011844  9B31               	bcf	49,5,b	;volatile
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;UART.c: 109: TXSTA2bits.SYNC = 0;
  4498  011846  010F               	movlb	15	; () banked
  4499  011848  9932               	bcf	50,4,b	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;UART.c: 110: RCSTA2bits.SPEN = 1;
  4503  01184A  010F               	movlb	15	; () banked
  4504  01184C  8F33               	bsf	51,7,b	;volatile
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;UART.c: 111: RCSTA2bits.RX9 = 0;
  4508  01184E  010F               	movlb	15	; () banked
  4509  011850  9D33               	bcf	51,6,b	;volatile
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;UART.c: 112: RCSTA2bits.CREN = 1;
  4513  011852  010F               	movlb	15	; () banked
  4514  011854  8933               	bsf	51,4,b	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;UART.c: 114: TXSTA2bits.TXEN = 1;
  4518  011856  010F               	movlb	15	; () banked
  4519  011858  8B32               	bsf	50,5,b	;volatile
  4520                           
  4521                           ; BSR set to: 15
  4522                           ;UART.c: 115: TXSTA2bits.TX9 = 0;
  4523  01185A  010F               	movlb	15	; () banked
  4524  01185C  9D32               	bcf	50,6,b	;volatile
  4525                           
  4526                           ; BSR set to: 15
  4527                           ;UART.c: 118: TX2IE = 0;
  4528  01185E  98A3               	bcf	4003,4,c	;volatile
  4529                           
  4530                           ; BSR set to: 15
  4531                           ;UART.c: 119: RC2IE = 1;
  4532  011860  8AA3               	bsf	4003,5,c	;volatile
  4533                           
  4534                           ; BSR set to: 15
  4535                           ;UART.c: 129: SPBRG3 = 34;
  4536  011862  0E22               	movlw	34
  4537  011864  010F               	movlb	15	; () banked
  4538  011866  6F2B               	movwf	43,b	;volatile
  4539                           
  4540                           ; BSR set to: 15
  4541                           ;UART.c: 130: SPBRGH3 = 0;
  4542  011868  0E00               	movlw	0
  4543  01186A  010F               	movlb	15	; () banked
  4544  01186C  6F2C               	movwf	44,b	;volatile
  4545                           
  4546                           ; BSR set to: 15
  4547                           ;UART.c: 132: TXSTA3bits.BRGH = 0;
  4548  01186E  010F               	movlb	15	; () banked
  4549  011870  952E               	bcf	46,2,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;UART.c: 134: BAUDCON3bits.ABDOVF = 0;
  4553  011872  010F               	movlb	15	; () banked
  4554  011874  9F2D               	bcf	45,7,b	;volatile
  4555                           
  4556                           ; BSR set to: 15
  4557                           ;UART.c: 135: BAUDCON3bits.BRG16 = 1;
  4558  011876  010F               	movlb	15	; () banked
  4559  011878  872D               	bsf	45,3,b	;volatile
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;UART.c: 136: BAUDCON3bits.RCIDL = 0;
  4563  01187A  010F               	movlb	15	; () banked
  4564  01187C  9D2D               	bcf	45,6,b	;volatile
  4565                           
  4566                           ; BSR set to: 15
  4567                           ;UART.c: 137: BAUDCON3bits.RXDTP = 0;
  4568  01187E  010F               	movlb	15	; () banked
  4569  011880  9B2D               	bcf	45,5,b	;volatile
  4570                           
  4571                           ; BSR set to: 15
  4572                           ;UART.c: 139: TXSTA3bits.SYNC = 0;
  4573  011882  010F               	movlb	15	; () banked
  4574  011884  992E               	bcf	46,4,b	;volatile
  4575                           
  4576                           ; BSR set to: 15
  4577                           ;UART.c: 140: RCSTA3bits.SPEN = 1;
  4578  011886  010F               	movlb	15	; () banked
  4579  011888  8F2F               	bsf	47,7,b	;volatile
  4580                           
  4581                           ; BSR set to: 15
  4582                           ;UART.c: 141: RCSTA3bits.RX9 = 0;
  4583  01188A  010F               	movlb	15	; () banked
  4584  01188C  9D2F               	bcf	47,6,b	;volatile
  4585                           
  4586                           ; BSR set to: 15
  4587                           ;UART.c: 142: RCSTA3bits.CREN = 1;
  4588  01188E  010F               	movlb	15	; () banked
  4589  011890  892F               	bsf	47,4,b	;volatile
  4590                           
  4591                           ; BSR set to: 15
  4592                           ;UART.c: 144: TXSTA3bits.TXEN = 1;
  4593  011892  010F               	movlb	15	; () banked
  4594  011894  8B2E               	bsf	46,5,b	;volatile
  4595                           
  4596                           ; BSR set to: 15
  4597                           ;UART.c: 145: TXSTA3bits.TX9 = 0;
  4598  011896  010F               	movlb	15	; () banked
  4599  011898  9D2E               	bcf	46,6,b	;volatile
  4600                           
  4601                           ; BSR set to: 15
  4602                           ;UART.c: 147: TX3IE = 0;
  4603  01189A  9861               	bcf	3937,4,c	;volatile
  4604                           
  4605                           ; BSR set to: 15
  4606                           ;UART.c: 148: RC3IE = 1;
  4607  01189C  8A61               	bsf	3937,5,c	;volatile
  4608                           
  4609                           ; BSR set to: 15
  4610                           ;UART.c: 158: TRISDbits.TRISD4 = 1;
  4611  01189E  8895               	bsf	3989,4,c	;volatile
  4612                           
  4613                           ; BSR set to: 15
  4614                           ;UART.c: 159: TRISDbits.TRISD2 = 0;
  4615  0118A0  9495               	bcf	3989,2,c	;volatile
  4616                           
  4617                           ; BSR set to: 15
  4618                           ;UART.c: 162: SPBRG4 = 34;
  4619  0118A2  0E22               	movlw	34
  4620  0118A4  010E               	movlb	14	; () banked
  4621  0118A6  6FFB               	movwf	251,b	;volatile
  4622                           
  4623                           ; BSR set to: 14
  4624                           ;UART.c: 163: SPBRGH4 = 0;
  4625  0118A8  0E00               	movlw	0
  4626  0118AA  010E               	movlb	14	; () banked
  4627  0118AC  6FFC               	movwf	252,b	;volatile
  4628                           
  4629                           ; BSR set to: 14
  4630                           ;UART.c: 165: TXSTA4bits.BRGH = 0;
  4631  0118AE  010E               	movlb	14	; () banked
  4632  0118B0  95FE               	bcf	254,2,b	;volatile
  4633                           
  4634                           ; BSR set to: 14
  4635                           ;UART.c: 167: BAUDCON4bits.ABDOVF = 0;
  4636  0118B2  010E               	movlb	14	; () banked
  4637  0118B4  9FFD               	bcf	253,7,b	;volatile
  4638                           
  4639                           ; BSR set to: 14
  4640                           ;UART.c: 168: BAUDCON4bits.BRG16 = 1;
  4641  0118B6  010E               	movlb	14	; () banked
  4642  0118B8  87FD               	bsf	253,3,b	;volatile
  4643                           
  4644                           ; BSR set to: 14
  4645                           ;UART.c: 169: BAUDCON4bits.RCIDL = 0;
  4646  0118BA  010E               	movlb	14	; () banked
  4647  0118BC  9DFD               	bcf	253,6,b	;volatile
  4648                           
  4649                           ; BSR set to: 14
  4650                           ;UART.c: 170: BAUDCON4bits.RXDTP = 0;
  4651  0118BE  010E               	movlb	14	; () banked
  4652  0118C0  9BFD               	bcf	253,5,b	;volatile
  4653                           
  4654                           ; BSR set to: 14
  4655                           ;UART.c: 172: TXSTA4bits.SYNC = 0;
  4656  0118C2  010E               	movlb	14	; () banked
  4657  0118C4  99FE               	bcf	254,4,b	;volatile
  4658                           
  4659                           ; BSR set to: 14
  4660                           ;UART.c: 173: RCSTA4bits.SPEN = 1;
  4661  0118C6  010E               	movlb	14	; () banked
  4662  0118C8  8FFF               	bsf	255,7,b	;volatile
  4663                           
  4664                           ; BSR set to: 14
  4665                           ;UART.c: 174: RCSTA4bits.RX9 = 0;
  4666  0118CA  010E               	movlb	14	; () banked
  4667  0118CC  9DFF               	bcf	255,6,b	;volatile
  4668                           
  4669                           ; BSR set to: 14
  4670                           ;UART.c: 175: RCSTA4bits.CREN = 1;
  4671  0118CE  010E               	movlb	14	; () banked
  4672  0118D0  89FF               	bsf	255,4,b	;volatile
  4673                           
  4674                           ; BSR set to: 14
  4675                           ;UART.c: 177: TXSTA4bits.TXEN = 1;
  4676  0118D2  010E               	movlb	14	; () banked
  4677  0118D4  8BFE               	bsf	254,5,b	;volatile
  4678                           
  4679                           ; BSR set to: 14
  4680                           ;UART.c: 178: TXSTA4bits.TX9 = 0;
  4681  0118D6  010E               	movlb	14	; () banked
  4682  0118D8  9DFE               	bcf	254,6,b	;volatile
  4683                           
  4684                           ; BSR set to: 14
  4685                           ;UART.c: 181: TX4IE = 0;
  4686  0118DA  9C61               	bcf	3937,6,c	;volatile
  4687                           
  4688                           ; BSR set to: 14
  4689                           ;UART.c: 182: RC4IE = 1;
  4690  0118DC  8E61               	bsf	3937,7,c	;volatile
  4691                           
  4692                           ; BSR set to: 14
  4693  0118DE  0012               	return		;funcret
  4694  0118E0                     __end_of_UART_init:
  4695                           	opt stack 0
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           intcon	equ	0xFF2
  4701                           intcon2	equ	0xFF1
  4702                           intcon3	equ	0xFF0
  4703                           postinc0	equ	0xFEE
  4704                           wreg	equ	0xFE8
  4705                           postdec1	equ	0xFE5
  4706                           fsr1h	equ	0xFE2
  4707                           fsr1l	equ	0xFE1
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _LCD_init4bit *****************
  4711 ;; Defined at:
  4712 ;;		line 47 in file "LCD.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;		None               void
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    5
  4733 ;; This function calls:
  4734 ;;		_delay_init
  4735 ;;		_delay_ms
  4736 ;;		_delay_us
  4737 ;; This function is called by:
  4738 ;;		_init
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text18
  4743  0109EE                     __ptext18:
  4744                           	opt stack 0
  4745  0109EE                     _LCD_init4bit:
  4746                           	opt stack 24
  4747                           
  4748                           ;LCD.c: 50: mode = 1;
  4749                           
  4750                           ; BSR set to: 14
  4751                           ;incstack = 0
  4752  0109EE  0E01               	movlw	1
  4753  0109F0  6E3D               	movwf	_mode,c	;volatile
  4754                           
  4755                           ;LCD.c: 52: ANSEL21 = 0;
  4756  0109F2  010E               	movlb	14	; () banked
  4757  0109F4  9B45               	bcf	69,5,b	;volatile
  4758                           
  4759                           ; BSR set to: 14
  4760                           ;LCD.c: 53: ANSEL6 = 0;
  4761  0109F6  010E               	movlb	14	; () banked
  4762  0109F8  9D47               	bcf	71,6,b	;volatile
  4763                           
  4764                           ; BSR set to: 14
  4765                           ;LCD.c: 54: ANSEL11 = 0;
  4766  0109FA  010E               	movlb	14	; () banked
  4767  0109FC  9746               	bcf	70,3,b	;volatile
  4768                           
  4769                           ; BSR set to: 14
  4770                           ;LCD.c: 55: ANSEL10 = 0;
  4771  0109FE  010E               	movlb	14	; () banked
  4772  010A00  9546               	bcf	70,2,b	;volatile
  4773                           
  4774                           ; BSR set to: 14
  4775                           ;LCD.c: 56: ANSEL9 = 0;
  4776  010A02  010E               	movlb	14	; () banked
  4777  010A04  9346               	bcf	70,1,b	;volatile
  4778                           
  4779                           ; BSR set to: 14
  4780                           ;LCD.c: 58: MEMCONbits.EBDIS = 1;
  4781  010A06  010E               	movlb	14	; () banked
  4782  010A08  8FE3               	bsf	227,7,b	;volatile
  4783                           
  4784                           ; BSR set to: 14
  4785                           ;LCD.c: 59: PSPCONbits.PSPMODE = 0;
  4786  010A0A  98A7               	bcf	4007,4,c	;volatile
  4787                           
  4788                           ; BSR set to: 14
  4789                           ;LCD.c: 60: LCDMD = 0;
  4790  010A0C  010E               	movlb	14	; () banked
  4791  010A0E  97F1               	bcf	241,3,b	;volatile
  4792                           
  4793                           ; BSR set to: 14
  4794                           ;LCD.c: 61: LCDCONbits.WERR = 0;
  4795  010A10  010E               	movlb	14	; () banked
  4796  010A12  9BD9               	bcf	217,5,b	;volatile
  4797                           
  4798                           ; BSR set to: 14
  4799                           ;LCD.c: 62: CPEN = 0;
  4800  010A14  010E               	movlb	14	; () banked
  4801  010A16  9FD8               	bcf	216,7,b	;volatile
  4802                           
  4803                           ; BSR set to: 14
  4804                           ;LCD.c: 63: LCDA = 0;
  4805  010A18  010E               	movlb	14	; () banked
  4806  010A1A  9BDA               	bcf	218,5,b	;volatile
  4807                           
  4808                           ; BSR set to: 14
  4809                           ;LCD.c: 65: PORTEbits.RE2 = 0;
  4810  010A1C  9484               	bcf	3972,2,c	;volatile
  4811                           
  4812                           ; BSR set to: 14
  4813                           ;LCD.c: 66: PORTEbits.RE0 = 0;
  4814  010A1E  9084               	bcf	3972,0,c	;volatile
  4815                           
  4816                           ; BSR set to: 14
  4817                           ;LCD.c: 67: PORTEbits.RE1 = 0;
  4818  010A20  9284               	bcf	3972,1,c	;volatile
  4819                           
  4820                           ; BSR set to: 14
  4821                           ;LCD.c: 68: PORTHbits.RH5 = 0;
  4822  010A22  9A87               	bcf	3975,5,c	;volatile
  4823                           
  4824                           ; BSR set to: 14
  4825                           ;LCD.c: 70: PORTEbits.RE4 = 0;
  4826  010A24  9884               	bcf	3972,4,c	;volatile
  4827                           
  4828                           ; BSR set to: 14
  4829                           ;LCD.c: 71: PORTDbits.RD0 = 0;
  4830  010A26  9083               	bcf	3971,0,c	;volatile
  4831                           
  4832                           ; BSR set to: 14
  4833                           ;LCD.c: 72: PORTGbits.RG7 = 0;
  4834  010A28  9E86               	bcf	3974,7,c	;volatile
  4835                           
  4836                           ; BSR set to: 14
  4837                           ;LCD.c: 76: TRISDbits.TRISD0 = 0;
  4838  010A2A  9095               	bcf	3989,0,c	;volatile
  4839                           
  4840                           ; BSR set to: 14
  4841                           ;LCD.c: 77: TRISEbits.TRISE0 = 0;
  4842  010A2C  9096               	bcf	3990,0,c	;volatile
  4843                           
  4844                           ; BSR set to: 14
  4845                           ;LCD.c: 78: TRISEbits.TRISE1 = 0;
  4846  010A2E  9296               	bcf	3990,1,c	;volatile
  4847                           
  4848                           ; BSR set to: 14
  4849                           ;LCD.c: 79: TRISEbits.TRISE2 = 0;
  4850  010A30  9496               	bcf	3990,2,c	;volatile
  4851                           
  4852                           ; BSR set to: 14
  4853                           ;LCD.c: 80: TRISEbits.TRISE3 = 0;
  4854  010A32  9696               	bcf	3990,3,c	;volatile
  4855                           
  4856                           ; BSR set to: 14
  4857                           ;LCD.c: 81: TRISEbits.TRISE4 = 0;
  4858  010A34  9896               	bcf	3990,4,c	;volatile
  4859                           
  4860                           ; BSR set to: 14
  4861                           ;LCD.c: 82: TRISHbits.TRISH5 = 0;
  4862  010A36  9A99               	bcf	3993,5,c	;volatile
  4863                           
  4864                           ; BSR set to: 14
  4865                           ;LCD.c: 84: delay_init();
  4866  010A38  EC16  F091         	call	_delay_init	;wreg free
  4867                           
  4868                           ;LCD.c: 85: delay_ms(100);
  4869  010A3C  0E64               	movlw	100
  4870  010A3E  0100               	movlb	0	; () banked
  4871  010A40  6F60               	movwf	delay_ms@x& (0+255),b
  4872  010A42  0E00               	movlw	0
  4873  010A44  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  4874  010A46  0E00               	movlw	0
  4875  010A48  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  4876  010A4A  0E00               	movlw	0
  4877  010A4C  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  4878  010A4E  EC2F  F08E         	call	_delay_ms	;wreg free
  4879                           
  4880                           ;LCD.c: 87: PORTDbits.RD0 = 0;
  4881  010A52  9083               	bcf	3971,0,c	;volatile
  4882                           
  4883                           ;LCD.c: 88: PORTGbits.RG7 = 0;
  4884  010A54  9E86               	bcf	3974,7,c	;volatile
  4885                           
  4886                           ;LCD.c: 91: delay_us(40);;
  4887  010A56  0E28               	movlw	40
  4888  010A58  6E20               	movwf	delay_us@x,c
  4889  010A5A  0E00               	movlw	0
  4890  010A5C  6E21               	movwf	delay_us@x+1,c
  4891  010A5E  0E00               	movlw	0
  4892  010A60  6E22               	movwf	delay_us@x+2,c
  4893  010A62  0E00               	movlw	0
  4894  010A64  6E23               	movwf	delay_us@x+3,c
  4895  010A66  EC2F  F091         	call	_delay_us	;wreg free
  4896                           
  4897                           ;LCD.c: 92: PORTEbits.RE4 = 1;
  4898  010A6A  8884               	bsf	3972,4,c	;volatile
  4899                           
  4900                           ;LCD.c: 93: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTEb
      +                          its.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4901  010A6C  9A87               	bcf	3975,5,c	;volatile
  4902  010A6E  9284               	bcf	3972,1,c	;volatile
  4903  010A70  8084               	bsf	3972,0,c	;volatile
  4904  010A72  8484               	bsf	3972,2,c	;volatile
  4905                           
  4906                           ;LCD.c: 94: delay_us(40);;
  4907  010A74  0E28               	movlw	40
  4908  010A76  6E20               	movwf	delay_us@x,c
  4909  010A78  0E00               	movlw	0
  4910  010A7A  6E21               	movwf	delay_us@x+1,c
  4911  010A7C  0E00               	movlw	0
  4912  010A7E  6E22               	movwf	delay_us@x+2,c
  4913  010A80  0E00               	movlw	0
  4914  010A82  6E23               	movwf	delay_us@x+3,c
  4915  010A84  EC2F  F091         	call	_delay_us	;wreg free
  4916                           
  4917                           ;LCD.c: 95: PORTEbits.RE4 = 0;
  4918  010A88  9884               	bcf	3972,4,c	;volatile
  4919                           
  4920                           ;LCD.c: 97: delay_ms(50);
  4921  010A8A  0E32               	movlw	50
  4922  010A8C  0100               	movlb	0	; () banked
  4923  010A8E  6F60               	movwf	delay_ms@x& (0+255),b
  4924  010A90  0E00               	movlw	0
  4925  010A92  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  4926  010A94  0E00               	movlw	0
  4927  010A96  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  4928  010A98  0E00               	movlw	0
  4929  010A9A  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  4930  010A9C  EC2F  F08E         	call	_delay_ms	;wreg free
  4931                           
  4932                           ;LCD.c: 100: delay_us(40);;
  4933  010AA0  0E28               	movlw	40
  4934  010AA2  6E20               	movwf	delay_us@x,c
  4935  010AA4  0E00               	movlw	0
  4936  010AA6  6E21               	movwf	delay_us@x+1,c
  4937  010AA8  0E00               	movlw	0
  4938  010AAA  6E22               	movwf	delay_us@x+2,c
  4939  010AAC  0E00               	movlw	0
  4940  010AAE  6E23               	movwf	delay_us@x+3,c
  4941  010AB0  EC2F  F091         	call	_delay_us	;wreg free
  4942                           
  4943                           ;LCD.c: 101: PORTEbits.RE4 = 1;
  4944  010AB4  8884               	bsf	3972,4,c	;volatile
  4945                           
  4946                           ;LCD.c: 102: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4947  010AB6  9A87               	bcf	3975,5,c	;volatile
  4948  010AB8  9284               	bcf	3972,1,c	;volatile
  4949  010ABA  8084               	bsf	3972,0,c	;volatile
  4950  010ABC  8484               	bsf	3972,2,c	;volatile
  4951                           
  4952                           ;LCD.c: 103: delay_us(40);;
  4953  010ABE  0E28               	movlw	40
  4954  010AC0  6E20               	movwf	delay_us@x,c
  4955  010AC2  0E00               	movlw	0
  4956  010AC4  6E21               	movwf	delay_us@x+1,c
  4957  010AC6  0E00               	movlw	0
  4958  010AC8  6E22               	movwf	delay_us@x+2,c
  4959  010ACA  0E00               	movlw	0
  4960  010ACC  6E23               	movwf	delay_us@x+3,c
  4961  010ACE  EC2F  F091         	call	_delay_us	;wreg free
  4962                           
  4963                           ;LCD.c: 104: PORTEbits.RE4 = 0;
  4964  010AD2  9884               	bcf	3972,4,c	;volatile
  4965                           
  4966                           ;LCD.c: 106: delay_ms(50);
  4967  010AD4  0E32               	movlw	50
  4968  010AD6  0100               	movlb	0	; () banked
  4969  010AD8  6F60               	movwf	delay_ms@x& (0+255),b
  4970  010ADA  0E00               	movlw	0
  4971  010ADC  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  4972  010ADE  0E00               	movlw	0
  4973  010AE0  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  4974  010AE2  0E00               	movlw	0
  4975  010AE4  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  4976  010AE6  EC2F  F08E         	call	_delay_ms	;wreg free
  4977                           
  4978                           ;LCD.c: 109: delay_us(40);;
  4979  010AEA  0E28               	movlw	40
  4980  010AEC  6E20               	movwf	delay_us@x,c
  4981  010AEE  0E00               	movlw	0
  4982  010AF0  6E21               	movwf	delay_us@x+1,c
  4983  010AF2  0E00               	movlw	0
  4984  010AF4  6E22               	movwf	delay_us@x+2,c
  4985  010AF6  0E00               	movlw	0
  4986  010AF8  6E23               	movwf	delay_us@x+3,c
  4987  010AFA  EC2F  F091         	call	_delay_us	;wreg free
  4988                           
  4989                           ;LCD.c: 110: PORTEbits.RE4 = 1;
  4990  010AFE  8884               	bsf	3972,4,c	;volatile
  4991                           
  4992                           ;LCD.c: 111: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4993  010B00  9A87               	bcf	3975,5,c	;volatile
  4994  010B02  9284               	bcf	3972,1,c	;volatile
  4995  010B04  8084               	bsf	3972,0,c	;volatile
  4996  010B06  8484               	bsf	3972,2,c	;volatile
  4997                           
  4998                           ;LCD.c: 112: delay_us(40);;
  4999  010B08  0E28               	movlw	40
  5000  010B0A  6E20               	movwf	delay_us@x,c
  5001  010B0C  0E00               	movlw	0
  5002  010B0E  6E21               	movwf	delay_us@x+1,c
  5003  010B10  0E00               	movlw	0
  5004  010B12  6E22               	movwf	delay_us@x+2,c
  5005  010B14  0E00               	movlw	0
  5006  010B16  6E23               	movwf	delay_us@x+3,c
  5007  010B18  EC2F  F091         	call	_delay_us	;wreg free
  5008                           
  5009                           ;LCD.c: 113: PORTEbits.RE4 = 0;
  5010  010B1C  9884               	bcf	3972,4,c	;volatile
  5011                           
  5012                           ;LCD.c: 115: delay_ms(50);
  5013  010B1E  0E32               	movlw	50
  5014  010B20  0100               	movlb	0	; () banked
  5015  010B22  6F60               	movwf	delay_ms@x& (0+255),b
  5016  010B24  0E00               	movlw	0
  5017  010B26  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  5018  010B28  0E00               	movlw	0
  5019  010B2A  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  5020  010B2C  0E00               	movlw	0
  5021  010B2E  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  5022  010B30  EC2F  F08E         	call	_delay_ms	;wreg free
  5023                           
  5024                           ;LCD.c: 118: delay_us(40);;
  5025  010B34  0E28               	movlw	40
  5026  010B36  6E20               	movwf	delay_us@x,c
  5027  010B38  0E00               	movlw	0
  5028  010B3A  6E21               	movwf	delay_us@x+1,c
  5029  010B3C  0E00               	movlw	0
  5030  010B3E  6E22               	movwf	delay_us@x+2,c
  5031  010B40  0E00               	movlw	0
  5032  010B42  6E23               	movwf	delay_us@x+3,c
  5033  010B44  EC2F  F091         	call	_delay_us	;wreg free
  5034                           
  5035                           ;LCD.c: 119: PORTEbits.RE4 = 1;
  5036  010B48  8884               	bsf	3972,4,c	;volatile
  5037                           
  5038                           ;LCD.c: 120: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  5039  010B4A  9A87               	bcf	3975,5,c	;volatile
  5040  010B4C  9284               	bcf	3972,1,c	;volatile
  5041  010B4E  8084               	bsf	3972,0,c	;volatile
  5042  010B50  9484               	bcf	3972,2,c	;volatile
  5043                           
  5044                           ;LCD.c: 121: delay_us(40);;
  5045  010B52  0E28               	movlw	40
  5046  010B54  6E20               	movwf	delay_us@x,c
  5047  010B56  0E00               	movlw	0
  5048  010B58  6E21               	movwf	delay_us@x+1,c
  5049  010B5A  0E00               	movlw	0
  5050  010B5C  6E22               	movwf	delay_us@x+2,c
  5051  010B5E  0E00               	movlw	0
  5052  010B60  6E23               	movwf	delay_us@x+3,c
  5053  010B62  EC2F  F091         	call	_delay_us	;wreg free
  5054                           
  5055                           ;LCD.c: 122: PORTEbits.RE4 = 0;
  5056  010B66  9884               	bcf	3972,4,c	;volatile
  5057                           
  5058                           ;LCD.c: 124: delay_ms(5);
  5059  010B68  0E05               	movlw	5
  5060  010B6A  0100               	movlb	0	; () banked
  5061  010B6C  6F60               	movwf	delay_ms@x& (0+255),b
  5062  010B6E  0E00               	movlw	0
  5063  010B70  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  5064  010B72  0E00               	movlw	0
  5065  010B74  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  5066  010B76  0E00               	movlw	0
  5067  010B78  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  5068  010B7A  EC2F  F08E         	call	_delay_ms	;wreg free
  5069                           
  5070                           ;LCD.c: 127: delay_us(40);;
  5071  010B7E  0E28               	movlw	40
  5072  010B80  6E20               	movwf	delay_us@x,c
  5073  010B82  0E00               	movlw	0
  5074  010B84  6E21               	movwf	delay_us@x+1,c
  5075  010B86  0E00               	movlw	0
  5076  010B88  6E22               	movwf	delay_us@x+2,c
  5077  010B8A  0E00               	movlw	0
  5078  010B8C  6E23               	movwf	delay_us@x+3,c
  5079  010B8E  EC2F  F091         	call	_delay_us	;wreg free
  5080                           
  5081                           ;LCD.c: 128: PORTEbits.RE4 = 1;
  5082  010B92  8884               	bsf	3972,4,c	;volatile
  5083                           
  5084                           ;LCD.c: 129: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  5085  010B94  9A87               	bcf	3975,5,c	;volatile
  5086  010B96  9284               	bcf	3972,1,c	;volatile
  5087  010B98  8084               	bsf	3972,0,c	;volatile
  5088  010B9A  9484               	bcf	3972,2,c	;volatile
  5089                           
  5090                           ;LCD.c: 130: delay_us(40);;
  5091  010B9C  0E28               	movlw	40
  5092  010B9E  6E20               	movwf	delay_us@x,c
  5093  010BA0  0E00               	movlw	0
  5094  010BA2  6E21               	movwf	delay_us@x+1,c
  5095  010BA4  0E00               	movlw	0
  5096  010BA6  6E22               	movwf	delay_us@x+2,c
  5097  010BA8  0E00               	movlw	0
  5098  010BAA  6E23               	movwf	delay_us@x+3,c
  5099  010BAC  EC2F  F091         	call	_delay_us	;wreg free
  5100                           
  5101                           ;LCD.c: 131: PORTEbits.RE4 = 0;
  5102  010BB0  9884               	bcf	3972,4,c	;volatile
  5103                           
  5104                           ;LCD.c: 133: delay_us(40);;
  5105  010BB2  0E28               	movlw	40
  5106  010BB4  6E20               	movwf	delay_us@x,c
  5107  010BB6  0E00               	movlw	0
  5108  010BB8  6E21               	movwf	delay_us@x+1,c
  5109  010BBA  0E00               	movlw	0
  5110  010BBC  6E22               	movwf	delay_us@x+2,c
  5111  010BBE  0E00               	movlw	0
  5112  010BC0  6E23               	movwf	delay_us@x+3,c
  5113  010BC2  EC2F  F091         	call	_delay_us	;wreg free
  5114                           
  5115                           ;LCD.c: 134: PORTEbits.RE4 = 1;
  5116  010BC6  8884               	bsf	3972,4,c	;volatile
  5117                           
  5118                           ;LCD.c: 135: { PORTHbits.RH5 = ((0x8 >> 3) & 1); PORTEbits.RE1 = ((0x8 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x8 >> 1) & 1); PORTEbits.RE2 = (0x8 & 1); };
  5119  010BC8  8A87               	bsf	3975,5,c	;volatile
  5120  010BCA  9284               	bcf	3972,1,c	;volatile
  5121  010BCC  9084               	bcf	3972,0,c	;volatile
  5122  010BCE  9484               	bcf	3972,2,c	;volatile
  5123                           
  5124                           ;LCD.c: 136: delay_us(40);;
  5125  010BD0  0E28               	movlw	40
  5126  010BD2  6E20               	movwf	delay_us@x,c
  5127  010BD4  0E00               	movlw	0
  5128  010BD6  6E21               	movwf	delay_us@x+1,c
  5129  010BD8  0E00               	movlw	0
  5130  010BDA  6E22               	movwf	delay_us@x+2,c
  5131  010BDC  0E00               	movlw	0
  5132  010BDE  6E23               	movwf	delay_us@x+3,c
  5133  010BE0  EC2F  F091         	call	_delay_us	;wreg free
  5134                           
  5135                           ;LCD.c: 137: PORTEbits.RE4 = 0;
  5136  010BE4  9884               	bcf	3972,4,c	;volatile
  5137                           
  5138                           ;LCD.c: 140: delay_us(40);;
  5139  010BE6  0E28               	movlw	40
  5140  010BE8  6E20               	movwf	delay_us@x,c
  5141  010BEA  0E00               	movlw	0
  5142  010BEC  6E21               	movwf	delay_us@x+1,c
  5143  010BEE  0E00               	movlw	0
  5144  010BF0  6E22               	movwf	delay_us@x+2,c
  5145  010BF2  0E00               	movlw	0
  5146  010BF4  6E23               	movwf	delay_us@x+3,c
  5147  010BF6  EC2F  F091         	call	_delay_us	;wreg free
  5148                           
  5149                           ;LCD.c: 141: PORTEbits.RE4 = 1;
  5150  010BFA  8884               	bsf	3972,4,c	;volatile
  5151                           
  5152                           ;LCD.c: 142: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5153  010BFC  9A87               	bcf	3975,5,c	;volatile
  5154  010BFE  9284               	bcf	3972,1,c	;volatile
  5155  010C00  9084               	bcf	3972,0,c	;volatile
  5156  010C02  9484               	bcf	3972,2,c	;volatile
  5157                           
  5158                           ;LCD.c: 143: delay_us(40);;
  5159  010C04  0E28               	movlw	40
  5160  010C06  6E20               	movwf	delay_us@x,c
  5161  010C08  0E00               	movlw	0
  5162  010C0A  6E21               	movwf	delay_us@x+1,c
  5163  010C0C  0E00               	movlw	0
  5164  010C0E  6E22               	movwf	delay_us@x+2,c
  5165  010C10  0E00               	movlw	0
  5166  010C12  6E23               	movwf	delay_us@x+3,c
  5167  010C14  EC2F  F091         	call	_delay_us	;wreg free
  5168                           
  5169                           ;LCD.c: 144: PORTEbits.RE4 = 0;
  5170  010C18  9884               	bcf	3972,4,c	;volatile
  5171                           
  5172                           ;LCD.c: 146: delay_us(40);;
  5173  010C1A  0E28               	movlw	40
  5174  010C1C  6E20               	movwf	delay_us@x,c
  5175  010C1E  0E00               	movlw	0
  5176  010C20  6E21               	movwf	delay_us@x+1,c
  5177  010C22  0E00               	movlw	0
  5178  010C24  6E22               	movwf	delay_us@x+2,c
  5179  010C26  0E00               	movlw	0
  5180  010C28  6E23               	movwf	delay_us@x+3,c
  5181  010C2A  EC2F  F091         	call	_delay_us	;wreg free
  5182                           
  5183                           ;LCD.c: 147: PORTEbits.RE4 = 1;
  5184  010C2E  8884               	bsf	3972,4,c	;volatile
  5185                           
  5186                           ;LCD.c: 148: { PORTHbits.RH5 = ((0xF >> 3) & 1); PORTEbits.RE1 = ((0xF >> 2) & 1); PORTE
      +                          bits.RE0 = ((0xF >> 1) & 1); PORTEbits.RE2 = (0xF & 1); };
  5187  010C30  8A87               	bsf	3975,5,c	;volatile
  5188  010C32  8284               	bsf	3972,1,c	;volatile
  5189  010C34  8084               	bsf	3972,0,c	;volatile
  5190  010C36  8484               	bsf	3972,2,c	;volatile
  5191                           
  5192                           ;LCD.c: 149: delay_us(40);;
  5193  010C38  0E28               	movlw	40
  5194  010C3A  6E20               	movwf	delay_us@x,c
  5195  010C3C  0E00               	movlw	0
  5196  010C3E  6E21               	movwf	delay_us@x+1,c
  5197  010C40  0E00               	movlw	0
  5198  010C42  6E22               	movwf	delay_us@x+2,c
  5199  010C44  0E00               	movlw	0
  5200  010C46  6E23               	movwf	delay_us@x+3,c
  5201  010C48  EC2F  F091         	call	_delay_us	;wreg free
  5202                           
  5203                           ;LCD.c: 150: PORTEbits.RE4 = 0;
  5204  010C4C  9884               	bcf	3972,4,c	;volatile
  5205                           
  5206                           ;LCD.c: 153: delay_us(40);;
  5207  010C4E  0E28               	movlw	40
  5208  010C50  6E20               	movwf	delay_us@x,c
  5209  010C52  0E00               	movlw	0
  5210  010C54  6E21               	movwf	delay_us@x+1,c
  5211  010C56  0E00               	movlw	0
  5212  010C58  6E22               	movwf	delay_us@x+2,c
  5213  010C5A  0E00               	movlw	0
  5214  010C5C  6E23               	movwf	delay_us@x+3,c
  5215  010C5E  EC2F  F091         	call	_delay_us	;wreg free
  5216                           
  5217                           ;LCD.c: 154: PORTEbits.RE4 = 1;
  5218  010C62  8884               	bsf	3972,4,c	;volatile
  5219                           
  5220                           ;LCD.c: 155: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5221  010C64  9A87               	bcf	3975,5,c	;volatile
  5222  010C66  9284               	bcf	3972,1,c	;volatile
  5223  010C68  9084               	bcf	3972,0,c	;volatile
  5224  010C6A  9484               	bcf	3972,2,c	;volatile
  5225                           
  5226                           ;LCD.c: 156: delay_us(40);;
  5227  010C6C  0E28               	movlw	40
  5228  010C6E  6E20               	movwf	delay_us@x,c
  5229  010C70  0E00               	movlw	0
  5230  010C72  6E21               	movwf	delay_us@x+1,c
  5231  010C74  0E00               	movlw	0
  5232  010C76  6E22               	movwf	delay_us@x+2,c
  5233  010C78  0E00               	movlw	0
  5234  010C7A  6E23               	movwf	delay_us@x+3,c
  5235  010C7C  EC2F  F091         	call	_delay_us	;wreg free
  5236                           
  5237                           ;LCD.c: 157: PORTEbits.RE4 = 0;
  5238  010C80  9884               	bcf	3972,4,c	;volatile
  5239                           
  5240                           ;LCD.c: 159: delay_us(40);;
  5241  010C82  0E28               	movlw	40
  5242  010C84  6E20               	movwf	delay_us@x,c
  5243  010C86  0E00               	movlw	0
  5244  010C88  6E21               	movwf	delay_us@x+1,c
  5245  010C8A  0E00               	movlw	0
  5246  010C8C  6E22               	movwf	delay_us@x+2,c
  5247  010C8E  0E00               	movlw	0
  5248  010C90  6E23               	movwf	delay_us@x+3,c
  5249  010C92  EC2F  F091         	call	_delay_us	;wreg free
  5250                           
  5251                           ;LCD.c: 160: PORTEbits.RE4 = 1;
  5252  010C96  8884               	bsf	3972,4,c	;volatile
  5253                           
  5254                           ;LCD.c: 161: { PORTHbits.RH5 = ((0x1 >> 3) & 1); PORTEbits.RE1 = ((0x1 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x1 >> 1) & 1); PORTEbits.RE2 = (0x1 & 1); };
  5255  010C98  9A87               	bcf	3975,5,c	;volatile
  5256  010C9A  9284               	bcf	3972,1,c	;volatile
  5257  010C9C  9084               	bcf	3972,0,c	;volatile
  5258  010C9E  8484               	bsf	3972,2,c	;volatile
  5259                           
  5260                           ;LCD.c: 162: delay_us(40);;
  5261  010CA0  0E28               	movlw	40
  5262  010CA2  6E20               	movwf	delay_us@x,c
  5263  010CA4  0E00               	movlw	0
  5264  010CA6  6E21               	movwf	delay_us@x+1,c
  5265  010CA8  0E00               	movlw	0
  5266  010CAA  6E22               	movwf	delay_us@x+2,c
  5267  010CAC  0E00               	movlw	0
  5268  010CAE  6E23               	movwf	delay_us@x+3,c
  5269  010CB0  EC2F  F091         	call	_delay_us	;wreg free
  5270                           
  5271                           ;LCD.c: 163: PORTEbits.RE4 = 0;
  5272  010CB4  9884               	bcf	3972,4,c	;volatile
  5273                           
  5274                           ;LCD.c: 166: delay_us(40);;
  5275  010CB6  0E28               	movlw	40
  5276  010CB8  6E20               	movwf	delay_us@x,c
  5277  010CBA  0E00               	movlw	0
  5278  010CBC  6E21               	movwf	delay_us@x+1,c
  5279  010CBE  0E00               	movlw	0
  5280  010CC0  6E22               	movwf	delay_us@x+2,c
  5281  010CC2  0E00               	movlw	0
  5282  010CC4  6E23               	movwf	delay_us@x+3,c
  5283  010CC6  EC2F  F091         	call	_delay_us	;wreg free
  5284                           
  5285                           ;LCD.c: 167: PORTEbits.RE4 = 1;
  5286  010CCA  8884               	bsf	3972,4,c	;volatile
  5287                           
  5288                           ;LCD.c: 168: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5289  010CCC  9A87               	bcf	3975,5,c	;volatile
  5290  010CCE  9284               	bcf	3972,1,c	;volatile
  5291  010CD0  9084               	bcf	3972,0,c	;volatile
  5292  010CD2  9484               	bcf	3972,2,c	;volatile
  5293                           
  5294                           ;LCD.c: 169: delay_us(40);;
  5295  010CD4  0E28               	movlw	40
  5296  010CD6  6E20               	movwf	delay_us@x,c
  5297  010CD8  0E00               	movlw	0
  5298  010CDA  6E21               	movwf	delay_us@x+1,c
  5299  010CDC  0E00               	movlw	0
  5300  010CDE  6E22               	movwf	delay_us@x+2,c
  5301  010CE0  0E00               	movlw	0
  5302  010CE2  6E23               	movwf	delay_us@x+3,c
  5303  010CE4  EC2F  F091         	call	_delay_us	;wreg free
  5304                           
  5305                           ;LCD.c: 170: PORTEbits.RE4 = 0;
  5306  010CE8  9884               	bcf	3972,4,c	;volatile
  5307                           
  5308                           ;LCD.c: 172: delay_us(40);;
  5309  010CEA  0E28               	movlw	40
  5310  010CEC  6E20               	movwf	delay_us@x,c
  5311  010CEE  0E00               	movlw	0
  5312  010CF0  6E21               	movwf	delay_us@x+1,c
  5313  010CF2  0E00               	movlw	0
  5314  010CF4  6E22               	movwf	delay_us@x+2,c
  5315  010CF6  0E00               	movlw	0
  5316  010CF8  6E23               	movwf	delay_us@x+3,c
  5317  010CFA  EC2F  F091         	call	_delay_us	;wreg free
  5318                           
  5319                           ;LCD.c: 173: PORTEbits.RE4 = 1;
  5320  010CFE  8884               	bsf	3972,4,c	;volatile
  5321                           
  5322                           ;LCD.c: 174: { PORTHbits.RH5 = ((0x6 >> 3) & 1); PORTEbits.RE1 = ((0x6 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x6 >> 1) & 1); PORTEbits.RE2 = (0x6 & 1); };
  5323  010D00  9A87               	bcf	3975,5,c	;volatile
  5324  010D02  8284               	bsf	3972,1,c	;volatile
  5325  010D04  8084               	bsf	3972,0,c	;volatile
  5326  010D06  9484               	bcf	3972,2,c	;volatile
  5327                           
  5328                           ;LCD.c: 175: delay_us(40);;
  5329  010D08  0E28               	movlw	40
  5330  010D0A  6E20               	movwf	delay_us@x,c
  5331  010D0C  0E00               	movlw	0
  5332  010D0E  6E21               	movwf	delay_us@x+1,c
  5333  010D10  0E00               	movlw	0
  5334  010D12  6E22               	movwf	delay_us@x+2,c
  5335  010D14  0E00               	movlw	0
  5336  010D16  6E23               	movwf	delay_us@x+3,c
  5337  010D18  EC2F  F091         	call	_delay_us	;wreg free
  5338                           
  5339                           ;LCD.c: 176: PORTEbits.RE4 = 0;
  5340  010D1C  9884               	bcf	3972,4,c	;volatile
  5341  010D1E  0012               	return		;funcret
  5342  010D20                     __end_of_LCD_init4bit:
  5343                           	opt stack 0
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           intcon	equ	0xFF2
  5349                           intcon2	equ	0xFF1
  5350                           intcon3	equ	0xFF0
  5351                           postinc0	equ	0xFEE
  5352                           wreg	equ	0xFE8
  5353                           postdec1	equ	0xFE5
  5354                           fsr1h	equ	0xFE2
  5355                           fsr1l	equ	0xFE1
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _delay_init *****************
  5359 ;; Defined at:
  5360 ;;		line 7 in file "delays.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;		None               void
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    3
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_LCD_init4bit
  5385 ;;		_LCD_init8bit
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text19
  5390  01222C                     __ptext19:
  5391                           	opt stack 0
  5392  01222C                     _delay_init:
  5393                           	opt stack 25
  5394                           
  5395                           ;delays.c: 9: static int config = 0;
  5396                           ;delays.c: 12: if(config == 1)
  5397                           
  5398                           ;incstack = 0
  5399  01222C  0436               	decf	delay_init@config,w,c
  5400  01222E  1037               	iorwf	delay_init@config+1,w,c
  5401  012230  B4D8               	btfsc	status,2,c
  5402  012232  0012               	return	
  5403  012234  D001               	goto	l325
  5404                           
  5405                           ;delays.c: 13: {
  5406                           ;delays.c: 14: return;
  5407  012236  0012               	return	
  5408  012238                     l325:
  5409                           
  5410                           ;delays.c: 15: }
  5411                           ;delays.c: 18: TMR3CS0 = 1;
  5412  012238  8CB1               	bsf	4017,6,c	;volatile
  5413                           
  5414                           ;delays.c: 19: TMR3CS1 = 1;
  5415  01223A  8EB1               	bsf	4017,7,c	;volatile
  5416                           
  5417                           ;delays.c: 22: T3CKPS0 = 0;
  5418  01223C  98B1               	bcf	4017,4,c	;volatile
  5419                           
  5420                           ;delays.c: 23: T3CKPS1 = 0;
  5421  01223E  9AB1               	bcf	4017,5,c	;volatile
  5422                           
  5423                           ;delays.c: 26: RD163 = 1;
  5424  012240  8EB1               	bsf	4017,7,c	;volatile
  5425                           
  5426                           ;delays.c: 29: TMR3IE = 0;
  5427  012242  92A0               	bcf	4000,1,c	;volatile
  5428                           
  5429                           ;delays.c: 32: TMR3ON = 1;
  5430  012244  80B1               	bsf	4017,0,c	;volatile
  5431                           
  5432                           ;delays.c: 34: config = 1;
  5433  012246  0E00               	movlw	0
  5434  012248  6E37               	movwf	delay_init@config+1,c
  5435  01224A  0E01               	movlw	1
  5436  01224C  6E36               	movwf	delay_init@config,c
  5437                           
  5438                           ;delays.c: 42: T0CON = 0b11010111;
  5439  01224E  0ED7               	movlw	215
  5440  012250  6ED5               	movwf	4053,c	;volatile
  5441                           
  5442                           ;delays.c: 43: TMR0IP = 1;
  5443  012252  84F1               	bsf	intcon2,2,c	;volatile
  5444                           
  5445                           ;delays.c: 44: TMR0IF = 0;
  5446  012254  94F2               	bcf	intcon,2,c	;volatile
  5447                           
  5448                           ;delays.c: 45: TMR0IE = 1;
  5449  012256  8AF2               	bsf	intcon,5,c	;volatile
  5450                           
  5451                           ;delays.c: 46: TMR0L = 193;
  5452  012258  0EC1               	movlw	193
  5453  01225A  6ED6               	movwf	4054,c	;volatile
  5454  01225C  0012               	return		;funcret
  5455  01225E                     __end_of_delay_init:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           intcon	equ	0xFF2
  5462                           intcon2	equ	0xFF1
  5463                           intcon3	equ	0xFF0
  5464                           postinc0	equ	0xFEE
  5465                           wreg	equ	0xFE8
  5466                           postdec1	equ	0xFE5
  5467                           fsr1h	equ	0xFE2
  5468                           fsr1l	equ	0xFE1
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _debug *****************
  5472 ;; Defined at:
  5473 ;;		line 44 in file "main.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		None
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    3
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text20
  5502  012446                     __ptext20:
  5503                           	opt stack 0
  5504  012446                     _debug:
  5505                           	opt stack 27
  5506                           
  5507                           ;incstack = 0
  5508  012446  0012               	return		;funcret
  5509  012448                     __end_of_debug:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           intcon	equ	0xFF2
  5516                           intcon2	equ	0xFF1
  5517                           intcon3	equ	0xFF0
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1h	equ	0xFE2
  5522                           fsr1l	equ	0xFE1
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _competitionMode *****************
  5526 ;; Defined at:
  5527 ;;		line 68 in file "main.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;		None               void
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;Total ram usage:        0 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    7
  5548 ;; This function calls:
  5549 ;;		_LCD_printString
  5550 ;; This function is called by:
  5551 ;;		_main
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text21
  5556  01239C                     __ptext21:
  5557                           	opt stack 0
  5558  01239C                     _competitionMode:
  5559                           	opt stack 23
  5560                           
  5561                           ;main.c: 70: LCD_printString(0,0, "We are\nwinning!");
  5562                           
  5563                           ;incstack = 0
  5564  01239C  0E00               	movlw	0
  5565  01239E  0100               	movlb	0	; () banked
  5566  0123A0  6F76               	movwf	LCD_printString@y& (0+255),b
  5567  0123A2  0E8D               	movlw	low STR_5
  5568  0123A4  0100               	movlb	0	; () banked
  5569  0123A6  6F77               	movwf	LCD_printString@input& (0+255),b
  5570  0123A8  0EFF               	movlw	high STR_5
  5571  0123AA  0100               	movlb	0	; () banked
  5572  0123AC  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  5573  0123AE  0E00               	movlw	0
  5574  0123B0  EC00  F080         	call	_LCD_printString
  5575  0123B4  D7FF               	goto	l241
  5576  0123B6  0012               	return		;funcret
  5577  0123B8                     __end_of_competitionMode:
  5578                           	opt stack 0
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           intcon	equ	0xFF2
  5584                           intcon2	equ	0xFF1
  5585                           intcon3	equ	0xFF0
  5586                           postinc0	equ	0xFEE
  5587                           wreg	equ	0xFE8
  5588                           postdec1	equ	0xFE5
  5589                           fsr1h	equ	0xFE2
  5590                           fsr1l	equ	0xFE1
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _RCMode *****************
  5594 ;; Defined at:
  5595 ;;		line 77 in file "main.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  right_speed     2    2[BANK1 ] int 
  5600 ;;  left_speed      2    0[BANK1 ] int 
  5601 ;;  done            1    5[BANK1 ] unsigned char 
  5602 ;;  type            1    4[BANK1 ] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5613 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5615 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;Total ram usage:        7 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    9
  5619 ;; This function calls:
  5620 ;;		_LCD_printString
  5621 ;;		_PS2_analog
  5622 ;;		_PS2_init
  5623 ;;		_PS2_readGamepad
  5624 ;;		_PS2_readType
  5625 ;;		___awdiv
  5626 ;;		_delay_ms
  5627 ;;		_motorDrive_setSpeeds
  5628 ;; This function is called by:
  5629 ;;		_main
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text22
  5634  011696                     __ptext22:
  5635                           	opt stack 0
  5636  011696                     _RCMode:
  5637                           	opt stack 21
  5638                           
  5639                           ;main.c: 79: LCD_printString(0,0, "RC Mode\nSearch..");
  5640                           
  5641                           ;incstack = 0
  5642  011696  0E00               	movlw	0
  5643  011698  0100               	movlb	0	; () banked
  5644  01169A  6F76               	movwf	LCD_printString@y& (0+255),b
  5645  01169C  0E5A               	movlw	low STR_6
  5646  01169E  0100               	movlb	0	; () banked
  5647  0116A0  6F77               	movwf	LCD_printString@input& (0+255),b
  5648  0116A2  0EFF               	movlw	high STR_6
  5649  0116A4  0100               	movlb	0	; () banked
  5650  0116A6  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  5651  0116A8  0E00               	movlw	0
  5652  0116AA  EC00  F080         	call	_LCD_printString
  5653                           
  5654                           ;main.c: 80: char done = PS2_init();
  5655  0116AE  ECD4  F089         	call	_PS2_init	;wreg free
  5656  0116B2  D01D               	goto	L1
  5657  0116B4                     l7419:
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;main.c: 82: {
  5661                           ;main.c: 83: LCD_printString(0,0, "RC Mode\nERR: %i  ",done);
  5662  0116B4  0E00               	movlw	0
  5663  0116B6  0100               	movlb	0	; () banked
  5664  0116B8  6F76               	movwf	LCD_printString@y& (0+255),b
  5665  0116BA  0E12               	movlw	low STR_7
  5666  0116BC  0100               	movlb	0	; () banked
  5667  0116BE  6F77               	movwf	LCD_printString@input& (0+255),b
  5668  0116C0  0EFF               	movlw	high STR_7
  5669  0116C2  0100               	movlb	0	; () banked
  5670  0116C4  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  5671  0116C6  C1F4  F079         	movff	RCMode@done,?_LCD_printString+3
  5672  0116CA  0100               	movlb	0	; () banked
  5673  0116CC  6B7A               	clrf	(?_LCD_printString+4)& (0+255),b
  5674  0116CE  0E00               	movlw	0
  5675  0116D0  EC00  F080         	call	_LCD_printString
  5676                           
  5677                           ;main.c: 84: delay_ms(500);
  5678  0116D4  0EF4               	movlw	244
  5679  0116D6  0100               	movlb	0	; () banked
  5680  0116D8  6F60               	movwf	delay_ms@x& (0+255),b
  5681  0116DA  0E01               	movlw	1
  5682  0116DC  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  5683  0116DE  0E00               	movlw	0
  5684  0116E0  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  5685  0116E2  0E00               	movlw	0
  5686  0116E4  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  5687  0116E6  EC2F  F08E         	call	_delay_ms	;wreg free
  5688                           
  5689                           ;main.c: 85: done = PS2_init();
  5690  0116EA  ECD4  F089         	call	_PS2_init	;wreg free
  5691  0116EE                     L1:
  5692  0116EE  0101               	movlb	1	; () banked
  5693  0116F0  6FF4               	movwf	RCMode@done& (0+255),b
  5694  0116F2  D000               	goto	l7425
  5695  0116F4                     l7425:
  5696                           
  5697                           ; BSR set to: 1
  5698  0116F4  0101               	movlb	1	; () banked
  5699  0116F6  51F4               	movf	RCMode@done& (0+255),w,b
  5700  0116F8  0101               	movlb	1	; () banked
  5701  0116FA  A4D8               	btfss	status,2,c
  5702  0116FC  D7DB               	goto	l7419
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;main.c: 86: }
  5706                           ;main.c: 88: char type = PS2_readType();
  5707                           
  5708                           ; BSR set to: 1
  5709  0116FE  ECE1  F090         	call	_PS2_readType	;wreg free
  5710  011702  0101               	movlb	1	; () banked
  5711  011704  6FF3               	movwf	RCMode@type& (0+255),b
  5712                           
  5713                           ; BSR set to: 1
  5714                           ;main.c: 90: LCD_printString(0,0, "ana:%i\ntype %i",PS2_analog(7),type);
  5715  011706  0E00               	movlw	0
  5716  011708  0100               	movlb	0	; () banked
  5717  01170A  6F76               	movwf	LCD_printString@y& (0+255),b
  5718  01170C  0ECB               	movlw	low STR_8
  5719  01170E  0100               	movlb	0	; () banked
  5720  011710  6F77               	movwf	LCD_printString@input& (0+255),b
  5721  011712  0EFF               	movlw	high STR_8
  5722  011714  0100               	movlb	0	; () banked
  5723  011716  6F78               	movwf	(LCD_printString@input+1)& (0+255),b
  5724  011718  0E07               	movlw	7
  5725  01171A  ECDC  F091         	call	_PS2_analog
  5726  01171E  0100               	movlb	0	; () banked
  5727  011720  6FA7               	movwf	??_RCMode& (0+255),b
  5728  011722  0100               	movlb	0	; () banked
  5729  011724  51A7               	movf	??_RCMode& (0+255),w,b
  5730  011726  0100               	movlb	0	; () banked
  5731  011728  6F79               	movwf	(?_LCD_printString+3)& (0+255),b
  5732  01172A  6B7A               	clrf	(?_LCD_printString+4)& (0+255),b
  5733  01172C  C1F3  F07B         	movff	RCMode@type,?_LCD_printString+5
  5734  011730  0100               	movlb	0	; () banked
  5735  011732  6B7C               	clrf	(?_LCD_printString+6)& (0+255),b
  5736  011734  0E00               	movlw	0
  5737  011736  EC00  F080         	call	_LCD_printString
  5738  01173A  D000               	goto	l7431
  5739  01173C                     l7431:
  5740                           
  5741                           ;main.c: 95: {
  5742                           ;main.c: 96: PS2_readGamepad();
  5743  01173C  ECDD  F087         	call	_PS2_readGamepad	;wreg free
  5744                           
  5745                           ;main.c: 98: int left_speed = ((PS2_analog(8) * 120) / 255) - 60;
  5746  011740  0E08               	movlw	8
  5747  011742  ECDC  F091         	call	_PS2_analog
  5748  011746  0100               	movlb	0	; () banked
  5749  011748  6FA7               	movwf	??_RCMode& (0+255),b
  5750  01174A  0100               	movlb	0	; () banked
  5751  01174C  51A7               	movf	??_RCMode& (0+255),w,b
  5752  01174E  0D78               	mullw	120
  5753  011750  CFF3 F060          	movff	prodl,___awdiv@dividend
  5754  011754  CFF4 F061          	movff	prodh,___awdiv@dividend+1
  5755  011758  0E00               	movlw	0
  5756  01175A  0100               	movlb	0	; () banked
  5757  01175C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5758  01175E  6962               	setf	___awdiv@divisor& (0+255),b
  5759  011760  EC70  F08C         	call	___awdiv	;wreg free
  5760  011764  0EC4               	movlw	196
  5761  011766  0100               	movlb	0	; () banked
  5762  011768  2560               	addwf	?___awdiv& (0+255),w,b
  5763  01176A  0101               	movlb	1	; () banked
  5764  01176C  6FEF               	movwf	RCMode@left_speed& (0+255),b
  5765  01176E  0EFF               	movlw	255
  5766  011770  0100               	movlb	0	; () banked
  5767  011772  2161               	addwfc	(?___awdiv+1)& (0+255),w,b
  5768  011774  0101               	movlb	1	; () banked
  5769  011776  6FF0               	movwf	(RCMode@left_speed+1)& (0+255),b
  5770                           
  5771                           ; BSR set to: 1
  5772                           ;main.c: 99: int right_speed = ((PS2_analog(6) * 120) / 255) - 60;
  5773  011778  0E06               	movlw	6
  5774  01177A  ECDC  F091         	call	_PS2_analog
  5775  01177E  0100               	movlb	0	; () banked
  5776  011780  6FA7               	movwf	??_RCMode& (0+255),b
  5777  011782  0100               	movlb	0	; () banked
  5778  011784  51A7               	movf	??_RCMode& (0+255),w,b
  5779  011786  0D78               	mullw	120
  5780  011788  CFF3 F060          	movff	prodl,___awdiv@dividend
  5781  01178C  CFF4 F061          	movff	prodh,___awdiv@dividend+1
  5782  011790  0E00               	movlw	0
  5783  011792  0100               	movlb	0	; () banked
  5784  011794  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  5785  011796  6962               	setf	___awdiv@divisor& (0+255),b
  5786  011798  EC70  F08C         	call	___awdiv	;wreg free
  5787  01179C  0EC4               	movlw	196
  5788  01179E  0100               	movlb	0	; () banked
  5789  0117A0  2560               	addwf	?___awdiv& (0+255),w,b
  5790  0117A2  0101               	movlb	1	; () banked
  5791  0117A4  6FF1               	movwf	RCMode@right_speed& (0+255),b
  5792  0117A6  0EFF               	movlw	255
  5793  0117A8  0100               	movlb	0	; () banked
  5794  0117AA  2161               	addwfc	(?___awdiv+1)& (0+255),w,b
  5795  0117AC  0101               	movlb	1	; () banked
  5796  0117AE  6FF2               	movwf	(RCMode@right_speed+1)& (0+255),b
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 103: motorDrive_setSpeeds(right_speed, left_speed);
  5800  0117B0  C1EF  F068         	movff	RCMode@left_speed,motorDrive_setSpeeds@rSpeed
  5801  0117B4  0101               	movlb	1	; () banked
  5802  0117B6  51F1               	movf	RCMode@right_speed& (0+255),w,b
  5803  0117B8  EC90  F086         	call	_motorDrive_setSpeeds
  5804                           
  5805                           ;main.c: 104: delay_ms(50);
  5806  0117BC  0E32               	movlw	50
  5807  0117BE  0100               	movlb	0	; () banked
  5808  0117C0  6F60               	movwf	delay_ms@x& (0+255),b
  5809  0117C2  0E00               	movlw	0
  5810  0117C4  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  5811  0117C6  0E00               	movlw	0
  5812  0117C8  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  5813  0117CA  0E00               	movlw	0
  5814  0117CC  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  5815  0117CE  EC2F  F08E         	call	_delay_ms	;wreg free
  5816  0117D2  D7B4               	goto	l7431
  5817  0117D4  0012               	return		;funcret
  5818  0117D6                     __end_of_RCMode:
  5819                           	opt stack 0
  5820                           tblptru	equ	0xFF8
  5821                           tblptrh	equ	0xFF7
  5822                           tblptrl	equ	0xFF6
  5823                           tablat	equ	0xFF5
  5824                           prodh	equ	0xFF4
  5825                           prodl	equ	0xFF3
  5826                           intcon	equ	0xFF2
  5827                           intcon2	equ	0xFF1
  5828                           intcon3	equ	0xFF0
  5829                           postinc0	equ	0xFEE
  5830                           wreg	equ	0xFE8
  5831                           postdec1	equ	0xFE5
  5832                           fsr1h	equ	0xFE2
  5833                           fsr1l	equ	0xFE1
  5834                           status	equ	0xFD8
  5835                           
  5836 ;; *************** function _motorDrive_setSpeeds *****************
  5837 ;; Defined at:
  5838 ;;		line 68 in file "motorDrive.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  lSpeed          1    wreg     char 
  5841 ;;  rSpeed          1    8[BANK0 ] char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  lSpeed          1   31[BANK0 ] char 
  5844 ;;  tempr           2   15[BANK0 ] int 
  5845 ;;  templ           2   13[BANK0 ] int 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;		None               void
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5855 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;Total ram usage:       24 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    4
  5862 ;; This function calls:
  5863 ;;		_SetDCEPWM1
  5864 ;;		_SetDCEPWM3
  5865 ;;		___awdiv
  5866 ;;		___wmul
  5867 ;; This function is called by:
  5868 ;;		_RCMode
  5869 ;;		_motorDrive_init
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text23
  5874  010D20                     __ptext23:
  5875                           	opt stack 0
  5876  010D20                     _motorDrive_setSpeeds:
  5877                           	opt stack 24
  5878                           
  5879                           ;incstack = 0
  5880                           ;motorDrive_setSpeeds@lSpeed stored from wreg
  5881  010D20  0100               	movlb	0	; () banked
  5882  010D22  6F7F               	movwf	motorDrive_setSpeeds@lSpeed& (0+255),b
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;motorDrive.c: 70: PORTLbits.RL0 = (lSpeed >> 7 ) & 0x1 ^ 0x1;
  5886  010D24  C07F  F069         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  5887  010D28  0E07               	movlw	7
  5888  010D2A  0100               	movlb	0	; () banked
  5889  010D2C  6F6A               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  5890  010D2E                     u4575:
  5891  010D2E  0100               	movlb	0	; () banked
  5892  010D30  3569               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  5893  010D32  3369               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  5894  010D34  0100               	movlb	0	; () banked
  5895  010D36  2F6A               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  5896  010D38  D7FA               	goto	u4575
  5897  010D3A  0E01               	movlw	1
  5898  010D3C  0100               	movlb	0	; () banked
  5899  010D3E  1769               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  5900  010D40  0E01               	movlw	1
  5901  010D42  0100               	movlb	0	; () banked
  5902  010D44  1B69               	xorwf	??_motorDrive_setSpeeds& (0+255),f,b
  5903  010D46  010E               	movlb	14	; () banked
  5904  010D48  51E4               	movf	228,w,b	;volatile
  5905  010D4A  0100               	movlb	0	; () banked
  5906  010D4C  1969               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  5907  010D4E  0BFE               	andlw	-2
  5908  010D50  1969               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  5909  010D52  010E               	movlb	14	; () banked
  5910  010D54  6FE4               	movwf	228,b	;volatile
  5911                           
  5912                           ;motorDrive.c: 71: PORTKbits.RK1 = (rSpeed >> 7 ) & 0x1;
  5913  010D56  C068  F069         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  5914  010D5A  0E07               	movlw	7
  5915  010D5C  0100               	movlb	0	; () banked
  5916  010D5E  6F6A               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  5917  010D60                     u4585:
  5918  010D60  0100               	movlb	0	; () banked
  5919  010D62  3569               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  5920  010D64  3369               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  5921  010D66  0100               	movlb	0	; () banked
  5922  010D68  2F6A               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  5923  010D6A  D7FA               	goto	u4585
  5924  010D6C  0E01               	movlw	1
  5925  010D6E  0100               	movlb	0	; () banked
  5926  010D70  1769               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  5927  010D72  0100               	movlb	0	; () banked
  5928  010D74  4769               	rlncf	??_motorDrive_setSpeeds& (0+255),f,b
  5929  010D76  010E               	movlb	14	; () banked
  5930  010D78  51E7               	movf	231,w,b	;volatile
  5931  010D7A  0100               	movlb	0	; () banked
  5932  010D7C  1969               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  5933  010D7E  0BFD               	andlw	-3
  5934  010D80  1969               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  5935  010D82  010E               	movlb	14	; () banked
  5936  010D84  6FE7               	movwf	231,b	;volatile
  5937                           
  5938                           ;motorDrive.c: 73: lSpeed = ((lSpeed < 100) ? lSpeed : 100);
  5939  010D86  0100               	movlb	0	; () banked
  5940  010D88  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  5941  010D8A  0A80               	xorlw	128
  5942  010D8C  0F1C               	addlw	-228
  5943  010D8E  A0D8               	btfss	status,0,c
  5944  010D90  D006               	goto	l6611
  5945                           
  5946                           ; BSR set to: 0
  5947  010D92  0E00               	movlw	0
  5948  010D94  0100               	movlb	0	; () banked
  5949  010D96  6F72               	movwf	(_motorDrive_setSpeeds$2400+1)& (0+255),b
  5950  010D98  0E64               	movlw	100
  5951  010D9A  6F71               	movwf	_motorDrive_setSpeeds$2400& (0+255),b
  5952  010D9C  D008               	goto	l6613
  5953  010D9E                     l6611:
  5954                           
  5955                           ; BSR set to: 0
  5956  010D9E  0100               	movlb	0	; () banked
  5957  010DA0  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  5958  010DA2  0100               	movlb	0	; () banked
  5959  010DA4  6F71               	movwf	_motorDrive_setSpeeds$2400& (0+255),b
  5960  010DA6  6B72               	clrf	(_motorDrive_setSpeeds$2400+1)& (0+255),b
  5961  010DA8  BF71               	btfsc	_motorDrive_setSpeeds$2400& (0+255),7,b
  5962  010DAA  0772               	decf	(_motorDrive_setSpeeds$2400+1)& (0+255),f,b
  5963  010DAC  D000               	goto	l6613
  5964  010DAE                     l6613:
  5965                           
  5966                           ; BSR set to: 0
  5967  010DAE  C071  F07F         	movff	_motorDrive_setSpeeds$2400,motorDrive_setSpeeds@lSpeed
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;motorDrive.c: 74: rSpeed = ((rSpeed < 100) ? rSpeed : 100);
  5971  010DB2  0100               	movlb	0	; () banked
  5972  010DB4  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  5973  010DB6  0A80               	xorlw	128
  5974  010DB8  0F1C               	addlw	-228
  5975  010DBA  A0D8               	btfss	status,0,c
  5976  010DBC  D006               	goto	l6619
  5977                           
  5978                           ; BSR set to: 0
  5979  010DBE  0E00               	movlw	0
  5980  010DC0  0100               	movlb	0	; () banked
  5981  010DC2  6F74               	movwf	(_motorDrive_setSpeeds$2401+1)& (0+255),b
  5982  010DC4  0E64               	movlw	100
  5983  010DC6  6F73               	movwf	_motorDrive_setSpeeds$2401& (0+255),b
  5984  010DC8  D008               	goto	l6621
  5985  010DCA                     l6619:
  5986                           
  5987                           ; BSR set to: 0
  5988  010DCA  0100               	movlb	0	; () banked
  5989  010DCC  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  5990  010DCE  0100               	movlb	0	; () banked
  5991  010DD0  6F73               	movwf	_motorDrive_setSpeeds$2401& (0+255),b
  5992  010DD2  6B74               	clrf	(_motorDrive_setSpeeds$2401+1)& (0+255),b
  5993  010DD4  BF73               	btfsc	_motorDrive_setSpeeds$2401& (0+255),7,b
  5994  010DD6  0774               	decf	(_motorDrive_setSpeeds$2401+1)& (0+255),f,b
  5995  010DD8  D000               	goto	l6621
  5996  010DDA                     l6621:
  5997                           
  5998                           ; BSR set to: 0
  5999  010DDA  C073  F068         	movff	_motorDrive_setSpeeds$2401,motorDrive_setSpeeds@rSpeed
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;motorDrive.c: 76: lSpeed = ((lSpeed > -100) ? lSpeed : -100);
  6003  010DDE  0100               	movlb	0	; () banked
  6004  010DE0  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6005  010DE2  0A80               	xorlw	128
  6006  010DE4  0FE3               	addlw	227
  6007  010DE6  B0D8               	btfsc	status,0,c
  6008  010DE8  D006               	goto	l6627
  6009                           
  6010                           ; BSR set to: 0
  6011  010DEA  0EFF               	movlw	255
  6012  010DEC  0100               	movlb	0	; () banked
  6013  010DEE  6F76               	movwf	(_motorDrive_setSpeeds$2402+1)& (0+255),b
  6014  010DF0  0E9C               	movlw	156
  6015  010DF2  6F75               	movwf	_motorDrive_setSpeeds$2402& (0+255),b
  6016  010DF4  D008               	goto	l6629
  6017  010DF6                     l6627:
  6018                           
  6019                           ; BSR set to: 0
  6020  010DF6  0100               	movlb	0	; () banked
  6021  010DF8  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6022  010DFA  0100               	movlb	0	; () banked
  6023  010DFC  6F75               	movwf	_motorDrive_setSpeeds$2402& (0+255),b
  6024  010DFE  6B76               	clrf	(_motorDrive_setSpeeds$2402+1)& (0+255),b
  6025  010E00  BF75               	btfsc	_motorDrive_setSpeeds$2402& (0+255),7,b
  6026  010E02  0776               	decf	(_motorDrive_setSpeeds$2402+1)& (0+255),f,b
  6027  010E04  D000               	goto	l6629
  6028  010E06                     l6629:
  6029                           
  6030                           ; BSR set to: 0
  6031  010E06  C075  F07F         	movff	_motorDrive_setSpeeds$2402,motorDrive_setSpeeds@lSpeed
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;motorDrive.c: 77: rSpeed = ((rSpeed > -100) ? rSpeed : -100);
  6035  010E0A  0100               	movlb	0	; () banked
  6036  010E0C  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6037  010E0E  0A80               	xorlw	128
  6038  010E10  0FE3               	addlw	227
  6039  010E12  B0D8               	btfsc	status,0,c
  6040  010E14  D006               	goto	l6635
  6041                           
  6042                           ; BSR set to: 0
  6043  010E16  0EFF               	movlw	255
  6044  010E18  0100               	movlb	0	; () banked
  6045  010E1A  6F78               	movwf	(_motorDrive_setSpeeds$2403+1)& (0+255),b
  6046  010E1C  0E9C               	movlw	156
  6047  010E1E  6F77               	movwf	_motorDrive_setSpeeds$2403& (0+255),b
  6048  010E20  D008               	goto	l6637
  6049  010E22                     l6635:
  6050                           
  6051                           ; BSR set to: 0
  6052  010E22  0100               	movlb	0	; () banked
  6053  010E24  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6054  010E26  0100               	movlb	0	; () banked
  6055  010E28  6F77               	movwf	_motorDrive_setSpeeds$2403& (0+255),b
  6056  010E2A  6B78               	clrf	(_motorDrive_setSpeeds$2403+1)& (0+255),b
  6057  010E2C  BF77               	btfsc	_motorDrive_setSpeeds$2403& (0+255),7,b
  6058  010E2E  0778               	decf	(_motorDrive_setSpeeds$2403+1)& (0+255),f,b
  6059  010E30  D000               	goto	l6637
  6060  010E32                     l6637:
  6061                           
  6062                           ; BSR set to: 0
  6063  010E32  C077  F068         	movff	_motorDrive_setSpeeds$2403,motorDrive_setSpeeds@rSpeed
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;motorDrive.c: 79: lSpeed = ((lSpeed >> 7 ) & 0x1) ? ((lSpeed < 0) ? (lSpeed*-1) : lSpee
      +                          d) : 100-lSpeed;
  6067  010E36  C07F  F069         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  6068  010E3A  0E07               	movlw	7
  6069  010E3C  0100               	movlb	0	; () banked
  6070  010E3E  6F6A               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6071  010E40                     u4635:
  6072  010E40  0100               	movlb	0	; () banked
  6073  010E42  3569               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6074  010E44  3369               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6075  010E46  0100               	movlb	0	; () banked
  6076  010E48  2F6A               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6077  010E4A  D7FA               	goto	u4635
  6078  010E4C  0100               	movlb	0	; () banked
  6079  010E4E  5169               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  6080  010E50  0100               	movlb	0	; () banked
  6081  010E52  6F6B               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  6082  010E54  6B6C               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  6083  010E56  BF6B               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  6084  010E58  076C               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  6085  010E5A  0100               	movlb	0	; () banked
  6086  010E5C  B16B               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  6087  010E5E  D016               	goto	l6643
  6088                           
  6089                           ; BSR set to: 0
  6090  010E60  C07F  F069         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  6091  010E64  0100               	movlb	0	; () banked
  6092  010E66  6B6A               	clrf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6093  010E68  BF69               	btfsc	??_motorDrive_setSpeeds& (0+255),7,b
  6094  010E6A  076A               	decf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6095  010E6C  0100               	movlb	0	; () banked
  6096  010E6E  1F69               	comf	??_motorDrive_setSpeeds& (0+255),f,b
  6097  010E70  1F6A               	comf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6098  010E72  4B69               	infsnz	??_motorDrive_setSpeeds& (0+255),f,b
  6099  010E74  2B6A               	incf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6100  010E76  0E64               	movlw	100
  6101  010E78  0100               	movlb	0	; () banked
  6102  010E7A  2569               	addwf	??_motorDrive_setSpeeds& (0+255),w,b
  6103  010E7C  0100               	movlb	0	; () banked
  6104  010E7E  6F79               	movwf	_motorDrive_setSpeeds$2404& (0+255),b
  6105  010E80  0E00               	movlw	0
  6106  010E82  0100               	movlb	0	; () banked
  6107  010E84  216A               	addwfc	(??_motorDrive_setSpeeds+1)& (0+255),w,b
  6108  010E86  0100               	movlb	0	; () banked
  6109  010E88  6F7A               	movwf	(_motorDrive_setSpeeds$2404+1)& (0+255),b
  6110  010E8A  D025               	goto	l6651
  6111  010E8C                     l6643:
  6112                           
  6113                           ; BSR set to: 0
  6114  010E8C  0100               	movlb	0	; () banked
  6115  010E8E  BF7F               	btfsc	motorDrive_setSpeeds@lSpeed& (0+255),7,b
  6116  010E90  D008               	goto	l6647
  6117                           
  6118                           ; BSR set to: 0
  6119  010E92  0100               	movlb	0	; () banked
  6120  010E94  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6121  010E96  0100               	movlb	0	; () banked
  6122  010E98  6F7B               	movwf	_motorDrive_setSpeeds$2405& (0+255),b
  6123  010E9A  6B7C               	clrf	(_motorDrive_setSpeeds$2405+1)& (0+255),b
  6124  010E9C  BF7B               	btfsc	_motorDrive_setSpeeds$2405& (0+255),7,b
  6125  010E9E  077C               	decf	(_motorDrive_setSpeeds$2405+1)& (0+255),f,b
  6126  010EA0  D015               	goto	l6649
  6127  010EA2                     l6647:
  6128                           
  6129                           ; BSR set to: 0
  6130  010EA2  0100               	movlb	0	; () banked
  6131  010EA4  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6132  010EA6  6E20               	movwf	___wmul@multiplier,c
  6133  010EA8  6A21               	clrf	___wmul@multiplier+1,c
  6134  010EAA  BE20               	btfsc	___wmul@multiplier,7,c
  6135  010EAC  0621               	decf	___wmul@multiplier+1,f,c
  6136  010EAE  0E00               	movlw	0
  6137  010EB0  6E23               	movwf	___wmul@multiplicand+1,c
  6138  010EB2  0E01               	movlw	1
  6139  010EB4  6E22               	movwf	___wmul@multiplicand,c
  6140  010EB6  EC9D  F091         	call	___wmul	;wreg free
  6141  010EBA  1E20               	comf	?___wmul,f,c
  6142  010EBC  1E21               	comf	?___wmul+1,f,c
  6143  010EBE  4A20               	infsnz	?___wmul,f,c
  6144  010EC0  2A21               	incf	?___wmul+1,f,c
  6145  010EC2  C020  F07B         	movff	?___wmul,_motorDrive_setSpeeds$2405
  6146  010EC6  C021  F07C         	movff	?___wmul+1,_motorDrive_setSpeeds$2405+1
  6147  010ECA  D000               	goto	l6649
  6148  010ECC                     l6649:
  6149  010ECC  C07B  F079         	movff	_motorDrive_setSpeeds$2405,_motorDrive_setSpeeds$2404
  6150  010ED0  C07C  F07A         	movff	_motorDrive_setSpeeds$2405+1,_motorDrive_setSpeeds$2404+1
  6151  010ED4  D000               	goto	l6651
  6152  010ED6                     l6651:
  6153  010ED6  C079  F07F         	movff	_motorDrive_setSpeeds$2404,motorDrive_setSpeeds@lSpeed
  6154                           
  6155                           ;motorDrive.c: 80: rSpeed = ((rSpeed >> 7 ) & 0x1) ? 100 + rSpeed : rSpeed;
  6156  010EDA  C068  F069         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  6157  010EDE  0E07               	movlw	7
  6158  010EE0  0100               	movlb	0	; () banked
  6159  010EE2  6F6A               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6160  010EE4                     u4665:
  6161  010EE4  0100               	movlb	0	; () banked
  6162  010EE6  3569               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6163  010EE8  3369               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6164  010EEA  0100               	movlb	0	; () banked
  6165  010EEC  2F6A               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6166  010EEE  D7FA               	goto	u4665
  6167  010EF0  0100               	movlb	0	; () banked
  6168  010EF2  5169               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  6169  010EF4  0100               	movlb	0	; () banked
  6170  010EF6  6F6B               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  6171  010EF8  6B6C               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  6172  010EFA  BF6B               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  6173  010EFC  076C               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  6174  010EFE  0100               	movlb	0	; () banked
  6175  010F00  B16B               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  6176  010F02  D008               	goto	l6657
  6177                           
  6178                           ; BSR set to: 0
  6179  010F04  0100               	movlb	0	; () banked
  6180  010F06  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6181  010F08  0100               	movlb	0	; () banked
  6182  010F0A  6F7D               	movwf	_motorDrive_setSpeeds$2406& (0+255),b
  6183  010F0C  6B7E               	clrf	(_motorDrive_setSpeeds$2406+1)& (0+255),b
  6184  010F0E  BF7D               	btfsc	_motorDrive_setSpeeds$2406& (0+255),7,b
  6185  010F10  077E               	decf	(_motorDrive_setSpeeds$2406+1)& (0+255),f,b
  6186  010F12  D00E               	goto	l6659
  6187  010F14                     l6657:
  6188                           
  6189                           ; BSR set to: 0
  6190  010F14  0E64               	movlw	100
  6191  010F16  0100               	movlb	0	; () banked
  6192  010F18  2568               	addwf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6193  010F1A  0100               	movlb	0	; () banked
  6194  010F1C  6F7D               	movwf	_motorDrive_setSpeeds$2406& (0+255),b
  6195  010F1E  6AE8               	clrf	wreg,c
  6196  010F20  B0D8               	btfsc	status,0,c
  6197  010F22  2AE8               	incf	wreg,f,c
  6198  010F24  0100               	movlb	0	; () banked
  6199  010F26  BF68               	btfsc	motorDrive_setSpeeds@rSpeed& (0+255),7,b
  6200  010F28  06E8               	decf	wreg,f,c
  6201  010F2A  0100               	movlb	0	; () banked
  6202  010F2C  6F7E               	movwf	(_motorDrive_setSpeeds$2406+1)& (0+255),b
  6203  010F2E  D000               	goto	l6659
  6204  010F30                     l6659:
  6205                           
  6206                           ; BSR set to: 0
  6207  010F30  C07D  F068         	movff	_motorDrive_setSpeeds$2406,motorDrive_setSpeeds@rSpeed
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;motorDrive.c: 82: int templ = ((0xD0 * lSpeed) / 100);
  6211  010F34  0100               	movlb	0	; () banked
  6212  010F36  517F               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6213  010F38  6E20               	movwf	___wmul@multiplier,c
  6214  010F3A  6A21               	clrf	___wmul@multiplier+1,c
  6215  010F3C  BE20               	btfsc	___wmul@multiplier,7,c
  6216  010F3E  0621               	decf	___wmul@multiplier+1,f,c
  6217  010F40  0E00               	movlw	0
  6218  010F42  6E23               	movwf	___wmul@multiplicand+1,c
  6219  010F44  0ED0               	movlw	208
  6220  010F46  6E22               	movwf	___wmul@multiplicand,c
  6221  010F48  EC9D  F091         	call	___wmul	;wreg free
  6222  010F4C  C020  F060         	movff	?___wmul,___awdiv@dividend
  6223  010F50  C021  F061         	movff	?___wmul+1,___awdiv@dividend+1
  6224  010F54  0E00               	movlw	0
  6225  010F56  0100               	movlb	0	; () banked
  6226  010F58  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6227  010F5A  0E64               	movlw	100
  6228  010F5C  6F62               	movwf	___awdiv@divisor& (0+255),b
  6229  010F5E  EC70  F08C         	call	___awdiv	;wreg free
  6230  010F62  C060  F06D         	movff	?___awdiv,motorDrive_setSpeeds@templ
  6231  010F66  C061  F06E         	movff	?___awdiv+1,motorDrive_setSpeeds@templ+1
  6232                           
  6233                           ;motorDrive.c: 83: int tempr = ((0xD0 * rSpeed) / 100);
  6234  010F6A  0100               	movlb	0	; () banked
  6235  010F6C  5168               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6236  010F6E  6E20               	movwf	___wmul@multiplier,c
  6237  010F70  6A21               	clrf	___wmul@multiplier+1,c
  6238  010F72  BE20               	btfsc	___wmul@multiplier,7,c
  6239  010F74  0621               	decf	___wmul@multiplier+1,f,c
  6240  010F76  0E00               	movlw	0
  6241  010F78  6E23               	movwf	___wmul@multiplicand+1,c
  6242  010F7A  0ED0               	movlw	208
  6243  010F7C  6E22               	movwf	___wmul@multiplicand,c
  6244  010F7E  EC9D  F091         	call	___wmul	;wreg free
  6245  010F82  C020  F060         	movff	?___wmul,___awdiv@dividend
  6246  010F86  C021  F061         	movff	?___wmul+1,___awdiv@dividend+1
  6247  010F8A  0E00               	movlw	0
  6248  010F8C  0100               	movlb	0	; () banked
  6249  010F8E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6250  010F90  0E64               	movlw	100
  6251  010F92  6F62               	movwf	___awdiv@divisor& (0+255),b
  6252  010F94  EC70  F08C         	call	___awdiv	;wreg free
  6253  010F98  C060  F06F         	movff	?___awdiv,motorDrive_setSpeeds@tempr
  6254  010F9C  C061  F070         	movff	?___awdiv+1,motorDrive_setSpeeds@tempr+1
  6255                           
  6256                           ;motorDrive.c: 85: SetDCEPWM1(tempr);
  6257  010FA0  C06F  F020         	movff	motorDrive_setSpeeds@tempr,SetDCEPWM1@dutycycle
  6258  010FA4  C070  F021         	movff	motorDrive_setSpeeds@tempr+1,SetDCEPWM1@dutycycle+1
  6259  010FA8  ECC4  F090         	call	_SetDCEPWM1	;wreg free
  6260                           
  6261                           ;motorDrive.c: 86: SetDCEPWM3(templ);
  6262  010FAC  C06D  F020         	movff	motorDrive_setSpeeds@templ,SetDCEPWM3@dutycycle
  6263  010FB0  C06E  F021         	movff	motorDrive_setSpeeds@templ+1,SetDCEPWM3@dutycycle+1
  6264  010FB4  ECA5  F090         	call	_SetDCEPWM3	;wreg free
  6265  010FB8  0012               	return		;funcret
  6266  010FBA                     __end_of_motorDrive_setSpeeds:
  6267                           	opt stack 0
  6268                           tblptru	equ	0xFF8
  6269                           tblptrh	equ	0xFF7
  6270                           tblptrl	equ	0xFF6
  6271                           tablat	equ	0xFF5
  6272                           prodh	equ	0xFF4
  6273                           prodl	equ	0xFF3
  6274                           intcon	equ	0xFF2
  6275                           intcon2	equ	0xFF1
  6276                           intcon3	equ	0xFF0
  6277                           postinc0	equ	0xFEE
  6278                           wreg	equ	0xFE8
  6279                           postdec1	equ	0xFE5
  6280                           fsr1h	equ	0xFE2
  6281                           fsr1l	equ	0xFE1
  6282                           status	equ	0xFD8
  6283                           
  6284 ;; *************** function ___wmul *****************
  6285 ;; Defined at:
  6286 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  multiplier      2   31[COMRAM] unsigned int 
  6289 ;;  multiplicand    2   33[COMRAM] unsigned int 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  product         2   35[COMRAM] unsigned int 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  2   31[COMRAM] unsigned int 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, prodl, prodh
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;Total ram usage:        6 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    3
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_motorDrive_setSpeeds
  6312 ;;		_fft_execute
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text24
  6317  01233A                     __ptext24:
  6318                           	opt stack 0
  6319  01233A                     ___wmul:
  6320                           	opt stack 24
  6321                           
  6322                           ;incstack = 0
  6323  01233A  5020               	movf	___wmul@multiplier,w,c
  6324  01233C  0222               	mulwf	___wmul@multiplicand,c
  6325  01233E  CFF3 F024          	movff	prodl,___wmul@product
  6326  012342  CFF4 F025          	movff	prodh,___wmul@product+1
  6327  012346  5020               	movf	___wmul@multiplier,w,c
  6328  012348  0223               	mulwf	___wmul@multiplicand+1,c
  6329  01234A  50F3               	movf	prodl,w,c
  6330  01234C  2625               	addwf	___wmul@product+1,f,c
  6331  01234E  5021               	movf	___wmul@multiplier+1,w,c
  6332  012350  0222               	mulwf	___wmul@multiplicand,c
  6333  012352  50F3               	movf	prodl,w,c
  6334  012354  2625               	addwf	___wmul@product+1,f,c
  6335  012356  C024  F020         	movff	___wmul@product,?___wmul
  6336  01235A  C025  F021         	movff	___wmul@product+1,?___wmul+1
  6337  01235E  0012               	return	
  6338  012360  0012               	return		;funcret
  6339  012362                     __end_of___wmul:
  6340                           	opt stack 0
  6341                           tblptru	equ	0xFF8
  6342                           tblptrh	equ	0xFF7
  6343                           tblptrl	equ	0xFF6
  6344                           tablat	equ	0xFF5
  6345                           prodh	equ	0xFF4
  6346                           prodl	equ	0xFF3
  6347                           intcon	equ	0xFF2
  6348                           intcon2	equ	0xFF1
  6349                           intcon3	equ	0xFF0
  6350                           postinc0	equ	0xFEE
  6351                           wreg	equ	0xFE8
  6352                           postdec1	equ	0xFE5
  6353                           fsr1h	equ	0xFE2
  6354                           fsr1l	equ	0xFE1
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function ___awdiv *****************
  6358 ;; Defined at:
  6359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  dividend        2    0[BANK0 ] int 
  6362 ;;  divisor         2    2[BANK0 ] int 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  quotient        2    6[BANK0 ] int 
  6365 ;;  sign            1    5[BANK0 ] unsigned char 
  6366 ;;  counter         1    4[BANK0 ] unsigned char 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  2    0[BANK0 ] int 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6379 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;Total ram usage:        8 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    3
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_RCMode
  6387 ;;		_motorDrive_setSpeeds
  6388 ;;		_compass_cart2polar
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text25
  6393  0118E0                     __ptext25:
  6394                           	opt stack 0
  6395  0118E0                     ___awdiv:
  6396                           	opt stack 24
  6397                           
  6398                           ;incstack = 0
  6399  0118E0  0E00               	movlw	0
  6400  0118E2  0100               	movlb	0	; () banked
  6401  0118E4  6F65               	movwf	___awdiv@sign& (0+255),b
  6402                           
  6403                           ; BSR set to: 0
  6404  0118E6  0100               	movlb	0	; () banked
  6405  0118E8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6406  0118EA  D009               	goto	l6415
  6407                           
  6408                           ; BSR set to: 0
  6409  0118EC  0100               	movlb	0	; () banked
  6410  0118EE  6D62               	negf	___awdiv@divisor& (0+255),b
  6411  0118F0  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6412  0118F2  B0D8               	btfsc	status,0,c
  6413  0118F4  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6414                           
  6415                           ; BSR set to: 0
  6416  0118F6  0E01               	movlw	1
  6417  0118F8  0100               	movlb	0	; () banked
  6418  0118FA  6F65               	movwf	___awdiv@sign& (0+255),b
  6419  0118FC  D000               	goto	l6415
  6420  0118FE                     l6415:
  6421                           
  6422                           ; BSR set to: 0
  6423  0118FE  0100               	movlb	0	; () banked
  6424  011900  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6425  011902  D009               	goto	l6421
  6426                           
  6427                           ; BSR set to: 0
  6428  011904  0100               	movlb	0	; () banked
  6429  011906  6D60               	negf	___awdiv@dividend& (0+255),b
  6430  011908  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6431  01190A  B0D8               	btfsc	status,0,c
  6432  01190C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6433                           
  6434                           ; BSR set to: 0
  6435  01190E  0E01               	movlw	1
  6436  011910  0100               	movlb	0	; () banked
  6437  011912  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  6438  011914  D000               	goto	l6421
  6439  011916                     l6421:
  6440                           
  6441                           ; BSR set to: 0
  6442  011916  0E00               	movlw	0
  6443  011918  0100               	movlb	0	; () banked
  6444  01191A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  6445  01191C  0E00               	movlw	0
  6446  01191E  6F66               	movwf	___awdiv@quotient& (0+255),b
  6447                           
  6448                           ; BSR set to: 0
  6449  011920  0100               	movlb	0	; () banked
  6450  011922  5162               	movf	___awdiv@divisor& (0+255),w,b
  6451  011924  0100               	movlb	0	; () banked
  6452  011926  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6453  011928  B4D8               	btfsc	status,2,c
  6454  01192A  D031               	goto	l6443
  6455                           
  6456                           ; BSR set to: 0
  6457  01192C  0E01               	movlw	1
  6458  01192E  0100               	movlb	0	; () banked
  6459  011930  6F64               	movwf	___awdiv@counter& (0+255),b
  6460  011932  D007               	goto	l6429
  6461  011934                     l6427:
  6462                           
  6463                           ; BSR set to: 0
  6464  011934  0100               	movlb	0	; () banked
  6465  011936  90D8               	bcf	status,0,c
  6466  011938  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  6467  01193A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6468  01193C  0100               	movlb	0	; () banked
  6469  01193E  2B64               	incf	___awdiv@counter& (0+255),f,b
  6470  011940  D000               	goto	l6429
  6471  011942                     l6429:
  6472                           
  6473                           ; BSR set to: 0
  6474  011942  0100               	movlb	0	; () banked
  6475  011944  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6476  011946  D002               	goto	l6431
  6477  011948  D7F5               	goto	l6427
  6478                           
  6479                           ; BSR set to: 0
  6480  01194A  D000               	goto	l6431
  6481  01194C                     l6431:
  6482                           
  6483                           ; BSR set to: 0
  6484  01194C  0100               	movlb	0	; () banked
  6485  01194E  90D8               	bcf	status,0,c
  6486  011950  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  6487  011952  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6488                           
  6489                           ; BSR set to: 0
  6490  011954  0100               	movlb	0	; () banked
  6491  011956  5162               	movf	___awdiv@divisor& (0+255),w,b
  6492  011958  0100               	movlb	0	; () banked
  6493  01195A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  6494  01195C  0100               	movlb	0	; () banked
  6495  01195E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6496  011960  0100               	movlb	0	; () banked
  6497  011962  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6498  011964  A0D8               	btfss	status,0,c
  6499  011966  D00B               	goto	l6439
  6500                           
  6501                           ; BSR set to: 0
  6502  011968  0100               	movlb	0	; () banked
  6503  01196A  5162               	movf	___awdiv@divisor& (0+255),w,b
  6504  01196C  0100               	movlb	0	; () banked
  6505  01196E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  6506  011970  0100               	movlb	0	; () banked
  6507  011972  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6508  011974  0100               	movlb	0	; () banked
  6509  011976  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6510                           
  6511                           ; BSR set to: 0
  6512  011978  0100               	movlb	0	; () banked
  6513  01197A  8166               	bsf	___awdiv@quotient& (0+255),0,b
  6514  01197C  D000               	goto	l6439
  6515  01197E                     l6439:
  6516                           
  6517                           ; BSR set to: 0
  6518  01197E  0100               	movlb	0	; () banked
  6519  011980  90D8               	bcf	status,0,c
  6520  011982  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6521  011984  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524  011986  0100               	movlb	0	; () banked
  6525  011988  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  6526  01198A  D7E0               	goto	l6431
  6527                           
  6528                           ; BSR set to: 0
  6529  01198C  D000               	goto	l6443
  6530  01198E                     l6443:
  6531                           
  6532                           ; BSR set to: 0
  6533  01198E  0100               	movlb	0	; () banked
  6534  011990  5165               	movf	___awdiv@sign& (0+255),w,b
  6535  011992  0100               	movlb	0	; () banked
  6536  011994  B4D8               	btfsc	status,2,c
  6537  011996  D006               	goto	l6447
  6538                           
  6539                           ; BSR set to: 0
  6540  011998  0100               	movlb	0	; () banked
  6541  01199A  6D66               	negf	___awdiv@quotient& (0+255),b
  6542  01199C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6543  01199E  B0D8               	btfsc	status,0,c
  6544  0119A0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6545  0119A2  D000               	goto	l6447
  6546  0119A4                     l6447:
  6547                           
  6548                           ; BSR set to: 0
  6549  0119A4  C066  F060         	movff	___awdiv@quotient,?___awdiv
  6550  0119A8  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  6551  0119AC  0012               	return	
  6552                           
  6553                           ; BSR set to: 0
  6554                           
  6555                           ; BSR set to: 0
  6556  0119AE  0012               	return		;funcret
  6557  0119B0                     __end_of___awdiv:
  6558                           	opt stack 0
  6559                           tblptru	equ	0xFF8
  6560                           tblptrh	equ	0xFF7
  6561                           tblptrl	equ	0xFF6
  6562                           tablat	equ	0xFF5
  6563                           prodh	equ	0xFF4
  6564                           prodl	equ	0xFF3
  6565                           intcon	equ	0xFF2
  6566                           intcon2	equ	0xFF1
  6567                           intcon3	equ	0xFF0
  6568                           postinc0	equ	0xFEE
  6569                           wreg	equ	0xFE8
  6570                           postdec1	equ	0xFE5
  6571                           fsr1h	equ	0xFE2
  6572                           fsr1l	equ	0xFE1
  6573                           status	equ	0xFD8
  6574                           
  6575 ;; *************** function _SetDCEPWM3 *****************
  6576 ;; Defined at:
  6577 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setdc.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  dutycycle       2   31[COMRAM] unsigned int 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  DCycle          2   35[COMRAM] struct PWMDC
  6582 ;; Return value:  Size  Location     Type
  6583 ;;		None               void
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6595 ;;Total ram usage:        6 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    3
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_motorDrive_init
  6602 ;;		_motorDrive_setSpeeds
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text26
  6607  01214A                     __ptext26:
  6608                           	opt stack 0
  6609  01214A                     _SetDCEPWM3:
  6610                           	opt stack 24
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;incstack = 0
  6614  01214A  C020  F022         	movff	SetDCEPWM3@dutycycle,??_SetDCEPWM3
  6615  01214E  C021  F023         	movff	SetDCEPWM3@dutycycle+1,??_SetDCEPWM3+1
  6616  012152  0E06               	movlw	6
  6617  012154                     u4265:
  6618  012154  90D8               	bcf	status,0,c
  6619  012156  3622               	rlcf	??_SetDCEPWM3,f,c
  6620  012158  3623               	rlcf	??_SetDCEPWM3+1,f,c
  6621  01215A  2EE8               	decfsz	wreg,f,c
  6622  01215C  D7FB               	goto	u4265
  6623  01215E  C022  F024         	movff	??_SetDCEPWM3,SetDCEPWM3@DCycle
  6624  012162  C023  F025         	movff	??_SetDCEPWM3+1,SetDCEPWM3@DCycle+1
  6625  012166  C025  FF4A         	movff	SetDCEPWM3@DCycle+1,3914	;volatile
  6626  01216A  C024  F022         	movff	SetDCEPWM3@DCycle,??_SetDCEPWM3
  6627  01216E  90D8               	bcf	status,0,c
  6628  012170  3222               	rrcf	??_SetDCEPWM3,f,c
  6629  012172  90D8               	bcf	status,0,c
  6630  012174  3222               	rrcf	??_SetDCEPWM3,f,c
  6631  012176  0E30               	movlw	48
  6632  012178  1622               	andwf	??_SetDCEPWM3,f,c
  6633  01217A  010F               	movlb	15	; () banked
  6634  01217C  5149               	movf	73,w,b	;volatile
  6635  01217E  0BCF               	andlw	207
  6636  012180  1022               	iorwf	??_SetDCEPWM3,w,c
  6637  012182  010F               	movlb	15	; () banked
  6638  012184  6F49               	movwf	73,b	;volatile
  6639                           
  6640                           ; BSR set to: 15
  6641  012186  0012               	return		;funcret
  6642  012188                     __end_of_SetDCEPWM3:
  6643                           	opt stack 0
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           intcon2	equ	0xFF1
  6652                           intcon3	equ	0xFF0
  6653                           postinc0	equ	0xFEE
  6654                           wreg	equ	0xFE8
  6655                           postdec1	equ	0xFE5
  6656                           fsr1h	equ	0xFE2
  6657                           fsr1l	equ	0xFE1
  6658                           status	equ	0xFD8
  6659                           
  6660 ;; *************** function _SetDCEPWM1 *****************
  6661 ;; Defined at:
  6662 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setdc.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  dutycycle       2   31[COMRAM] unsigned int 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  DCycle          2   35[COMRAM] struct PWMDC
  6667 ;; Return value:  Size  Location     Type
  6668 ;;		None               void
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;Total ram usage:        6 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    3
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_motorDrive_init
  6687 ;;		_motorDrive_setSpeeds
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text27
  6692  012188                     __ptext27:
  6693                           	opt stack 0
  6694  012188                     _SetDCEPWM1:
  6695                           	opt stack 24
  6696                           
  6697                           ; BSR set to: 15
  6698                           ;incstack = 0
  6699  012188  C020  F022         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6700  01218C  C021  F023         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6701  012190  0E06               	movlw	6
  6702  012192                     u4255:
  6703  012192  90D8               	bcf	status,0,c
  6704  012194  3622               	rlcf	??_SetDCEPWM1,f,c
  6705  012196  3623               	rlcf	??_SetDCEPWM1+1,f,c
  6706  012198  2EE8               	decfsz	wreg,f,c
  6707  01219A  D7FB               	goto	u4255
  6708  01219C  C022  F024         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6709  0121A0  C023  F025         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6710  0121A4  C025  FFBA         	movff	SetDCEPWM1@DCycle+1,4026	;volatile
  6711  0121A8  C024  F022         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6712  0121AC  90D8               	bcf	status,0,c
  6713  0121AE  3222               	rrcf	??_SetDCEPWM1,f,c
  6714  0121B0  90D8               	bcf	status,0,c
  6715  0121B2  3222               	rrcf	??_SetDCEPWM1,f,c
  6716  0121B4  0E30               	movlw	48
  6717  0121B6  1622               	andwf	??_SetDCEPWM1,f,c
  6718  0121B8  50B9               	movf	4025,w,c	;volatile
  6719  0121BA  0BCF               	andlw	207
  6720  0121BC  1022               	iorwf	??_SetDCEPWM1,w,c
  6721  0121BE  6EB9               	movwf	4025,c	;volatile
  6722  0121C0  0012               	return		;funcret
  6723  0121C2                     __end_of_SetDCEPWM1:
  6724                           	opt stack 0
  6725                           tblptru	equ	0xFF8
  6726                           tblptrh	equ	0xFF7
  6727                           tblptrl	equ	0xFF6
  6728                           tablat	equ	0xFF5
  6729                           prodh	equ	0xFF4
  6730                           prodl	equ	0xFF3
  6731                           intcon	equ	0xFF2
  6732                           intcon2	equ	0xFF1
  6733                           intcon3	equ	0xFF0
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           postdec1	equ	0xFE5
  6737                           fsr1h	equ	0xFE2
  6738                           fsr1l	equ	0xFE1
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _PS2_readType *****************
  6742 ;; Defined at:
  6743 ;;		line 172 in file "PS2.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      unsigned char 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    3
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_RCMode
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text28
  6772  0121C2                     __ptext28:
  6773                           	opt stack 0
  6774  0121C2                     _PS2_readType:
  6775                           	opt stack 26
  6776                           
  6777                           ;PS2.c: 174: if(controller_type == 0x03)
  6778                           
  6779                           ;incstack = 0
  6780  0121C2  0E03               	movlw	3
  6781  0121C4  0100               	movlb	0	; () banked
  6782  0121C6  19D5               	xorwf	_controller_type& (0+255),w,b	;volatile
  6783  0121C8  A4D8               	btfss	status,2,c
  6784  0121CA  D003               	goto	l7369
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;PS2.c: 175: return 1;
  6788  0121CC  0E01               	movlw	1
  6789                           
  6790                           ; BSR set to: 0
  6791  0121CE  0012               	return	
  6792                           
  6793                           ; BSR set to: 0
  6794  0121D0  D00F               	goto	l7383
  6795  0121D2                     l7369:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;PS2.c: 176: else if(controller_type == 0x01)
  6799  0121D2  0100               	movlb	0	; () banked
  6800  0121D4  05D5               	decf	_controller_type& (0+255),w,b	;volatile
  6801  0121D6  A4D8               	btfss	status,2,c
  6802  0121D8  D003               	goto	l7377
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;PS2.c: 177: return 2;
  6806  0121DA  0E02               	movlw	2
  6807                           
  6808                           ; BSR set to: 0
  6809  0121DC  0012               	return	
  6810                           
  6811                           ; BSR set to: 0
  6812  0121DE  D008               	goto	l7383
  6813  0121E0                     l7377:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;PS2.c: 178: else if(controller_type == 0x0C)
  6817  0121E0  0E0C               	movlw	12
  6818  0121E2  0100               	movlb	0	; () banked
  6819  0121E4  19D5               	xorwf	_controller_type& (0+255),w,b	;volatile
  6820  0121E6  A4D8               	btfss	status,2,c
  6821  0121E8  D003               	goto	l7383
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;PS2.c: 179: return 3;
  6825  0121EA  0E03               	movlw	3
  6826                           
  6827                           ; BSR set to: 0
  6828  0121EC  0012               	return	
  6829                           
  6830                           ; BSR set to: 0
  6831                           
  6832                           ; BSR set to: 0
  6833  0121EE  D000               	goto	l7383
  6834  0121F0                     l7383:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;PS2.c: 181: return controller_type;
  6838  0121F0  0100               	movlb	0	; () banked
  6839  0121F2  51D5               	movf	_controller_type& (0+255),w,b	;volatile
  6840  0121F4  0012               	return	
  6841                           
  6842                           ; BSR set to: 0
  6843                           
  6844                           ; BSR set to: 0
  6845  0121F6  0012               	return		;funcret
  6846  0121F8                     __end_of_PS2_readType:
  6847                           	opt stack 0
  6848                           tblptru	equ	0xFF8
  6849                           tblptrh	equ	0xFF7
  6850                           tblptrl	equ	0xFF6
  6851                           tablat	equ	0xFF5
  6852                           prodh	equ	0xFF4
  6853                           prodl	equ	0xFF3
  6854                           intcon	equ	0xFF2
  6855                           intcon2	equ	0xFF1
  6856                           intcon3	equ	0xFF0
  6857                           postinc0	equ	0xFEE
  6858                           wreg	equ	0xFE8
  6859                           postdec1	equ	0xFE5
  6860                           fsr1h	equ	0xFE2
  6861                           fsr1l	equ	0xFE1
  6862                           status	equ	0xFD8
  6863                           
  6864 ;; *************** function _PS2_init *****************
  6865 ;; Defined at:
  6866 ;;		line 14 in file "PS2.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  i               2   69[BANK0 ] int 
  6871 ;;  y               2   67[BANK0 ] int 
  6872 ;;  temp            9   58[BANK0 ] unsigned char [9]
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      unsigned char 
  6875 ;; Registers used:
  6876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;Total ram usage:       13 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    8
  6889 ;; This function calls:
  6890 ;;		_PS2_readGamepad
  6891 ;;		_PS2_sendCommandString
  6892 ;;		_PS2_shiftInOut
  6893 ;;		_delay_us
  6894 ;; This function is called by:
  6895 ;;		_RCMode
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text29
  6900  0113A8                     __ptext29:
  6901                           	opt stack 0
  6902  0113A8                     _PS2_init:
  6903                           	opt stack 21
  6904                           
  6905                           ;PS2.c: 16: char temp[sizeof(type_read)];
  6906                           ;PS2.c: 18: TRISFbits.TRISF2 = 0;
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;incstack = 0
  6910  0113A8  9497               	bcf	3991,2,c	;volatile
  6911                           
  6912                           ;PS2.c: 19: TRISFbits.TRISF3 = 1;
  6913  0113AA  8697               	bsf	3991,3,c	;volatile
  6914                           
  6915                           ;PS2.c: 20: TRISFbits.TRISF5 = 0;
  6916  0113AC  9A97               	bcf	3991,5,c	;volatile
  6917                           
  6918                           ;PS2.c: 21: TRISFbits.TRISF6 = 0;
  6919  0113AE  9C97               	bcf	3991,6,c	;volatile
  6920                           
  6921                           ;PS2.c: 24: PORTFbits.RF2 = 1;
  6922  0113B0  8485               	bsf	3973,2,c	;volatile
  6923                           
  6924                           ;PS2.c: 25: PORTFbits.RF5 = 1;
  6925  0113B2  8A85               	bsf	3973,5,c	;volatile
  6926                           
  6927                           ;PS2.c: 27: PS2_readGamepad();
  6928  0113B4  ECDD  F087         	call	_PS2_readGamepad	;wreg free
  6929                           
  6930                           ;PS2.c: 28: PS2_readGamepad();
  6931  0113B8  ECDD  F087         	call	_PS2_readGamepad	;wreg free
  6932                           
  6933                           ;PS2.c: 30: if(PS2data[1] != 0x41 && PS2data[1] != 0x73 && PS2data[1] != 0x79)
  6934  0113BC  0E41               	movlw	65
  6935  0113BE  0100               	movlb	0	; () banked
  6936  0113C0  19AD               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  6937  0113C2  B4D8               	btfsc	status,2,c
  6938  0113C4  D00C               	goto	l7309
  6939                           
  6940                           ; BSR set to: 0
  6941  0113C6  0E73               	movlw	115
  6942  0113C8  0100               	movlb	0	; () banked
  6943  0113CA  19AD               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  6944  0113CC  B4D8               	btfsc	status,2,c
  6945  0113CE  D007               	goto	l7309
  6946                           
  6947                           ; BSR set to: 0
  6948  0113D0  0E79               	movlw	121
  6949  0113D2  0100               	movlb	0	; () banked
  6950  0113D4  19AD               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  6951  0113D6  B4D8               	btfsc	status,2,c
  6952  0113D8  D002               	goto	l7309
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;PS2.c: 31: {
  6956                           ;PS2.c: 32: return 1;
  6957  0113DA  0E01               	movlw	1
  6958                           
  6959                           ; BSR set to: 0
  6960  0113DC  0012               	return	
  6961  0113DE                     l7309:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;PS2.c: 33: }
  6965                           ;PS2.c: 36: read_delay = 1;
  6966  0113DE  0E01               	movlw	1
  6967  0113E0  0100               	movlb	0	; () banked
  6968  0113E2  6FD6               	movwf	_read_delay& (0+255),b	;volatile
  6969                           
  6970                           ;PS2.c: 38: for(int y = 0; y <= 10; y++)
  6971  0113E4  0E00               	movlw	0
  6972  0113E6  0100               	movlb	0	; () banked
  6973  0113E8  6FA4               	movwf	(PS2_init@y+1)& (0+255),b
  6974  0113EA  0E00               	movlw	0
  6975  0113EC  6FA3               	movwf	PS2_init@y& (0+255),b
  6976                           
  6977                           ; BSR set to: 0
  6978  0113EE  0100               	movlb	0	; () banked
  6979  0113F0  BFA4               	btfsc	(PS2_init@y+1)& (0+255),7,b
  6980  0113F2  D00A               	goto	l7315
  6981  0113F4  0100               	movlb	0	; () banked
  6982  0113F6  51A4               	movf	(PS2_init@y+1)& (0+255),w,b
  6983  0113F8  E106               	bnz	u4940
  6984  0113FA  0E0B               	movlw	11
  6985  0113FC  0100               	movlb	0	; () banked
  6986  0113FE  5DA3               	subwf	PS2_init@y& (0+255),w,b
  6987  011400  B0D8               	btfsc	status,0,c
  6988  011402  D08C               	goto	l7357
  6989  011404  D001               	goto	l7315
  6990  011406                     u4940:
  6991                           
  6992                           ; BSR set to: 0
  6993  011406  D08A               	goto	l7357
  6994  011408                     l7315:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;PS2.c: 39: {
  6998                           ;PS2.c: 40: PS2_sendCommandString(enter_config, sizeof(enter_config));
  6999  011408  0EFB               	movlw	low _enter_config
  7000  01140A  0100               	movlb	0	; () banked
  7001  01140C  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7002  01140E  0E00               	movlw	high _enter_config
  7003  011410  0100               	movlb	0	; () banked
  7004  011412  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7005  011414  0E05               	movlw	5
  7006  011416  0100               	movlb	0	; () banked
  7007  011418  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7008  01141A  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7009                           
  7010                           ;PS2.c: 43: delay_us(4);
  7011  01141E  0E04               	movlw	4
  7012  011420  6E20               	movwf	delay_us@x,c
  7013  011422  0E00               	movlw	0
  7014  011424  6E21               	movwf	delay_us@x+1,c
  7015  011426  0E00               	movlw	0
  7016  011428  6E22               	movwf	delay_us@x+2,c
  7017  01142A  0E00               	movlw	0
  7018  01142C  6E23               	movwf	delay_us@x+3,c
  7019  01142E  EC2F  F091         	call	_delay_us	;wreg free
  7020                           
  7021                           ;PS2.c: 45: PORTFbits.RF2 = 1;
  7022  011432  8485               	bsf	3973,2,c	;volatile
  7023                           
  7024                           ;PS2.c: 46: PORTFbits.RF5 = 1;
  7025  011434  8A85               	bsf	3973,5,c	;volatile
  7026                           
  7027                           ;PS2.c: 47: PORTFbits.RF6 = 0;
  7028  011436  9C85               	bcf	3973,6,c	;volatile
  7029                           
  7030                           ;PS2.c: 49: delay_us(4);
  7031  011438  0E04               	movlw	4
  7032  01143A  6E20               	movwf	delay_us@x,c
  7033  01143C  0E00               	movlw	0
  7034  01143E  6E21               	movwf	delay_us@x+1,c
  7035  011440  0E00               	movlw	0
  7036  011442  6E22               	movwf	delay_us@x+2,c
  7037  011444  0E00               	movlw	0
  7038  011446  6E23               	movwf	delay_us@x+3,c
  7039  011448  EC2F  F091         	call	_delay_us	;wreg free
  7040                           
  7041                           ;PS2.c: 51: for (int i = 0; i<9; i++)
  7042  01144C  0E00               	movlw	0
  7043  01144E  0100               	movlb	0	; () banked
  7044  011450  6FA6               	movwf	(PS2_init@i+1)& (0+255),b
  7045  011452  0E00               	movlw	0
  7046  011454  6FA5               	movwf	PS2_init@i& (0+255),b
  7047                           
  7048                           ; BSR set to: 0
  7049  011456  0100               	movlb	0	; () banked
  7050  011458  BFA6               	btfsc	(PS2_init@i+1)& (0+255),7,b
  7051  01145A  D00A               	goto	l7333
  7052  01145C  0100               	movlb	0	; () banked
  7053  01145E  51A6               	movf	(PS2_init@i+1)& (0+255),w,b
  7054  011460  E125               	bnz	l901
  7055  011462  0E09               	movlw	9
  7056  011464  0100               	movlb	0	; () banked
  7057  011466  5DA5               	subwf	PS2_init@i& (0+255),w,b
  7058  011468  B0D8               	btfsc	status,0,c
  7059  01146A  D020               	goto	l901
  7060  01146C  D001               	goto	l7333
  7061                           
  7062                           ; BSR set to: 0
  7063  01146E  D01E               	goto	l901
  7064  011470                     l7333:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;PS2.c: 52: {
  7068                           ;PS2.c: 53: temp[i] = PS2_shiftInOut(type_read[i]);
  7069  011470  0E9A               	movlw	low PS2_init@temp
  7070  011472  0100               	movlb	0	; () banked
  7071  011474  25A5               	addwf	PS2_init@i& (0+255),w,b
  7072  011476  6ED9               	movwf	fsr2l,c
  7073  011478  0E00               	movlw	high PS2_init@temp
  7074  01147A  0100               	movlb	0	; () banked
  7075  01147C  21A6               	addwfc	(PS2_init@i+1)& (0+255),w,b
  7076  01147E  6EDA               	movwf	fsr2h,c
  7077  011480  0EE0               	movlw	low _type_read
  7078  011482  0100               	movlb	0	; () banked
  7079  011484  25A5               	addwf	PS2_init@i& (0+255),w,b
  7080  011486  6EE1               	movwf	fsr1l,c
  7081  011488  0E00               	movlw	high _type_read
  7082  01148A  0100               	movlb	0	; () banked
  7083  01148C  21A6               	addwfc	(PS2_init@i+1)& (0+255),w,b
  7084  01148E  6EE2               	movwf	fsr1h,c
  7085  011490  50E7               	movf	indf1,w,c
  7086  011492  EC9A  F08D         	call	_PS2_shiftInOut
  7087  011496  6EDF               	movwf	indf2,c
  7088  011498  0100               	movlb	0	; () banked
  7089  01149A  4BA5               	infsnz	PS2_init@i& (0+255),f,b
  7090  01149C  2BA6               	incf	(PS2_init@i+1)& (0+255),f,b
  7091                           
  7092                           ; BSR set to: 0
  7093  01149E  0100               	movlb	0	; () banked
  7094  0114A0  BFA6               	btfsc	(PS2_init@i+1)& (0+255),7,b
  7095  0114A2  D7E6               	goto	l7333
  7096  0114A4  0100               	movlb	0	; () banked
  7097  0114A6  51A6               	movf	(PS2_init@i+1)& (0+255),w,b
  7098  0114A8  E101               	bnz	u4960
  7099  0114AA  D7DB               	goto	L2
  7100  0114AC                     u4960:
  7101  0114AC                     l901:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;PS2.c: 54: }
  7105                           ;PS2.c: 56: PORTFbits.RF6 = 1;
  7106  0114AC  8C85               	bsf	3973,6,c	;volatile
  7107                           
  7108                           ;PS2.c: 58: controller_type = temp[3];
  7109  0114AE  C09D  F0D5         	movff	PS2_init@temp+3,_controller_type	;volatile
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;PS2.c: 60: PS2_sendCommandString(set_mode, sizeof(set_mode));
  7113  0114B2  0EF2               	movlw	low _set_mode
  7114  0114B4  0100               	movlb	0	; () banked
  7115  0114B6  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7116  0114B8  0E00               	movlw	high _set_mode
  7117  0114BA  0100               	movlb	0	; () banked
  7118  0114BC  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7119  0114BE  0E09               	movlw	9
  7120  0114C0  0100               	movlb	0	; () banked
  7121  0114C2  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7122  0114C4  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7123                           
  7124                           ;PS2.c: 62: PS2_sendCommandString(exit_config, sizeof(exit_config));
  7125  0114C8  0EE9               	movlw	low _exit_config
  7126  0114CA  0100               	movlb	0	; () banked
  7127  0114CC  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7128  0114CE  0E00               	movlw	high _exit_config
  7129  0114D0  0100               	movlb	0	; () banked
  7130  0114D2  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7131  0114D4  0E09               	movlw	9
  7132  0114D6  0100               	movlb	0	; () banked
  7133  0114D8  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7134  0114DA  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7135                           
  7136                           ;PS2.c: 64: PS2_readGamepad();
  7137  0114DE  ECDD  F087         	call	_PS2_readGamepad	;wreg free
  7138                           
  7139                           ;PS2.c: 66: if(PS2data[1] == 0x73)
  7140  0114E2  0E73               	movlw	115
  7141  0114E4  0100               	movlb	0	; () banked
  7142  0114E6  19AD               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7143  0114E8  B4D8               	btfsc	status,2,c
  7144  0114EA  D018               	goto	l7357
  7145  0114EC  D001               	goto	l7347
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;PS2.c: 67: break;
  7149  0114EE  D016               	goto	l7357
  7150  0114F0                     l7347:
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;PS2.c: 69: if(y == 10)
  7154  0114F0  0E0A               	movlw	10
  7155  0114F2  0100               	movlb	0	; () banked
  7156  0114F4  19A3               	xorwf	PS2_init@y& (0+255),w,b
  7157  0114F6  0100               	movlb	0	; () banked
  7158  0114F8  11A4               	iorwf	(PS2_init@y+1)& (0+255),w,b
  7159  0114FA  A4D8               	btfss	status,2,c
  7160  0114FC  D002               	goto	l7353
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;PS2.c: 70: {
  7164                           ;PS2.c: 71: return 2;
  7165  0114FE  0E02               	movlw	2
  7166                           
  7167                           ; BSR set to: 0
  7168  011500  0012               	return	
  7169  011502                     l7353:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;PS2.c: 72: }
  7173                           ;PS2.c: 73: read_delay += 1;
  7174  011502  0100               	movlb	0	; () banked
  7175  011504  2BD6               	incf	_read_delay& (0+255),f,b	;volatile
  7176  011506  0100               	movlb	0	; () banked
  7177  011508  4BA3               	infsnz	PS2_init@y& (0+255),f,b
  7178  01150A  2BA4               	incf	(PS2_init@y+1)& (0+255),f,b
  7179                           
  7180                           ; BSR set to: 0
  7181  01150C  0100               	movlb	0	; () banked
  7182  01150E  BFA4               	btfsc	(PS2_init@y+1)& (0+255),7,b
  7183  011510  D77B               	goto	l7315
  7184  011512  0100               	movlb	0	; () banked
  7185  011514  51A4               	movf	(PS2_init@y+1)& (0+255),w,b
  7186  011516  E102               	bnz	l7357
  7187  011518  D770               	goto	L3
  7188  01151A  D000               	goto	l7357
  7189  01151C                     l7357:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;PS2.c: 74: }
  7193                           ;PS2.c: 75: return 0;
  7194  01151C  0E00               	movlw	0
  7195  01151E  0012               	return	
  7196                           
  7197                           ; BSR set to: 0
  7198                           
  7199                           ; BSR set to: 0
  7200  011520  0012               	return		;funcret
  7201  011522                     __end_of_PS2_init:
  7202                           	opt stack 0
  7203                           tblptru	equ	0xFF8
  7204                           tblptrh	equ	0xFF7
  7205                           tblptrl	equ	0xFF6
  7206                           tablat	equ	0xFF5
  7207                           prodh	equ	0xFF4
  7208                           prodl	equ	0xFF3
  7209                           intcon	equ	0xFF2
  7210                           intcon2	equ	0xFF1
  7211                           intcon3	equ	0xFF0
  7212                           postinc0	equ	0xFEE
  7213                           wreg	equ	0xFE8
  7214                           indf1	equ	0xFE7
  7215                           postdec1	equ	0xFE5
  7216                           fsr1h	equ	0xFE2
  7217                           fsr1l	equ	0xFE1
  7218                           indf2	equ	0xFDF
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _PS2_readGamepad *****************
  7224 ;; Defined at:
  7225 ;;		line 78 in file "PS2.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  i               2   56[BANK0 ] int 
  7230 ;;  i               2   54[BANK0 ] int 
  7231 ;;  dword2         12   29[BANK0 ] unsigned char [12]
  7232 ;;  dword           9   41[BANK0 ] unsigned char [9]
  7233 ;;  temp            4   50[BANK0 ] long 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;		None               void
  7236 ;; Registers used:
  7237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;Total ram usage:       34 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    7
  7250 ;; This function calls:
  7251 ;;		_PS2_reconfig
  7252 ;;		_PS2_shiftInOut
  7253 ;;		_delay_ms
  7254 ;;		_delay_us
  7255 ;;		_millis
  7256 ;; This function is called by:
  7257 ;;		_RCMode
  7258 ;;		_PS2_init
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text30
  7263  010FBA                     __ptext30:
  7264                           	opt stack 0
  7265  010FBA                     _PS2_readGamepad:
  7266                           	opt stack 22
  7267                           
  7268                           ;PS2.c: 80: long temp = millis() - last_read;
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;incstack = 0
  7272  010FBA  C0CD  F078         	movff	_last_read,??_PS2_readGamepad	;volatile
  7273  010FBE  C0CE  F079         	movff	_last_read+1,??_PS2_readGamepad+1	;volatile
  7274  010FC2  C0CF  F07A         	movff	_last_read+2,??_PS2_readGamepad+2	;volatile
  7275  010FC6  C0D0  F07B         	movff	_last_read+3,??_PS2_readGamepad+3	;volatile
  7276  010FCA  0100               	movlb	0	; () banked
  7277  010FCC  1F78               	comf	??_PS2_readGamepad& (0+255),f,b
  7278  010FCE  1F79               	comf	(??_PS2_readGamepad+1)& (0+255),f,b
  7279  010FD0  1F7A               	comf	(??_PS2_readGamepad+2)& (0+255),f,b
  7280  010FD2  1F7B               	comf	(??_PS2_readGamepad+3)& (0+255),f,b
  7281  010FD4  2B78               	incf	??_PS2_readGamepad& (0+255),f,b
  7282  010FD6  0E00               	movlw	0
  7283  010FD8  2379               	addwfc	(??_PS2_readGamepad+1)& (0+255),f,b
  7284  010FDA  237A               	addwfc	(??_PS2_readGamepad+2)& (0+255),f,b
  7285  010FDC  237B               	addwfc	(??_PS2_readGamepad+3)& (0+255),f,b
  7286  010FDE  ECF3  F091         	call	_millis	;wreg free
  7287  010FE2  0100               	movlb	0	; () banked
  7288  010FE4  5178               	movf	??_PS2_readGamepad& (0+255),w,b
  7289  010FE6  2420               	addwf	?_millis,w,c
  7290  010FE8  0100               	movlb	0	; () banked
  7291  010FEA  6F92               	movwf	PS2_readGamepad@temp& (0+255),b
  7292  010FEC  0100               	movlb	0	; () banked
  7293  010FEE  5179               	movf	(??_PS2_readGamepad+1)& (0+255),w,b
  7294  010FF0  2021               	addwfc	?_millis+1,w,c
  7295  010FF2  0100               	movlb	0	; () banked
  7296  010FF4  6F93               	movwf	(PS2_readGamepad@temp+1)& (0+255),b
  7297  010FF6  0100               	movlb	0	; () banked
  7298  010FF8  517A               	movf	(??_PS2_readGamepad+2)& (0+255),w,b
  7299  010FFA  2022               	addwfc	?_millis+2,w,c
  7300  010FFC  0100               	movlb	0	; () banked
  7301  010FFE  6F94               	movwf	(PS2_readGamepad@temp+2)& (0+255),b
  7302  011000  0100               	movlb	0	; () banked
  7303  011002  517B               	movf	(??_PS2_readGamepad+3)& (0+255),w,b
  7304  011004  2023               	addwfc	?_millis+3,w,c
  7305  011006  0100               	movlb	0	; () banked
  7306  011008  6F95               	movwf	(PS2_readGamepad@temp+3)& (0+255),b
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;PS2.c: 82: if (temp > 1500)
  7310  01100A  0100               	movlb	0	; () banked
  7311  01100C  BF95               	btfsc	(PS2_readGamepad@temp+3)& (0+255),7,b
  7312  01100E  D010               	goto	l6561
  7313  011010  0100               	movlb	0	; () banked
  7314  011012  5195               	movf	(PS2_readGamepad@temp+3)& (0+255),w,b
  7315  011014  0100               	movlb	0	; () banked
  7316  011016  1194               	iorwf	(PS2_readGamepad@temp+2)& (0+255),w,b
  7317  011018  E108               	bnz	u4480
  7318  01101A  0EDD               	movlw	221
  7319  01101C  0100               	movlb	0	; () banked
  7320  01101E  5D92               	subwf	PS2_readGamepad@temp& (0+255),w,b
  7321  011020  0E05               	movlw	5
  7322  011022  0100               	movlb	0	; () banked
  7323  011024  5993               	subwfb	(PS2_readGamepad@temp+1)& (0+255),w,b
  7324  011026  A0D8               	btfss	status,0,c
  7325  011028  D003               	goto	l6561
  7326  01102A                     u4480:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;PS2.c: 83: {
  7330                           ;PS2.c: 84: PS2_reconfig();
  7331  01102A  EC83  F090         	call	_PS2_reconfig	;wreg free
  7332  01102E  D000               	goto	l6561
  7333  011030                     l6561:
  7334                           
  7335                           ;PS2.c: 85: }
  7336                           ;PS2.c: 87: if(temp < read_delay)
  7337  011030  C0D6  F078         	movff	_read_delay,??_PS2_readGamepad	;volatile
  7338  011034  0100               	movlb	0	; () banked
  7339  011036  6B79               	clrf	(??_PS2_readGamepad+1)& (0+255),b
  7340  011038  6B7A               	clrf	(??_PS2_readGamepad+2)& (0+255),b
  7341  01103A  6B7B               	clrf	(??_PS2_readGamepad+3)& (0+255),b
  7342  01103C  0100               	movlb	0	; () banked
  7343  01103E  5178               	movf	??_PS2_readGamepad& (0+255),w,b
  7344  011040  0100               	movlb	0	; () banked
  7345  011042  5D92               	subwf	PS2_readGamepad@temp& (0+255),w,b
  7346  011044  0100               	movlb	0	; () banked
  7347  011046  5179               	movf	(??_PS2_readGamepad+1)& (0+255),w,b
  7348  011048  0100               	movlb	0	; () banked
  7349  01104A  5993               	subwfb	(PS2_readGamepad@temp+1)& (0+255),w,b
  7350  01104C  0100               	movlb	0	; () banked
  7351  01104E  517A               	movf	(??_PS2_readGamepad+2)& (0+255),w,b
  7352  011050  0100               	movlb	0	; () banked
  7353  011052  5994               	subwfb	(PS2_readGamepad@temp+2)& (0+255),w,b
  7354  011054  0100               	movlb	0	; () banked
  7355  011056  5195               	movf	(PS2_readGamepad@temp+3)& (0+255),w,b
  7356  011058  0A80               	xorlw	128
  7357  01105A  0100               	movlb	0	; () banked
  7358  01105C  6F7C               	movwf	(??_PS2_readGamepad+4)& (0+255),b
  7359  01105E  0100               	movlb	0	; () banked
  7360  011060  517B               	movf	(??_PS2_readGamepad+3)& (0+255),w,b
  7361  011062  0A80               	xorlw	128
  7362  011064  0100               	movlb	0	; () banked
  7363  011066  597C               	subwfb	(??_PS2_readGamepad+4)& (0+255),w,b
  7364  011068  B0D8               	btfsc	status,0,c
  7365  01106A  D02A               	goto	l6565
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;PS2.c: 88: {
  7369                           ;PS2.c: 89: delay_ms(read_delay - temp);
  7370  01106C  C092  F078         	movff	PS2_readGamepad@temp,??_PS2_readGamepad
  7371  011070  C093  F079         	movff	PS2_readGamepad@temp+1,??_PS2_readGamepad+1
  7372  011074  C094  F07A         	movff	PS2_readGamepad@temp+2,??_PS2_readGamepad+2
  7373  011078  C095  F07B         	movff	PS2_readGamepad@temp+3,??_PS2_readGamepad+3
  7374  01107C  0100               	movlb	0	; () banked
  7375  01107E  1F78               	comf	??_PS2_readGamepad& (0+255),f,b
  7376  011080  1F79               	comf	(??_PS2_readGamepad+1)& (0+255),f,b
  7377  011082  1F7A               	comf	(??_PS2_readGamepad+2)& (0+255),f,b
  7378  011084  1F7B               	comf	(??_PS2_readGamepad+3)& (0+255),f,b
  7379  011086  2B78               	incf	??_PS2_readGamepad& (0+255),f,b
  7380  011088  0E00               	movlw	0
  7381  01108A  2379               	addwfc	(??_PS2_readGamepad+1)& (0+255),f,b
  7382  01108C  237A               	addwfc	(??_PS2_readGamepad+2)& (0+255),f,b
  7383  01108E  237B               	addwfc	(??_PS2_readGamepad+3)& (0+255),f,b
  7384  011090  0100               	movlb	0	; () banked
  7385  011092  51D6               	movf	_read_delay& (0+255),w,b	;volatile
  7386  011094  0100               	movlb	0	; () banked
  7387  011096  2578               	addwf	??_PS2_readGamepad& (0+255),w,b
  7388  011098  0100               	movlb	0	; () banked
  7389  01109A  6F60               	movwf	delay_ms@x& (0+255),b
  7390  01109C  0E00               	movlw	0
  7391  01109E  0100               	movlb	0	; () banked
  7392  0110A0  2179               	addwfc	(??_PS2_readGamepad+1)& (0+255),w,b
  7393  0110A2  0100               	movlb	0	; () banked
  7394  0110A4  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  7395  0110A6  0E00               	movlw	0
  7396  0110A8  0100               	movlb	0	; () banked
  7397  0110AA  217A               	addwfc	(??_PS2_readGamepad+2)& (0+255),w,b
  7398  0110AC  0100               	movlb	0	; () banked
  7399  0110AE  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  7400  0110B0  0E00               	movlw	0
  7401  0110B2  0100               	movlb	0	; () banked
  7402  0110B4  217B               	addwfc	(??_PS2_readGamepad+3)& (0+255),w,b
  7403  0110B6  0100               	movlb	0	; () banked
  7404  0110B8  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  7405  0110BA  EC2F  F08E         	call	_delay_ms	;wreg free
  7406  0110BE  D000               	goto	l6565
  7407  0110C0                     l6565:
  7408                           
  7409                           ;PS2.c: 90: }
  7410                           ;PS2.c: 92: last_buttons = buttons;
  7411  0110C0  C0D1  F0D3         	movff	_buttons,_last_buttons	;volatile
  7412  0110C4  C0D2  F0D4         	movff	_buttons+1,_last_buttons+1	;volatile
  7413                           
  7414                           ;PS2.c: 94: PORTFbits.RF2 = 1;
  7415  0110C8  8485               	bsf	3973,2,c	;volatile
  7416                           
  7417                           ;PS2.c: 95: PORTFbits.RF5 = 1;
  7418  0110CA  8A85               	bsf	3973,5,c	;volatile
  7419                           
  7420                           ;PS2.c: 96: PORTFbits.RF6 = 0;
  7421  0110CC  9C85               	bcf	3973,6,c	;volatile
  7422                           
  7423                           ;PS2.c: 98: delay_us(4);
  7424  0110CE  0E04               	movlw	4
  7425  0110D0  6E20               	movwf	delay_us@x,c
  7426  0110D2  0E00               	movlw	0
  7427  0110D4  6E21               	movwf	delay_us@x+1,c
  7428  0110D6  0E00               	movlw	0
  7429  0110D8  6E22               	movwf	delay_us@x+2,c
  7430  0110DA  0E00               	movlw	0
  7431  0110DC  6E23               	movwf	delay_us@x+3,c
  7432  0110DE  EC2F  F091         	call	_delay_us	;wreg free
  7433                           
  7434                           ;PS2.c: 101: char dword[9] = {0x01,0x42,0,0,0x00,0,0,0,0};
  7435  0110E2  EE20  F0D7         	lfsr	2,PS2_readGamepad@F16091
  7436  0110E6  EE10  F089         	lfsr	1,PS2_readGamepad@dword
  7437  0110EA  0E08               	movlw	8
  7438  0110EC                     u4501:
  7439  0110EC  CFDB FFE3          	movff	plusw2,plusw1
  7440  0110F0  06E8               	decf	wreg,f,c
  7441  0110F2  E2FC               	bc	u4501
  7442                           
  7443                           ;PS2.c: 102: char dword2[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
  7444  0110F4  EE20  F0C1         	lfsr	2,PS2_readGamepad@F16093
  7445  0110F8  EE10  F07D         	lfsr	1,PS2_readGamepad@dword2
  7446  0110FC  0E0B               	movlw	11
  7447  0110FE                     u4511:
  7448  0110FE  CFDB FFE3          	movff	plusw2,plusw1
  7449  011102  06E8               	decf	wreg,f,c
  7450  011104  E2FC               	bc	u4511
  7451                           
  7452                           ;PS2.c: 105: for (int i = 0; i<9; i++)
  7453  011106  0E00               	movlw	0
  7454  011108  0100               	movlb	0	; () banked
  7455  01110A  6F97               	movwf	(PS2_readGamepad@i+1)& (0+255),b
  7456  01110C  0E00               	movlw	0
  7457  01110E  6F96               	movwf	PS2_readGamepad@i& (0+255),b
  7458  011110                     l6579:
  7459                           
  7460                           ; BSR set to: 0
  7461  011110  0100               	movlb	0	; () banked
  7462  011112  BF97               	btfsc	(PS2_readGamepad@i+1)& (0+255),7,b
  7463  011114  D00A               	goto	l6583
  7464  011116  0100               	movlb	0	; () banked
  7465  011118  5197               	movf	(PS2_readGamepad@i+1)& (0+255),w,b
  7466  01111A  E120               	bnz	l6589
  7467  01111C  0E09               	movlw	9
  7468  01111E  0100               	movlb	0	; () banked
  7469  011120  5D96               	subwf	PS2_readGamepad@i& (0+255),w,b
  7470  011122  B0D8               	btfsc	status,0,c
  7471  011124  D01B               	goto	l6589
  7472  011126  D001               	goto	l6583
  7473                           
  7474                           ; BSR set to: 0
  7475  011128  D019               	goto	l6589
  7476  01112A                     l6583:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;PS2.c: 106: {
  7480                           ;PS2.c: 107: PS2data[i] = PS2_shiftInOut(dword[i]);
  7481  01112A  0EAC               	movlw	low _PS2data
  7482  01112C  0100               	movlb	0	; () banked
  7483  01112E  2596               	addwf	PS2_readGamepad@i& (0+255),w,b
  7484  011130  6ED9               	movwf	fsr2l,c
  7485  011132  0E00               	movlw	high _PS2data
  7486  011134  0100               	movlb	0	; () banked
  7487  011136  2197               	addwfc	(PS2_readGamepad@i+1)& (0+255),w,b
  7488  011138  6EDA               	movwf	fsr2h,c
  7489  01113A  0E89               	movlw	low PS2_readGamepad@dword
  7490  01113C  0100               	movlb	0	; () banked
  7491  01113E  2596               	addwf	PS2_readGamepad@i& (0+255),w,b
  7492  011140  6EE1               	movwf	fsr1l,c
  7493  011142  0E00               	movlw	high PS2_readGamepad@dword
  7494  011144  0100               	movlb	0	; () banked
  7495  011146  2197               	addwfc	(PS2_readGamepad@i+1)& (0+255),w,b
  7496  011148  6EE2               	movwf	fsr1h,c
  7497  01114A  50E7               	movf	indf1,w,c
  7498  01114C  EC9A  F08D         	call	_PS2_shiftInOut
  7499  011150  6EDF               	movwf	indf2,c
  7500  011152  0100               	movlb	0	; () banked
  7501  011154  4B96               	infsnz	PS2_readGamepad@i& (0+255),f,b
  7502  011156  2B97               	incf	(PS2_readGamepad@i+1)& (0+255),f,b
  7503  011158  D7DB               	goto	l6579
  7504                           
  7505                           ; BSR set to: 0
  7506  01115A  D000               	goto	l6589
  7507  01115C                     l6589:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;PS2.c: 108: }
  7511                           ;PS2.c: 110: if(PS2data[1] == 0x79)
  7512  01115C  0E79               	movlw	121
  7513  01115E  0100               	movlb	0	; () banked
  7514  011160  19AD               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7515  011162  A4D8               	btfss	status,2,c
  7516  011164  D035               	goto	l914
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;PS2.c: 111: {
  7520                           ;PS2.c: 112: for (int i = 0; i<12; i++)
  7521  011166  0E00               	movlw	0
  7522  011168  0100               	movlb	0	; () banked
  7523  01116A  6F99               	movwf	(PS2_readGamepad@i_2532+1)& (0+255),b
  7524  01116C  0E00               	movlw	0
  7525  01116E  6F98               	movwf	PS2_readGamepad@i_2532& (0+255),b
  7526  011170                     l6593:
  7527                           
  7528                           ; BSR set to: 0
  7529  011170  0100               	movlb	0	; () banked
  7530  011172  BF99               	btfsc	(PS2_readGamepad@i_2532+1)& (0+255),7,b
  7531  011174  D00A               	goto	l6597
  7532  011176  0100               	movlb	0	; () banked
  7533  011178  5199               	movf	(PS2_readGamepad@i_2532+1)& (0+255),w,b
  7534  01117A  E12A               	bnz	l914
  7535  01117C  0E0C               	movlw	12
  7536  01117E  0100               	movlb	0	; () banked
  7537  011180  5D98               	subwf	PS2_readGamepad@i_2532& (0+255),w,b
  7538  011182  B0D8               	btfsc	status,0,c
  7539  011184  D025               	goto	l914
  7540  011186  D001               	goto	l6597
  7541                           
  7542                           ; BSR set to: 0
  7543  011188  D023               	goto	l914
  7544  01118A                     l6597:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;PS2.c: 113: {
  7548                           ;PS2.c: 114: PS2data[i+9] = PS2_shiftInOut(dword2[i]);
  7549  01118A  0E09               	movlw	9
  7550  01118C  0100               	movlb	0	; () banked
  7551  01118E  2598               	addwf	PS2_readGamepad@i_2532& (0+255),w,b
  7552  011190  0100               	movlb	0	; () banked
  7553  011192  6F78               	movwf	??_PS2_readGamepad& (0+255),b
  7554  011194  0E00               	movlw	0
  7555  011196  0100               	movlb	0	; () banked
  7556  011198  2199               	addwfc	(PS2_readGamepad@i_2532+1)& (0+255),w,b
  7557  01119A  0100               	movlb	0	; () banked
  7558  01119C  6F79               	movwf	(??_PS2_readGamepad+1)& (0+255),b
  7559  01119E  0EAC               	movlw	low _PS2data
  7560  0111A0  0100               	movlb	0	; () banked
  7561  0111A2  2578               	addwf	??_PS2_readGamepad& (0+255),w,b
  7562  0111A4  6ED9               	movwf	fsr2l,c
  7563  0111A6  0E00               	movlw	high _PS2data
  7564  0111A8  0100               	movlb	0	; () banked
  7565  0111AA  2179               	addwfc	(??_PS2_readGamepad+1)& (0+255),w,b
  7566  0111AC  6EDA               	movwf	fsr2h,c
  7567  0111AE  0E7D               	movlw	low PS2_readGamepad@dword2
  7568  0111B0  0100               	movlb	0	; () banked
  7569  0111B2  2598               	addwf	PS2_readGamepad@i_2532& (0+255),w,b
  7570  0111B4  6EE1               	movwf	fsr1l,c
  7571  0111B6  0E00               	movlw	high PS2_readGamepad@dword2
  7572  0111B8  0100               	movlb	0	; () banked
  7573  0111BA  2199               	addwfc	(PS2_readGamepad@i_2532+1)& (0+255),w,b
  7574  0111BC  6EE2               	movwf	fsr1h,c
  7575  0111BE  50E7               	movf	indf1,w,c
  7576  0111C0  EC9A  F08D         	call	_PS2_shiftInOut
  7577  0111C4  6EDF               	movwf	indf2,c
  7578  0111C6  0100               	movlb	0	; () banked
  7579  0111C8  4B98               	infsnz	PS2_readGamepad@i_2532& (0+255),f,b
  7580  0111CA  2B99               	incf	(PS2_readGamepad@i_2532+1)& (0+255),f,b
  7581  0111CC  D7D1               	goto	l6593
  7582                           
  7583                           ; BSR set to: 0
  7584  0111CE  D000               	goto	l914
  7585  0111D0                     l914:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;PS2.c: 115: }
  7589                           ;PS2.c: 116: }
  7590                           ;PS2.c: 118: PORTFbits.RF6 = 1;
  7591  0111D0  8C85               	bsf	3973,6,c	;volatile
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;PS2.c: 120: buttons = *(unsigned int*)(PS2data+3);
  7595  0111D2  EE20  F0AF         	lfsr	2,_PS2data+3
  7596  0111D6  CFDE F0D1          	movff	postinc2,_buttons	;volatile
  7597  0111DA  CFDD F0D2          	movff	postdec2,_buttons+1	;volatile
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;PS2.c: 121: last_read = millis();
  7601  0111DE  ECF3  F091         	call	_millis	;wreg free
  7602  0111E2  C020  F0CD         	movff	?_millis,_last_read	;volatile
  7603  0111E6  C021  F0CE         	movff	?_millis+1,_last_read+1	;volatile
  7604  0111EA  C022  F0CF         	movff	?_millis+2,_last_read+2	;volatile
  7605  0111EE  C023  F0D0         	movff	?_millis+3,_last_read+3	;volatile
  7606  0111F2  0012               	return		;funcret
  7607  0111F4                     __end_of_PS2_readGamepad:
  7608                           	opt stack 0
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           intcon2	equ	0xFF1
  7617                           intcon3	equ	0xFF0
  7618                           postinc0	equ	0xFEE
  7619                           wreg	equ	0xFE8
  7620                           indf1	equ	0xFE7
  7621                           postdec1	equ	0xFE5
  7622                           plusw1	equ	0xFE3
  7623                           fsr1h	equ	0xFE2
  7624                           fsr1l	equ	0xFE1
  7625                           indf2	equ	0xFDF
  7626                           postinc2	equ	0xFDE
  7627                           postdec2	equ	0xFDD
  7628                           plusw2	equ	0xFDB
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function _PS2_reconfig *****************
  7634 ;; Defined at:
  7635 ;;		line 124 in file "PS2.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;		None               void
  7642 ;; Registers used:
  7643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    6
  7656 ;; This function calls:
  7657 ;;		_PS2_sendCommandString
  7658 ;; This function is called by:
  7659 ;;		_PS2_readGamepad
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text31
  7664  012106                     __ptext31:
  7665                           	opt stack 0
  7666  012106                     _PS2_reconfig:
  7667                           	opt stack 22
  7668                           
  7669                           ;PS2.c: 126: PS2_sendCommandString(enter_config, sizeof(enter_config));
  7670                           
  7671                           ;incstack = 0
  7672  012106  0EFB               	movlw	low _enter_config
  7673  012108  0100               	movlb	0	; () banked
  7674  01210A  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7675  01210C  0E00               	movlw	high _enter_config
  7676  01210E  0100               	movlb	0	; () banked
  7677  012110  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7678  012112  0E05               	movlw	5
  7679  012114  0100               	movlb	0	; () banked
  7680  012116  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7681  012118  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7682                           
  7683                           ;PS2.c: 127: PS2_sendCommandString(set_mode, sizeof(set_mode));
  7684  01211C  0EF2               	movlw	low _set_mode
  7685  01211E  0100               	movlb	0	; () banked
  7686  012120  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7687  012122  0E00               	movlw	high _set_mode
  7688  012124  0100               	movlb	0	; () banked
  7689  012126  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7690  012128  0E09               	movlw	9
  7691  01212A  0100               	movlb	0	; () banked
  7692  01212C  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7693  01212E  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7694                           
  7695                           ;PS2.c: 128: PS2_sendCommandString(exit_config, sizeof(exit_config));
  7696  012132  0EE9               	movlw	low _exit_config
  7697  012134  0100               	movlb	0	; () banked
  7698  012136  6F70               	movwf	PS2_sendCommandString@string& (0+255),b
  7699  012138  0E00               	movlw	high _exit_config
  7700  01213A  0100               	movlb	0	; () banked
  7701  01213C  6F71               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7702  01213E  0E09               	movlw	9
  7703  012140  0100               	movlb	0	; () banked
  7704  012142  6F72               	movwf	PS2_sendCommandString@len& (0+255),b
  7705  012144  EC7D  F08F         	call	_PS2_sendCommandString	;wreg free
  7706  012148  0012               	return		;funcret
  7707  01214A                     __end_of_PS2_reconfig:
  7708                           	opt stack 0
  7709                           tblptru	equ	0xFF8
  7710                           tblptrh	equ	0xFF7
  7711                           tblptrl	equ	0xFF6
  7712                           tablat	equ	0xFF5
  7713                           prodh	equ	0xFF4
  7714                           prodl	equ	0xFF3
  7715                           intcon	equ	0xFF2
  7716                           intcon2	equ	0xFF1
  7717                           intcon3	equ	0xFF0
  7718                           postinc0	equ	0xFEE
  7719                           wreg	equ	0xFE8
  7720                           indf1	equ	0xFE7
  7721                           postdec1	equ	0xFE5
  7722                           plusw1	equ	0xFE3
  7723                           fsr1h	equ	0xFE2
  7724                           fsr1l	equ	0xFE1
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           plusw2	equ	0xFDB
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function _PS2_sendCommandString *****************
  7734 ;; Defined at:
  7735 ;;		line 131 in file "PS2.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  string          2   16[BANK0 ] PTR unsigned char 
  7738 ;;		 -> exit_config(9), set_mode(9), enter_config(5), 
  7739 ;;  len             1   18[BANK0 ] unsigned char 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  y               2   22[BANK0 ] int 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;		None               void
  7744 ;; Registers used:
  7745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7751 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7755 ;;Total ram usage:        8 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    5
  7758 ;; This function calls:
  7759 ;;		_PS2_shiftInOut
  7760 ;;		_delay_ms
  7761 ;; This function is called by:
  7762 ;;		_PS2_init
  7763 ;;		_PS2_reconfig
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text32
  7768  011EFA                     __ptext32:
  7769                           	opt stack 0
  7770  011EFA                     _PS2_sendCommandString:
  7771                           	opt stack 22
  7772                           
  7773                           ;PS2.c: 133: PORTFbits.RF6 = 0;
  7774                           
  7775                           ;incstack = 0
  7776  011EFA  9C85               	bcf	3973,6,c	;volatile
  7777                           
  7778                           ;PS2.c: 134: for (int y=0; y < len; y++)
  7779  011EFC  0E00               	movlw	0
  7780  011EFE  0100               	movlb	0	; () banked
  7781  011F00  6F77               	movwf	(PS2_sendCommandString@y+1)& (0+255),b
  7782  011F02  0E00               	movlw	0
  7783  011F04  6F76               	movwf	PS2_sendCommandString@y& (0+255),b
  7784  011F06  D011               	goto	l6239
  7785  011F08                     l6235:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;PS2.c: 135: {
  7789                           ;PS2.c: 136: PS2_shiftInOut(string[y]);
  7790  011F08  0100               	movlb	0	; () banked
  7791  011F0A  5176               	movf	PS2_sendCommandString@y& (0+255),w,b
  7792  011F0C  0100               	movlb	0	; () banked
  7793  011F0E  2570               	addwf	PS2_sendCommandString@string& (0+255),w,b
  7794  011F10  6ED9               	movwf	fsr2l,c
  7795  011F12  0100               	movlb	0	; () banked
  7796  011F14  5177               	movf	(PS2_sendCommandString@y+1)& (0+255),w,b
  7797  011F16  0100               	movlb	0	; () banked
  7798  011F18  2171               	addwfc	(PS2_sendCommandString@string+1)& (0+255),w,b
  7799  011F1A  6EDA               	movwf	fsr2h,c
  7800  011F1C  50DF               	movf	indf2,w,c
  7801  011F1E  EC9A  F08D         	call	_PS2_shiftInOut
  7802  011F22  0100               	movlb	0	; () banked
  7803  011F24  4B76               	infsnz	PS2_sendCommandString@y& (0+255),f,b
  7804  011F26  2B77               	incf	(PS2_sendCommandString@y+1)& (0+255),f,b
  7805  011F28  D000               	goto	l6239
  7806  011F2A                     l6239:
  7807                           
  7808                           ; BSR set to: 0
  7809  011F2A  0100               	movlb	0	; () banked
  7810  011F2C  5172               	movf	PS2_sendCommandString@len& (0+255),w,b
  7811  011F2E  0100               	movlb	0	; () banked
  7812  011F30  6F73               	movwf	??_PS2_sendCommandString& (0+255),b
  7813  011F32  6B74               	clrf	(??_PS2_sendCommandString+1)& (0+255),b
  7814  011F34  0100               	movlb	0	; () banked
  7815  011F36  5173               	movf	??_PS2_sendCommandString& (0+255),w,b
  7816  011F38  0100               	movlb	0	; () banked
  7817  011F3A  5D76               	subwf	PS2_sendCommandString@y& (0+255),w,b
  7818  011F3C  0100               	movlb	0	; () banked
  7819  011F3E  5177               	movf	(PS2_sendCommandString@y+1)& (0+255),w,b
  7820  011F40  0A80               	xorlw	128
  7821  011F42  0100               	movlb	0	; () banked
  7822  011F44  6F75               	movwf	(??_PS2_sendCommandString+2)& (0+255),b
  7823  011F46  0100               	movlb	0	; () banked
  7824  011F48  5174               	movf	(??_PS2_sendCommandString+1)& (0+255),w,b
  7825  011F4A  0A80               	xorlw	128
  7826  011F4C  0100               	movlb	0	; () banked
  7827  011F4E  5975               	subwfb	(??_PS2_sendCommandString+2)& (0+255),w,b
  7828  011F50  A0D8               	btfss	status,0,c
  7829  011F52  D7DA               	goto	l6235
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;PS2.c: 137: }
  7833                           ;PS2.c: 139: PORTFbits.RF6 = 1;
  7834  011F54  8C85               	bsf	3973,6,c	;volatile
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;PS2.c: 140: delay_ms(read_delay);
  7838  011F56  0100               	movlb	0	; () banked
  7839  011F58  51D6               	movf	_read_delay& (0+255),w,b	;volatile
  7840  011F5A  0100               	movlb	0	; () banked
  7841  011F5C  6F60               	movwf	delay_ms@x& (0+255),b
  7842  011F5E  6B61               	clrf	(delay_ms@x+1)& (0+255),b
  7843  011F60  6B62               	clrf	(delay_ms@x+2)& (0+255),b
  7844  011F62  6B63               	clrf	(delay_ms@x+3)& (0+255),b
  7845  011F64  EC2F  F08E         	call	_delay_ms	;wreg free
  7846  011F68  0012               	return		;funcret
  7847  011F6A                     __end_of_PS2_sendCommandString:
  7848                           	opt stack 0
  7849                           tblptru	equ	0xFF8
  7850                           tblptrh	equ	0xFF7
  7851                           tblptrl	equ	0xFF6
  7852                           tablat	equ	0xFF5
  7853                           prodh	equ	0xFF4
  7854                           prodl	equ	0xFF3
  7855                           intcon	equ	0xFF2
  7856                           intcon2	equ	0xFF1
  7857                           intcon3	equ	0xFF0
  7858                           postinc0	equ	0xFEE
  7859                           wreg	equ	0xFE8
  7860                           indf1	equ	0xFE7
  7861                           postdec1	equ	0xFE5
  7862                           plusw1	equ	0xFE3
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           indf2	equ	0xFDF
  7866                           postinc2	equ	0xFDE
  7867                           postdec2	equ	0xFDD
  7868                           plusw2	equ	0xFDB
  7869                           fsr2h	equ	0xFDA
  7870                           fsr2l	equ	0xFD9
  7871                           status	equ	0xFD8
  7872                           
  7873 ;; *************** function _PS2_shiftInOut *****************
  7874 ;; Defined at:
  7875 ;;		line 143 in file "PS2.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  byte            1    wreg     unsigned char 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  byte            1    0[BANK0 ] unsigned char 
  7880 ;;  i               1    2[BANK0 ] unsigned char 
  7881 ;;  tmp             1    1[BANK0 ] unsigned char 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      unsigned char 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;Total ram usage:        5 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    4
  7898 ;; This function calls:
  7899 ;;		_delay_us
  7900 ;; This function is called by:
  7901 ;;		_PS2_init
  7902 ;;		_PS2_readGamepad
  7903 ;;		_PS2_sendCommandString
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text33
  7908  011B34                     __ptext33:
  7909                           	opt stack 0
  7910  011B34                     _PS2_shiftInOut:
  7911                           	opt stack 24
  7912                           
  7913                           ;incstack = 0
  7914                           ;PS2_shiftInOut@byte stored from wreg
  7915  011B34  0100               	movlb	0	; () banked
  7916  011B36  6F60               	movwf	PS2_shiftInOut@byte& (0+255),b
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;PS2.c: 145: unsigned char tmp = 0;
  7920  011B38  0E00               	movlw	0
  7921  011B3A  0100               	movlb	0	; () banked
  7922  011B3C  6F61               	movwf	PS2_shiftInOut@tmp& (0+255),b
  7923                           
  7924                           ;PS2.c: 146: for(unsigned char i = 0; i < 8; i++)
  7925  011B3E  0E00               	movlw	0
  7926  011B40  0100               	movlb	0	; () banked
  7927  011B42  6F62               	movwf	PS2_shiftInOut@i& (0+255),b
  7928  011B44  D032               	goto	l6223
  7929                           
  7930                           ; BSR set to: 0
  7931                           
  7932                           ; BSR set to: 0
  7933  011B46  D035               	goto	l930
  7934  011B48                     l6209:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;PS2.c: 147: {
  7938                           ;PS2.c: 148: if((byte & (1<<i)))
  7939  011B48  C062  F024         	movff	PS2_shiftInOut@i,??_PS2_shiftInOut
  7940  011B4C  0E01               	movlw	1
  7941  011B4E  6E25               	movwf	(??_PS2_shiftInOut+1)& (0+255),c
  7942  011B50  2A24               	incf	??_PS2_shiftInOut,f,c
  7943  011B52  D002               	goto	u3994
  7944  011B54                     u3995:
  7945  011B54  90D8               	bcf	status,0,c
  7946  011B56  3625               	rlcf	??_PS2_shiftInOut+1,f,c
  7947  011B58                     u3994:
  7948  011B58  2E24               	decfsz	??_PS2_shiftInOut,f,c
  7949  011B5A  D7FC               	goto	u3995
  7950  011B5C  5025               	movf	??_PS2_shiftInOut+1,w,c
  7951  011B5E  0100               	movlb	0	; () banked
  7952  011B60  1560               	andwf	PS2_shiftInOut@byte& (0+255),w,b
  7953  011B62  0900               	iorlw	0
  7954  011B64  B4D8               	btfsc	status,2,c
  7955  011B66  D002               	goto	l931
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;PS2.c: 149: {
  7959                           ;PS2.c: 150: PORTFbits.RF2 = 1;
  7960  011B68  8485               	bsf	3973,2,c	;volatile
  7961                           
  7962                           ;PS2.c: 151: }
  7963  011B6A  D001               	goto	l932
  7964  011B6C                     l931:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;PS2.c: 152: else
  7968                           ;PS2.c: 153: {
  7969                           ;PS2.c: 154: PORTFbits.RF2 = 0;
  7970  011B6C  9485               	bcf	3973,2,c	;volatile
  7971  011B6E                     l932:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;PS2.c: 155: }
  7975                           ;PS2.c: 157: PORTFbits.RF5 = 0;
  7976  011B6E  9A85               	bcf	3973,5,c	;volatile
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;PS2.c: 158: delay_us(5);
  7980  011B70  0E05               	movlw	5
  7981  011B72  6E20               	movwf	delay_us@x,c
  7982  011B74  0E00               	movlw	0
  7983  011B76  6E21               	movwf	delay_us@x+1,c
  7984  011B78  0E00               	movlw	0
  7985  011B7A  6E22               	movwf	delay_us@x+2,c
  7986  011B7C  0E00               	movlw	0
  7987  011B7E  6E23               	movwf	delay_us@x+3,c
  7988  011B80  EC2F  F091         	call	_delay_us	;wreg free
  7989                           
  7990                           ;PS2.c: 160: if(PORTFbits.RF3 == 1)
  7991  011B84  A685               	btfss	3973,3,c	;volatile
  7992  011B86  D00E               	goto	l6219
  7993                           
  7994                           ;PS2.c: 161: {
  7995                           ;PS2.c: 162: tmp |= (0x1 << i);;
  7996  011B88  C062  F024         	movff	PS2_shiftInOut@i,??_PS2_shiftInOut
  7997  011B8C  0E01               	movlw	1
  7998  011B8E  6E25               	movwf	(??_PS2_shiftInOut+1)& (0+255),c
  7999  011B90  2A24               	incf	??_PS2_shiftInOut,f,c
  8000  011B92  D002               	goto	u4024
  8001  011B94                     u4025:
  8002  011B94  90D8               	bcf	status,0,c
  8003  011B96  3625               	rlcf	??_PS2_shiftInOut+1,f,c
  8004  011B98                     u4024:
  8005  011B98  2E24               	decfsz	??_PS2_shiftInOut,f,c
  8006  011B9A  D7FC               	goto	u4025
  8007  011B9C  5025               	movf	??_PS2_shiftInOut+1,w,c
  8008  011B9E  0100               	movlb	0	; () banked
  8009  011BA0  1361               	iorwf	PS2_shiftInOut@tmp& (0+255),f,b
  8010  011BA2  D000               	goto	l6219
  8011  011BA4                     l6219:
  8012                           
  8013                           ;PS2.c: 163: }
  8014                           ;PS2.c: 165: PORTFbits.RF5 = 1;
  8015  011BA4  8A85               	bsf	3973,5,c	;volatile
  8016  011BA6  0100               	movlb	0	; () banked
  8017  011BA8  2B62               	incf	PS2_shiftInOut@i& (0+255),f,b
  8018  011BAA                     l6223:
  8019                           
  8020                           ; BSR set to: 0
  8021  011BAA  0E07               	movlw	7
  8022  011BAC  0100               	movlb	0	; () banked
  8023  011BAE  6562               	cpfsgt	PS2_shiftInOut@i& (0+255),b
  8024  011BB0  D7CB               	goto	l6209
  8025  011BB2                     l930:
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;PS2.c: 166: }
  8029                           ;PS2.c: 167: PORTFbits.RF2 = 1;
  8030  011BB2  8485               	bsf	3973,2,c	;volatile
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;PS2.c: 168: delay_us(4);
  8034  011BB4  0E04               	movlw	4
  8035  011BB6  6E20               	movwf	delay_us@x,c
  8036  011BB8  0E00               	movlw	0
  8037  011BBA  6E21               	movwf	delay_us@x+1,c
  8038  011BBC  0E00               	movlw	0
  8039  011BBE  6E22               	movwf	delay_us@x+2,c
  8040  011BC0  0E00               	movlw	0
  8041  011BC2  6E23               	movwf	delay_us@x+3,c
  8042  011BC4  EC2F  F091         	call	_delay_us	;wreg free
  8043                           
  8044                           ;PS2.c: 169: return tmp;
  8045  011BC8  0100               	movlb	0	; () banked
  8046  011BCA  5161               	movf	PS2_shiftInOut@tmp& (0+255),w,b
  8047  011BCC  0012               	return	
  8048                           
  8049                           ; BSR set to: 0
  8050                           
  8051                           ; BSR set to: 0
  8052  011BCE  0012               	return		;funcret
  8053  011BD0                     __end_of_PS2_shiftInOut:
  8054                           	opt stack 0
  8055                           tblptru	equ	0xFF8
  8056                           tblptrh	equ	0xFF7
  8057                           tblptrl	equ	0xFF6
  8058                           tablat	equ	0xFF5
  8059                           prodh	equ	0xFF4
  8060                           prodl	equ	0xFF3
  8061                           intcon	equ	0xFF2
  8062                           intcon2	equ	0xFF1
  8063                           intcon3	equ	0xFF0
  8064                           postinc0	equ	0xFEE
  8065                           wreg	equ	0xFE8
  8066                           indf1	equ	0xFE7
  8067                           postdec1	equ	0xFE5
  8068                           plusw1	equ	0xFE3
  8069                           fsr1h	equ	0xFE2
  8070                           fsr1l	equ	0xFE1
  8071                           indf2	equ	0xFDF
  8072                           postinc2	equ	0xFDE
  8073                           postdec2	equ	0xFDD
  8074                           plusw2	equ	0xFDB
  8075                           fsr2h	equ	0xFDA
  8076                           fsr2l	equ	0xFD9
  8077                           status	equ	0xFD8
  8078                           
  8079 ;; *************** function _PS2_analog *****************
  8080 ;; Defined at:
  8081 ;;		line 242 in file "PS2.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  button          1    wreg     unsigned char 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  button          1   31[COMRAM] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      unsigned char 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;Total ram usage:        1 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    3
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_RCMode
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text34
  8110  0123B8                     __ptext34:
  8111                           	opt stack 0
  8112  0123B8                     _PS2_analog:
  8113                           	opt stack 26
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;incstack = 0
  8117                           ;PS2_analog@button stored from wreg
  8118  0123B8  6E20               	movwf	PS2_analog@button,c
  8119                           
  8120                           ;PS2.c: 244: return PS2data[button];
  8121  0123BA  5020               	movf	PS2_analog@button,w,c
  8122  0123BC  0D01               	mullw	1
  8123  0123BE  0EAC               	movlw	low _PS2data
  8124  0123C0  24F3               	addwf	prodl,w,c
  8125  0123C2  6ED9               	movwf	fsr2l,c
  8126  0123C4  0E00               	movlw	high _PS2data
  8127  0123C6  20F4               	addwfc	prodh,w,c
  8128  0123C8  6EDA               	movwf	fsr2h,c
  8129  0123CA  50DF               	movf	indf2,w,c
  8130  0123CC  0012               	return	
  8131  0123CE  0012               	return		;funcret
  8132  0123D0                     __end_of_PS2_analog:
  8133                           	opt stack 0
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           intcon2	equ	0xFF1
  8142                           intcon3	equ	0xFF0
  8143                           postinc0	equ	0xFEE
  8144                           wreg	equ	0xFE8
  8145                           indf1	equ	0xFE7
  8146                           postdec1	equ	0xFE5
  8147                           plusw1	equ	0xFE3
  8148                           fsr1h	equ	0xFE2
  8149                           fsr1l	equ	0xFE1
  8150                           indf2	equ	0xFDF
  8151                           postinc2	equ	0xFDE
  8152                           postdec2	equ	0xFDD
  8153                           plusw2	equ	0xFDB
  8154                           fsr2h	equ	0xFDA
  8155                           fsr2l	equ	0xFD9
  8156                           status	equ	0xFD8
  8157                           
  8158 ;; *************** function _LCD_printString *****************
  8159 ;; Defined at:
  8160 ;;		line 312 in file "LCD.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  x               1    wreg     unsigned char 
  8163 ;;  y               1   22[BANK0 ] unsigned char 
  8164 ;;  input           2   23[BANK0 ] PTR unsigned char 
  8165 ;;		 -> STR_21(7), STR_14(17), STR_13(15), STR_12(18), 
  8166 ;;		 -> STR_11(16), STR_10(15), STR_9(17), STR_8(15), 
  8167 ;;		 -> STR_7(18), STR_6(17), STR_5(16), STR_4(18), 
  8168 ;;		 -> STR_3(18), LCD_printBin@string(9), LCD_printVal@temp(3), LCD_printChar@string(2), 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  x               1   40[BANK2 ] unsigned char 
  8171 ;;  tempString     20    0[BANK2 ] unsigned char [20]
  8172 ;;  val             2   41[BANK2 ] int 
  8173 ;;  tempString      2   45[BANK2 ] unsigned char [2]
  8174 ;;  i               2   49[BANK2 ] int 
  8175 ;;  i               2   47[BANK2 ] int 
  8176 ;;  string         20   20[BANK2 ] unsigned char [20]
  8177 ;;  aptr            2   43[BANK2 ] PTR void [1]
  8178 ;;		 -> ?_LCD_printString(0), 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;		None               void
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8188 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8189 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Totals:         0      11       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;Total ram usage:       62 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    6
  8195 ;; This function calls:
  8196 ;;		_LCD_placeCursor
  8197 ;;		_delay_ms
  8198 ;;		_delay_us
  8199 ;;		_sprintf
  8200 ;;		_strcat
  8201 ;; This function is called by:
  8202 ;;		_selfTest
  8203 ;;		_wanderMode
  8204 ;;		_competitionMode
  8205 ;;		_RCMode
  8206 ;;		_main
  8207 ;;		_fft_init
  8208 ;;		_LCD_printChar
  8209 ;;		_LCD_printVal
  8210 ;;		_LCD_printBin
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text35
  8215  010000                     __ptext35:
  8216                           	opt stack 0
  8217  010000                     _LCD_printString:
  8218                           	opt stack 23
  8219                           
  8220                           ;incstack = 0
  8221                           ;LCD_printString@x stored from wreg
  8222  010000  0102               	movlb	2	; () banked
  8223  010002  6FDA               	movwf	LCD_printString@x& (0+255),b
  8224                           
  8225                           ; BSR set to: 2
  8226                           ;LCD.c: 314: char string[20] = "\0";
  8227  010004  EE21  F032         	lfsr	2,LCD_printString@F16347
  8228  010008  EE12  F0C6         	lfsr	1,LCD_printString@string
  8229  01000C  0E13               	movlw	19
  8230  01000E                     u4341:
  8231  01000E  CFDB FFE3          	movff	plusw2,plusw1
  8232  010012  06E8               	decf	wreg,f,c
  8233  010014  E2FC               	bc	u4341
  8234                           
  8235                           ; BSR set to: 2
  8236                           ;LCD.c: 316: va_list aptr;
  8237                           ;LCD.c: 317: *aptr = __va_start();
  8238  010016  0E79               	movlw	low (?_LCD_printString+3)
  8239  010018  0102               	movlb	2	; () banked
  8240  01001A  6FDD               	movwf	LCD_printString@aptr& (0+255),b
  8241  01001C  0E00               	movlw	high (?_LCD_printString+3)
  8242  01001E  0102               	movlb	2	; () banked
  8243  010020  6FDE               	movwf	(LCD_printString@aptr+1)& (0+255),b
  8244                           
  8245                           ; BSR set to: 2
  8246                           ;LCD.c: 319: LCD_placeCursor(x,y);
  8247  010022  C076  F024         	movff	LCD_printString@y,LCD_placeCursor@y
  8248  010026  0102               	movlb	2	; () banked
  8249  010028  51DA               	movf	LCD_printString@x& (0+255),w,b
  8250  01002A  EC50  F083         	call	_LCD_placeCursor
  8251                           
  8252                           ;LCD.c: 322: for(int i = 0; input[i] != '\0' && i < 200; i++)
  8253  01002E  0E00               	movlw	0
  8254  010030  0102               	movlb	2	; () banked
  8255  010032  6FE2               	movwf	(LCD_printString@i+1)& (0+255),b
  8256  010034  0E00               	movlw	0
  8257  010036  6FE1               	movwf	LCD_printString@i& (0+255),b
  8258  010038  D0B4               	goto	l6495
  8259  01003A                     l6471:
  8260                           
  8261                           ; BSR set to: 2
  8262                           ;LCD.c: 323: {
  8263                           ;LCD.c: 324: if(input[i] == '%')
  8264  01003A  0102               	movlb	2	; () banked
  8265  01003C  51E1               	movf	LCD_printString@i& (0+255),w,b
  8266  01003E  0100               	movlb	0	; () banked
  8267  010040  2577               	addwf	LCD_printString@input& (0+255),w,b
  8268  010042  0100               	movlb	0	; () banked
  8269  010044  6F7D               	movwf	??_LCD_printString& (0+255),b
  8270  010046  0102               	movlb	2	; () banked
  8271  010048  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  8272  01004A  0100               	movlb	0	; () banked
  8273  01004C  2178               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  8274  01004E  0100               	movlb	0	; () banked
  8275  010050  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8276  010052  C07D  FFF6         	movff	??_LCD_printString,tblptrl
  8277  010056  C07E  FFF7         	movff	??_LCD_printString+1,tblptrh
  8278  01005A  0E00               	movlw	low (__mediumconst shr (0+16))
  8279  01005C  6EF8               	movwf	tblptru,c
  8280  01005E  0E0D               	movlw	(high __ramtop+-1)
  8281  010060  64F7               	cpfsgt	tblptrh,c
  8282  010062  D003               	bra	u4357
  8283  010064  0008               	tblrd		*
  8284  010066  50F5               	movf	tablat,w,c
  8285  010068  D005               	bra	u4350
  8286  01006A                     u4357:
  8287  01006A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8288  01006E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8289  010072  50EF               	movf	indf0,w,c
  8290  010074                     u4350:
  8291  010074  0A25               	xorlw	37
  8292  010076  A4D8               	btfss	status,2,c
  8293  010078  D063               	goto	l6487
  8294                           
  8295                           ;LCD.c: 325: {
  8296                           ;LCD.c: 326: if(input[i+1] == '%')
  8297  01007A  0E01               	movlw	1
  8298  01007C  0102               	movlb	2	; () banked
  8299  01007E  25E1               	addwf	LCD_printString@i& (0+255),w,b
  8300  010080  0100               	movlb	0	; () banked
  8301  010082  6F7D               	movwf	??_LCD_printString& (0+255),b
  8302  010084  0E00               	movlw	0
  8303  010086  0102               	movlb	2	; () banked
  8304  010088  21E2               	addwfc	(LCD_printString@i+1)& (0+255),w,b
  8305  01008A  0100               	movlb	0	; () banked
  8306  01008C  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8307  01008E  C077  F07F         	movff	LCD_printString@input,??_LCD_printString+2
  8308  010092  C078  F080         	movff	LCD_printString@input+1,??_LCD_printString+3
  8309  010096  0100               	movlb	0	; () banked
  8310  010098  517D               	movf	??_LCD_printString& (0+255),w,b
  8311  01009A  0100               	movlb	0	; () banked
  8312  01009C  277F               	addwf	(??_LCD_printString+2)& (0+255),f,b
  8313  01009E  0100               	movlb	0	; () banked
  8314  0100A0  517E               	movf	(??_LCD_printString+1)& (0+255),w,b
  8315  0100A2  0100               	movlb	0	; () banked
  8316  0100A4  2380               	addwfc	(??_LCD_printString+3)& (0+255),f,b
  8317  0100A6  C07F  FFF6         	movff	??_LCD_printString+2,tblptrl
  8318  0100AA  C080  FFF7         	movff	??_LCD_printString+3,tblptrh
  8319  0100AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8320  0100B0  6EF8               	movwf	tblptru,c
  8321  0100B2  0E0D               	movlw	(high __ramtop+-1)
  8322  0100B4  64F7               	cpfsgt	tblptrh,c
  8323  0100B6  D003               	bra	u4377
  8324  0100B8  0008               	tblrd		*
  8325  0100BA  50F5               	movf	tablat,w,c
  8326  0100BC  D005               	bra	u4370
  8327  0100BE                     u4377:
  8328  0100BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8329  0100C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8330  0100C6  50EF               	movf	indf0,w,c
  8331  0100C8                     u4370:
  8332  0100C8  0A25               	xorlw	37
  8333  0100CA  A4D8               	btfss	status,2,c
  8334  0100CC  D00B               	goto	l6477
  8335                           
  8336                           ;LCD.c: 327: {
  8337                           ;LCD.c: 328: strcat(string, "%");
  8338  0100CE  0EC6               	movlw	low LCD_printString@string
  8339  0100D0  6E20               	movwf	strcat@to,c
  8340  0100D2  0E02               	movlw	high LCD_printString@string
  8341  0100D4  6E21               	movwf	strcat@to+1,c
  8342  0100D6  0EFD               	movlw	low STR_1
  8343  0100D8  6E22               	movwf	strcat@from,c
  8344  0100DA  0EFF               	movlw	high STR_1
  8345  0100DC  6E23               	movwf	strcat@from+1,c
  8346  0100DE  EC53  F090         	call	_strcat	;wreg free
  8347                           
  8348                           ;LCD.c: 329: }
  8349  0100E2  D02A               	goto	l6485
  8350  0100E4                     l6477:
  8351                           
  8352                           ;LCD.c: 330: else
  8353                           ;LCD.c: 331: {
  8354                           ;LCD.c: 332: int val = (*(int *)__va_arg((*(int **)aptr), (int)0));
  8355  0100E4  C2DD  FFD9         	movff	LCD_printString@aptr,fsr2l
  8356  0100E8  C2DE  FFDA         	movff	LCD_printString@aptr+1,fsr2h
  8357  0100EC  CFDE F2DB          	movff	postinc2,LCD_printString@val
  8358  0100F0  CFDD F2DC          	movff	postdec2,LCD_printString@val+1
  8359  0100F4  0E02               	movlw	2
  8360  0100F6  0102               	movlb	2	; () banked
  8361  0100F8  27DD               	addwf	LCD_printString@aptr& (0+255),f,b
  8362  0100FA  0E00               	movlw	0
  8363  0100FC  23DE               	addwfc	(LCD_printString@aptr+1)& (0+255),f,b
  8364                           
  8365                           ; BSR set to: 2
  8366                           ;LCD.c: 333: char tempString[20];
  8367                           ;LCD.c: 334: sprintf(tempString,"%i",val);
  8368  0100FE  0EB2               	movlw	low LCD_printString@tempString
  8369  010100  0100               	movlb	0	; () banked
  8370  010102  6F67               	movwf	sprintf@sp& (0+255),b
  8371  010104  0E02               	movlw	high LCD_printString@tempString
  8372  010106  0100               	movlb	0	; () banked
  8373  010108  6F68               	movwf	(sprintf@sp+1)& (0+255),b
  8374  01010A  0ED7               	movlw	low (STR_8+12)
  8375  01010C  0100               	movlb	0	; () banked
  8376  01010E  6F69               	movwf	sprintf@f& (0+255),b
  8377  010110  0EFF               	movlw	high (STR_8+12)
  8378  010112  0100               	movlb	0	; () banked
  8379  010114  6F6A               	movwf	(sprintf@f+1)& (0+255),b
  8380  010116  C2DB  F06B         	movff	LCD_printString@val,?_sprintf+4
  8381  01011A  C2DC  F06C         	movff	LCD_printString@val+1,?_sprintf+5
  8382  01011E  ECFA  F088         	call	_sprintf	;wreg free
  8383                           
  8384                           ;LCD.c: 335: strcat(string, tempString);
  8385  010122  0EC6               	movlw	low LCD_printString@string
  8386  010124  6E20               	movwf	strcat@to,c
  8387  010126  0E02               	movlw	high LCD_printString@string
  8388  010128  6E21               	movwf	strcat@to+1,c
  8389  01012A  0EB2               	movlw	low LCD_printString@tempString
  8390  01012C  6E22               	movwf	strcat@from,c
  8391  01012E  0E02               	movlw	high LCD_printString@tempString
  8392  010130  6E23               	movwf	strcat@from+1,c
  8393  010132  EC53  F090         	call	_strcat	;wreg free
  8394  010136  D000               	goto	l6485
  8395  010138                     l6485:
  8396                           
  8397                           ;LCD.c: 336: }
  8398                           ;LCD.c: 337: i++;
  8399  010138  0102               	movlb	2	; () banked
  8400  01013A  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  8401  01013C  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  8402                           
  8403                           ;LCD.c: 338: }
  8404  01013E  D02D               	goto	l6493
  8405  010140                     l6487:
  8406                           
  8407                           ;LCD.c: 339: else
  8408                           ;LCD.c: 340: {
  8409                           ;LCD.c: 341: char tempString[2];
  8410                           ;LCD.c: 342: tempString[0] = input[i];
  8411  010140  0102               	movlb	2	; () banked
  8412  010142  51E1               	movf	LCD_printString@i& (0+255),w,b
  8413  010144  0100               	movlb	0	; () banked
  8414  010146  2577               	addwf	LCD_printString@input& (0+255),w,b
  8415  010148  0100               	movlb	0	; () banked
  8416  01014A  6F7D               	movwf	??_LCD_printString& (0+255),b
  8417  01014C  0102               	movlb	2	; () banked
  8418  01014E  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  8419  010150  0100               	movlb	0	; () banked
  8420  010152  2178               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  8421  010154  0100               	movlb	0	; () banked
  8422  010156  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8423  010158  C07D  FFF6         	movff	??_LCD_printString,tblptrl
  8424  01015C  C07E  FFF7         	movff	??_LCD_printString+1,tblptrh
  8425  010160  0E00               	movlw	low (__mediumconst shr (0+16))
  8426  010162  6EF8               	movwf	tblptru,c
  8427  010164  0E0D               	movlw	(high __ramtop+-1)
  8428  010166  64F7               	cpfsgt	tblptrh,c
  8429  010168  D003               	bra	u4397
  8430  01016A  0008               	tblrd		*
  8431  01016C  50F5               	movf	tablat,w,c
  8432  01016E  D005               	bra	u4390
  8433  010170                     u4397:
  8434  010170  CFF6 FFE9          	movff	tblptrl,fsr0l
  8435  010174  CFF7 FFEA          	movff	tblptrh,fsr0h
  8436  010178  50EF               	movf	indf0,w,c
  8437  01017A                     u4390:
  8438  01017A  0102               	movlb	2	; () banked
  8439  01017C  6FDF               	movwf	LCD_printString@tempString_590& (0+255),b
  8440                           
  8441                           ; BSR set to: 2
  8442                           ;LCD.c: 343: tempString[1] = '\0';
  8443  01017E  0E00               	movlw	0
  8444  010180  0102               	movlb	2	; () banked
  8445  010182  6FE0               	movwf	(LCD_printString@tempString_590+1)& (0+255),b
  8446                           
  8447                           ; BSR set to: 2
  8448                           ;LCD.c: 344: strcat(string,tempString);
  8449  010184  0EC6               	movlw	low LCD_printString@string
  8450  010186  6E20               	movwf	strcat@to,c
  8451  010188  0E02               	movlw	high LCD_printString@string
  8452  01018A  6E21               	movwf	strcat@to+1,c
  8453  01018C  0EDF               	movlw	low LCD_printString@tempString_590
  8454  01018E  6E22               	movwf	strcat@from,c
  8455  010190  0E02               	movlw	high LCD_printString@tempString_590
  8456  010192  6E23               	movwf	strcat@from+1,c
  8457  010194  EC53  F090         	call	_strcat	;wreg free
  8458  010198  D000               	goto	l6493
  8459  01019A                     l6493:
  8460  01019A  0102               	movlb	2	; () banked
  8461  01019C  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  8462  01019E  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  8463  0101A0  D000               	goto	l6495
  8464  0101A2                     l6495:
  8465                           
  8466                           ; BSR set to: 2
  8467  0101A2  0102               	movlb	2	; () banked
  8468  0101A4  51E1               	movf	LCD_printString@i& (0+255),w,b
  8469  0101A6  0100               	movlb	0	; () banked
  8470  0101A8  2577               	addwf	LCD_printString@input& (0+255),w,b
  8471  0101AA  0100               	movlb	0	; () banked
  8472  0101AC  6F7D               	movwf	??_LCD_printString& (0+255),b
  8473  0101AE  0102               	movlb	2	; () banked
  8474  0101B0  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  8475  0101B2  0100               	movlb	0	; () banked
  8476  0101B4  2178               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  8477  0101B6  0100               	movlb	0	; () banked
  8478  0101B8  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8479  0101BA  C07D  FFF6         	movff	??_LCD_printString,tblptrl
  8480  0101BE  C07E  FFF7         	movff	??_LCD_printString+1,tblptrh
  8481  0101C2  0E00               	movlw	low (__mediumconst shr (0+16))
  8482  0101C4  6EF8               	movwf	tblptru,c
  8483  0101C6  0E0D               	movlw	(high __ramtop+-1)
  8484  0101C8  64F7               	cpfsgt	tblptrh,c
  8485  0101CA  D003               	bra	u4407
  8486  0101CC  0008               	tblrd		*
  8487  0101CE  50F5               	movf	tablat,w,c
  8488  0101D0  D005               	bra	u4400
  8489  0101D2                     u4407:
  8490  0101D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  8491  0101D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  8492  0101DA  50EF               	movf	indf0,w,c
  8493  0101DC                     u4400:
  8494  0101DC  0900               	iorlw	0
  8495  0101DE  B4D8               	btfsc	status,2,c
  8496  0101E0  D00D               	goto	l6499
  8497  0101E2  0102               	movlb	2	; () banked
  8498  0101E4  BFE2               	btfsc	(LCD_printString@i+1)& (0+255),7,b
  8499  0101E6  D729               	goto	l6471
  8500  0101E8  0102               	movlb	2	; () banked
  8501  0101EA  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  8502  0101EC  E107               	bnz	l6499
  8503  0101EE  0EC8               	movlw	200
  8504  0101F0  0102               	movlb	2	; () banked
  8505  0101F2  5DE1               	subwf	LCD_printString@i& (0+255),w,b
  8506  0101F4  B0D8               	btfsc	status,0,c
  8507  0101F6  D002               	goto	l6499
  8508  0101F8  D720               	goto	l6471
  8509                           
  8510                           ; BSR set to: 2
  8511  0101FA  D000               	goto	l6499
  8512  0101FC                     l6499:
  8513                           
  8514                           ;LCD.c: 345: }
  8515                           ;LCD.c: 346: }
  8516                           ;LCD.c: 348: ;
  8517                           ;LCD.c: 351: for(int i = 0; string[i] != '\0' && i < 200; i++)
  8518  0101FC  0E00               	movlw	0
  8519  0101FE  0102               	movlb	2	; () banked
  8520  010200  6FE4               	movwf	(LCD_printString@i_591+1)& (0+255),b
  8521  010202  0E00               	movlw	0
  8522  010204  6FE3               	movwf	LCD_printString@i_591& (0+255),b
  8523  010206  D233               	goto	l6551
  8524  010208                     l6501:
  8525                           
  8526                           ; BSR set to: 2
  8527                           ;LCD.c: 352: {
  8528                           ;LCD.c: 353: if(string[i] == '\n')
  8529  010208  0EC6               	movlw	low LCD_printString@string
  8530  01020A  0102               	movlb	2	; () banked
  8531  01020C  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8532  01020E  6ED9               	movwf	fsr2l,c
  8533  010210  0E02               	movlw	high LCD_printString@string
  8534  010212  0102               	movlb	2	; () banked
  8535  010214  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8536  010216  6EDA               	movwf	fsr2h,c
  8537  010218  0E0A               	movlw	10
  8538  01021A  18DE               	xorwf	postinc2,w,c
  8539  01021C  A4D8               	btfss	status,2,c
  8540  01021E  D007               	goto	l6505
  8541                           
  8542                           ; BSR set to: 2
  8543                           ;LCD.c: 354: {
  8544                           ;LCD.c: 355: LCD_placeCursor(0,y+1);
  8545  010220  0100               	movlb	0	; () banked
  8546  010222  2976               	incf	LCD_printString@y& (0+255),w,b
  8547  010224  6E24               	movwf	LCD_placeCursor@y,c
  8548  010226  0E00               	movlw	0
  8549  010228  EC50  F083         	call	_LCD_placeCursor
  8550                           
  8551                           ;LCD.c: 356: }
  8552  01022C  D21C               	goto	l6549
  8553  01022E                     l6505:
  8554                           
  8555                           ;LCD.c: 357: else
  8556                           ;LCD.c: 358: {
  8557                           ;LCD.c: 359: delay_ms(2);
  8558  01022E  0E02               	movlw	2
  8559  010230  0100               	movlb	0	; () banked
  8560  010232  6F60               	movwf	delay_ms@x& (0+255),b
  8561  010234  0E00               	movlw	0
  8562  010236  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  8563  010238  0E00               	movlw	0
  8564  01023A  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  8565  01023C  0E00               	movlw	0
  8566  01023E  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  8567  010240  EC2F  F08E         	call	_delay_ms	;wreg free
  8568                           
  8569                           ;LCD.c: 360: PORTDbits.RD0 = 1;
  8570  010244  8083               	bsf	3971,0,c	;volatile
  8571                           
  8572                           ;LCD.c: 362: switch(mode)
  8573  010246  D1FA               	goto	l6543
  8574  010248                     l6509:
  8575                           
  8576                           ;LCD.c: 365: delay_us(40);;
  8577  010248  0E28               	movlw	40
  8578  01024A  6E20               	movwf	delay_us@x,c
  8579  01024C  0E00               	movlw	0
  8580  01024E  6E21               	movwf	delay_us@x+1,c
  8581  010250  0E00               	movlw	0
  8582  010252  6E22               	movwf	delay_us@x+2,c
  8583  010254  0E00               	movlw	0
  8584  010256  6E23               	movwf	delay_us@x+3,c
  8585  010258  EC2F  F091         	call	_delay_us	;wreg free
  8586                           
  8587                           ;LCD.c: 366: PORTEbits.RE4 = 1;
  8588  01025C  8884               	bsf	3972,4,c	;volatile
  8589                           
  8590                           ;LCD.c: 367: { PORTHbits.RH5 = (((string[i] >> 4) >> 3) & 1); PORTEbits.RE1 = (((string[
      +                          i] >> 4) >> 2) & 1); PORTEbits.RE0 = (((string[i] >> 4) >> 1) & 1); PORTEbits.RE2 = ((st
      +                          ring[i] >> 4) & 1); };
  8591  01025E  0EC6               	movlw	low LCD_printString@string
  8592  010260  0102               	movlb	2	; () banked
  8593  010262  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8594  010264  6ED9               	movwf	fsr2l,c
  8595  010266  0E02               	movlw	high LCD_printString@string
  8596  010268  0102               	movlb	2	; () banked
  8597  01026A  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8598  01026C  6EDA               	movwf	fsr2h,c
  8599  01026E  50DF               	movf	indf2,w,c
  8600  010270  0100               	movlb	0	; () banked
  8601  010272  6F7D               	movwf	??_LCD_printString& (0+255),b
  8602  010274  0100               	movlb	0	; () banked
  8603  010276  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8604  010278  0E0F               	movlw	15
  8605  01027A  177D               	andwf	??_LCD_printString& (0+255),f,b
  8606  01027C  0100               	movlb	0	; () banked
  8607  01027E  90D8               	bcf	status,0,c
  8608  010280  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8609  010282  0100               	movlb	0	; () banked
  8610  010284  90D8               	bcf	status,0,c
  8611  010286  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8612  010288  0100               	movlb	0	; () banked
  8613  01028A  90D8               	bcf	status,0,c
  8614  01028C  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8615  01028E  0E01               	movlw	1
  8616  010290  0100               	movlb	0	; () banked
  8617  010292  177D               	andwf	??_LCD_printString& (0+255),f,b
  8618  010294  0100               	movlb	0	; () banked
  8619  010296  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8620  010298  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8621  01029A  5087               	movf	3975,w,c	;volatile
  8622  01029C  0100               	movlb	0	; () banked
  8623  01029E  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8624  0102A0  0BDF               	andlw	-33
  8625  0102A2  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8626  0102A4  6E87               	movwf	3975,c	;volatile
  8627                           
  8628                           ; BSR set to: 0
  8629  0102A6  0EC6               	movlw	low LCD_printString@string
  8630  0102A8  0102               	movlb	2	; () banked
  8631  0102AA  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8632  0102AC  6ED9               	movwf	fsr2l,c
  8633  0102AE  0E02               	movlw	high LCD_printString@string
  8634  0102B0  0102               	movlb	2	; () banked
  8635  0102B2  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8636  0102B4  6EDA               	movwf	fsr2h,c
  8637  0102B6  50DF               	movf	indf2,w,c
  8638  0102B8  0100               	movlb	0	; () banked
  8639  0102BA  6F7D               	movwf	??_LCD_printString& (0+255),b
  8640  0102BC  0100               	movlb	0	; () banked
  8641  0102BE  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8642  0102C0  0E0F               	movlw	15
  8643  0102C2  177D               	andwf	??_LCD_printString& (0+255),f,b
  8644  0102C4  0100               	movlb	0	; () banked
  8645  0102C6  90D8               	bcf	status,0,c
  8646  0102C8  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8647  0102CA  0100               	movlb	0	; () banked
  8648  0102CC  90D8               	bcf	status,0,c
  8649  0102CE  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8650  0102D0  0E01               	movlw	1
  8651  0102D2  0100               	movlb	0	; () banked
  8652  0102D4  177D               	andwf	??_LCD_printString& (0+255),f,b
  8653  0102D6  0100               	movlb	0	; () banked
  8654  0102D8  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8655  0102DA  5084               	movf	3972,w,c	;volatile
  8656  0102DC  0100               	movlb	0	; () banked
  8657  0102DE  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8658  0102E0  0BFD               	andlw	-3
  8659  0102E2  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8660  0102E4  6E84               	movwf	3972,c	;volatile
  8661                           
  8662                           ; BSR set to: 0
  8663  0102E6  0EC6               	movlw	low LCD_printString@string
  8664  0102E8  0102               	movlb	2	; () banked
  8665  0102EA  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8666  0102EC  6ED9               	movwf	fsr2l,c
  8667  0102EE  0E02               	movlw	high LCD_printString@string
  8668  0102F0  0102               	movlb	2	; () banked
  8669  0102F2  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8670  0102F4  6EDA               	movwf	fsr2h,c
  8671  0102F6  50DF               	movf	indf2,w,c
  8672  0102F8  0100               	movlb	0	; () banked
  8673  0102FA  6F7D               	movwf	??_LCD_printString& (0+255),b
  8674  0102FC  0100               	movlb	0	; () banked
  8675  0102FE  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8676  010300  0E0F               	movlw	15
  8677  010302  177D               	andwf	??_LCD_printString& (0+255),f,b
  8678  010304  0100               	movlb	0	; () banked
  8679  010306  90D8               	bcf	status,0,c
  8680  010308  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8681  01030A  0E01               	movlw	1
  8682  01030C  0100               	movlb	0	; () banked
  8683  01030E  177D               	andwf	??_LCD_printString& (0+255),f,b
  8684  010310  5084               	movf	3972,w,c	;volatile
  8685  010312  0100               	movlb	0	; () banked
  8686  010314  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8687  010316  0BFE               	andlw	-2
  8688  010318  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8689  01031A  6E84               	movwf	3972,c	;volatile
  8690                           
  8691                           ; BSR set to: 0
  8692  01031C  0EC6               	movlw	low LCD_printString@string
  8693  01031E  0102               	movlb	2	; () banked
  8694  010320  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8695  010322  6ED9               	movwf	fsr2l,c
  8696  010324  0E02               	movlw	high LCD_printString@string
  8697  010326  0102               	movlb	2	; () banked
  8698  010328  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8699  01032A  6EDA               	movwf	fsr2h,c
  8700  01032C  50DF               	movf	indf2,w,c
  8701  01032E  0100               	movlb	0	; () banked
  8702  010330  6F7D               	movwf	??_LCD_printString& (0+255),b
  8703  010332  0100               	movlb	0	; () banked
  8704  010334  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8705  010336  0E0F               	movlw	15
  8706  010338  177D               	andwf	??_LCD_printString& (0+255),f,b
  8707  01033A  0E01               	movlw	1
  8708  01033C  0100               	movlb	0	; () banked
  8709  01033E  177D               	andwf	??_LCD_printString& (0+255),f,b
  8710  010340  0100               	movlb	0	; () banked
  8711  010342  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8712  010344  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8713  010346  5084               	movf	3972,w,c	;volatile
  8714  010348  0100               	movlb	0	; () banked
  8715  01034A  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8716  01034C  0BFB               	andlw	-5
  8717  01034E  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8718  010350  6E84               	movwf	3972,c	;volatile
  8719                           
  8720                           ;LCD.c: 368: delay_us(40);;
  8721  010352  0E28               	movlw	40
  8722  010354  6E20               	movwf	delay_us@x,c
  8723  010356  0E00               	movlw	0
  8724  010358  6E21               	movwf	delay_us@x+1,c
  8725  01035A  0E00               	movlw	0
  8726  01035C  6E22               	movwf	delay_us@x+2,c
  8727  01035E  0E00               	movlw	0
  8728  010360  6E23               	movwf	delay_us@x+3,c
  8729  010362  EC2F  F091         	call	_delay_us	;wreg free
  8730                           
  8731                           ;LCD.c: 369: PORTEbits.RE4 = 0;
  8732  010366  9884               	bcf	3972,4,c	;volatile
  8733                           
  8734                           ;LCD.c: 371: delay_us(40);;
  8735  010368  0E28               	movlw	40
  8736  01036A  6E20               	movwf	delay_us@x,c
  8737  01036C  0E00               	movlw	0
  8738  01036E  6E21               	movwf	delay_us@x+1,c
  8739  010370  0E00               	movlw	0
  8740  010372  6E22               	movwf	delay_us@x+2,c
  8741  010374  0E00               	movlw	0
  8742  010376  6E23               	movwf	delay_us@x+3,c
  8743  010378  EC2F  F091         	call	_delay_us	;wreg free
  8744                           
  8745                           ;LCD.c: 372: PORTEbits.RE4 = 1;
  8746  01037C  8884               	bsf	3972,4,c	;volatile
  8747                           
  8748                           ;LCD.c: 373: { PORTHbits.RH5 = (((string[i] & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((strin
      +                          g[i] & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((string[i] & 0x0F) >> 1) & 1); PORTEbits.RE2 
      +                          = ((string[i] & 0x0F) & 1); };
  8749  01037E  0EC6               	movlw	low LCD_printString@string
  8750  010380  0102               	movlb	2	; () banked
  8751  010382  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8752  010384  6ED9               	movwf	fsr2l,c
  8753  010386  0E02               	movlw	high LCD_printString@string
  8754  010388  0102               	movlb	2	; () banked
  8755  01038A  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8756  01038C  6EDA               	movwf	fsr2h,c
  8757  01038E  50DF               	movf	indf2,w,c
  8758  010390  0100               	movlb	0	; () banked
  8759  010392  6F7D               	movwf	??_LCD_printString& (0+255),b
  8760  010394  0100               	movlb	0	; () banked
  8761  010396  90D8               	bcf	status,0,c
  8762  010398  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8763  01039A  0100               	movlb	0	; () banked
  8764  01039C  90D8               	bcf	status,0,c
  8765  01039E  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8766  0103A0  0100               	movlb	0	; () banked
  8767  0103A2  90D8               	bcf	status,0,c
  8768  0103A4  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8769  0103A6  0E01               	movlw	1
  8770  0103A8  0100               	movlb	0	; () banked
  8771  0103AA  177D               	andwf	??_LCD_printString& (0+255),f,b
  8772  0103AC  0100               	movlb	0	; () banked
  8773  0103AE  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8774  0103B0  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8775  0103B2  5087               	movf	3975,w,c	;volatile
  8776  0103B4  0100               	movlb	0	; () banked
  8777  0103B6  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8778  0103B8  0BDF               	andlw	-33
  8779  0103BA  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8780  0103BC  6E87               	movwf	3975,c	;volatile
  8781                           
  8782                           ; BSR set to: 0
  8783  0103BE  0EC6               	movlw	low LCD_printString@string
  8784  0103C0  0102               	movlb	2	; () banked
  8785  0103C2  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8786  0103C4  6ED9               	movwf	fsr2l,c
  8787  0103C6  0E02               	movlw	high LCD_printString@string
  8788  0103C8  0102               	movlb	2	; () banked
  8789  0103CA  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8790  0103CC  6EDA               	movwf	fsr2h,c
  8791  0103CE  50DF               	movf	indf2,w,c
  8792  0103D0  0100               	movlb	0	; () banked
  8793  0103D2  6F7D               	movwf	??_LCD_printString& (0+255),b
  8794  0103D4  0100               	movlb	0	; () banked
  8795  0103D6  90D8               	bcf	status,0,c
  8796  0103D8  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8797  0103DA  0100               	movlb	0	; () banked
  8798  0103DC  90D8               	bcf	status,0,c
  8799  0103DE  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8800  0103E0  0E01               	movlw	1
  8801  0103E2  0100               	movlb	0	; () banked
  8802  0103E4  177D               	andwf	??_LCD_printString& (0+255),f,b
  8803  0103E6  0100               	movlb	0	; () banked
  8804  0103E8  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8805  0103EA  5084               	movf	3972,w,c	;volatile
  8806  0103EC  0100               	movlb	0	; () banked
  8807  0103EE  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8808  0103F0  0BFD               	andlw	-3
  8809  0103F2  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8810  0103F4  6E84               	movwf	3972,c	;volatile
  8811                           
  8812                           ; BSR set to: 0
  8813  0103F6  0EC6               	movlw	low LCD_printString@string
  8814  0103F8  0102               	movlb	2	; () banked
  8815  0103FA  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8816  0103FC  6ED9               	movwf	fsr2l,c
  8817  0103FE  0E02               	movlw	high LCD_printString@string
  8818  010400  0102               	movlb	2	; () banked
  8819  010402  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8820  010404  6EDA               	movwf	fsr2h,c
  8821  010406  50DF               	movf	indf2,w,c
  8822  010408  0100               	movlb	0	; () banked
  8823  01040A  6F7D               	movwf	??_LCD_printString& (0+255),b
  8824  01040C  0100               	movlb	0	; () banked
  8825  01040E  90D8               	bcf	status,0,c
  8826  010410  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8827  010412  0E01               	movlw	1
  8828  010414  0100               	movlb	0	; () banked
  8829  010416  177D               	andwf	??_LCD_printString& (0+255),f,b
  8830  010418  5084               	movf	3972,w,c	;volatile
  8831  01041A  0100               	movlb	0	; () banked
  8832  01041C  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8833  01041E  0BFE               	andlw	-2
  8834  010420  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8835  010422  6E84               	movwf	3972,c	;volatile
  8836                           
  8837                           ; BSR set to: 0
  8838  010424  0EC6               	movlw	low LCD_printString@string
  8839  010426  0102               	movlb	2	; () banked
  8840  010428  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8841  01042A  6ED9               	movwf	fsr2l,c
  8842  01042C  0E02               	movlw	high LCD_printString@string
  8843  01042E  0102               	movlb	2	; () banked
  8844  010430  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8845  010432  6EDA               	movwf	fsr2h,c
  8846  010434  50DF               	movf	indf2,w,c
  8847  010436  0100               	movlb	0	; () banked
  8848  010438  6F7D               	movwf	??_LCD_printString& (0+255),b
  8849  01043A  0E01               	movlw	1
  8850  01043C  0100               	movlb	0	; () banked
  8851  01043E  177D               	andwf	??_LCD_printString& (0+255),f,b
  8852  010440  0100               	movlb	0	; () banked
  8853  010442  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8854  010444  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8855  010446  5084               	movf	3972,w,c	;volatile
  8856  010448  0100               	movlb	0	; () banked
  8857  01044A  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8858  01044C  0BFB               	andlw	-5
  8859  01044E  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8860  010450  6E84               	movwf	3972,c	;volatile
  8861                           
  8862                           ;LCD.c: 374: delay_us(40);;
  8863  010452  0E28               	movlw	40
  8864  010454  6E20               	movwf	delay_us@x,c
  8865  010456  0E00               	movlw	0
  8866  010458  6E21               	movwf	delay_us@x+1,c
  8867  01045A  0E00               	movlw	0
  8868  01045C  6E22               	movwf	delay_us@x+2,c
  8869  01045E  0E00               	movlw	0
  8870  010460  6E23               	movwf	delay_us@x+3,c
  8871  010462  EC2F  F091         	call	_delay_us	;wreg free
  8872  010466  D0E8               	goto	l6539
  8873  010468                     l116:
  8874  010468  F000               	nop		;# 
  8875                           
  8876                           ;LCD.c: 380: PORTEbits.RE4 = 1;
  8877  01046A  8884               	bsf	3972,4,c	;volatile
  8878                           
  8879                           ;LCD.c: 381: { PORTHbits.RH5 = ((string[i] >> 7) & 1); PORTEbits.RE1 = ((string[i] >> 6)
      +                           & 1); PORTEbits.RE0 = ((string[i] >> 5) & 1); PORTEbits.RE2 = ((string[i] >> 4) & 1); P
      +                          ORTHbits.RH0 = ((string[i] >> 3) & 1); PORTHbits.RH1 = ((string[i] >> 2) & 1); PORTHbit
  8880  01046C  0EC6               	movlw	low LCD_printString@string
  8881  01046E  0102               	movlb	2	; () banked
  8882  010470  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8883  010472  6ED9               	movwf	fsr2l,c
  8884  010474  0E02               	movlw	high LCD_printString@string
  8885  010476  0102               	movlb	2	; () banked
  8886  010478  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8887  01047A  6EDA               	movwf	fsr2h,c
  8888  01047C  50DF               	movf	indf2,w,c
  8889  01047E  0100               	movlb	0	; () banked
  8890  010480  6F7D               	movwf	??_LCD_printString& (0+255),b
  8891  010482  0E00               	movlw	0
  8892  010484  BF7D               	btfsc	??_LCD_printString& (0+255),7,b
  8893  010486  0E01               	movlw	1
  8894  010488  6F7D               	movwf	??_LCD_printString& (0+255),b
  8895  01048A  0E01               	movlw	1
  8896  01048C  0100               	movlb	0	; () banked
  8897  01048E  177D               	andwf	??_LCD_printString& (0+255),f,b
  8898  010490  0100               	movlb	0	; () banked
  8899  010492  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8900  010494  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8901  010496  5087               	movf	3975,w,c	;volatile
  8902  010498  0100               	movlb	0	; () banked
  8903  01049A  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8904  01049C  0BDF               	andlw	-33
  8905  01049E  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8906  0104A0  6E87               	movwf	3975,c	;volatile
  8907  0104A2  0EC6               	movlw	low LCD_printString@string
  8908  0104A4  0102               	movlb	2	; () banked
  8909  0104A6  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8910  0104A8  6ED9               	movwf	fsr2l,c
  8911  0104AA  0E02               	movlw	high LCD_printString@string
  8912  0104AC  0102               	movlb	2	; () banked
  8913  0104AE  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8914  0104B0  6EDA               	movwf	fsr2h,c
  8915  0104B2  50DF               	movf	indf2,w,c
  8916  0104B4  0100               	movlb	0	; () banked
  8917  0104B6  6F7D               	movwf	??_LCD_printString& (0+255),b
  8918  0104B8  0E06               	movlw	6
  8919  0104BA  0100               	movlb	0	; () banked
  8920  0104BC  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8921  0104BE                     u4445:
  8922  0104BE  0100               	movlb	0	; () banked
  8923  0104C0  90D8               	bcf	status,0,c
  8924  0104C2  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8925  0104C4  0100               	movlb	0	; () banked
  8926  0104C6  2F7E               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  8927  0104C8  D7FA               	goto	u4445
  8928  0104CA  0E01               	movlw	1
  8929  0104CC  0100               	movlb	0	; () banked
  8930  0104CE  177D               	andwf	??_LCD_printString& (0+255),f,b
  8931  0104D0  0100               	movlb	0	; () banked
  8932  0104D2  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8933  0104D4  5084               	movf	3972,w,c	;volatile
  8934  0104D6  0100               	movlb	0	; () banked
  8935  0104D8  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8936  0104DA  0BFD               	andlw	-3
  8937  0104DC  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8938  0104DE  6E84               	movwf	3972,c	;volatile
  8939  0104E0  0EC6               	movlw	low LCD_printString@string
  8940  0104E2  0102               	movlb	2	; () banked
  8941  0104E4  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8942  0104E6  6ED9               	movwf	fsr2l,c
  8943  0104E8  0E02               	movlw	high LCD_printString@string
  8944  0104EA  0102               	movlb	2	; () banked
  8945  0104EC  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8946  0104EE  6EDA               	movwf	fsr2h,c
  8947  0104F0  50DF               	movf	indf2,w,c
  8948  0104F2  0100               	movlb	0	; () banked
  8949  0104F4  6F7D               	movwf	??_LCD_printString& (0+255),b
  8950  0104F6  0E05               	movlw	5
  8951  0104F8  0100               	movlb	0	; () banked
  8952  0104FA  6F7E               	movwf	(??_LCD_printString+1)& (0+255),b
  8953  0104FC                     u4455:
  8954  0104FC  0100               	movlb	0	; () banked
  8955  0104FE  90D8               	bcf	status,0,c
  8956  010500  337D               	rrcf	??_LCD_printString& (0+255),f,b
  8957  010502  0100               	movlb	0	; () banked
  8958  010504  2F7E               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  8959  010506  D7FA               	goto	u4455
  8960  010508  0E01               	movlw	1
  8961  01050A  0100               	movlb	0	; () banked
  8962  01050C  177D               	andwf	??_LCD_printString& (0+255),f,b
  8963  01050E  5084               	movf	3972,w,c	;volatile
  8964  010510  0100               	movlb	0	; () banked
  8965  010512  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8966  010514  0BFE               	andlw	-2
  8967  010516  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8968  010518  6E84               	movwf	3972,c	;volatile
  8969  01051A  0EC6               	movlw	low LCD_printString@string
  8970  01051C  0102               	movlb	2	; () banked
  8971  01051E  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8972  010520  6ED9               	movwf	fsr2l,c
  8973  010522  0E02               	movlw	high LCD_printString@string
  8974  010524  0102               	movlb	2	; () banked
  8975  010526  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  8976  010528  6EDA               	movwf	fsr2h,c
  8977  01052A  50DF               	movf	indf2,w,c
  8978  01052C  0100               	movlb	0	; () banked
  8979  01052E  6F7D               	movwf	??_LCD_printString& (0+255),b
  8980  010530  0100               	movlb	0	; () banked
  8981  010532  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  8982  010534  0E0F               	movlw	15
  8983  010536  177D               	andwf	??_LCD_printString& (0+255),f,b
  8984  010538  0E01               	movlw	1
  8985  01053A  0100               	movlb	0	; () banked
  8986  01053C  177D               	andwf	??_LCD_printString& (0+255),f,b
  8987  01053E  0100               	movlb	0	; () banked
  8988  010540  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8989  010542  477D               	rlncf	??_LCD_printString& (0+255),f,b
  8990  010544  5084               	movf	3972,w,c	;volatile
  8991  010546  0100               	movlb	0	; () banked
  8992  010548  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8993  01054A  0BFB               	andlw	-5
  8994  01054C  197D               	xorwf	??_LCD_printString& (0+255),w,b
  8995  01054E  6E84               	movwf	3972,c	;volatile
  8996  010550  0EC6               	movlw	low LCD_printString@string
  8997  010552  0102               	movlb	2	; () banked
  8998  010554  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  8999  010556  6ED9               	movwf	fsr2l,c
  9000  010558  0E02               	movlw	high LCD_printString@string
  9001  01055A  0102               	movlb	2	; () banked
  9002  01055C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9003  01055E  6EDA               	movwf	fsr2h,c
  9004  010560  50DF               	movf	indf2,w,c
  9005  010562  0100               	movlb	0	; () banked
  9006  010564  6F7D               	movwf	??_LCD_printString& (0+255),b
  9007  010566  0100               	movlb	0	; () banked
  9008  010568  90D8               	bcf	status,0,c
  9009  01056A  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9010  01056C  0100               	movlb	0	; () banked
  9011  01056E  90D8               	bcf	status,0,c
  9012  010570  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9013  010572  0100               	movlb	0	; () banked
  9014  010574  90D8               	bcf	status,0,c
  9015  010576  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9016  010578  0E01               	movlw	1
  9017  01057A  0100               	movlb	0	; () banked
  9018  01057C  177D               	andwf	??_LCD_printString& (0+255),f,b
  9019  01057E  5087               	movf	3975,w,c	;volatile
  9020  010580  0100               	movlb	0	; () banked
  9021  010582  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9022  010584  0BFE               	andlw	-2
  9023  010586  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9024  010588  6E87               	movwf	3975,c	;volatile
  9025  01058A  0EC6               	movlw	low LCD_printString@string
  9026  01058C  0102               	movlb	2	; () banked
  9027  01058E  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9028  010590  6ED9               	movwf	fsr2l,c
  9029  010592  0E02               	movlw	high LCD_printString@string
  9030  010594  0102               	movlb	2	; () banked
  9031  010596  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9032  010598  6EDA               	movwf	fsr2h,c
  9033  01059A  50DF               	movf	indf2,w,c
  9034  01059C  0100               	movlb	0	; () banked
  9035  01059E  6F7D               	movwf	??_LCD_printString& (0+255),b
  9036  0105A0  0100               	movlb	0	; () banked
  9037  0105A2  90D8               	bcf	status,0,c
  9038  0105A4  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9039  0105A6  0100               	movlb	0	; () banked
  9040  0105A8  90D8               	bcf	status,0,c
  9041  0105AA  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9042  0105AC  0E01               	movlw	1
  9043  0105AE  0100               	movlb	0	; () banked
  9044  0105B0  177D               	andwf	??_LCD_printString& (0+255),f,b
  9045  0105B2  0100               	movlb	0	; () banked
  9046  0105B4  477D               	rlncf	??_LCD_printString& (0+255),f,b
  9047  0105B6  5087               	movf	3975,w,c	;volatile
  9048  0105B8  0100               	movlb	0	; () banked
  9049  0105BA  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9050  0105BC  0BFD               	andlw	-3
  9051  0105BE  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9052  0105C0  6E87               	movwf	3975,c	;volatile
  9053  0105C2  0EC6               	movlw	low LCD_printString@string
  9054  0105C4  0102               	movlb	2	; () banked
  9055  0105C6  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9056  0105C8  6ED9               	movwf	fsr2l,c
  9057  0105CA  0E02               	movlw	high LCD_printString@string
  9058  0105CC  0102               	movlb	2	; () banked
  9059  0105CE  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9060  0105D0  6EDA               	movwf	fsr2h,c
  9061  0105D2  50DF               	movf	indf2,w,c
  9062  0105D4  0100               	movlb	0	; () banked
  9063  0105D6  6F7D               	movwf	??_LCD_printString& (0+255),b
  9064  0105D8  0100               	movlb	0	; () banked
  9065  0105DA  90D8               	bcf	status,0,c
  9066  0105DC  337D               	rrcf	??_LCD_printString& (0+255),f,b
  9067  0105DE  0E01               	movlw	1
  9068  0105E0  0100               	movlb	0	; () banked
  9069  0105E2  177D               	andwf	??_LCD_printString& (0+255),f,b
  9070  0105E4  0100               	movlb	0	; () banked
  9071  0105E6  477D               	rlncf	??_LCD_printString& (0+255),f,b
  9072  0105E8  477D               	rlncf	??_LCD_printString& (0+255),f,b
  9073  0105EA  5087               	movf	3975,w,c	;volatile
  9074  0105EC  0100               	movlb	0	; () banked
  9075  0105EE  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9076  0105F0  0BFB               	andlw	-5
  9077  0105F2  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9078  0105F4  6E87               	movwf	3975,c	;volatile
  9079  0105F6  0EC6               	movlw	low LCD_printString@string
  9080  0105F8  0102               	movlb	2	; () banked
  9081  0105FA  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9082  0105FC  6ED9               	movwf	fsr2l,c
  9083  0105FE  0E02               	movlw	high LCD_printString@string
  9084  010600  0102               	movlb	2	; () banked
  9085  010602  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9086  010604  6EDA               	movwf	fsr2h,c
  9087  010606  50DF               	movf	indf2,w,c
  9088  010608  0100               	movlb	0	; () banked
  9089  01060A  6F7D               	movwf	??_LCD_printString& (0+255),b
  9090  01060C  0E01               	movlw	1
  9091  01060E  0100               	movlb	0	; () banked
  9092  010610  177D               	andwf	??_LCD_printString& (0+255),f,b
  9093  010612  0100               	movlb	0	; () banked
  9094  010614  3B7D               	swapf	??_LCD_printString& (0+255),f,b
  9095  010616  477D               	rlncf	??_LCD_printString& (0+255),f,b
  9096  010618  5084               	movf	3972,w,c	;volatile
  9097  01061A  0100               	movlb	0	; () banked
  9098  01061C  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9099  01061E  0BDF               	andlw	-33
  9100  010620  197D               	xorwf	??_LCD_printString& (0+255),w,b
  9101  010622  6E84               	movwf	3972,c	;volatile
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;LCD.c: 382: delay_us(40);;
  9105  010624  0E28               	movlw	40
  9106  010626  6E20               	movwf	delay_us@x,c
  9107  010628  0E00               	movlw	0
  9108  01062A  6E21               	movwf	delay_us@x+1,c
  9109  01062C  0E00               	movlw	0
  9110  01062E  6E22               	movwf	delay_us@x+2,c
  9111  010630  0E00               	movlw	0
  9112  010632  6E23               	movwf	delay_us@x+3,c
  9113  010634  EC2F  F091         	call	_delay_us	;wreg free
  9114  010638                     l6539:
  9115                           
  9116                           ;LCD.c: 383: PORTEbits.RE4 = 0;
  9117  010638  9884               	bcf	3972,4,c	;volatile
  9118                           
  9119                           ;LCD.c: 385: }
  9120                           
  9121                           ;LCD.c: 384: break;
  9122  01063A  D008               	goto	l6545
  9123  01063C                     l6543:
  9124  01063C  503D               	movf	_mode,w,c	;volatile
  9125                           
  9126                           ; Switch size 1, requested type "space"
  9127                           ; Number of cases is 2, Range of values is 1 to 2
  9128                           ; switch strategies available:
  9129                           ; Name         Instructions Cycles
  9130                           ; simple_byte            7     4 (average)
  9131                           ;	Chosen strategy is simple_byte
  9132  01063E  0A01               	xorlw	1	; case 1
  9133  010640  B4D8               	btfsc	status,2,c
  9134  010642  D602               	goto	l6509
  9135  010644  0A03               	xorlw	3	; case 2
  9136  010646  B4D8               	btfsc	status,2,c
  9137  010648  D70F               	goto	l116
  9138  01064A  D000               	goto	l6545
  9139  01064C                     l6545:
  9140                           
  9141                           ;LCD.c: 386: delay_ms(2);
  9142  01064C  0E02               	movlw	2
  9143  01064E  0100               	movlb	0	; () banked
  9144  010650  6F60               	movwf	delay_ms@x& (0+255),b
  9145  010652  0E00               	movlw	0
  9146  010654  6F61               	movwf	(delay_ms@x+1)& (0+255),b
  9147  010656  0E00               	movlw	0
  9148  010658  6F62               	movwf	(delay_ms@x+2)& (0+255),b
  9149  01065A  0E00               	movlw	0
  9150  01065C  6F63               	movwf	(delay_ms@x+3)& (0+255),b
  9151  01065E  EC2F  F08E         	call	_delay_ms	;wreg free
  9152                           
  9153                           ;LCD.c: 387: PORTDbits.RD0 = 0;
  9154  010662  9083               	bcf	3971,0,c	;volatile
  9155  010664  D000               	goto	l6549
  9156  010666                     l6549:
  9157  010666  0102               	movlb	2	; () banked
  9158  010668  4BE3               	infsnz	LCD_printString@i_591& (0+255),f,b
  9159  01066A  2BE4               	incf	(LCD_printString@i_591+1)& (0+255),f,b
  9160  01066C  D000               	goto	l6551
  9161  01066E                     l6551:
  9162                           
  9163                           ; BSR set to: 2
  9164  01066E  0EC6               	movlw	low LCD_printString@string
  9165  010670  0102               	movlb	2	; () banked
  9166  010672  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9167  010674  6ED9               	movwf	fsr2l,c
  9168  010676  0E02               	movlw	high LCD_printString@string
  9169  010678  0102               	movlb	2	; () banked
  9170  01067A  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9171  01067C  6EDA               	movwf	fsr2h,c
  9172  01067E  50DF               	movf	indf2,w,c
  9173  010680  B4D8               	btfsc	status,2,c
  9174  010682  0012               	return	
  9175                           
  9176                           ; BSR set to: 2
  9177  010684  0102               	movlb	2	; () banked
  9178  010686  BFE4               	btfsc	(LCD_printString@i_591+1)& (0+255),7,b
  9179  010688  D5BF               	goto	l6501
  9180  01068A  0102               	movlb	2	; () banked
  9181  01068C  51E4               	movf	(LCD_printString@i_591+1)& (0+255),w,b
  9182  01068E  E107               	bnz	l120
  9183  010690  0EC8               	movlw	200
  9184  010692  0102               	movlb	2	; () banked
  9185  010694  5DE3               	subwf	LCD_printString@i_591& (0+255),w,b
  9186  010696  B0D8               	btfsc	status,0,c
  9187  010698  0012               	return	
  9188  01069A  D5B6               	goto	l6501
  9189                           
  9190                           ; BSR set to: 2
  9191  01069C  0012               	return	
  9192  01069E                     l120:
  9193                           
  9194                           ; BSR set to: 2
  9195  01069E  0012               	return		;funcret
  9196  0106A0                     __end_of_LCD_printString:
  9197                           	opt stack 0
  9198                           tblptru	equ	0xFF8
  9199                           tblptrh	equ	0xFF7
  9200                           tblptrl	equ	0xFF6
  9201                           tablat	equ	0xFF5
  9202                           prodh	equ	0xFF4
  9203                           prodl	equ	0xFF3
  9204                           intcon	equ	0xFF2
  9205                           intcon2	equ	0xFF1
  9206                           intcon3	equ	0xFF0
  9207                           indf0	equ	0xFEF
  9208                           postinc0	equ	0xFEE
  9209                           fsr0h	equ	0xFEA
  9210                           fsr0l	equ	0xFE9
  9211                           wreg	equ	0xFE8
  9212                           indf1	equ	0xFE7
  9213                           postdec1	equ	0xFE5
  9214                           plusw1	equ	0xFE3
  9215                           fsr1h	equ	0xFE2
  9216                           fsr1l	equ	0xFE1
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           plusw2	equ	0xFDB
  9221                           fsr2h	equ	0xFDA
  9222                           fsr2l	equ	0xFD9
  9223                           status	equ	0xFD8
  9224                           
  9225 ;; *************** function _strcat *****************
  9226 ;; Defined at:
  9227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  to              2   31[COMRAM] PTR unsigned char 
  9230 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  9231 ;;  from            2   33[COMRAM] PTR const unsigned char 
  9232 ;;		 -> UART_transmitString@tempString_1921(2), UART_transmitString@tempString(20), STR_15(2), LCD_printString@tempStrin
      +g_590(2), 
  9233 ;;		 -> LCD_printString@tempString(20), STR_1(2), 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  cp              2   35[COMRAM] PTR unsigned char 
  9236 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  2   31[COMRAM] PTR unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;Total ram usage:        6 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    3
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_LCD_printString
  9257 ;;		_UART_transmitString
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text36
  9262  0120A6                     __ptext36:
  9263                           	opt stack 0
  9264  0120A6                     _strcat:
  9265                           	opt stack 25
  9266                           
  9267                           ; BSR set to: 2
  9268                           ;incstack = 0
  9269  0120A6  C020  F024         	movff	strcat@to,strcat@cp
  9270  0120AA  C021  F025         	movff	strcat@to+1,strcat@cp+1
  9271  0120AE  D003               	goto	l6325
  9272  0120B0                     l6323:
  9273  0120B0  4A24               	infsnz	strcat@cp,f,c
  9274  0120B2  2A25               	incf	strcat@cp+1,f,c
  9275  0120B4  D000               	goto	l6325
  9276  0120B6                     l6325:
  9277  0120B6  C024  FFD9         	movff	strcat@cp,fsr2l
  9278  0120BA  C025  FFDA         	movff	strcat@cp+1,fsr2h
  9279  0120BE  50DF               	movf	indf2,w,c
  9280  0120C0  B4D8               	btfsc	status,2,c
  9281  0120C2  D007               	goto	l6329
  9282  0120C4  D7F5               	goto	l6323
  9283  0120C6  D005               	goto	l6329
  9284  0120C8                     l6327:
  9285  0120C8  4A24               	infsnz	strcat@cp,f,c
  9286  0120CA  2A25               	incf	strcat@cp+1,f,c
  9287  0120CC  4A22               	infsnz	strcat@from,f,c
  9288  0120CE  2A23               	incf	strcat@from+1,f,c
  9289  0120D0  D000               	goto	l6329
  9290  0120D2                     l6329:
  9291  0120D2  C022  FFF6         	movff	strcat@from,tblptrl
  9292  0120D6  C023  FFF7         	movff	strcat@from+1,tblptrh
  9293  0120DA  0E00               	movlw	low (__mediumconst shr (0+16))
  9294  0120DC  6EF8               	movwf	tblptru,c
  9295  0120DE  C024  FFD9         	movff	strcat@cp,fsr2l
  9296  0120E2  C025  FFDA         	movff	strcat@cp+1,fsr2h
  9297  0120E6  0E0D               	movlw	(high __ramtop+-1)
  9298  0120E8  64F7               	cpfsgt	tblptrh,c
  9299  0120EA  D003               	bra	u4157
  9300  0120EC  0008               	tblrd		*
  9301  0120EE  50F5               	movf	tablat,w,c
  9302  0120F0  D005               	bra	u4150
  9303  0120F2                     u4157:
  9304  0120F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  9305  0120F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  9306  0120FA  50EF               	movf	indf0,w,c
  9307  0120FC                     u4150:
  9308  0120FC  6EDF               	movwf	indf2,c
  9309  0120FE  50DF               	movf	indf2,w,c
  9310  012100  A4D8               	btfss	status,2,c
  9311  012102  D7E2               	goto	l6327
  9312                           
  9313                           ;	Return value of _strcat is never used
  9314  012104  0012               	return		;funcret
  9315  012106                     __end_of_strcat:
  9316                           	opt stack 0
  9317                           tblptru	equ	0xFF8
  9318                           tblptrh	equ	0xFF7
  9319                           tblptrl	equ	0xFF6
  9320                           tablat	equ	0xFF5
  9321                           prodh	equ	0xFF4
  9322                           prodl	equ	0xFF3
  9323                           intcon	equ	0xFF2
  9324                           intcon2	equ	0xFF1
  9325                           intcon3	equ	0xFF0
  9326                           indf0	equ	0xFEF
  9327                           postinc0	equ	0xFEE
  9328                           fsr0h	equ	0xFEA
  9329                           fsr0l	equ	0xFE9
  9330                           wreg	equ	0xFE8
  9331                           indf1	equ	0xFE7
  9332                           postdec1	equ	0xFE5
  9333                           plusw1	equ	0xFE3
  9334                           fsr1h	equ	0xFE2
  9335                           fsr1l	equ	0xFE1
  9336                           indf2	equ	0xFDF
  9337                           postinc2	equ	0xFDE
  9338                           postdec2	equ	0xFDD
  9339                           plusw2	equ	0xFDB
  9340                           fsr2h	equ	0xFDA
  9341                           fsr2l	equ	0xFD9
  9342                           status	equ	0xFD8
  9343                           
  9344 ;; *************** function _sprintf *****************
  9345 ;; Defined at:
  9346 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  sp              2    7[BANK0 ] PTR unsigned char 
  9349 ;;		 -> UART_transmitString@tempString(20), LCD_printString@tempString(20), 
  9350 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  9351 ;;		 -> STR_16(3), STR_2(3), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;  tmpval          4    0        struct .
  9354 ;;  cp              3    0        PTR const unsigned char 
  9355 ;;  val             2   17[BANK0 ] unsigned int 
  9356 ;;  ap              2   13[BANK0 ] PTR void [1]
  9357 ;;		 -> ?_sprintf(2), 
  9358 ;;  len             2    0        unsigned int 
  9359 ;;  c               1   19[BANK0 ] char 
  9360 ;;  prec            1   16[BANK0 ] char 
  9361 ;;  flag            1   15[BANK0 ] unsigned char 
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  2    7[BANK0 ] int 
  9364 ;; Registers used:
  9365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9371 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;Total ram usage:       14 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; Hardware stack levels required when called:    4
  9378 ;; This function calls:
  9379 ;;		___lwdiv
  9380 ;;		___lwmod
  9381 ;; This function is called by:
  9382 ;;		_LCD_printString
  9383 ;;		_UART_transmitString
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text37
  9388  0111F4                     __ptext37:
  9389                           	opt stack 0
  9390  0111F4                     _sprintf:
  9391                           	opt stack 24
  9392                           
  9393                           ;doprnt.c: 494: va_list ap;
  9394                           ;doprnt.c: 499: signed char c;
  9395                           ;doprnt.c: 506: signed char prec;
  9396                           ;doprnt.c: 508: unsigned char flag;
  9397                           ;doprnt.c: 523: union {
  9398                           ;doprnt.c: 524: unsigned long vd;
  9399                           ;doprnt.c: 525: double integ;
  9400                           ;doprnt.c: 526: } tmpval;
  9401                           ;doprnt.c: 528: unsigned int val;
  9402                           ;doprnt.c: 529: unsigned len;
  9403                           ;doprnt.c: 530: const char * cp;
  9404                           ;doprnt.c: 533: *ap = __va_start();
  9405                           
  9406                           ;incstack = 0
  9407  0111F4  0E6B               	movlw	low (?_sprintf+4)
  9408  0111F6  0100               	movlb	0	; () banked
  9409  0111F8  6F6D               	movwf	sprintf@ap& (0+255),b
  9410  0111FA  0E00               	movlw	high (?_sprintf+4)
  9411  0111FC  0100               	movlb	0	; () banked
  9412  0111FE  6F6E               	movwf	(sprintf@ap+1)& (0+255),b
  9413                           
  9414                           ;doprnt.c: 536: while(c = *f++) {
  9415  011200  D0B9               	goto	l6385
  9416  011202                     l6333:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;doprnt.c: 538: if(c != '%')
  9420  011202  0E25               	movlw	37
  9421  011204  0100               	movlb	0	; () banked
  9422  011206  1973               	xorwf	sprintf@c& (0+255),w,b
  9423  011208  B4D8               	btfsc	status,2,c
  9424  01120A  D00A               	goto	l6339
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;doprnt.c: 540: {
  9428                           ;doprnt.c: 541: ((*sp++ = (c)));
  9429  01120C  C067  FFD9         	movff	sprintf@sp,fsr2l
  9430  011210  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  9431  011214  C073  FFDF         	movff	sprintf@c,indf2
  9432                           
  9433                           ; BSR set to: 0
  9434  011218  0100               	movlb	0	; () banked
  9435  01121A  4B67               	infsnz	sprintf@sp& (0+255),f,b
  9436  01121C  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  9437                           
  9438                           ;doprnt.c: 542: continue;
  9439  01121E  D0AA               	goto	l6385
  9440  011220                     l6339:
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;doprnt.c: 543: }
  9444                           ;doprnt.c: 548: flag = 0;
  9445  011220  0E00               	movlw	0
  9446  011222  0100               	movlb	0	; () banked
  9447  011224  6F6F               	movwf	sprintf@flag& (0+255),b
  9448                           
  9449                           ;doprnt.c: 635: switch(c = *f++) {
  9450  011226  D004               	goto	l6343
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;doprnt.c: 638: goto alldone;
  9454                           
  9455                           ;doprnt.c: 637: case 0:
  9456  011228  D0B7               	goto	l6387
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;doprnt.c: 698: case 'i':
  9460                           ;doprnt.c: 699: break;
  9461                           
  9462                           ; BSR set to: 0
  9463                           
  9464                           ;doprnt.c: 697: case 'd':
  9465  01122A  D019               	goto	l6345
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;doprnt.c: 813: continue;
  9469                           
  9470                           ;doprnt.c: 802: default:
  9471  01122C  D0A3               	goto	l6385
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;doprnt.c: 822: }
  9475  01122E  D017               	goto	l6345
  9476  011230                     l6343:
  9477                           
  9478                           ; BSR set to: 0
  9479  011230  C069  FFF6         	movff	sprintf@f,tblptrl
  9480  011234  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  9481  011238  0100               	movlb	0	; () banked
  9482  01123A  4B69               	infsnz	sprintf@f& (0+255),f,b
  9483  01123C  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  9484  01123E                     	if	0	;tblptru may be non-zero
  9485  01123E                     	endif
  9486  01123E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9487  01123E  0E00               	movlw	low (__mediumconst shr (0+16))
  9488  011240  6EF8               	movwf	tblptru,c
  9489  011242                     	endif
  9490  011242  0008               	tblrd		*
  9491  011244  CFF5 F073          	movff	tablat,sprintf@c
  9492  011248  0100               	movlb	0	; () banked
  9493  01124A  5173               	movf	sprintf@c& (0+255),w,b
  9494                           
  9495                           ; Switch size 1, requested type "space"
  9496                           ; Number of cases is 3, Range of values is 0 to 105
  9497                           ; switch strategies available:
  9498                           ; Name         Instructions Cycles
  9499                           ; simple_byte           10     6 (average)
  9500                           ;	Chosen strategy is simple_byte
  9501  01124C  0A00               	xorlw	0	; case 0
  9502  01124E  B4D8               	btfsc	status,2,c
  9503  011250  D0A3               	goto	l6387
  9504  011252  0A64               	xorlw	100	; case 100
  9505  011254  B4D8               	btfsc	status,2,c
  9506  011256  D003               	goto	l6345
  9507  011258  0A0D               	xorlw	13	; case 105
  9508  01125A  A4D8               	btfss	status,2,c
  9509  01125C  D08B               	goto	l6385
  9510  01125E                     l6345:
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;doprnt.c: 1253: {
  9514                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9515  01125E  C06D  FFD9         	movff	sprintf@ap,fsr2l
  9516  011262  C06E  FFDA         	movff	sprintf@ap+1,fsr2h
  9517  011266  CFDE F071          	movff	postinc2,sprintf@val
  9518  01126A  CFDD F072          	movff	postdec2,sprintf@val+1
  9519                           
  9520                           ; BSR set to: 0
  9521  01126E  0E02               	movlw	2
  9522  011270  0100               	movlb	0	; () banked
  9523  011272  276D               	addwf	sprintf@ap& (0+255),f,b
  9524  011274  0E00               	movlw	0
  9525  011276  236E               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;doprnt.c: 1261: if((int)val < 0) {
  9529  011278  0100               	movlb	0	; () banked
  9530  01127A  AF72               	btfss	(sprintf@val+1)& (0+255),7,b
  9531  01127C  D009               	goto	l6355
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;doprnt.c: 1262: flag |= 0x03;
  9535  01127E  0E03               	movlw	3
  9536  011280  0100               	movlb	0	; () banked
  9537  011282  136F               	iorwf	sprintf@flag& (0+255),f,b
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;doprnt.c: 1263: val = -val;
  9541  011284  0100               	movlb	0	; () banked
  9542  011286  6D71               	negf	sprintf@val& (0+255),b
  9543  011288  1F72               	comf	(sprintf@val+1)& (0+255),f,b
  9544  01128A  B0D8               	btfsc	status,0,c
  9545  01128C  2B72               	incf	(sprintf@val+1)& (0+255),f,b
  9546  01128E  D000               	goto	l6355
  9547  011290                     l6355:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;doprnt.c: 1264: }
  9551                           ;doprnt.c: 1266: }
  9552                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9553  011290  0E01               	movlw	1
  9554  011292  0100               	movlb	0	; () banked
  9555  011294  6F73               	movwf	sprintf@c& (0+255),b
  9556  011296                     l6357:
  9557                           
  9558                           ; BSR set to: 0
  9559  011296  0E05               	movlw	5
  9560  011298  0100               	movlb	0	; () banked
  9561  01129A  1973               	xorwf	sprintf@c& (0+255),w,b
  9562  01129C  B4D8               	btfsc	status,2,c
  9563  01129E  D01D               	goto	l6369
  9564  0112A0  D001               	goto	l6361
  9565                           
  9566                           ; BSR set to: 0
  9567  0112A2  D01B               	goto	l6369
  9568  0112A4                     l6361:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;doprnt.c: 1306: if(val < dpowers[c])
  9572  0112A4  0100               	movlb	0	; () banked
  9573  0112A6  5173               	movf	sprintf@c& (0+255),w,b
  9574  0112A8  0D02               	mullw	2
  9575  0112AA  0ED3               	movlw	low _dpowers
  9576  0112AC  24F3               	addwf	prodl,w,c
  9577  0112AE  6EF6               	movwf	tblptrl,c
  9578  0112B0  0EFE               	movlw	high _dpowers
  9579  0112B2  20F4               	addwfc	prodh,w,c
  9580  0112B4  6EF7               	movwf	tblptrh,c
  9581  0112B6                     	if	1	;There are 3 active tblptr bytes
  9582  0112B6  6AF8               	clrf	tblptru,c
  9583  0112B8  0E00               	movlw	low (__mediumconst shr (0+16))
  9584  0112BA  22F8               	addwfc	tblptru,f,c
  9585  0112BC                     	endif
  9586  0112BC  0009               	tblrd		*+
  9587  0112BE  50F5               	movf	tablat,w,c
  9588  0112C0  0100               	movlb	0	; () banked
  9589  0112C2  5D71               	subwf	sprintf@val& (0+255),w,b
  9590  0112C4  0009               	tblrd		*+
  9591  0112C6  50F5               	movf	tablat,w,c
  9592  0112C8  0100               	movlb	0	; () banked
  9593  0112CA  5972               	subwfb	(sprintf@val+1)& (0+255),w,b
  9594  0112CC  A0D8               	btfss	status,0,c
  9595  0112CE  D005               	goto	l6369
  9596  0112D0  D001               	goto	l6365
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;doprnt.c: 1307: break;
  9600  0112D2  D003               	goto	l6369
  9601  0112D4                     l6365:
  9602                           
  9603                           ; BSR set to: 0
  9604  0112D4  0100               	movlb	0	; () banked
  9605  0112D6  2B73               	incf	sprintf@c& (0+255),f,b
  9606  0112D8  D7DE               	goto	l6357
  9607  0112DA                     l6369:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;doprnt.c: 1422: {
  9611                           ;doprnt.c: 1438: if(flag & 0x03)
  9612  0112DA  C06F  F025         	movff	sprintf@flag,??_sprintf
  9613  0112DE  0E03               	movlw	3
  9614  0112E0  1625               	andwf	??_sprintf,f,c
  9615  0112E2  B4D8               	btfsc	status,2,c
  9616  0112E4  D00A               	goto	l6375
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9620  0112E6  C067  FFD9         	movff	sprintf@sp,fsr2l
  9621  0112EA  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  9622  0112EE  0E2D               	movlw	45
  9623  0112F0  6EDF               	movwf	indf2,c
  9624                           
  9625                           ; BSR set to: 0
  9626  0112F2  0100               	movlb	0	; () banked
  9627  0112F4  4B67               	infsnz	sprintf@sp& (0+255),f,b
  9628  0112F6  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  9629  0112F8  D000               	goto	l6375
  9630  0112FA                     l6375:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;doprnt.c: 1469: }
  9634                           ;doprnt.c: 1472: prec = c;
  9635  0112FA  C073  F070         	movff	sprintf@c,sprintf@prec
  9636                           
  9637                           ;doprnt.c: 1474: while(prec--) {
  9638  0112FE  D032               	goto	l6383
  9639  011300                     l6377:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;doprnt.c: 1478: {
  9643                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9644  011300  0100               	movlb	0	; () banked
  9645  011302  5170               	movf	sprintf@prec& (0+255),w,b
  9646  011304  0D02               	mullw	2
  9647  011306  0ED3               	movlw	low _dpowers
  9648  011308  24F3               	addwf	prodl,w,c
  9649  01130A  6EF6               	movwf	tblptrl,c
  9650  01130C  0EFE               	movlw	high _dpowers
  9651  01130E  20F4               	addwfc	prodh,w,c
  9652  011310  6EF7               	movwf	tblptrh,c
  9653  011312                     	if	1	;There are 3 active tblptr bytes
  9654  011312  6AF8               	clrf	tblptru,c
  9655  011314  0E00               	movlw	low (__mediumconst shr (0+16))
  9656  011316  22F8               	addwfc	tblptru,f,c
  9657  011318                     	endif
  9658  011318  0009               	tblrd		*+
  9659  01131A  CFF5 F022          	movff	tablat,___lwdiv@divisor
  9660  01131E  000A               	tblrd		*-
  9661  011320  CFF5 F023          	movff	tablat,___lwdiv@divisor+1
  9662  011324  C071  F020         	movff	sprintf@val,___lwdiv@dividend
  9663  011328  C072  F021         	movff	sprintf@val+1,___lwdiv@dividend+1
  9664  01132C  ECEC  F08F         	call	___lwdiv	;wreg free
  9665  011330  C020  F063         	movff	?___lwdiv,___lwmod@dividend
  9666  011334  C021  F064         	movff	?___lwdiv+1,___lwmod@dividend+1
  9667  011338  0E00               	movlw	0
  9668  01133A  0100               	movlb	0	; () banked
  9669  01133C  6F66               	movwf	(___lwmod@divisor+1)& (0+255),b
  9670  01133E  0E0A               	movlw	10
  9671  011340  6F65               	movwf	___lwmod@divisor& (0+255),b
  9672  011342  EC20  F090         	call	___lwmod	;wreg free
  9673  011346  0100               	movlb	0	; () banked
  9674  011348  5163               	movf	?___lwmod& (0+255),w,b
  9675  01134A  0F30               	addlw	48
  9676  01134C  0100               	movlb	0	; () banked
  9677  01134E  6F73               	movwf	sprintf@c& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;doprnt.c: 1523: }
  9681                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9682  011350  C067  FFD9         	movff	sprintf@sp,fsr2l
  9683  011354  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  9684  011358  C073  FFDF         	movff	sprintf@c,indf2
  9685                           
  9686                           ; BSR set to: 0
  9687  01135C  0100               	movlb	0	; () banked
  9688  01135E  4B67               	infsnz	sprintf@sp& (0+255),f,b
  9689  011360  2B68               	incf	(sprintf@sp+1)& (0+255),f,b
  9690  011362  D000               	goto	l6383
  9691  011364                     l6383:
  9692                           
  9693                           ; BSR set to: 0
  9694  011364  0100               	movlb	0	; () banked
  9695  011366  0770               	decf	sprintf@prec& (0+255),f,b
  9696  011368  0100               	movlb	0	; () banked
  9697  01136A  2970               	incf	sprintf@prec& (0+255),w,b
  9698  01136C  B4D8               	btfsc	status,2,c
  9699  01136E  D002               	goto	l6385
  9700  011370  D7C7               	goto	l6377
  9701                           
  9702                           ; BSR set to: 0
  9703  011372  D000               	goto	l6385
  9704  011374                     l6385:
  9705                           
  9706                           ; BSR set to: 0
  9707  011374  C069  FFF6         	movff	sprintf@f,tblptrl
  9708  011378  C06A  FFF7         	movff	sprintf@f+1,tblptrh
  9709  01137C  0100               	movlb	0	; () banked
  9710  01137E  4B69               	infsnz	sprintf@f& (0+255),f,b
  9711  011380  2B6A               	incf	(sprintf@f+1)& (0+255),f,b
  9712  011382                     	if	0	;tblptru may be non-zero
  9713  011382                     	endif
  9714  011382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9715  011382  0E00               	movlw	low (__mediumconst shr (0+16))
  9716  011384  6EF8               	movwf	tblptru,c
  9717  011386                     	endif
  9718  011386  0008               	tblrd		*
  9719  011388  CFF5 F073          	movff	tablat,sprintf@c
  9720  01138C  0100               	movlb	0	; () banked
  9721  01138E  5173               	movf	sprintf@c& (0+255),w,b
  9722  011390  B4D8               	btfsc	status,2,c
  9723  011392  D002               	goto	l6387
  9724  011394  D736               	goto	l6333
  9725                           
  9726                           ; BSR set to: 0
  9727  011396  D000               	goto	l6387
  9728  011398                     l6387:
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;doprnt.c: 1538: *sp = 0;
  9732  011398  C067  FFD9         	movff	sprintf@sp,fsr2l
  9733  01139C  C068  FFDA         	movff	sprintf@sp+1,fsr2h
  9734  0113A0  0E00               	movlw	0
  9735  0113A2  6EDF               	movwf	indf2,c
  9736  0113A4  0012               	return	
  9737                           
  9738                           ; BSR set to: 0
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;doprnt.c: 1540: return 0;
  9742                           ;	Return value of _sprintf is never used
  9743  0113A6  0012               	return		;funcret
  9744  0113A8                     __end_of_sprintf:
  9745                           	opt stack 0
  9746                           tblptru	equ	0xFF8
  9747                           tblptrh	equ	0xFF7
  9748                           tblptrl	equ	0xFF6
  9749                           tablat	equ	0xFF5
  9750                           prodh	equ	0xFF4
  9751                           prodl	equ	0xFF3
  9752                           intcon	equ	0xFF2
  9753                           intcon2	equ	0xFF1
  9754                           intcon3	equ	0xFF0
  9755                           indf0	equ	0xFEF
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf1	equ	0xFE7
  9761                           postdec1	equ	0xFE5
  9762                           plusw1	equ	0xFE3
  9763                           fsr1h	equ	0xFE2
  9764                           fsr1l	equ	0xFE1
  9765                           indf2	equ	0xFDF
  9766                           postinc2	equ	0xFDE
  9767                           postdec2	equ	0xFDD
  9768                           plusw2	equ	0xFDB
  9769                           fsr2h	equ	0xFDA
  9770                           fsr2l	equ	0xFD9
  9771                           status	equ	0xFD8
  9772                           
  9773 ;; *************** function ___lwmod *****************
  9774 ;; Defined at:
  9775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  dividend        2    3[BANK0 ] unsigned int 
  9778 ;;  divisor         2    5[BANK0 ] unsigned int 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  counter         1   35[COMRAM] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  2    3[BANK0 ] unsigned int 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:        5 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    3
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_sprintf
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text38
  9805  012040                     __ptext38:
  9806                           	opt stack 0
  9807  012040                     ___lwmod:
  9808                           	opt stack 24
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;incstack = 0
  9812  012040  0100               	movlb	0	; () banked
  9813  012042  5165               	movf	___lwmod@divisor& (0+255),w,b
  9814  012044  0100               	movlb	0	; () banked
  9815  012046  1166               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9816  012048  B4D8               	btfsc	status,2,c
  9817  01204A  D028               	goto	l1834
  9818                           
  9819                           ; BSR set to: 0
  9820  01204C  0E01               	movlw	1
  9821  01204E  6E24               	movwf	___lwmod@counter,c
  9822  012050  D006               	goto	l6271
  9823  012052                     l6269:
  9824                           
  9825                           ; BSR set to: 0
  9826  012052  0100               	movlb	0	; () banked
  9827  012054  90D8               	bcf	status,0,c
  9828  012056  3765               	rlcf	___lwmod@divisor& (0+255),f,b
  9829  012058  3766               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9830  01205A  2A24               	incf	___lwmod@counter,f,c
  9831  01205C  D000               	goto	l6271
  9832  01205E                     l6271:
  9833                           
  9834                           ; BSR set to: 0
  9835  01205E  0100               	movlb	0	; () banked
  9836  012060  BF66               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  9837  012062  D002               	goto	l6273
  9838  012064  D7F6               	goto	l6269
  9839                           
  9840                           ; BSR set to: 0
  9841  012066  D000               	goto	l6273
  9842  012068                     l6273:
  9843                           
  9844                           ; BSR set to: 0
  9845  012068  0100               	movlb	0	; () banked
  9846  01206A  5165               	movf	___lwmod@divisor& (0+255),w,b
  9847  01206C  0100               	movlb	0	; () banked
  9848  01206E  5D63               	subwf	___lwmod@dividend& (0+255),w,b
  9849  012070  0100               	movlb	0	; () banked
  9850  012072  5166               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9851  012074  0100               	movlb	0	; () banked
  9852  012076  5964               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9853  012078  A0D8               	btfss	status,0,c
  9854  01207A  D009               	goto	l6277
  9855                           
  9856                           ; BSR set to: 0
  9857  01207C  0100               	movlb	0	; () banked
  9858  01207E  5165               	movf	___lwmod@divisor& (0+255),w,b
  9859  012080  0100               	movlb	0	; () banked
  9860  012082  5F63               	subwf	___lwmod@dividend& (0+255),f,b
  9861  012084  0100               	movlb	0	; () banked
  9862  012086  5166               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9863  012088  0100               	movlb	0	; () banked
  9864  01208A  5B64               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9865  01208C  D000               	goto	l6277
  9866  01208E                     l6277:
  9867                           
  9868                           ; BSR set to: 0
  9869  01208E  0100               	movlb	0	; () banked
  9870  012090  90D8               	bcf	status,0,c
  9871  012092  3366               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9872  012094  3365               	rrcf	___lwmod@divisor& (0+255),f,b
  9873                           
  9874                           ; BSR set to: 0
  9875  012096  2E24               	decfsz	___lwmod@counter,f,c
  9876  012098  D7E7               	goto	l6273
  9877  01209A  D000               	goto	l1834
  9878  01209C                     l1834:
  9879                           
  9880                           ; BSR set to: 0
  9881  01209C  C063  F063         	movff	___lwmod@dividend,?___lwmod
  9882  0120A0  C064  F064         	movff	___lwmod@dividend+1,?___lwmod+1
  9883                           
  9884                           ; BSR set to: 0
  9885  0120A4  0012               	return		;funcret
  9886  0120A6                     __end_of___lwmod:
  9887                           	opt stack 0
  9888                           tblptru	equ	0xFF8
  9889                           tblptrh	equ	0xFF7
  9890                           tblptrl	equ	0xFF6
  9891                           tablat	equ	0xFF5
  9892                           prodh	equ	0xFF4
  9893                           prodl	equ	0xFF3
  9894                           intcon	equ	0xFF2
  9895                           intcon2	equ	0xFF1
  9896                           intcon3	equ	0xFF0
  9897                           indf0	equ	0xFEF
  9898                           postinc0	equ	0xFEE
  9899                           fsr0h	equ	0xFEA
  9900                           fsr0l	equ	0xFE9
  9901                           wreg	equ	0xFE8
  9902                           indf1	equ	0xFE7
  9903                           postdec1	equ	0xFE5
  9904                           plusw1	equ	0xFE3
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           indf2	equ	0xFDF
  9908                           postinc2	equ	0xFDE
  9909                           postdec2	equ	0xFDD
  9910                           plusw2	equ	0xFDB
  9911                           fsr2h	equ	0xFDA
  9912                           fsr2l	equ	0xFD9
  9913                           status	equ	0xFD8
  9914                           
  9915 ;; *************** function ___lwdiv *****************
  9916 ;; Defined at:
  9917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  dividend        2   31[COMRAM] unsigned int 
  9920 ;;  divisor         2   33[COMRAM] unsigned int 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  quotient        2    1[BANK0 ] unsigned int 
  9923 ;;  counter         1    0[BANK0 ] unsigned char 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  2   31[COMRAM] unsigned int 
  9926 ;; Registers used:
  9927 ;;		wreg, status,2, status,0
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9936 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9937 ;;Total ram usage:        7 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    3
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		_sprintf
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           	psect	text39
  9948  011FD8                     __ptext39:
  9949                           	opt stack 0
  9950  011FD8                     ___lwdiv:
  9951                           	opt stack 24
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;incstack = 0
  9955  011FD8  0E00               	movlw	0
  9956  011FDA  0100               	movlb	0	; () banked
  9957  011FDC  6F62               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9958  011FDE  0E00               	movlw	0
  9959  011FE0  6F61               	movwf	___lwdiv@quotient& (0+255),b
  9960                           
  9961                           ; BSR set to: 0
  9962  011FE2  5022               	movf	___lwdiv@divisor,w,c
  9963  011FE4  1023               	iorwf	___lwdiv@divisor+1,w,c
  9964  011FE6  B4D8               	btfsc	status,2,c
  9965  011FE8  D026               	goto	l1824
  9966                           
  9967                           ; BSR set to: 0
  9968  011FEA  0E01               	movlw	1
  9969  011FEC  0100               	movlb	0	; () banked
  9970  011FEE  6F60               	movwf	___lwdiv@counter& (0+255),b
  9971  011FF0  D006               	goto	l6251
  9972  011FF2                     l6249:
  9973                           
  9974                           ; BSR set to: 0
  9975  011FF2  90D8               	bcf	status,0,c
  9976  011FF4  3622               	rlcf	___lwdiv@divisor,f,c
  9977  011FF6  3623               	rlcf	___lwdiv@divisor+1,f,c
  9978  011FF8  0100               	movlb	0	; () banked
  9979  011FFA  2B60               	incf	___lwdiv@counter& (0+255),f,b
  9980  011FFC  D000               	goto	l6251
  9981  011FFE                     l6251:
  9982                           
  9983                           ; BSR set to: 0
  9984  011FFE  BE23               	btfsc	___lwdiv@divisor+1,7,c
  9985  012000  D002               	goto	l6253
  9986  012002  D7F7               	goto	l6249
  9987                           
  9988                           ; BSR set to: 0
  9989  012004  D000               	goto	l6253
  9990  012006                     l6253:
  9991                           
  9992                           ; BSR set to: 0
  9993  012006  0100               	movlb	0	; () banked
  9994  012008  90D8               	bcf	status,0,c
  9995  01200A  3761               	rlcf	___lwdiv@quotient& (0+255),f,b
  9996  01200C  3762               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9997                           
  9998                           ; BSR set to: 0
  9999  01200E  5022               	movf	___lwdiv@divisor,w,c
 10000  012010  5C20               	subwf	___lwdiv@dividend,w,c
 10001  012012  5023               	movf	___lwdiv@divisor+1,w,c
 10002  012014  5821               	subwfb	___lwdiv@dividend+1,w,c
 10003  012016  A0D8               	btfss	status,0,c
 10004  012018  D007               	goto	l6261
 10005                           
 10006                           ; BSR set to: 0
 10007  01201A  5022               	movf	___lwdiv@divisor,w,c
 10008  01201C  5E20               	subwf	___lwdiv@dividend,f,c
 10009  01201E  5023               	movf	___lwdiv@divisor+1,w,c
 10010  012020  5A21               	subwfb	___lwdiv@dividend+1,f,c
 10011                           
 10012                           ; BSR set to: 0
 10013  012022  0100               	movlb	0	; () banked
 10014  012024  8161               	bsf	___lwdiv@quotient& (0+255),0,b
 10015  012026  D000               	goto	l6261
 10016  012028                     l6261:
 10017                           
 10018                           ; BSR set to: 0
 10019  012028  90D8               	bcf	status,0,c
 10020  01202A  3223               	rrcf	___lwdiv@divisor+1,f,c
 10021  01202C  3222               	rrcf	___lwdiv@divisor,f,c
 10022                           
 10023                           ; BSR set to: 0
 10024  01202E  0100               	movlb	0	; () banked
 10025  012030  2F60               	decfsz	___lwdiv@counter& (0+255),f,b
 10026  012032  D7E9               	goto	l6253
 10027  012034  D000               	goto	l1824
 10028  012036                     l1824:
 10029                           
 10030                           ; BSR set to: 0
 10031  012036  C061  F020         	movff	___lwdiv@quotient,?___lwdiv
 10032  01203A  C062  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10033                           
 10034                           ; BSR set to: 0
 10035  01203E  0012               	return		;funcret
 10036  012040                     __end_of___lwdiv:
 10037                           	opt stack 0
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           intcon2	equ	0xFF1
 10046                           intcon3	equ	0xFF0
 10047                           indf0	equ	0xFEF
 10048                           postinc0	equ	0xFEE
 10049                           fsr0h	equ	0xFEA
 10050                           fsr0l	equ	0xFE9
 10051                           wreg	equ	0xFE8
 10052                           indf1	equ	0xFE7
 10053                           postdec1	equ	0xFE5
 10054                           plusw1	equ	0xFE3
 10055                           fsr1h	equ	0xFE2
 10056                           fsr1l	equ	0xFE1
 10057                           indf2	equ	0xFDF
 10058                           postinc2	equ	0xFDE
 10059                           postdec2	equ	0xFDD
 10060                           plusw2	equ	0xFDB
 10061                           fsr2h	equ	0xFDA
 10062                           fsr2l	equ	0xFD9
 10063                           status	equ	0xFD8
 10064                           
 10065 ;; *************** function _LCD_placeCursor *****************
 10066 ;; Defined at:
 10067 ;;		line 279 in file "LCD.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  x               1    wreg     unsigned char 
 10070 ;;  y               1   35[COMRAM] unsigned char 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  x               1   20[BANK0 ] unsigned char 
 10073 ;;  address         1   21[BANK0 ] unsigned char 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;		None               void
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10083 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;Total ram usage:        7 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    5
 10090 ;; This function calls:
 10091 ;;		_delay_ms
 10092 ;;		_delay_us
 10093 ;; This function is called by:
 10094 ;;		_LCD_printString
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text40
 10099  0106A0                     __ptext40:
 10100                           	opt stack 0
 10101  0106A0                     _LCD_placeCursor:
 10102                           	opt stack 23
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;incstack = 0
 10106                           ;LCD_placeCursor@x stored from wreg
 10107  0106A0  0100               	movlb	0	; () banked
 10108  0106A2  6F74               	movwf	LCD_placeCursor@x& (0+255),b
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;LCD.c: 283: char address = 0x80 + x + (0x40 * y);
 10112  0106A4  5024               	movf	LCD_placeCursor@y,w,c
 10113  0106A6  0D40               	mullw	64
 10114  0106A8  50F3               	movf	prodl,w,c
 10115  0106AA  0100               	movlb	0	; () banked
 10116  0106AC  2574               	addwf	LCD_placeCursor@x& (0+255),w,b
 10117  0106AE  0F80               	addlw	128
 10118  0106B0  0100               	movlb	0	; () banked
 10119  0106B2  6F75               	movwf	LCD_placeCursor@address& (0+255),b
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;LCD.c: 284: delay_ms(3);
 10123  0106B4  0E03               	movlw	3
 10124  0106B6  0100               	movlb	0	; () banked
 10125  0106B8  6F60               	movwf	delay_ms@x& (0+255),b
 10126  0106BA  0E00               	movlw	0
 10127  0106BC  6F61               	movwf	(delay_ms@x+1)& (0+255),b
 10128  0106BE  0E00               	movlw	0
 10129  0106C0  6F62               	movwf	(delay_ms@x+2)& (0+255),b
 10130  0106C2  0E00               	movlw	0
 10131  0106C4  6F63               	movwf	(delay_ms@x+3)& (0+255),b
 10132  0106C6  EC2F  F08E         	call	_delay_ms	;wreg free
 10133                           
 10134                           ;LCD.c: 285: switch(mode)
 10135  0106CA  D188               	goto	l6319
 10136  0106CC                     l6285:
 10137                           
 10138                           ;LCD.c: 288: delay_us(40);;
 10139  0106CC  0E28               	movlw	40
 10140  0106CE  6E20               	movwf	delay_us@x,c
 10141  0106D0  0E00               	movlw	0
 10142  0106D2  6E21               	movwf	delay_us@x+1,c
 10143  0106D4  0E00               	movlw	0
 10144  0106D6  6E22               	movwf	delay_us@x+2,c
 10145  0106D8  0E00               	movlw	0
 10146  0106DA  6E23               	movwf	delay_us@x+3,c
 10147  0106DC  EC2F  F091         	call	_delay_us	;wreg free
 10148                           
 10149                           ;LCD.c: 289: PORTEbits.RE4 = 1;
 10150  0106E0  8884               	bsf	3972,4,c	;volatile
 10151                           
 10152                           ;LCD.c: 290: { PORTHbits.RH5 = ((0x80 + (address >> 4) >> 3) & 1); PORTEbits.RE1 = ((0x8
      +                          0 + (address >> 4) >> 2) & 1); PORTEbits.RE0 = ((0x80 + (address >> 4) >> 1) & 1); PORTE
      +                          bits.RE2 = (0x80 + (address >> 4) & 1); };
 10153  0106E2  0100               	movlb	0	; () banked
 10154  0106E4  3975               	swapf	LCD_placeCursor@address& (0+255),w,b
 10155  0106E6  0B0F               	andlw	15
 10156  0106E8  0100               	movlb	0	; () banked
 10157  0106EA  6F70               	movwf	??_LCD_placeCursor& (0+255),b
 10158  0106EC  6B71               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10159  0106EE  0E80               	movlw	128
 10160  0106F0  0100               	movlb	0	; () banked
 10161  0106F2  2770               	addwf	??_LCD_placeCursor& (0+255),f,b
 10162  0106F4  0E00               	movlw	0
 10163  0106F6  2371               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10164  0106F8  0100               	movlb	0	; () banked
 10165  0106FA  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10166  0106FC  3371               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10167  0106FE  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10168  010700  0100               	movlb	0	; () banked
 10169  010702  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10170  010704  3371               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10171  010706  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10172  010708  0100               	movlb	0	; () banked
 10173  01070A  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10174  01070C  3371               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10175  01070E  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10176  010710  0E01               	movlw	1
 10177  010712  0100               	movlb	0	; () banked
 10178  010714  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10179  010716  0100               	movlb	0	; () banked
 10180  010718  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10181  01071A  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10182  01071C  5087               	movf	3975,w,c	;volatile
 10183  01071E  0100               	movlb	0	; () banked
 10184  010720  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10185  010722  0BDF               	andlw	-33
 10186  010724  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10187  010726  6E87               	movwf	3975,c	;volatile
 10188                           
 10189                           ; BSR set to: 0
 10190  010728  0100               	movlb	0	; () banked
 10191  01072A  3975               	swapf	LCD_placeCursor@address& (0+255),w,b
 10192  01072C  0B0F               	andlw	15
 10193  01072E  0100               	movlb	0	; () banked
 10194  010730  6F70               	movwf	??_LCD_placeCursor& (0+255),b
 10195  010732  6B71               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10196  010734  0E80               	movlw	128
 10197  010736  0100               	movlb	0	; () banked
 10198  010738  2770               	addwf	??_LCD_placeCursor& (0+255),f,b
 10199  01073A  0E00               	movlw	0
 10200  01073C  2371               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10201  01073E  0100               	movlb	0	; () banked
 10202  010740  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10203  010742  3371               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10204  010744  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10205  010746  0100               	movlb	0	; () banked
 10206  010748  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10207  01074A  3371               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10208  01074C  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10209  01074E  0E01               	movlw	1
 10210  010750  0100               	movlb	0	; () banked
 10211  010752  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10212  010754  0100               	movlb	0	; () banked
 10213  010756  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10214  010758  5084               	movf	3972,w,c	;volatile
 10215  01075A  0100               	movlb	0	; () banked
 10216  01075C  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10217  01075E  0BFD               	andlw	-3
 10218  010760  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10219  010762  6E84               	movwf	3972,c	;volatile
 10220                           
 10221                           ; BSR set to: 0
 10222  010764  0100               	movlb	0	; () banked
 10223  010766  3975               	swapf	LCD_placeCursor@address& (0+255),w,b
 10224  010768  0B0F               	andlw	15
 10225  01076A  0100               	movlb	0	; () banked
 10226  01076C  6F70               	movwf	??_LCD_placeCursor& (0+255),b
 10227  01076E  6B71               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10228  010770  0E80               	movlw	128
 10229  010772  0100               	movlb	0	; () banked
 10230  010774  2770               	addwf	??_LCD_placeCursor& (0+255),f,b
 10231  010776  0E00               	movlw	0
 10232  010778  2371               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10233  01077A  0100               	movlb	0	; () banked
 10234  01077C  3571               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10235  01077E  3171               	rrcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10236  010780  0100               	movlb	0	; () banked
 10237  010782  6F73               	movwf	(??_LCD_placeCursor+3)& (0+255),b
 10238  010784  0100               	movlb	0	; () banked
 10239  010786  3170               	rrcf	??_LCD_placeCursor& (0+255),w,b
 10240  010788  0100               	movlb	0	; () banked
 10241  01078A  6F72               	movwf	(??_LCD_placeCursor+2)& (0+255),b
 10242  01078C  0E01               	movlw	1
 10243  01078E  0100               	movlb	0	; () banked
 10244  010790  1772               	andwf	(??_LCD_placeCursor+2)& (0+255),f,b
 10245  010792  5084               	movf	3972,w,c	;volatile
 10246  010794  0100               	movlb	0	; () banked
 10247  010796  1972               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
 10248  010798  0BFE               	andlw	-2
 10249  01079A  1972               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
 10250  01079C  6E84               	movwf	3972,c	;volatile
 10251                           
 10252                           ; BSR set to: 0
 10253  01079E  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10254  0107A2  0100               	movlb	0	; () banked
 10255  0107A4  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10256  0107A6  0E0F               	movlw	15
 10257  0107A8  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10258  0107AA  0E80               	movlw	128
 10259  0107AC  0100               	movlb	0	; () banked
 10260  0107AE  2770               	addwf	??_LCD_placeCursor& (0+255),f,b
 10261  0107B0  0E01               	movlw	1
 10262  0107B2  0100               	movlb	0	; () banked
 10263  0107B4  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10264  0107B6  0100               	movlb	0	; () banked
 10265  0107B8  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10266  0107BA  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10267  0107BC  5084               	movf	3972,w,c	;volatile
 10268  0107BE  0100               	movlb	0	; () banked
 10269  0107C0  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10270  0107C2  0BFB               	andlw	-5
 10271  0107C4  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10272  0107C6  6E84               	movwf	3972,c	;volatile
 10273                           
 10274                           ;LCD.c: 291: delay_us(40);;
 10275  0107C8  0E28               	movlw	40
 10276  0107CA  6E20               	movwf	delay_us@x,c
 10277  0107CC  0E00               	movlw	0
 10278  0107CE  6E21               	movwf	delay_us@x+1,c
 10279  0107D0  0E00               	movlw	0
 10280  0107D2  6E22               	movwf	delay_us@x+2,c
 10281  0107D4  0E00               	movlw	0
 10282  0107D6  6E23               	movwf	delay_us@x+3,c
 10283  0107D8  EC2F  F091         	call	_delay_us	;wreg free
 10284                           
 10285                           ;LCD.c: 292: PORTEbits.RE4 = 0;
 10286  0107DC  9884               	bcf	3972,4,c	;volatile
 10287                           
 10288                           ;LCD.c: 294: delay_us(40);;
 10289  0107DE  0E28               	movlw	40
 10290  0107E0  6E20               	movwf	delay_us@x,c
 10291  0107E2  0E00               	movlw	0
 10292  0107E4  6E21               	movwf	delay_us@x+1,c
 10293  0107E6  0E00               	movlw	0
 10294  0107E8  6E22               	movwf	delay_us@x+2,c
 10295  0107EA  0E00               	movlw	0
 10296  0107EC  6E23               	movwf	delay_us@x+3,c
 10297  0107EE  EC2F  F091         	call	_delay_us	;wreg free
 10298                           
 10299                           ;LCD.c: 295: PORTEbits.RE4 = 1;
 10300  0107F2  8884               	bsf	3972,4,c	;volatile
 10301                           
 10302                           ;LCD.c: 296: { PORTHbits.RH5 = (((address & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((address
      +                           & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((address & 0x0F) >> 1) & 1); PORTEbits.RE2 = ((ad
      +                          dress & 0x0F) & 1); };
 10303  0107F4  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10304  0107F8  0100               	movlb	0	; () banked
 10305  0107FA  90D8               	bcf	status,0,c
 10306  0107FC  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10307  0107FE  0100               	movlb	0	; () banked
 10308  010800  90D8               	bcf	status,0,c
 10309  010802  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10310  010804  0100               	movlb	0	; () banked
 10311  010806  90D8               	bcf	status,0,c
 10312  010808  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10313  01080A  0E01               	movlw	1
 10314  01080C  0100               	movlb	0	; () banked
 10315  01080E  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10316  010810  0100               	movlb	0	; () banked
 10317  010812  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10318  010814  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10319  010816  5087               	movf	3975,w,c	;volatile
 10320  010818  0100               	movlb	0	; () banked
 10321  01081A  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10322  01081C  0BDF               	andlw	-33
 10323  01081E  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10324  010820  6E87               	movwf	3975,c	;volatile
 10325                           
 10326                           ; BSR set to: 0
 10327  010822  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10328  010826  0100               	movlb	0	; () banked
 10329  010828  90D8               	bcf	status,0,c
 10330  01082A  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10331  01082C  0100               	movlb	0	; () banked
 10332  01082E  90D8               	bcf	status,0,c
 10333  010830  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10334  010832  0E01               	movlw	1
 10335  010834  0100               	movlb	0	; () banked
 10336  010836  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10337  010838  0100               	movlb	0	; () banked
 10338  01083A  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10339  01083C  5084               	movf	3972,w,c	;volatile
 10340  01083E  0100               	movlb	0	; () banked
 10341  010840  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10342  010842  0BFD               	andlw	-3
 10343  010844  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10344  010846  6E84               	movwf	3972,c	;volatile
 10345                           
 10346                           ; BSR set to: 0
 10347  010848  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10348  01084C  0100               	movlb	0	; () banked
 10349  01084E  90D8               	bcf	status,0,c
 10350  010850  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10351  010852  0E01               	movlw	1
 10352  010854  0100               	movlb	0	; () banked
 10353  010856  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10354  010858  5084               	movf	3972,w,c	;volatile
 10355  01085A  0100               	movlb	0	; () banked
 10356  01085C  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10357  01085E  0BFE               	andlw	-2
 10358  010860  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10359  010862  6E84               	movwf	3972,c	;volatile
 10360                           
 10361                           ; BSR set to: 0
 10362  010864  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10363  010868  0E01               	movlw	1
 10364  01086A  0100               	movlb	0	; () banked
 10365  01086C  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10366  01086E  0100               	movlb	0	; () banked
 10367  010870  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10368  010872  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10369  010874  5084               	movf	3972,w,c	;volatile
 10370  010876  0100               	movlb	0	; () banked
 10371  010878  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10372  01087A  0BFB               	andlw	-5
 10373  01087C  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10374  01087E  6E84               	movwf	3972,c	;volatile
 10375                           
 10376                           ;LCD.c: 297: delay_us(40);;
 10377  010880  0E28               	movlw	40
 10378  010882  6E20               	movwf	delay_us@x,c
 10379  010884  0E00               	movlw	0
 10380  010886  6E21               	movwf	delay_us@x+1,c
 10381  010888  0E00               	movlw	0
 10382  01088A  6E22               	movwf	delay_us@x+2,c
 10383  01088C  0E00               	movlw	0
 10384  01088E  6E23               	movwf	delay_us@x+3,c
 10385  010890  EC2F  F091         	call	_delay_us	;wreg free
 10386                           
 10387                           ;LCD.c: 298: PORTEbits.RE4 = 0;
 10388  010894  9884               	bcf	3972,4,c	;volatile
 10389                           
 10390                           ;LCD.c: 299: break;
 10391  010896  0012               	return	
 10392  010898                     l94:
 10393  010898  F000               	nop		;# 
 10394                           
 10395                           ;LCD.c: 303: PORTEbits.RE4 = 1;
 10396  01089A  8884               	bsf	3972,4,c	;volatile
 10397                           
 10398                           ;LCD.c: 304: { PORTHbits.RH5 = ((address >> 7) & 1); PORTEbits.RE1 = ((address >> 6) & 1
      +                          ); PORTEbits.RE0 = ((address >> 5) & 1); PORTEbits.RE2 = ((address >> 4) & 1); PORTHbits
      +                          .RH0 = ((address >> 3) & 1); PORTHbits.RH1 = ((address >> 2) & 1); PORTHbits.RH2 = ((ad
 10399  01089C  0100               	movlb	0	; () banked
 10400  01089E  6B70               	clrf	??_LCD_placeCursor& (0+255),b
 10401  0108A0  AF75               	btfss	LCD_placeCursor@address& (0+255),7,b
 10402  0108A2  D002               	bra	u4115
 10403  0108A4  0100               	movlb	0	; () banked
 10404  0108A6  2B70               	incf	??_LCD_placeCursor& (0+255),f,b
 10405  0108A8                     u4115:
 10406  0108A8  0E01               	movlw	1
 10407  0108AA  0100               	movlb	0	; () banked
 10408  0108AC  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10409  0108AE  0100               	movlb	0	; () banked
 10410  0108B0  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10411  0108B2  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10412  0108B4  5087               	movf	3975,w,c	;volatile
 10413  0108B6  0100               	movlb	0	; () banked
 10414  0108B8  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10415  0108BA  0BDF               	andlw	-33
 10416  0108BC  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10417  0108BE  6E87               	movwf	3975,c	;volatile
 10418  0108C0  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10419  0108C4  0E06               	movlw	6
 10420  0108C6  0100               	movlb	0	; () banked
 10421  0108C8  6F71               	movwf	(??_LCD_placeCursor+1)& (0+255),b
 10422  0108CA                     u4125:
 10423  0108CA  0100               	movlb	0	; () banked
 10424  0108CC  90D8               	bcf	status,0,c
 10425  0108CE  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10426  0108D0  0100               	movlb	0	; () banked
 10427  0108D2  2F71               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
 10428  0108D4  D7FA               	goto	u4125
 10429  0108D6  0E01               	movlw	1
 10430  0108D8  0100               	movlb	0	; () banked
 10431  0108DA  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10432  0108DC  0100               	movlb	0	; () banked
 10433  0108DE  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10434  0108E0  5084               	movf	3972,w,c	;volatile
 10435  0108E2  0100               	movlb	0	; () banked
 10436  0108E4  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10437  0108E6  0BFD               	andlw	-3
 10438  0108E8  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10439  0108EA  6E84               	movwf	3972,c	;volatile
 10440  0108EC  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10441  0108F0  0E05               	movlw	5
 10442  0108F2  0100               	movlb	0	; () banked
 10443  0108F4  6F71               	movwf	(??_LCD_placeCursor+1)& (0+255),b
 10444  0108F6                     u4135:
 10445  0108F6  0100               	movlb	0	; () banked
 10446  0108F8  90D8               	bcf	status,0,c
 10447  0108FA  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10448  0108FC  0100               	movlb	0	; () banked
 10449  0108FE  2F71               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
 10450  010900  D7FA               	goto	u4135
 10451  010902  0E01               	movlw	1
 10452  010904  0100               	movlb	0	; () banked
 10453  010906  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10454  010908  5084               	movf	3972,w,c	;volatile
 10455  01090A  0100               	movlb	0	; () banked
 10456  01090C  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10457  01090E  0BFE               	andlw	-2
 10458  010910  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10459  010912  6E84               	movwf	3972,c	;volatile
 10460  010914  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10461  010918  0100               	movlb	0	; () banked
 10462  01091A  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10463  01091C  0E0F               	movlw	15
 10464  01091E  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10465  010920  0E01               	movlw	1
 10466  010922  0100               	movlb	0	; () banked
 10467  010924  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10468  010926  0100               	movlb	0	; () banked
 10469  010928  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10470  01092A  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10471  01092C  5084               	movf	3972,w,c	;volatile
 10472  01092E  0100               	movlb	0	; () banked
 10473  010930  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10474  010932  0BFB               	andlw	-5
 10475  010934  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10476  010936  6E84               	movwf	3972,c	;volatile
 10477  010938  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10478  01093C  0100               	movlb	0	; () banked
 10479  01093E  90D8               	bcf	status,0,c
 10480  010940  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10481  010942  0100               	movlb	0	; () banked
 10482  010944  90D8               	bcf	status,0,c
 10483  010946  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10484  010948  0100               	movlb	0	; () banked
 10485  01094A  90D8               	bcf	status,0,c
 10486  01094C  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10487  01094E  0E01               	movlw	1
 10488  010950  0100               	movlb	0	; () banked
 10489  010952  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10490  010954  5087               	movf	3975,w,c	;volatile
 10491  010956  0100               	movlb	0	; () banked
 10492  010958  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10493  01095A  0BFE               	andlw	-2
 10494  01095C  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10495  01095E  6E87               	movwf	3975,c	;volatile
 10496  010960  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10497  010964  0100               	movlb	0	; () banked
 10498  010966  90D8               	bcf	status,0,c
 10499  010968  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10500  01096A  0100               	movlb	0	; () banked
 10501  01096C  90D8               	bcf	status,0,c
 10502  01096E  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10503  010970  0E01               	movlw	1
 10504  010972  0100               	movlb	0	; () banked
 10505  010974  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10506  010976  0100               	movlb	0	; () banked
 10507  010978  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10508  01097A  5087               	movf	3975,w,c	;volatile
 10509  01097C  0100               	movlb	0	; () banked
 10510  01097E  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10511  010980  0BFD               	andlw	-3
 10512  010982  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10513  010984  6E87               	movwf	3975,c	;volatile
 10514  010986  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10515  01098A  0100               	movlb	0	; () banked
 10516  01098C  90D8               	bcf	status,0,c
 10517  01098E  3370               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10518  010990  0E01               	movlw	1
 10519  010992  0100               	movlb	0	; () banked
 10520  010994  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10521  010996  0100               	movlb	0	; () banked
 10522  010998  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10523  01099A  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10524  01099C  5087               	movf	3975,w,c	;volatile
 10525  01099E  0100               	movlb	0	; () banked
 10526  0109A0  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10527  0109A2  0BFB               	andlw	-5
 10528  0109A4  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10529  0109A6  6E87               	movwf	3975,c	;volatile
 10530  0109A8  C075  F070         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10531  0109AC  0E01               	movlw	1
 10532  0109AE  0100               	movlb	0	; () banked
 10533  0109B0  1770               	andwf	??_LCD_placeCursor& (0+255),f,b
 10534  0109B2  0100               	movlb	0	; () banked
 10535  0109B4  3B70               	swapf	??_LCD_placeCursor& (0+255),f,b
 10536  0109B6  4770               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10537  0109B8  5084               	movf	3972,w,c	;volatile
 10538  0109BA  0100               	movlb	0	; () banked
 10539  0109BC  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10540  0109BE  0BDF               	andlw	-33
 10541  0109C0  1970               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10542  0109C2  6E84               	movwf	3972,c	;volatile
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;LCD.c: 305: delay_us(40);;
 10546  0109C4  0E28               	movlw	40
 10547  0109C6  6E20               	movwf	delay_us@x,c
 10548  0109C8  0E00               	movlw	0
 10549  0109CA  6E21               	movwf	delay_us@x+1,c
 10550  0109CC  0E00               	movlw	0
 10551  0109CE  6E22               	movwf	delay_us@x+2,c
 10552  0109D0  0E00               	movlw	0
 10553  0109D2  6E23               	movwf	delay_us@x+3,c
 10554  0109D4  EC2F  F091         	call	_delay_us	;wreg free
 10555                           
 10556                           ;LCD.c: 306: PORTEbits.RE4 = 0;
 10557  0109D8  9884               	bcf	3972,4,c	;volatile
 10558                           
 10559                           ;LCD.c: 308: }
 10560                           
 10561                           ;LCD.c: 307: break;
 10562  0109DA  0012               	return	
 10563  0109DC                     l6319:
 10564  0109DC  503D               	movf	_mode,w,c	;volatile
 10565                           
 10566                           ; Switch size 1, requested type "space"
 10567                           ; Number of cases is 2, Range of values is 1 to 2
 10568                           ; switch strategies available:
 10569                           ; Name         Instructions Cycles
 10570                           ; simple_byte            7     4 (average)
 10571                           ;	Chosen strategy is simple_byte
 10572  0109DE  0A01               	xorlw	1	; case 1
 10573  0109E0  B4D8               	btfsc	status,2,c
 10574  0109E2  D674               	goto	l6285
 10575  0109E4  0A03               	xorlw	3	; case 2
 10576  0109E6  A4D8               	btfss	status,2,c
 10577  0109E8  0012               	return	
 10578  0109EA  D756               	goto	l94
 10579  0109EC  0012               	return		;funcret
 10580  0109EE                     __end_of_LCD_placeCursor:
 10581                           	opt stack 0
 10582                           tblptru	equ	0xFF8
 10583                           tblptrh	equ	0xFF7
 10584                           tblptrl	equ	0xFF6
 10585                           tablat	equ	0xFF5
 10586                           prodh	equ	0xFF4
 10587                           prodl	equ	0xFF3
 10588                           intcon	equ	0xFF2
 10589                           intcon2	equ	0xFF1
 10590                           intcon3	equ	0xFF0
 10591                           indf0	equ	0xFEF
 10592                           postinc0	equ	0xFEE
 10593                           fsr0h	equ	0xFEA
 10594                           fsr0l	equ	0xFE9
 10595                           wreg	equ	0xFE8
 10596                           indf1	equ	0xFE7
 10597                           postdec1	equ	0xFE5
 10598                           plusw1	equ	0xFE3
 10599                           fsr1h	equ	0xFE2
 10600                           fsr1l	equ	0xFE1
 10601                           indf2	equ	0xFDF
 10602                           postinc2	equ	0xFDE
 10603                           postdec2	equ	0xFDD
 10604                           plusw2	equ	0xFDB
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function _delay_us *****************
 10610 ;; Defined at:
 10611 ;;		line 51 in file "delays.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  x               4   31[COMRAM] long 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;		None
 10616 ;; Return value:  Size  Location     Type
 10617 ;;		None               void
 10618 ;; Registers used:
 10619 ;;		wreg, status,2, status,0
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10629 ;;Total ram usage:        4 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:    3
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_LCD_init4bit
 10636 ;;		_LCD_placeCursor
 10637 ;;		_LCD_printString
 10638 ;;		_fft_init
 10639 ;;		_PS2_init
 10640 ;;		_PS2_readGamepad
 10641 ;;		_PS2_shiftInOut
 10642 ;;		_LCD_init8bit
 10643 ;;		_LCD_clearDisplay
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text41
 10648  01225E                     __ptext41:
 10649                           	opt stack 0
 10650  01225E                     _delay_us:
 10651                           	opt stack 25
 10652                           
 10653                           ;delays.c: 53: x -= 3;
 10654                           
 10655                           ;incstack = 0
 10656  01225E  0EFD               	movlw	253
 10657  012260  D005               	goto	L4
 10658  012262                     l6191:
 10659                           
 10660                           ;delays.c: 55: {
 10661                           ;delays.c: 56: _delay((unsigned long)((1)*(64000000/4000000.0)));
 10662  012262  0E05               	movlw	5
 10663  012264                     u5467:
 10664  012264  2EE8               	decfsz	wreg,f,c
 10665  012266  D7FE               	goto	u5467
 10666  012268  F000               	nop	
 10667                           
 10668                           ;delays.c: 57: x -= 2;
 10669  01226A  0EFE               	movlw	254
 10670  01226C                     L4:
 10671  01226C  2620               	addwf	delay_us@x,f,c
 10672  01226E  0EFF               	movlw	255
 10673  012270  2221               	addwfc	delay_us@x+1,f,c
 10674  012272  0EFF               	movlw	255
 10675  012274  2222               	addwfc	delay_us@x+2,f,c
 10676  012276  0EFF               	movlw	255
 10677  012278  2223               	addwfc	delay_us@x+3,f,c
 10678  01227A  D000               	goto	l6195
 10679  01227C                     l6195:
 10680  01227C  BE23               	btfsc	delay_us@x+3,7,c
 10681  01227E  0012               	return	
 10682  012280  5023               	movf	delay_us@x+3,w,c
 10683  012282  1022               	iorwf	delay_us@x+2,w,c
 10684  012284  1021               	iorwf	delay_us@x+1,w,c
 10685  012286  E1ED               	bnz	l6191
 10686  012288  0420               	decf	delay_us@x,w,c
 10687  01228A  B0D8               	btfsc	status,0,c
 10688  01228C  D7EA               	goto	l6191
 10689  01228E  0012               	return		;funcret
 10690  012290                     __end_of_delay_us:
 10691                           	opt stack 0
 10692                           tblptru	equ	0xFF8
 10693                           tblptrh	equ	0xFF7
 10694                           tblptrl	equ	0xFF6
 10695                           tablat	equ	0xFF5
 10696                           prodh	equ	0xFF4
 10697                           prodl	equ	0xFF3
 10698                           intcon	equ	0xFF2
 10699                           intcon2	equ	0xFF1
 10700                           intcon3	equ	0xFF0
 10701                           indf0	equ	0xFEF
 10702                           postinc0	equ	0xFEE
 10703                           fsr0h	equ	0xFEA
 10704                           fsr0l	equ	0xFE9
 10705                           wreg	equ	0xFE8
 10706                           indf1	equ	0xFE7
 10707                           postdec1	equ	0xFE5
 10708                           plusw1	equ	0xFE3
 10709                           fsr1h	equ	0xFE2
 10710                           fsr1l	equ	0xFE1
 10711                           indf2	equ	0xFDF
 10712                           postinc2	equ	0xFDE
 10713                           postdec2	equ	0xFDD
 10714                           plusw2	equ	0xFDB
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _delay_ms *****************
 10720 ;; Defined at:
 10721 ;;		line 62 in file "delays.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;  x               4    0[BANK0 ] long 
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  time            4   12[BANK0 ] unsigned long 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;		None               void
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;Total ram usage:       16 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; Hardware stack levels required when called:    4
 10742 ;; This function calls:
 10743 ;;		_millis
 10744 ;; This function is called by:
 10745 ;;		_LCD_init4bit
 10746 ;;		_LCD_placeCursor
 10747 ;;		_LCD_printString
 10748 ;;		_RCMode
 10749 ;;		_main
 10750 ;;		_PS2_readGamepad
 10751 ;;		_PS2_sendCommandString
 10752 ;;		_LCD_init8bit
 10753 ;;		_FONA_init
 10754 ;;		_FONA_Text
 10755 ;;		_FONA_CheckStrength
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text42
 10760  011C5E                     __ptext42:
 10761                           	opt stack 0
 10762  011C5E                     _delay_ms:
 10763                           	opt stack 24
 10764                           
 10765                           ;delays.c: 64: unsigned long time = millis();
 10766                           
 10767                           ;incstack = 0
 10768  011C5E  ECF3  F091         	call	_millis	;wreg free
 10769  011C62  C020  F06C         	movff	?_millis,delay_ms@time
 10770  011C66  C021  F06D         	movff	?_millis+1,delay_ms@time+1
 10771  011C6A  C022  F06E         	movff	?_millis+2,delay_ms@time+2
 10772  011C6E  C023  F06F         	movff	?_millis+3,delay_ms@time+3
 10773                           
 10774                           ;delays.c: 65: while(millis() - time < x);
 10775  011C72  D000               	goto	l6201
 10776  011C74                     l6201:
 10777  011C74  C06C  F064         	movff	delay_ms@time,??_delay_ms
 10778  011C78  C06D  F065         	movff	delay_ms@time+1,??_delay_ms+1
 10779  011C7C  C06E  F066         	movff	delay_ms@time+2,??_delay_ms+2
 10780  011C80  C06F  F067         	movff	delay_ms@time+3,??_delay_ms+3
 10781  011C84  0100               	movlb	0	; () banked
 10782  011C86  1F64               	comf	??_delay_ms& (0+255),f,b
 10783  011C88  1F65               	comf	(??_delay_ms+1)& (0+255),f,b
 10784  011C8A  1F66               	comf	(??_delay_ms+2)& (0+255),f,b
 10785  011C8C  1F67               	comf	(??_delay_ms+3)& (0+255),f,b
 10786  011C8E  2B64               	incf	??_delay_ms& (0+255),f,b
 10787  011C90  0E00               	movlw	0
 10788  011C92  2365               	addwfc	(??_delay_ms+1)& (0+255),f,b
 10789  011C94  2366               	addwfc	(??_delay_ms+2)& (0+255),f,b
 10790  011C96  2367               	addwfc	(??_delay_ms+3)& (0+255),f,b
 10791  011C98  ECF3  F091         	call	_millis	;wreg free
 10792  011C9C  0100               	movlb	0	; () banked
 10793  011C9E  5164               	movf	??_delay_ms& (0+255),w,b
 10794  011CA0  2420               	addwf	?_millis,w,c
 10795  011CA2  0100               	movlb	0	; () banked
 10796  011CA4  6F68               	movwf	(??_delay_ms+4)& (0+255),b
 10797  011CA6  0100               	movlb	0	; () banked
 10798  011CA8  5165               	movf	(??_delay_ms+1)& (0+255),w,b
 10799  011CAA  2021               	addwfc	?_millis+1,w,c
 10800  011CAC  0100               	movlb	0	; () banked
 10801  011CAE  6F69               	movwf	(??_delay_ms+5)& (0+255),b
 10802  011CB0  0100               	movlb	0	; () banked
 10803  011CB2  5166               	movf	(??_delay_ms+2)& (0+255),w,b
 10804  011CB4  2022               	addwfc	?_millis+2,w,c
 10805  011CB6  0100               	movlb	0	; () banked
 10806  011CB8  6F6A               	movwf	(??_delay_ms+6)& (0+255),b
 10807  011CBA  0100               	movlb	0	; () banked
 10808  011CBC  5167               	movf	(??_delay_ms+3)& (0+255),w,b
 10809  011CBE  2023               	addwfc	?_millis+3,w,c
 10810  011CC0  0100               	movlb	0	; () banked
 10811  011CC2  6F6B               	movwf	(??_delay_ms+7)& (0+255),b
 10812  011CC4  0100               	movlb	0	; () banked
 10813  011CC6  5160               	movf	delay_ms@x& (0+255),w,b
 10814  011CC8  0100               	movlb	0	; () banked
 10815  011CCA  5D68               	subwf	(??_delay_ms+4)& (0+255),w,b
 10816  011CCC  0100               	movlb	0	; () banked
 10817  011CCE  5161               	movf	(delay_ms@x+1)& (0+255),w,b
 10818  011CD0  0100               	movlb	0	; () banked
 10819  011CD2  5969               	subwfb	(??_delay_ms+5)& (0+255),w,b
 10820  011CD4  0100               	movlb	0	; () banked
 10821  011CD6  5162               	movf	(delay_ms@x+2)& (0+255),w,b
 10822  011CD8  0100               	movlb	0	; () banked
 10823  011CDA  596A               	subwfb	(??_delay_ms+6)& (0+255),w,b
 10824  011CDC  0100               	movlb	0	; () banked
 10825  011CDE  5163               	movf	(delay_ms@x+3)& (0+255),w,b
 10826  011CE0  0100               	movlb	0	; () banked
 10827  011CE2  596B               	subwfb	(??_delay_ms+7)& (0+255),w,b
 10828  011CE4  A0D8               	btfss	status,0,c
 10829  011CE6  D7C6               	goto	l6201
 10830                           
 10831                           ; BSR set to: 0
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;delays.c: 66: return;
 10835  011CE8  0012               	return		;funcret
 10836  011CEA                     __end_of_delay_ms:
 10837                           	opt stack 0
 10838                           tblptru	equ	0xFF8
 10839                           tblptrh	equ	0xFF7
 10840                           tblptrl	equ	0xFF6
 10841                           tablat	equ	0xFF5
 10842                           prodh	equ	0xFF4
 10843                           prodl	equ	0xFF3
 10844                           intcon	equ	0xFF2
 10845                           intcon2	equ	0xFF1
 10846                           intcon3	equ	0xFF0
 10847                           indf0	equ	0xFEF
 10848                           postinc0	equ	0xFEE
 10849                           fsr0h	equ	0xFEA
 10850                           fsr0l	equ	0xFE9
 10851                           wreg	equ	0xFE8
 10852                           indf1	equ	0xFE7
 10853                           postdec1	equ	0xFE5
 10854                           plusw1	equ	0xFE3
 10855                           fsr1h	equ	0xFE2
 10856                           fsr1l	equ	0xFE1
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           plusw2	equ	0xFDB
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8
 10864                           
 10865 ;; *************** function _millis *****************
 10866 ;; Defined at:
 10867 ;;		line 110 in file "delays.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;		None
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  4   31[COMRAM] unsigned long 
 10874 ;; Registers used:
 10875 ;;		None
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;Total ram usage:        4 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    3
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_delay_ms
 10892 ;;		_PS2_readGamepad
 10893 ;;		_delay_s
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text43
 10898  0123E6                     __ptext43:
 10899                           	opt stack 0
 10900  0123E6                     _millis:
 10901                           	opt stack 24
 10902                           
 10903                           ;delays.c: 112: return millisCount;
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;incstack = 0
 10907  0123E6  C02A  F020         	movff	_millisCount,?_millis
 10908  0123EA  C02B  F021         	movff	_millisCount+1,?_millis+1
 10909  0123EE  C02C  F022         	movff	_millisCount+2,?_millis+2
 10910  0123F2  C02D  F023         	movff	_millisCount+3,?_millis+3
 10911  0123F6  0012               	return		;funcret
 10912  0123F8                     __end_of_millis:
 10913                           	opt stack 0
 10914                           tblptru	equ	0xFF8
 10915                           tblptrh	equ	0xFF7
 10916                           tblptrl	equ	0xFF6
 10917                           tablat	equ	0xFF5
 10918                           prodh	equ	0xFF4
 10919                           prodl	equ	0xFF3
 10920                           intcon	equ	0xFF2
 10921                           intcon2	equ	0xFF1
 10922                           intcon3	equ	0xFF0
 10923                           indf0	equ	0xFEF
 10924                           postinc0	equ	0xFEE
 10925                           fsr0h	equ	0xFEA
 10926                           fsr0l	equ	0xFE9
 10927                           wreg	equ	0xFE8
 10928                           indf1	equ	0xFE7
 10929                           postdec1	equ	0xFE5
 10930                           plusw1	equ	0xFE3
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           plusw2	equ	0xFDB
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function _encoderInterrupt *****************
 10942 ;; Defined at:
 10943 ;;		line 40 in file "encoders.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;		None
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;		None
 10948 ;; Return value:  Size  Location     Type
 10949 ;;		None               void
 10950 ;; Registers used:
 10951 ;;		wreg, status,2, status,0
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10960 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10961 ;;Total ram usage:       17 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    2
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		Interrupt level 1
 10968 ;; This function uses a non-reentrant model
 10969 ;;
 10970                           
 10971                           	psect	intcodelo
 10972  000018                     __pintcodelo:
 10973                           	opt stack 0
 10974  000018                     _encoderInterrupt:
 10975                           	opt stack 21
 10976                           
 10977                           ;incstack = 0
 10978  000018  CFD8 F001          	movff	status,??_encoderInterrupt
 10979  00001C  CFE8 F002          	movff	wreg,??_encoderInterrupt+1
 10980  000020  CFE0 F003          	movff	bsr,??_encoderInterrupt+2
 10981  000024  CFFA F004          	movff	pclath,??_encoderInterrupt+3
 10982  000028  CFFB F005          	movff	pclatu,??_encoderInterrupt+4
 10983  00002C  CFE9 F006          	movff	fsr0l,??_encoderInterrupt+5
 10984  000030  CFEA F007          	movff	fsr0h,??_encoderInterrupt+6
 10985  000034  CFE1 F008          	movff	fsr1l,??_encoderInterrupt+7
 10986  000038  CFE2 F009          	movff	fsr1h,??_encoderInterrupt+8
 10987  00003C  CFD9 F00A          	movff	fsr2l,??_encoderInterrupt+9
 10988  000040  CFDA F00B          	movff	fsr2h,??_encoderInterrupt+10
 10989  000044  CFF3 F00C          	movff	prodl,??_encoderInterrupt+11
 10990  000048  CFF4 F00D          	movff	prodh,??_encoderInterrupt+12
 10991  00004C  CFF6 F00E          	movff	tblptrl,??_encoderInterrupt+13
 10992  000050  CFF7 F00F          	movff	tblptrh,??_encoderInterrupt+14
 10993  000054  CFF8 F010          	movff	tblptru,??_encoderInterrupt+15
 10994  000058  CFF5 F011          	movff	tablat,??_encoderInterrupt+16
 10995                           
 10996                           ;encoders.c: 42: if(INT1IF == 1)
 10997  00005C  A0F0               	btfss	intcon3,0,c	;volatile
 10998  00005E  D013               	goto	i1l393
 10999                           
 11000                           ;encoders.c: 43: {
 11001                           ;encoders.c: 44: if(PORTBbits.RB0 == 1)
 11002  000060  A081               	btfss	3969,0,c	;volatile
 11003  000062  D008               	goto	i1l3811
 11004                           
 11005                           ;encoders.c: 45: {
 11006                           ;encoders.c: 46: left_count--;
 11007  000064  0EFF               	movlw	255
 11008  000066  2626               	addwf	_left_count,f,c	;volatile
 11009  000068  0EFF               	movlw	255
 11010  00006A  2227               	addwfc	_left_count+1,f,c	;volatile
 11011  00006C  0EFF               	movlw	255
 11012  00006E  2228               	addwfc	_left_count+2,f,c	;volatile
 11013  000070  0EFF               	movlw	255
 11014  000072  D005               	goto	L5
 11015  000074                     i1l3811:
 11016                           
 11017                           ;encoders.c: 48: else
 11018                           ;encoders.c: 49: {
 11019                           ;encoders.c: 50: left_count++;
 11020  000074  0E01               	movlw	1
 11021  000076  2626               	addwf	_left_count,f,c	;volatile
 11022  000078  0E00               	movlw	0
 11023  00007A  2227               	addwfc	_left_count+1,f,c	;volatile
 11024  00007C  2228               	addwfc	_left_count+2,f,c	;volatile
 11025  00007E                     L5:
 11026  00007E  2229               	addwfc	_left_count+3,f,c	;volatile
 11027  000080  D000               	goto	i1l3813
 11028  000082                     i1l3813:
 11029                           
 11030                           ;encoders.c: 51: }
 11031                           ;encoders.c: 52: INT1IF = 0;
 11032  000082  90F0               	bcf	intcon3,0,c	;volatile
 11033                           
 11034                           ;encoders.c: 53: }
 11035  000084  D015               	goto	i1l400
 11036  000086                     i1l393:
 11037                           
 11038                           ;encoders.c: 54: else if(INT3IF == 1)
 11039  000086  A4F0               	btfss	intcon3,2,c	;volatile
 11040  000088  D013               	goto	i1l400
 11041                           
 11042                           ;encoders.c: 55: {
 11043                           ;encoders.c: 56: if(PORTBbits.RB2 == 1)
 11044  00008A  A481               	btfss	3969,2,c	;volatile
 11045  00008C  D008               	goto	i1l3819
 11046                           
 11047                           ;encoders.c: 57: {
 11048                           ;encoders.c: 58: right_count--;
 11049  00008E  0EFF               	movlw	255
 11050  000090  262E               	addwf	_right_count,f,c	;volatile
 11051  000092  0EFF               	movlw	255
 11052  000094  222F               	addwfc	_right_count+1,f,c	;volatile
 11053  000096  0EFF               	movlw	255
 11054  000098  2230               	addwfc	_right_count+2,f,c	;volatile
 11055  00009A  0EFF               	movlw	255
 11056  00009C  D005               	goto	L6
 11057  00009E                     i1l3819:
 11058                           
 11059                           ;encoders.c: 60: else
 11060                           ;encoders.c: 61: {
 11061                           ;encoders.c: 62: right_count++;
 11062  00009E  0E01               	movlw	1
 11063  0000A0  262E               	addwf	_right_count,f,c	;volatile
 11064  0000A2  0E00               	movlw	0
 11065  0000A4  222F               	addwfc	_right_count+1,f,c	;volatile
 11066  0000A6  2230               	addwfc	_right_count+2,f,c	;volatile
 11067  0000A8                     L6:
 11068  0000A8  2231               	addwfc	_right_count+3,f,c	;volatile
 11069  0000AA  D000               	goto	i1l3821
 11070  0000AC                     i1l3821:
 11071                           
 11072                           ;encoders.c: 63: }
 11073                           ;encoders.c: 64: INT3IF = 0;
 11074  0000AC  94F0               	bcf	intcon3,2,c	;volatile
 11075  0000AE  D000               	goto	i1l400
 11076  0000B0                     i1l400:
 11077  0000B0  C011  FFF5         	movff	??_encoderInterrupt+16,tablat
 11078  0000B4  C010  FFF8         	movff	??_encoderInterrupt+15,tblptru
 11079  0000B8  C00F  FFF7         	movff	??_encoderInterrupt+14,tblptrh
 11080  0000BC  C00E  FFF6         	movff	??_encoderInterrupt+13,tblptrl
 11081  0000C0  C00D  FFF4         	movff	??_encoderInterrupt+12,prodh
 11082  0000C4  C00C  FFF3         	movff	??_encoderInterrupt+11,prodl
 11083  0000C8  C00B  FFDA         	movff	??_encoderInterrupt+10,fsr2h
 11084  0000CC  C00A  FFD9         	movff	??_encoderInterrupt+9,fsr2l
 11085  0000D0  C009  FFE2         	movff	??_encoderInterrupt+8,fsr1h
 11086  0000D4  C008  FFE1         	movff	??_encoderInterrupt+7,fsr1l
 11087  0000D8  C007  FFEA         	movff	??_encoderInterrupt+6,fsr0h
 11088  0000DC  C006  FFE9         	movff	??_encoderInterrupt+5,fsr0l
 11089  0000E0  C005  FFFB         	movff	??_encoderInterrupt+4,pclatu
 11090  0000E4  C004  FFFA         	movff	??_encoderInterrupt+3,pclath
 11091  0000E8  C003  FFE0         	movff	??_encoderInterrupt+2,bsr
 11092  0000EC  C002  FFE8         	movff	??_encoderInterrupt+1,wreg
 11093  0000F0  C001  FFD8         	movff	??_encoderInterrupt,status
 11094  0000F4  0010               	retfie	
 11095  0000F6                     __end_of_encoderInterrupt:
 11096                           	opt stack 0
 11097                           pclatu	equ	0xFFB
 11098                           pclath	equ	0xFFA
 11099                           tblptru	equ	0xFF8
 11100                           tblptrh	equ	0xFF7
 11101                           tblptrl	equ	0xFF6
 11102                           tablat	equ	0xFF5
 11103                           prodh	equ	0xFF4
 11104                           prodl	equ	0xFF3
 11105                           intcon	equ	0xFF2
 11106                           intcon2	equ	0xFF1
 11107                           intcon3	equ	0xFF0
 11108                           indf0	equ	0xFEF
 11109                           postinc0	equ	0xFEE
 11110                           fsr0h	equ	0xFEA
 11111                           fsr0l	equ	0xFE9
 11112                           wreg	equ	0xFE8
 11113                           indf1	equ	0xFE7
 11114                           postdec1	equ	0xFE5
 11115                           plusw1	equ	0xFE3
 11116                           fsr1h	equ	0xFE2
 11117                           fsr1l	equ	0xFE1
 11118                           bsr	equ	0xFE0
 11119                           indf2	equ	0xFDF
 11120                           postinc2	equ	0xFDE
 11121                           postdec2	equ	0xFDD
 11122                           plusw2	equ	0xFDB
 11123                           fsr2h	equ	0xFDA
 11124                           fsr2l	equ	0xFD9
 11125                           status	equ	0xFD8
 11126                           
 11127 ;; *************** function _communicationInterruptHandler *****************
 11128 ;; Defined at:
 11129 ;;		line 203 in file "main.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;		None               void
 11136 ;; Registers used:
 11137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11145 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;Total ram usage:       14 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    1
 11150 ;; This function calls:
 11151 ;;		_tickMillis
 11152 ;; This function is called by:
 11153 ;;		Interrupt level 2
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	intcode
 11158  000008                     __pintcode:
 11159                           	opt stack 0
 11160  000008                     _communicationInterruptHandler:
 11161                           	opt stack 21
 11162                           
 11163                           ;incstack = 0
 11164  000008  CFFA F012          	movff	pclath,??_communicationInterruptHandler
 11165  00000C  CFFB F013          	movff	pclatu,??_communicationInterruptHandler+1
 11166  000010  CFE9 F014          	movff	fsr0l,??_communicationInterruptHandler+2
 11167  000014  EFD8  F08C         	goto	int_func
 11168                           pclatu	equ	0xFFB
 11169                           pclath	equ	0xFFA
 11170                           tblptru	equ	0xFF8
 11171                           tblptrh	equ	0xFF7
 11172                           tblptrl	equ	0xFF6
 11173                           tablat	equ	0xFF5
 11174                           prodh	equ	0xFF4
 11175                           prodl	equ	0xFF3
 11176                           intcon	equ	0xFF2
 11177                           intcon2	equ	0xFF1
 11178                           intcon3	equ	0xFF0
 11179                           indf0	equ	0xFEF
 11180                           postinc0	equ	0xFEE
 11181                           fsr0h	equ	0xFEA
 11182                           fsr0l	equ	0xFE9
 11183                           wreg	equ	0xFE8
 11184                           indf1	equ	0xFE7
 11185                           postdec1	equ	0xFE5
 11186                           plusw1	equ	0xFE3
 11187                           fsr1h	equ	0xFE2
 11188                           fsr1l	equ	0xFE1
 11189                           bsr	equ	0xFE0
 11190                           indf2	equ	0xFDF
 11191                           postinc2	equ	0xFDE
 11192                           postdec2	equ	0xFDD
 11193                           plusw2	equ	0xFDB
 11194                           fsr2h	equ	0xFDA
 11195                           fsr2l	equ	0xFD9
 11196                           status	equ	0xFD8
 11197                           
 11198                           	psect	intcode_body
 11199  0119B0                     __pintcode_body:
 11200                           	opt stack 21
 11201  0119B0                     int_func:
 11202                           	opt stack 21
 11203  0119B0  CFEA F015          	movff	fsr0h,??_communicationInterruptHandler+3
 11204  0119B4  CFE1 F016          	movff	fsr1l,??_communicationInterruptHandler+4
 11205  0119B8  CFE2 F017          	movff	fsr1h,??_communicationInterruptHandler+5
 11206  0119BC  CFD9 F018          	movff	fsr2l,??_communicationInterruptHandler+6
 11207  0119C0  CFDA F019          	movff	fsr2h,??_communicationInterruptHandler+7
 11208  0119C4  CFF3 F01A          	movff	prodl,??_communicationInterruptHandler+8
 11209  0119C8  CFF4 F01B          	movff	prodh,??_communicationInterruptHandler+9
 11210  0119CC  CFF6 F01C          	movff	tblptrl,??_communicationInterruptHandler+10
 11211  0119D0  CFF7 F01D          	movff	tblptrh,??_communicationInterruptHandler+11
 11212  0119D4  CFF8 F01E          	movff	tblptru,??_communicationInterruptHandler+12
 11213  0119D8  CFF5 F01F          	movff	tablat,??_communicationInterruptHandler+13
 11214                           
 11215                           ;main.c: 205: if(TMR0IF == 1)
 11216  0119DC  A4F2               	btfss	intcon,2,c	;volatile
 11217  0119DE  D008               	goto	i2l282
 11218                           
 11219                           ;main.c: 206: {
 11220                           ;main.c: 207: TMR0L = 193;
 11221  0119E0  0EC1               	movlw	193
 11222  0119E2  6ED6               	movwf	4054,c	;volatile
 11223                           
 11224                           ;main.c: 208: TMR0IF = 0;
 11225  0119E4  94F2               	bcf	intcon,2,c	;volatile
 11226                           
 11227                           ;main.c: 209: TMR0IE = 1;
 11228  0119E6  8AF2               	bsf	intcon,5,c	;volatile
 11229                           
 11230                           ;main.c: 210: tickMillis();
 11231  0119E8  EC1A  F092         	call	_tickMillis	;wreg free
 11232                           
 11233                           ;main.c: 211: return;
 11234  0119EC  D02C               	goto	i2l280
 11235                           
 11236                           ;main.c: 212: }
 11237                           ;main.c: 217: if(0) {
 11238  0119EE  D000               	goto	i2l282
 11239  0119F0                     i2l282:
 11240                           
 11241                           ;main.c: 224: }
 11242                           ;main.c: 225: if(PIR1bits.RC1IF)
 11243  0119F0  AA9E               	btfss	3998,5,c	;volatile
 11244  0119F2  D00C               	goto	i2l5959
 11245                           
 11246                           ;main.c: 226: {
 11247                           ;main.c: 227: FONA_BUFF[FONA_INDEX] = RCREG1;
 11248  0119F4  5038               	movf	_FONA_INDEX,w,c	;volatile
 11249  0119F6  0D01               	mullw	1
 11250  0119F8  0E00               	movlw	low _FONA_BUFF
 11251  0119FA  24F3               	addwf	prodl,w,c
 11252  0119FC  6ED9               	movwf	fsr2l,c
 11253  0119FE  0E01               	movlw	high _FONA_BUFF
 11254  011A00  20F4               	addwfc	prodh,w,c
 11255  011A02  6EDA               	movwf	fsr2h,c
 11256  011A04  CFAE FFDF          	movff	4014,indf2	;volatile
 11257                           
 11258                           ;main.c: 228: FONA_INDEX++;
 11259  011A08  2A38               	incf	_FONA_INDEX,f,c	;volatile
 11260  011A0A  D000               	goto	i2l5959
 11261  011A0C                     i2l5959:
 11262                           
 11263                           ;main.c: 229: }
 11264                           ;main.c: 230: if(PIR3bits.RC2IF)
 11265  011A0C  50A4               	movf	4004,w,c	;volatile
 11266                           
 11267                           ;main.c: 233: }
 11268                           ;main.c: 234: if(PIR6bits.RC3IF)
 11269                           
 11270                           ;main.c: 231: {
 11271  011A0E  AAA6               	btfss	4006,5,c	;volatile
 11272  011A10  D00C               	goto	i2l5965
 11273                           
 11274                           ;main.c: 235: {
 11275                           ;main.c: 236: PIXY_BUFF[PIXY_INDEX] = RCREG3;
 11276  011A12  5039               	movf	_PIXY_INDEX,w,c	;volatile
 11277  011A14  0D01               	mullw	1
 11278  011A16  0EC8               	movlw	low _PIXY_BUFF
 11279  011A18  24F3               	addwf	prodl,w,c
 11280  011A1A  6ED9               	movwf	fsr2l,c
 11281  011A1C  0E03               	movlw	high _PIXY_BUFF
 11282  011A1E  20F4               	addwfc	prodh,w,c
 11283  011A20  6EDA               	movwf	fsr2h,c
 11284  011A22  CF2A FFDF          	movff	3882,indf2	;volatile
 11285                           
 11286                           ;main.c: 237: PIXY_INDEX++;
 11287  011A26  2A39               	incf	_PIXY_INDEX,f,c	;volatile
 11288  011A28  D000               	goto	i2l5965
 11289  011A2A                     i2l5965:
 11290                           
 11291                           ;main.c: 238: }
 11292                           ;main.c: 239: if(PIR6bits.RC4IF)
 11293  011A2A  AEA6               	btfss	4006,7,c	;volatile
 11294  011A2C  D00C               	goto	i2l280
 11295                           
 11296                           ;main.c: 240: {
 11297                           ;main.c: 241: USB_BUFF[USB_INDEX] = RCREG4;
 11298  011A2E  503B               	movf	_USB_INDEX,w,c	;volatile
 11299  011A30  0D01               	mullw	1
 11300  011A32  0EBC               	movlw	low _USB_BUFF
 11301  011A34  24F3               	addwf	prodl,w,c
 11302  011A36  6ED9               	movwf	fsr2l,c
 11303  011A38  0E05               	movlw	high _USB_BUFF
 11304  011A3A  20F4               	addwfc	prodh,w,c
 11305  011A3C  6EDA               	movwf	fsr2h,c
 11306  011A3E  CEFA FFDF          	movff	3834,indf2	;volatile
 11307                           
 11308                           ;main.c: 242: USB_INDEX++;
 11309  011A42  2A3B               	incf	_USB_INDEX,f,c	;volatile
 11310  011A44  D000               	goto	i2l280
 11311  011A46                     i2l280:
 11312  011A46  C01F  FFF5         	movff	??_communicationInterruptHandler+13,tablat
 11313  011A4A  C01E  FFF8         	movff	??_communicationInterruptHandler+12,tblptru
 11314  011A4E  C01D  FFF7         	movff	??_communicationInterruptHandler+11,tblptrh
 11315  011A52  C01C  FFF6         	movff	??_communicationInterruptHandler+10,tblptrl
 11316  011A56  C01B  FFF4         	movff	??_communicationInterruptHandler+9,prodh
 11317  011A5A  C01A  FFF3         	movff	??_communicationInterruptHandler+8,prodl
 11318  011A5E  C019  FFDA         	movff	??_communicationInterruptHandler+7,fsr2h
 11319  011A62  C018  FFD9         	movff	??_communicationInterruptHandler+6,fsr2l
 11320  011A66  C017  FFE2         	movff	??_communicationInterruptHandler+5,fsr1h
 11321  011A6A  C016  FFE1         	movff	??_communicationInterruptHandler+4,fsr1l
 11322  011A6E  C015  FFEA         	movff	??_communicationInterruptHandler+3,fsr0h
 11323  011A72  C014  FFE9         	movff	??_communicationInterruptHandler+2,fsr0l
 11324  011A76  C013  FFFB         	movff	??_communicationInterruptHandler+1,pclatu
 11325  011A7A  C012  FFFA         	movff	??_communicationInterruptHandler,pclath
 11326  011A7E  0011               	retfie		f
 11327  011A80                     __end_of_communicationInterruptHandler:
 11328                           	opt stack 0
 11329                           pclatu	equ	0xFFB
 11330                           pclath	equ	0xFFA
 11331                           tblptru	equ	0xFF8
 11332                           tblptrh	equ	0xFF7
 11333                           tblptrl	equ	0xFF6
 11334                           tablat	equ	0xFF5
 11335                           prodh	equ	0xFF4
 11336                           prodl	equ	0xFF3
 11337                           intcon	equ	0xFF2
 11338                           intcon2	equ	0xFF1
 11339                           intcon3	equ	0xFF0
 11340                           indf0	equ	0xFEF
 11341                           postinc0	equ	0xFEE
 11342                           fsr0h	equ	0xFEA
 11343                           fsr0l	equ	0xFE9
 11344                           wreg	equ	0xFE8
 11345                           indf1	equ	0xFE7
 11346                           postdec1	equ	0xFE5
 11347                           plusw1	equ	0xFE3
 11348                           fsr1h	equ	0xFE2
 11349                           fsr1l	equ	0xFE1
 11350                           bsr	equ	0xFE0
 11351                           indf2	equ	0xFDF
 11352                           postinc2	equ	0xFDE
 11353                           postdec2	equ	0xFDD
 11354                           plusw2	equ	0xFDB
 11355                           fsr2h	equ	0xFDA
 11356                           fsr2l	equ	0xFD9
 11357                           status	equ	0xFD8
 11358                           
 11359 ;; *************** function _tickMillis *****************
 11360 ;; Defined at:
 11361 ;;		line 121 in file "delays.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;		None               void
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_communicationInterruptHandler
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text46
 11389  012434                     __ptext46:
 11390                           	opt stack 0
 11391  012434                     _tickMillis:
 11392                           	opt stack 21
 11393                           
 11394                           ;delays.c: 123: ++millisCount;
 11395                           
 11396                           ;incstack = 0
 11397  012434  0E01               	movlw	1
 11398  012436  262A               	addwf	_millisCount,f,c
 11399  012438  0E00               	movlw	0
 11400  01243A  222B               	addwfc	_millisCount+1,f,c
 11401  01243C  222C               	addwfc	_millisCount+2,f,c
 11402  01243E  222D               	addwfc	_millisCount+3,f,c
 11403  012440  0012               	return		;funcret
 11404  012442                     __end_of_tickMillis:
 11405                           	opt stack 0
 11406                           pclatu	equ	0xFFB
 11407                           pclath	equ	0xFFA
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodh	equ	0xFF4
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           intcon2	equ	0xFF1
 11416                           intcon3	equ	0xFF0
 11417                           indf0	equ	0xFEF
 11418                           postinc0	equ	0xFEE
 11419                           fsr0h	equ	0xFEA
 11420                           fsr0l	equ	0xFE9
 11421                           wreg	equ	0xFE8
 11422                           indf1	equ	0xFE7
 11423                           postdec1	equ	0xFE5
 11424                           plusw1	equ	0xFE3
 11425                           fsr1h	equ	0xFE2
 11426                           fsr1l	equ	0xFE1
 11427                           bsr	equ	0xFE0
 11428                           indf2	equ	0xFDF
 11429                           postinc2	equ	0xFDE
 11430                           postdec2	equ	0xFDD
 11431                           plusw2	equ	0xFDB
 11432                           fsr2h	equ	0xFDA
 11433                           fsr2l	equ	0xFD9
 11434                           status	equ	0xFD8
 11435                           pclatu	equ	0xFFB
 11436                           pclath	equ	0xFFA
 11437                           tblptru	equ	0xFF8
 11438                           tblptrh	equ	0xFF7
 11439                           tblptrl	equ	0xFF6
 11440                           tablat	equ	0xFF5
 11441                           prodh	equ	0xFF4
 11442                           prodl	equ	0xFF3
 11443                           intcon	equ	0xFF2
 11444                           intcon2	equ	0xFF1
 11445                           intcon3	equ	0xFF0
 11446                           indf0	equ	0xFEF
 11447                           postinc0	equ	0xFEE
 11448                           fsr0h	equ	0xFEA
 11449                           fsr0l	equ	0xFE9
 11450                           wreg	equ	0xFE8
 11451                           indf1	equ	0xFE7
 11452                           postdec1	equ	0xFE5
 11453                           plusw1	equ	0xFE3
 11454                           fsr1h	equ	0xFE2
 11455                           fsr1l	equ	0xFE1
 11456                           bsr	equ	0xFE0
 11457                           indf2	equ	0xFDF
 11458                           postinc2	equ	0xFDE
 11459                           postdec2	equ	0xFDD
 11460                           plusw2	equ	0xFDB
 11461                           fsr2h	equ	0xFDA
 11462                           fsr2l	equ	0xFD9
 11463                           status	equ	0xFD8
 11464                           
 11465                           	psect	rparam
 11466  0000                     pclatu	equ	0xFFB
 11467                           pclath	equ	0xFFA
 11468                           tblptru	equ	0xFF8
 11469                           tblptrh	equ	0xFF7
 11470                           tblptrl	equ	0xFF6
 11471                           tablat	equ	0xFF5
 11472                           prodh	equ	0xFF4
 11473                           prodl	equ	0xFF3
 11474                           intcon	equ	0xFF2
 11475                           intcon2	equ	0xFF1
 11476                           intcon3	equ	0xFF0
 11477                           indf0	equ	0xFEF
 11478                           postinc0	equ	0xFEE
 11479                           fsr0h	equ	0xFEA
 11480                           fsr0l	equ	0xFE9
 11481                           wreg	equ	0xFE8
 11482                           indf1	equ	0xFE7
 11483                           postdec1	equ	0xFE5
 11484                           plusw1	equ	0xFE3
 11485                           fsr1h	equ	0xFE2
 11486                           fsr1l	equ	0xFE1
 11487                           bsr	equ	0xFE0
 11488                           indf2	equ	0xFDF
 11489                           postinc2	equ	0xFDE
 11490                           postdec2	equ	0xFDD
 11491                           plusw2	equ	0xFDB
 11492                           fsr2h	equ	0xFDA
 11493                           fsr2l	equ	0xFD9
 11494                           status	equ	0xFD8


Data Sizes:
    Strings     257
    Constant    1579
    Data        85
    BSS         1643
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      64
    BANK0           160     76     160
    BANK1           256      7     246
    BANK2           256     51     229
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString_1921(COMRAM[2]), UART_transmitString@tempString(COMRAM[20]), STR_15(CODE[2]), LCD_printString@tempString_590(BANK2[2]), 
		 -> LCD_printString@tempString(BANK2[20]), STR_1(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString(COMRAM[20]), LCD_printString@tempString(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    PS2_sendCommandString@string	PTR unsigned char  size(2) Largest target is 9
		 -> exit_config(BANK0[9]), set_mode(BANK0[9]), enter_config(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 21
		 -> FONA_CheckStrength@genString(COMRAM[21]), FONA_Text@genString(COMRAM[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    LCD_printString@input	PTR unsigned char  size(2) Largest target is 18
		 -> STR_21(CODE[7]), STR_14(CODE[17]), STR_13(CODE[15]), STR_12(CODE[18]), 
		 -> STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[17]), STR_8(CODE[15]), 
		 -> STR_7(CODE[18]), STR_6(CODE[17]), STR_5(CODE[16]), STR_4(CODE[18]), 
		 -> STR_3(CODE[18]), LCD_printBin@string(COMRAM[9]), LCD_printVal@temp(COMRAM[3]), LCD_printChar@string(COMRAM[2]), 

    LCD_printString@aptr	PTR void [1] size(2) Largest target is 0
		 -> ?_LCD_printString(BANK0[0]), 


Critical Paths under _main in COMRAM

    _motorDrive_init->_SetDCEPWM1
    _motorDrive_init->_SetDCEPWM3
    _LCD_init4bit->_delay_us
    _motorDrive_setSpeeds->_SetDCEPWM1
    _motorDrive_setSpeeds->_SetDCEPWM3
    _motorDrive_setSpeeds->___wmul
    ___awdiv->___wmul
    _PS2_init->_PS2_shiftInOut
    _PS2_readGamepad->_PS2_shiftInOut
    _PS2_sendCommandString->_PS2_shiftInOut
    _PS2_shiftInOut->_delay_us
    _LCD_printString->_sprintf
    _LCD_printString->_strcat
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_placeCursor->_delay_us
    _delay_ms->_millis

Critical Paths under _communicationInterruptHandler in COMRAM

    None.

Critical Paths under _encoderInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RCMode
    _wanderMode->_LCD_printString
    _selfTest->_LCD_printString
    _motorDrive_init->_motorDrive_setSpeeds
    _fft_init->_LCD_printString
    _LCD_init4bit->_delay_ms
    _competitionMode->_LCD_printString
    _RCMode->_PS2_init
    _motorDrive_setSpeeds->___awdiv
    _PS2_init->_PS2_readGamepad
    _PS2_reconfig->_PS2_sendCommandString
    _PS2_sendCommandString->_delay_ms
    _LCD_printString->_LCD_placeCursor
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_placeCursor->_delay_ms

Critical Paths under _communicationInterruptHandler in BANK0

    None.

Critical Paths under _encoderInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RCMode

Critical Paths under _communicationInterruptHandler in BANK1

    None.

Critical Paths under _encoderInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_LCD_printString
    _wanderMode->_LCD_printString
    _selfTest->_LCD_printString
    _fft_init->_LCD_printString
    _competitionMode->_LCD_printString
    _RCMode->_LCD_printString

Critical Paths under _communicationInterruptHandler in BANK2

    None.

Critical Paths under _encoderInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _communicationInterruptHandler in BANK3

    None.

Critical Paths under _encoderInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _communicationInterruptHandler in BANK4

    None.

Critical Paths under _encoderInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _communicationInterruptHandler in BANK5

    None.

Critical Paths under _encoderInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _communicationInterruptHandler in BANK6

    None.

Critical Paths under _encoderInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _communicationInterruptHandler in BANK7

    None.

Critical Paths under _encoderInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _communicationInterruptHandler in BANK8

    None.

Critical Paths under _encoderInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _communicationInterruptHandler in BANK9

    None.

Critical Paths under _encoderInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _communicationInterruptHandler in BANK10

    None.

Critical Paths under _encoderInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _communicationInterruptHandler in BANK11

    None.

Critical Paths under _encoderInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _communicationInterruptHandler in BANK12

    None.

Critical Paths under _encoderInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _communicationInterruptHandler in BANK13

    None.

Critical Paths under _encoderInterrupt in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  188002
                                             72 BANK0      4     4      0
                                              6 BANK1      1     1      0
                    _LCD_printString
                             _RCMode
                    _competitionMode
                              _debug
                           _delay_ms
                               _init
                           _selfTest
                      _settings_auto
                _settings_readButton
                  _settings_selfTest
                    _settings_wander
                         _wanderMode
 ---------------------------------------------------------------------------------
 (1) _wanderMode                                           0     0      0   19096
                    _LCD_printString
 ---------------------------------------------------------------------------------
 (1) _settings_wander                                      1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _settings_selfTest                                    1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _settings_auto                                        1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _selfTest                                             0     0      0   19130
                    _LCD_printString
                _settings_readButton
 ---------------------------------------------------------------------------------
 (1) _settings_readButton                                  1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   34349
                       _LCD_init4bit
                          _UART_init
                        _clearMillis
                      _encoders_init
                           _fft_init
                    _motorDrive_init
                      _settings_init
 ---------------------------------------------------------------------------------
 (2) _settings_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorDrive_init                                      0     0      0    5720
                          _OpenEPWM1
                          _OpenEPWM3
                         _SetDCEPWM1
                         _SetDCEPWM3
                     _SetOutputEPWM1
                     _SetOutputEPWM3
               _motorDrive_setSpeeds
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM3                                       3     2      1     340
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM1                                       3     2      1     340
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM3                                            3     2      1     232
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM1                                            3     2      1     232
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _fft_init                                             0     0      0   23060
                    _LCD_printString
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _encoders_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearMillis                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init4bit                                         0     0      0    5569
                         _delay_init
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debug                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _competitionMode                                      0     0      0   19096
                    _LCD_printString
 ---------------------------------------------------------------------------------
 (1) _RCMode                                               7     7      0   75398
                                             71 BANK0      1     1      0
                                              0 BANK1      6     6      0
                    _LCD_printString
                         _PS2_analog
                           _PS2_init
                    _PS2_readGamepad
                       _PS2_readType
                            ___awdiv
                           _delay_ms
               _motorDrive_setSpeeds
 ---------------------------------------------------------------------------------
 (3) _motorDrive_setSpeeds                                24    23      1    4070
                                              8 BANK0     24    23      1
                         _SetDCEPWM1
                         _SetDCEPWM3
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1230
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1215
                                              0 BANK0      8     4      4
                         _PS2_analog (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM3                                           6     4      2     253
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM1                                           6     4      2     253
                                             31 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _PS2_readType                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PS2_init                                            13    13      0   32229
                                             58 BANK0     13    13      0
                    _PS2_readGamepad
              _PS2_sendCommandString
                     _PS2_shiftInOut
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _PS2_readGamepad                                     34    34      0   16982
                                             24 BANK0     34    34      0
                       _PS2_reconfig
                     _PS2_shiftInOut
                           _delay_ms
                           _delay_us
                             _millis
 ---------------------------------------------------------------------------------
 (3) _PS2_reconfig                                         0     0      0    6821
              _PS2_sendCommandString
 ---------------------------------------------------------------------------------
 (4) _PS2_sendCommandString                                8     5      3    6821
                                             16 BANK0      8     5      3
                     _PS2_shiftInOut
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _PS2_shiftInOut                                       5     5      0    4162
                                             35 COMRAM     2     2      0
                                              0 BANK0      3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _PS2_analog                                           1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_printString                                     62    55      7   19096
                                             22 BANK0     11     4      7
                                              0 BANK2     51    51      0
                    _LCD_placeCursor
                         _PS2_analog (ARG)
                           _delay_ms
                           _delay_us
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    1067
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    17      6    1785
                                             36 COMRAM     1     1      0
                                              7 BANK0     13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             35 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                             31 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _LCD_placeCursor                                      7     6      1    6284
                                             35 COMRAM     1     0      1
                                             16 BANK0      6     6      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             4     0      4    3964
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                            16    12      4    1605
                                              0 BANK0     16    12      4
                             _millis
 ---------------------------------------------------------------------------------
 (4) _millis                                               4     0      4       0
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _encoderInterrupt                                    17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _communicationInterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
                         _tickMillis
 ---------------------------------------------------------------------------------
 (10) _tickMillis                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_printString
     _LCD_placeCursor
       _delay_ms
         _millis
       _delay_us
     _PS2_analog (ARG)
     _delay_ms (ARG)
       _millis
     _delay_us (ARG)
     _sprintf (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat (ARG)
   _RCMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _millis
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _millis
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
     _PS2_analog
     _PS2_init
       _PS2_readGamepad
         _PS2_reconfig
           _PS2_sendCommandString
             _PS2_shiftInOut
               _delay_us
             _delay_ms
               _millis
         _PS2_shiftInOut
           _delay_us
         _delay_ms
           _millis
         _delay_us
         _millis
       _PS2_sendCommandString
         _PS2_shiftInOut
           _delay_us
         _delay_ms
           _millis
       _PS2_shiftInOut
         _delay_us
       _delay_us
     _PS2_readGamepad
       _PS2_reconfig
         _PS2_sendCommandString
           _PS2_shiftInOut
             _delay_us
           _delay_ms
             _millis
       _PS2_shiftInOut
         _delay_us
       _delay_ms
         _millis
       _delay_us
       _millis
     _PS2_readType
     ___awdiv
       _PS2_analog (ARG)
       ___wmul (ARG)
     _delay_ms
       _millis
     _motorDrive_setSpeeds
       _SetDCEPWM1
       _SetDCEPWM3
       ___awdiv
         _PS2_analog (ARG)
         ___wmul (ARG)
       ___wmul
   _competitionMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _millis
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _millis
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
   _debug
   _delay_ms
     _millis
   _init
     _LCD_init4bit
       _delay_init
       _delay_ms
         _millis
       _delay_us
     _UART_init
     _clearMillis
     _encoders_init
     _fft_init
       _LCD_printString
         _LCD_placeCursor
           _delay_ms
             _millis
           _delay_us
         _PS2_analog (ARG)
         _delay_ms (ARG)
           _millis
         _delay_us (ARG)
         _sprintf (ARG)
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _strcat (ARG)
       _delay_us
     _motorDrive_init
       _OpenEPWM1
       _OpenEPWM3
       _SetDCEPWM1
       _SetDCEPWM3
       _SetOutputEPWM1
       _SetOutputEPWM3
       _motorDrive_setSpeeds
         _SetDCEPWM1
         _SetDCEPWM3
         ___awdiv
           _PS2_analog (ARG)
           ___wmul (ARG)
         ___wmul
     _settings_init
   _selfTest
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _millis
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _millis
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
     _settings_readButton
   _settings_auto
   _settings_readButton
   _settings_selfTest
   _settings_wander
   _wanderMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _millis
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _millis
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)

 _encoderInterrupt (ROOT)

 _communicationInterruptHandler (ROOT)
   _tickMillis

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0     3E8      33       28.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     33      E5      10       89.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      F6       7       96.1%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      40       1       67.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     383       8        0.0%
DATA                 0      0     76B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May 07 01:57:26 2015

                            __CFG_BW$16 000000                             __CFG_ABW$MM 000000  
                                    l94 0898                            ___awdiv@sign 0065  
                                    bsr 000FE0                     ___wmul@multiplicand 0022  
                           __CFG_BORV$1 000000                          _SetOutputEPWM1 1D72  
                        _SetOutputEPWM3 1BD0                            __CFG_CP0$OFF 000000  
                                   l120 069E                                     l116 0468  
                                   l241 23B4                                     l235 2398  
                                   l325 2238                                     l715 1FB0  
                                   l901 14AC                                     l930 1BB2  
                                   l914 11D0                                     l931 1B6C  
                                   l932 1B6E                                     _RG0 007C30  
                                   _RG1 007C31                                     _RG2 007C32  
                                   _RG3 007C33                                     _RG4 007C34  
                                   _RL1 007721                                     _RL2 007722  
                                   _RL3 007723                                     _PR2 000FCB  
                                   _PR4 000F05                                     _PR6 000F3E  
                                   _PR8 000F3B                         FONA_init@F16396 01DB  
                                   prod 000FF3                                     wreg 000FE8  
                            _TXSTA1bits 000FAC                              _TXSTA2bits 000F32  
                            _TXSTA3bits 000F2E                              _TXSTA4bits 000EFE  
                                  l1251 1C46                                    l1252 1C54  
                                  l1253 1C58                                    l1190 1DE0  
                                  l1246 1C34                                    l1191 1DEE  
                                  l1192 1DF2                                    l1185 1DCE  
                                  l1824 2036                                    l1834 209C  
                                  l6201 1C74                                    l6223 1BAA  
                                  l6209 1B48                                    l6251 1FFE  
                                  l6323 20B0                                    l6219 1BA4  
                                  l6235 1F08                                    l6261 2028  
                                  l6253 2006                                    l6333 1202  
                                  l6325 20B6                                    l6501 0208  
                                  l6421 1916                                    l6191 2262  
                                  l6319 09DC                                    l6271 205E  
                                  l6343 1230                                    l6327 20C8  
                                  l6239 1F2A                                    l6431 194C  
                                  l6415 18FE                                    l6249 1FF2  
                                  l6273 2068                                    l6361 12A4  
                                  l6345 125E                                    l6329 20D2  
                                  l6505 022E                                    l6195 227C  
                                  l6355 1290                                    l6339 1220  
                                  l7315 1408                                    l6427 1934  
                                  l6443 198E                                    l6611 0D9E  
                                  l6285 06CC                                    l6277 208E  
                                  l6269 2052                                    l6365 12D4  
                                  l6357 1296                                    l6509 0248  
                                  l7333 1470                                    l7309 13DE  
                                  l6429 1942                                    l6621 0DDA  
                                  l6613 0DAE                                    l6383 1364  
                                  l6375 12FA                                    l6543 063C  
                                  l6551 066E                                    l6471 003A  
                                  l6447 19A4                                    l6439 197E  
                                  l7431 173C                                    l6711 1DBA  
                                  l7407 2212                                    l6377 1300  
                                  l6369 12DA                                    l6385 1374  
                                  l6545 064C                                    l6561 1030  
                                  l7353 1502                                    l7425 16F4  
                                  l6705 1DA8                                    l7409 2220  
                                  l6387 1398                                    l6539 0638  
                                  l7347 14F0                                    l6651 0ED6  
                                  l6643 0E8C                                    l6635 0E22  
                                  l6627 0DF6                                    l6619 0DCA  
                                  l7419 16B4                                    l6707 1DAE  
                                  l6549 0666                                    l6493 019A  
                                  l6485 0138                                    l6477 00E4  
                                  l6565 10C0                                    l7357 151C  
                                  l6637 0E32                                    l6629 0E06  
                                  l7285 1FAC                                    l6741 1D3C  
                                  l6487 0140                                    l6495 01A2  
                                  l6583 112A                                    l7383 21F0  
                                  l6647 0EA2                                    l6719 1DD2  
                                  l6593 1170                                    l7377 21E0  
                                  l7369 21D2                                    l6657 0F14  
                                  l6649 0ECC                                    l6745 1D56  
                                  l6737 1D22                                    l6499 01FC  
                                  l6579 1110                                    l6659 0F30  
                                  l6683 1EC4                                    l6763 1C0E  
                                  l6597 118A                                    l6589 115C  
                                  l6765 1C14                                    l6687 1EDE  
                                  l6679 1EAA                                    l7751 152A  
                                  l6777 1C38                                    l6769 1C20  
                                  l7761 15CE                                    l7753 1566  
                                  l7763 15E8                                    l7755 1580  
                                  _ADON 007E0F                                    l7781 1662  
                                  l7757 159A                                    l7783 1668  
                                  l7775 1650                                    l7759 15B4  
                                  l7767 1602                                    l7777 1656  
                                  l7769 1626                                    l7779 165C  
                                  l7787 166E                                    STR_1 FFFD  
                                  STR_2 FFD7                                    STR_3 FF48  
                                  STR_4 FF24                                    STR_5 FF8D  
                                  STR_6 FF5A                                    STR_7 FF12  
                                  STR_8 FFCB                                    STR_9 FF6B  
                                  _CPEN 0076C7                                    _LCDA 0076D5  
                                  _DONE 007E00                                    u4024 1B98  
                                  u4025 1B94                                    u4115 08A8  
                                  u4125 08CA                                    u4150 20FC  
                                  u4135 08F6                                    u4400 01DC  
                                  _IPEN 007E87                                    u4157 20F2  
                                  u4341 000E                                    u4501 10EC  
                                  u4350 0074                                    u4407 01D2  
                                  u4511 10FE                                    u4255 2192  
                                  u4265 2154                                    u4370 00C8  
                                  u4445 04BE                                    u4357 006A  
                                  u4390 017A                                    u4455 04FC  
                                  u4480 102A                                    u4377 00BE  
                                  u4635 0E40                                    u4397 0170  
                                  u4575 0D2E                                    u4665 0EE4  
                                  u4585 0D60                                    u5467 2264  
                                  u4940 1406                                    u4960 14AC  
                                  u3994 1B58                                    u3995 1B54  
                                  _SAMP 007E01                                    _main 1522  
                                  _init 2362                                    _mode 003D  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    pclat 000FFA  
                         __CFG_BOREN$ON 000000                                    prodh 000FF4  
                                  prodl 000FF3                      __CFG_WDTWIN$PS25_0 000000  
                                  start 00F6                           __CFG_IESO$OFF 000000  
                    __CFG_LS48MHZ$SYSX2 000000                         _motorDrive_init 1DF8  
                          ___param_bank 000010                  __end_of_SetOutputEPWM1 1DF8  
                __end_of_SetOutputEPWM3 1C5E             __end_of_settings_readButton 2418  
                      RCMode@left_speed 01EF                            _BAUDCON1bits 000F67  
                       _competitionMode 239C                            _BAUDCON2bits 000F31  
                          _BAUDCON3bits 000F2D                            _BAUDCON4bits 000EFD  
                         __CFG_WAIT$OFF 000000                             ?_PS2_analog 0001  
                                 ?_main 0001                                   ?_init 0001  
                       __end_of___awdiv 19B0                   OpenEPWM3@timer_source 0020  
                                 STR_10 FFBC                                   STR_11 FF9D  
                                 STR_20 FFE4                                   STR_12 FF36  
                                 STR_21 FFF6                                   STR_13 FFAD  
                                 STR_14 FF7C                                   STR_17 FFDA  
                                 STR_18 FFED                                   STR_19 FEFE  
                                 _RD163 007D8F                                   _T0CON 000FD5  
                       ___awdiv@divisor 0062                                   _LCDMD 00778B  
                                 _RC1IE 007CED                                   _RC2IE 007D1D  
                                 _RC3IE 007B0D                                   _RC4IE 007B0F  
                       __end_of___lwdiv 2040                                   i1l400 00B0  
                       __end_of___lwmod 20A6                                   i1l393 0086  
                                 i2l280 1A46                                   i2l282 19F0  
                       ___awdiv@counter 0064                                   _TX1IE 007CEC  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TX2IE 007D1C                                   _TMR3L 000FB2  
                                 _TX3IE 007B0C                                   _TX4IE 007B0E  
                         ?_LCD_init4bit 0001                           __CFG_WPSA$128 000000  
                      __end_of_PS2_init 1522                          __CFG_EASHFT$ON 000000  
                       ??_encoders_init 0020                                   _debug 2446  
                    __size_of_UART_init 010A                         __end_of_dpowers FEDD  
                       ??_settings_auto 0020                         ??_settings_init 0020  
                                 _errno 0032                                   _spbrg 0034  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                       __end_of_sprintf 13A8                              _SetDCEPWM1 2188  
                            _SetDCEPWM3 214A                    __size_of_clearMillis 0016  
                       __initialization 1A80                     PS2_readGamepad@temp 0092  
                          __end_of_main 1696                            __end_of_init 2380  
               __size_of_PS2_shiftInOut 009C                         ?_SetOutputEPWM1 0020  
                       ?_SetOutputEPWM3 0020                                  ??_main 00A8  
                                ??_init 0026                           __activetblptr 000003  
                        ??_LCD_init4bit 0024                        __end_of_SineWave FED3  
                   __CFG_WPEND$WPENDMEM 000000                          __CFG_RETEN$OFF 000000  
              __size_of_PS2_readGamepad 023A                    _motorDrive_setSpeeds 0D20  
                                ?_debug 0001                                  _CCPR1L 000FBA  
                                _CCPR3L 000F4A                          __CFG_VBTBOR$ON 000000  
                                _ANCON1 000E47                                  _ANCON2 000E46  
                                _ANCON3 000E45                        ___awdiv@dividend 0060  
              __size_of_LCD_placeCursor 034E                                  _ANSEL6 00723E  
                                _ANSEL9 007231                                  _INT1IF 007F80  
                                _INT3IF 007F82                                  i1l3811 0074  
                                i1l3821 00AC                                  i1l3813 0082  
                                i1l3819 009E                                  _IOLOCK 007B36  
                        __CFG_WDTEN$OFF 000000                                  i2l5965 1A2A  
                                i2l5959 1A0C                                  _RCREG1 000FAE  
                                _RCREG3 000F2A                                  _RCREG4 000EFA  
                      _encoderInterrupt 0018                                  _NVCFG0 00746D  
                                _PVCFG0 00746E                                  _PVCFG1 00746F  
               __end_of_motorDrive_init 1E7C                                  _TMR0IE 007F95  
                                _SPBRG1 000FAF                                  _TMR0IF 007F92  
                                _SPBRG2 000F1F                                  _SPBRG3 000F2B  
                                _SPBRG4 000EFB                                  _TMR0IP 007F8A  
                                _TMR3IE 007D01                                  _TMR3ON 007D88  
                                _TMR4ON 007822                                  _TMR6ON 0079EA  
                                _RCMode 1696                                  _TRISE0 007CB0  
                                _TRISE1 007CB1                                  _TRISE2 007CB2  
                                _TRISE3 007CB3                                  _TRISE4 007CB4  
                                _TRISE5 007CB5                                  _TRISH0 007CC8  
                                _TRISE6 007CB6                                  _TRISH1 007CC9  
                                _TRISE7 007CB7                                  _TRISH2 007CCA  
                                _TRISH3 007CCB                                  _TRISG7 007CC7  
                                _TRISK1 007749                                  _TRISL0 007730  
                   __size_of_PS2_analog 0018                                  _TXREG1 000FAD  
                                _TXREG2 000F1D                                  _TXREG4 000EF9  
                      __end_of_delay_ms 1CEA                        __end_of_delay_us 2290  
                        __CFG_XINST$OFF 000000                 __end_of_competitionMode 23B8  
                    __size_of_OpenEPWM1 007E                      __size_of_OpenEPWM3 0088  
                      __end_of_fft_init 1FD8                          settings_auto@t 0020  
                                ___wmul 233A          __size_of_PS2_sendCommandString 0070  
                     __end_of_UART_init 18E0                               ??___awdiv 0026  
                        __CFG_STVREN$ON 000000           __end_of_PS2_sendCommandString 1F6A  
                             ??___lwdiv 0024                    settings_readButton@t 0020  
                             ??___lwmod 0024                                  _config 003C  
                                _millis 23E6                                  clear_0 1A88  
                                clear_1 1A9A                                  clear_2 1AA6  
                                clear_3 1AB2                                  clear_4 1ABE  
                                clear_5 1ACA                        ___awdiv@quotient 0066  
                       __CFG_CLKOEN$OFF 000000                                  _strcat 20A6  
                      __end_of_selfTest 222C                            __pdataCOMRAM 003E  
                 ?_motorDrive_setSpeeds 0068                            __mediumconst F8D2  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                         __CFG_DSBITEN$ON 000000  
                             ??_sprintf 0025                         __CFG_DSBOREN$ON 000000  
                            __accesstop 0060                 __end_of__initialization 1B2E  
                    __CFG_DSWDTOSC$LPRC 000000                           ___rparam_used 000001  
                       __CFG_T5GSEL$T5G 000000                         __CFG_IOL1WAY$ON 000000  
                           ?_SetDCEPWM1 0020                             ?_SetDCEPWM3 0020  
                  PS2_readGamepad@dword 0089                          __pcstackCOMRAM 0001  
                          __pidataBANK0 22E8                            __pidataBANK1 2311  
                             ?_PS2_init 0001                  LCD_placeCursor@address 0075  
                         __end_of_debug 2448                __size_of_settings_wander 000E  
                       __CFG_DSWDTEN$ON 000000                       RCMode@right_speed 01F1  
                     __CFG_PLLDIV$NODIV 000000                         OpenEPWM1@period 0022  
                       OpenEPWM3@period 0022                       __end_of_OpenEPWM1 1EFA  
                     __end_of_OpenEPWM3 1D72                                 ??_debug 0020  
              __size_of_LCD_printString 06A0                              __pbssBANK0 00AC  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            __pbssBANK3 0300                       ??_PS2_readGamepad 0078  
                      ?_motorDrive_init 0001                                 ?_RCMode 0001  
                     ??_LCD_placeCursor 0070                    __end_of_LCD_init4bit 0D20  
                            _delay_init 222C                        ?_competitionMode 0001  
                        _PS2_shiftInOut 1B34                              ??_PS2_init 0026  
                               ?___wmul 0020                      settings_selfTest@t 0020  
                               _ADCBUF0 000FC2                                 _ADCHS0H 000E87  
                               _ADCHS0L 000E86                                 _ADCON3L 000E8A  
                               _CCP1CON 000FB9                                 _CCP3CON 000F49  
                             PS2_init@i 00A5                               PS2_init@y 00A3  
                               ?_millis 0020                            ??_PS2_analog 0020  
                               _ANSEL10 007232                                 _ANSEL11 007233  
                               _ANSEL21 00722D                                 _ANSEL14 007236  
                               _ANSEL16 007228                                 _ANSEL17 007229  
                               _ANSEL18 00722A                                 _ANSEL19 00722B  
                               ?_strcat 0020                           ?_PS2_readType 0001  
                               _T3CKPS0 007D8C                                 _T3CKPS1 007D8D  
                               _T4CKPS1 007821                                 _PADCFG1 000F54  
                               _T6CKPS1 0079E9                  ??_motorDrive_setSpeeds 0069  
                         ?_PS2_reconfig 0001                         __CFG_WDTCLK$FRC 000000  
                             ?_delay_ms 0060                               ?_delay_us 0020  
                   __size_of_SetDCEPWM1 003A                     __size_of_SetDCEPWM3 003E  
                               _TMR3CS0 007D8E                                 _TMR3CS1 007D8F  
                               _SPBRGH1 000F30                                 _SPBRGH2 000F20  
                               _SPBRGH3 000F2C                                 _SPBRGH4 000EFC  
                               _PS2data 00AC                                 _SSP1ADD 000FC8  
                               _SSP2ADD 000F02                                 _SSP1BUF 000FC9  
                               _SSP2BUF 000F03                               ?_fft_init 0001  
              SetOutputEPWM1@outputmode 0020                      PS2_shiftInOut@byte 0060  
                       __size_of_RCMode 0140                      __end_of_PS2_analog 23D0  
                      PS2_readGamepad@i 0096                        ??_SetOutputEPWM1 0021  
                      ??_SetOutputEPWM3 0021                              _left_count 0026  
                __end_of_PS2_shiftInOut 1BD0                               ?_selfTest 0001  
                               __Hparam 0000                                 __Lparam 0000  
                               ___awdiv 18E0                         __size_of___wmul 0028  
                               ___lwdiv 1FD8                                 ___lwmod 2040  
                               __pcinit 1A80                              _read_delay 00D6  
                       __size_of_millis 0012                                 __ramtop 0E00  
              __end_of_encoderInterrupt 00F6                          ??_PS2_readType 0020  
                      delay_init@config 0036                                 __ptext0 1522  
                               __ptext1 2380                                 __ptext2 2418  
                               __ptext3 2426                                 __ptext4 23F8  
                               __ptext5 21F8                                 __ptext6 2408  
                               __ptext7 2362                                 __ptext8 2290  
                               __ptext9 1DF8                         PS2_shiftInOut@i 0062  
                       __size_of_strcat 0060                          ??_PS2_reconfig 0026  
                               _dpowers FED3                               _T2CONbits 000FCA  
                     ??_settings_wander 0020            __size_of_settings_readButton 0010  
                               _buttons 00D1                               _FONA_BUFF 0100  
                             _T4CONbits 000F04                              ??_delay_ms 0064  
                            ??_delay_us 0024                               _T6CONbits 000F3D  
                             _T8CONbits 000F3A                              ??_fft_init 0026  
                               _sprintf 11F4                        LCD_placeCursor@x 0074  
                      LCD_placeCursor@y 0024                          __pintcode_body 19B0  
                  end_of_initialization 1B2E                   __end_of_encoders_init 22E8  
                 __end_of_settings_auto 2408                   __end_of_settings_init 22BE  
              SetOutputEPWM3@outputmode 0020               LCD_printString@tempString 02B2  
                               int_func 19B0                           ??_clearMillis 0020  
                            _tickMillis 2434                    LCD_printString@i_591 02E3  
                       _controller_type 00D5                       ??_LCD_printString 007D  
             motorDrive_setSpeeds@templ 006D               motorDrive_setSpeeds@tempr 006F  
                            ??_selfTest 0026                         ?_PS2_shiftInOut 0001  
                           ?_delay_init 0001                    LCD_printString@input 0077  
                               postdec1 000FE5                                 postdec2 000FDD  
                            _wanderMode 2380                                 postinc0 000FEE  
                               postinc2 000FDE                               _RPOR10_11 000E17  
                      __CFG_FSCM$CSDCMD 000000                               _RPOR12_13 000E18  
                             _RPOR30_31 000E21                               _RPOR22_23 000E1D  
                             _RPOR34_35 000E23                  PS2_sendCommandString@y 0076  
              FONA_CheckStrength@F16408 01C6                               _PIXY_BUFF 03C8  
                             _PORTBbits 000F81                               _UART_init 17D6  
                             _PORTDbits 000F83                               _PORTEbits 000F84  
                             _PORTFbits 000F85                               _PORTGbits 000F86  
                             _PORTHbits 000F87                   PS2_readGamepad@F16091 00D7  
                 PS2_readGamepad@F16093 00C1                               _PORTJbits 000F88  
                             _PORTKbits 000EE7                               _PORTLbits 000EE4  
                      __CFG_FOSC$FRCPLL 000000                             _ADCON1Hbits 000FC1  
                             _TRISBbits 000F93                               _USB_INDEX 003B  
                             _TRISCbits 000F94              motorDrive_setSpeeds@lSpeed 007F  
                             _TRISDbits 000F95                               _TRISEbits 000F96  
                             _TRISFbits 000F97                               _TRISGbits 000F98  
                             _TRISHbits 000F99                               _TRISJbits 000F9A  
                             _TRISLbits 000EE6              motorDrive_setSpeeds@rSpeed 0068  
                  __CFG_CINASEL$DEFAULT 000000                   __size_of_LCD_init4bit 0332  
                 PS2_readGamepad@i_2532 0098                          __end_of_RCMode 17D6  
                          ??_SetDCEPWM1 0022                            ??_SetDCEPWM3 0022  
                 PS2_readGamepad@dword2 007D                       __CFG_WPFP$WPFP255 000000  
                   __end_of_clearMillis 23E6                          __end_of___wmul 2362  
                     __size_of_PS2_init 017A                           __pidataCOMRAM 2442  
                 _PS2_sendCommandString 1EFA                              ?_UART_init 0001  
                        __end_of_millis 23F8   __end_of_communicationInterruptHandler 1A80  
__size_of_communicationInterruptHandler 1A78           _communicationInterruptHandler 0008  
                       _PS2_readGamepad 0FBA                          __end_of_strcat 2106  
                          _LCD_init4bit 09EE                     start_initialization 1A80  
                   __size_of_delay_init 0032                         _LCD_placeCursor 06A0  
                    __end_of_SetDCEPWM1 21C2                      __end_of_SetDCEPWM3 2188  
                  SetOutputEPWM1@eccpmx 0021                            _enter_config 00FB  
                  SetOutputEPWM3@eccpmx 0021                               _OpenEPWM1 1E7C  
                             _OpenEPWM3 1CEA                                ??_RCMode 00A7  
                           ?_tickMillis 0001                    __end_of_PS2_readType 21F8  
                  __end_of_PS2_reconfig 214A                        _imaginaryNumbers 0232  
                           ?_wanderMode 0001                                ??___wmul 0024  
                           __pdataBANK0 00D7                             __pdataBANK1 01C6  
                              ??_millis 0024                                ??_strcat 0024  
                          _last_buttons 00D3                             __pbssBIGRAM 03C8  
                           __pbssCOMRAM 0026                           __pcstackBANK0 0060  
                         __pcstackBANK1 01EF                           __pcstackBANK2 02B2  
                   SetDCEPWM1@dutycycle 0020                       __size_of_delay_ms 008C  
                     __size_of_delay_us 0032                              ?_OpenEPWM1 0020  
                            ?_OpenEPWM3 0020                       __size_of_fft_init 006E  
                           sprintf@flag 006F                             sprintf@prec 0070  
                           _clearMillis 23D0                     _settings_readButton 2408  
                      ___lwdiv@dividend 0020                               __pintcode 0008  
                       _settings_wander 2418                       __size_of_selfTest 0034  
                         __pmediumconst F8D2                __size_of_motorDrive_init 0084  
                              ?___awdiv 0060                     SetDCEPWM3@dutycycle 0020  
                     _settings_selfTest 2426                 __end_of_PS2_readGamepad 11F4  
                              ?___lwdiv 0020                                ?___lwmod 0063  
                ?_PS2_sendCommandString 0070                             __pintcodelo 0018  
                    ?_settings_selfTest 0001                             ??_UART_init 0020  
              __size_of_competitionMode 001C                       ?_encoderInterrupt 0001  
               __end_of_LCD_placeCursor 09EE                       PS2_shiftInOut@tmp 0061  
                   __size_of_tickMillis 000E                    ?_settings_readButton 0001  
                      __CFG_POSCMD$NONE 000000              SetOutputEPWM1@outputconfig 0022  
                    ??_encoderInterrupt 0001                     ??_settings_selfTest 0020  
         __size_of_motorDrive_setSpeeds 029A                                _CCPTMRS0 000F36  
                       _LCD_printString 0000                             _PADCFG1bits 000F54  
        ?_communicationInterruptHandler 0001                               _last_read 00CD  
                      ___lwdiv@quotient 0061                          __size_of_debug 0002  
                              ?_sprintf 0067                     __size_of_wanderMode 001C  
                    LCD_printVal@F16365 003E                        ??_PS2_shiftInOut 0024  
                            RCMode@done 01F4                          ___wmul@product 0024  
                             delay_ms@x 0060                              RCMode@type 01F3  
                             delay_us@x 0020                            ??_delay_init 0020  
                   LCD_printString@aptr 02DD                                _PIR1bits 000F9E  
                              _PIR3bits 000FA4             PS2_sendCommandString@string 0070  
             __end_of_settings_selfTest 2434                                _PIR6bits 000FA6  
                      __CFG_WDTPS$32768 000000                                _PS2_init 13A8  
                              _RPINR0_1 000E2A                                _RPINR4_5 000E2C  
                              _RPINR6_7 000E2D                                _SSP1CON1 000FC6  
                              _SSP1CON2 000FC5                                _SSP1CON3 000F69  
                              _SSP2CON1 000F19                                _SSP2CON3 000F39  
                              _SSP1STAT 000FC7                                _SSP2STAT 000F1A  
                              _USB_BUFF 05BC                        PS2_analog@button 0020  
                     ___wmul@multiplier 0020                        __CFG_SOSCSEL$DIG 000000  
                 ??_settings_readButton 0020                              _CM1CONbits 000F53  
                   __end_ofatan@coeff_a FEEF                     __end_ofatan@coeff_b FEFE  
                      __CFG_WPDIS$WPDIS 000000                      __end_of_delay_init 225E  
                          PS2_init@temp 009A                   __size_of_PS2_readType 0036  
                           _INTCON2bits 000FF1                            delay_ms@time 006C  
                           _INTCON3bits 000FF0                               copy_data0 1AE4  
                             copy_data1 1B04                               _type_read 00E0  
                           ??_OpenEPWM1 0021                             ??_OpenEPWM3 0021  
                 __size_of_PS2_reconfig 0044                 __end_of_settings_wander 2426  
                              __Hrparam 0000                                _SineWave F8D3  
                      SetDCEPWM1@DCycle 0024                                __Lrparam 0000  
                      SetDCEPWM3@DCycle 0024                        ?_PS2_readGamepad 0001  
                      __size_of___awdiv 00D0                        __size_of___lwdiv 0068  
                      __size_of___lwmod 0066                  __size_of_encoders_init 002A  
                 OpenEPWM1@timer_source 0020                  __size_of_settings_auto 0010  
                __size_of_settings_init 002E                 __size_of_SetOutputEPWM1 0086  
               __size_of_SetOutputEPWM3 008E                 __end_of_LCD_printString 06A0  
                      ?_LCD_placeCursor 0024                       ??_motorDrive_init 0026  
                          _PS2_readType 21C2                              sprintf@val 0071  
             UART_transmitString@F16323 0300                            _PS2_reconfig 2106  
                            strcat@from 0022                                _delay_ms 1C5E  
                              _delay_us 225E                         ___lwdiv@divisor 0022  
                       ___lwdiv@counter 0060                                __ptext10 1BD0  
                              __ptext11 1D72                                __ptext20 2446  
                              __ptext12 1CEA                                __ptext21 239C  
                              __ptext13 1E7C                                __ptext30 0FBA  
                              __ptext22 1696                                __ptext14 1F6A  
                              __ptext31 2106                                __ptext23 0D20  
                              __ptext15 22BE                                __ptext40 06A0  
                              __ptext32 1EFA                                __ptext24 233A  
                              __ptext16 23D0                                __ptext41 225E  
                              __ptext33 1B34                                __ptext25 18E0  
                              __ptext17 17D6                       ??_competitionMode 0026  
                              __ptext42 1C5E                                __ptext34 23B8  
                              __ptext26 214A                                __ptext18 09EE  
                              __ptext43 23E6                                __ptext35 0000  
                              __ptext27 2188                                __ptext19 222C  
                              __ptext36 20A6                                __ptext28 21C2  
                              __ptext37 11F4                                __ptext29 13A8  
                              __ptext46 2434                                __ptext38 2040  
                              __ptext39 1FD8                            _SSP1CON1bits 000FC6  
                          _SSP1CON2bits 000FC5                              _LCDCONbits 000ED9  
                           _realNumbers 0146                                _fft_init 1F6A  
                      settings_wander@t 0020                             _exit_config 00E9  
                          _SSP2CON1bits 000F19                            _SSP2CON2bits 000F18  
                      __size_of_sprintf 01B4                            ??_tickMillis 0012  
                         __size_of_main 0174                           __size_of_init 001E  
                           _millisCount 002A                              _FONA_INDEX 0038  
                    __CFG_MSSPMSK1$MSK7 000000                      __CFG_MSSPMSK2$MSK7 000000  
                              _selfTest 21F8                      LCD_printString@val 02DB  
            __size_of_settings_selfTest 000E                                _set_mode 00F2  
                          ??_wanderMode 0026                             _UART4_INDEX 003A  
                            _MEMCONbits 000EE3               _motorDrive_setSpeeds$2400 0071  
             _motorDrive_setSpeeds$2401 0073               _motorDrive_setSpeeds$2402 0075  
             _motorDrive_setSpeeds$2403 0077               _motorDrive_setSpeeds$2404 0079  
             _motorDrive_setSpeeds$2405 007B               _motorDrive_setSpeeds$2406 007D  
                 LCD_printString@F16347 0132                            _SSP1STATbits 000FC7  
                              main@mode 01F5                            _SSP2STATbits 000F1A  
                           atan@coeff_a FEDD                             atan@coeff_b FEEF  
                            _INTCONbits 000FF2                      __end_of_tickMillis 2442  
                              intlevel1 0000                                intlevel2 0000  
                             sprintf@ap 006D                      __end_of_wanderMode 239C  
                             sprintf@sp 0067                           _encoders_init 22BE  
                         _settings_auto 23F8                           _settings_init 2290  
                      ___lwmod@dividend 0063                             _right_count 002E  
              PS2_sendCommandString@len 0072                            ?_clearMillis 0001  
                      ?_settings_wander 0001                              _RCSTA1bits 000FAB  
                            _RCSTA2bits 000F33                              _RCSTA3bits 000F2F  
                            _RCSTA4bits 000EFF                   LCD_printString@string 02C6  
               ??_PS2_sendCommandString 0073                              _PS2_analog 23B8  
                            _RPINR26_27 000E37                              _RPINR28_29 000E38  
                      ?_LCD_printString 0076                            _ADCBUF0Hbits 000FC3  
                              sprintf@c 0073                                sprintf@f 0069  
                              strcat@cp 0024                            _ADCBUF0Lbits 000FC2  
                              strcat@to 0020                         ___lwmod@divisor 0065  
                       ___lwmod@counter 0024                              _PIXY_INDEX 0039  
            SetOutputEPWM3@outputconfig 0022                        LCD_printString@i 02E1  
                            _PSPCONbits 000FA7                        LCD_printString@x 02DA  
                      LCD_printString@y 0076                             _USART4_BUFF 0200  
                        ?_encoders_init 0001                     __CFG_WPCFG$WPCFGDIS 000000  
                        ?_settings_auto 0001                          ?_settings_init 0001  
         LCD_printString@tempString_590 02DF                      __CFG_WINDIS$WDTSTD 000000  
             __size_of_encoderInterrupt 00DE            __end_of_motorDrive_setSpeeds 0FBA  
                __CFG_DSWDTPS$DSWDTPS1F 000000         ??_communicationInterruptHandler 0012  
