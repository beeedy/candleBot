

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 06 03:51:19 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F97J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  01260E                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for compass_pixyInit@F16129
    80  01260E  00                 	db	0
    81  01260F  50                 	db	80
    82  012610  20                 	db	32
    83  012611  00                 	db	0
    84                           
    85                           ;initializer for LCD_printVal@F16365
    86  012612  25                 	db	37
    87  012613  69                 	db	105
    88  012614  00                 	db	0
    89                           
    90                           	psect	idataBANK0
    91  0124FA                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for PS2_readGamepad@F16091
    95  0124FA  01                 	db	1
    96  0124FB  42                 	db	66
    97  0124FC  00                 	db	0
    98  0124FD  00                 	db	0
    99  0124FE  00                 	db	0
   100  0124FF  00                 	db	0
   101  012500  00                 	db	0
   102  012501  00                 	db	0
   103  012502  00                 	db	0
   104                           
   105                           ;initializer for _type_read
   106  012503  01                 	db	1
   107  012504  45                 	db	69
   108  012505  00                 	db	0
   109  012506  5A                 	db	90
   110  012507  5A                 	db	90
   111  012508  5A                 	db	90
   112  012509  5A                 	db	90
   113  01250A  5A                 	db	90
   114  01250B  5A                 	db	90
   115                           
   116                           ;initializer for _exit_config
   117  01250C  01                 	db	1
   118  01250D  43                 	db	67
   119  01250E  00                 	db	0
   120  01250F  00                 	db	0
   121  012510  5A                 	db	90
   122  012511  5A                 	db	90
   123  012512  5A                 	db	90
   124  012513  5A                 	db	90
   125  012514  5A                 	db	90
   126                           
   127                           ;initializer for _set_mode
   128  012515  01                 	db	1
   129  012516  44                 	db	68
   130  012517  00                 	db	0
   131  012518  01                 	db	1
   132  012519  03                 	db	3
   133  01251A  00                 	db	0
   134  01251B  00                 	db	0
   135  01251C  00                 	db	0
   136  01251D  00                 	db	0
   137                           
   138                           ;initializer for _enter_config
   139  01251E  01                 	db	1
   140  01251F  43                 	db	67
   141  012520  00                 	db	0
   142  012521  01                 	db	1
   143  012522  00                 	db	0
   144                           
   145                           	psect	idataBANK1
   146  012523                     __pidataBANK1:
   147                           	opt stack 0
   148                           
   149                           ;initializer for FONA_CheckStrength@F16408
   150  012523  30                 	db	48
   151  012524  30                 	db	48
   152  012525  30                 	db	48
   153  012526  30                 	db	48
   154  012527  30                 	db	48
   155  012528  30                 	db	48
   156  012529  30                 	db	48
   157  01252A  30                 	db	48
   158  01252B  30                 	db	48
   159  01252C  30                 	db	48
   160  01252D  30                 	db	48
   161  01252E  30                 	db	48
   162  01252F  30                 	db	48
   163  012530  30                 	db	48
   164  012531  30                 	db	48
   165  012532  30                 	db	48
   166  012533  30                 	db	48
   167  012534  30                 	db	48
   168  012535  30                 	db	48
   169  012536  30                 	db	48
   170  012537  00                 	db	0
   171                           
   172                           ;initializer for FONA_init@F16396
   173  012538  41                 	db	65
   174  012539  54                 	db	84
   175  01253A  0D                 	db	13
   176  01253B  0A                 	db	10
   177  01253C  4F                 	db	79
   178  01253D  4B                 	db	75
   179  01253E  0D                 	db	13
   180  01253F  0A                 	db	10
   181  012540  00                 	db	0
   182  012541  00                 	db	0
   183  012542  00                 	db	0
   184  012543  00                 	db	0
   185  012544  00                 	db	0
   186  012545  00                 	db	0
   187  012546  00                 	db	0
   188  012547  00                 	db	0
   189  012548  00                 	db	0
   190  012549  00                 	db	0
   191  01254A  00                 	db	0
   192  01254B  00                 	db	0
   193                           
   194                           	psect	mediumconst
   195  00F916                     __pmediumconst:
   196                           	opt stack 0
   197  00F916  00                 	db	0
   198  00F917                     _SineWave:
   199                           	opt stack 0
   200  00F917  0000               	dw	0
   201  00F919  00C9               	dw	201
   202  00F91B  0192               	dw	402
   203  00F91D  025B               	dw	603
   204  00F91F  0324               	dw	804
   205  00F921  03ED               	dw	1005
   206  00F923  04B6               	dw	1206
   207  00F925  057E               	dw	1406
   208  00F927  0647               	dw	1607
   209  00F929  0710               	dw	1808
   210  00F92B  07D9               	dw	2009
   211  00F92D  08A1               	dw	2209
   212  00F92F  096A               	dw	2410
   213  00F931  0A32               	dw	2610
   214  00F933  0AFB               	dw	2811
   215  00F935  0BC3               	dw	3011
   216  00F937  0C8B               	dw	3211
   217  00F939  0D53               	dw	3411
   218  00F93B  0E1B               	dw	3611
   219  00F93D  0EE3               	dw	3811
   220  00F93F  0FAB               	dw	4011
   221  00F941  1072               	dw	4210
   222  00F943  1139               	dw	4409
   223  00F945  1200               	dw	4608
   224  00F947  12C7               	dw	4807
   225  00F949  138E               	dw	5006
   226  00F94B  1455               	dw	5205
   227  00F94D  151B               	dw	5403
   228  00F94F  15E1               	dw	5601
   229  00F951  16A7               	dw	5799
   230  00F953  176D               	dw	5997
   231  00F955  1833               	dw	6195
   232  00F957  18F8               	dw	6392
   233  00F959  19BD               	dw	6589
   234  00F95B  1A82               	dw	6786
   235  00F95D  1B46               	dw	6982
   236  00F95F  1C0B               	dw	7179
   237  00F961  1CCF               	dw	7375
   238  00F963  1D93               	dw	7571
   239  00F965  1E56               	dw	7766
   240  00F967  1F19               	dw	7961
   241  00F969  1FDC               	dw	8156
   242  00F96B  209F               	dw	8351
   243  00F96D  2161               	dw	8545
   244  00F96F  2223               	dw	8739
   245  00F971  22E4               	dw	8932
   246  00F973  23A6               	dw	9126
   247  00F975  2467               	dw	9319
   248  00F977  2527               	dw	9511
   249  00F979  25E7               	dw	9703
   250  00F97B  26A7               	dw	9895
   251  00F97D  2767               	dw	10087
   252  00F97F  2826               	dw	10278
   253  00F981  28E5               	dw	10469
   254  00F983  29A3               	dw	10659
   255  00F985  2A61               	dw	10849
   256  00F987  2B1E               	dw	11038
   257  00F989  2BDB               	dw	11227
   258  00F98B  2C98               	dw	11416
   259  00F98D  2D54               	dw	11604
   260  00F98F  2E10               	dw	11792
   261  00F991  2ECC               	dw	11980
   262  00F993  2F86               	dw	12166
   263  00F995  3041               	dw	12353
   264  00F997  30FB               	dw	12539
   265  00F999  31B4               	dw	12724
   266  00F99B  326D               	dw	12909
   267  00F99D  3326               	dw	13094
   268  00F99F  33DE               	dw	13278
   269  00F9A1  3496               	dw	13462
   270  00F9A3  354D               	dw	13645
   271  00F9A5  3603               	dw	13827
   272  00F9A7  36B9               	dw	14009
   273  00F9A9  376F               	dw	14191
   274  00F9AB  3824               	dw	14372
   275  00F9AD  38D8               	dw	14552
   276  00F9AF  398C               	dw	14732
   277  00F9B1  3A3F               	dw	14911
   278  00F9B3  3AF2               	dw	15090
   279  00F9B5  3BA4               	dw	15268
   280  00F9B7  3C56               	dw	15446
   281  00F9B9  3D07               	dw	15623
   282  00F9BB  3DB7               	dw	15799
   283  00F9BD  3E67               	dw	15975
   284  00F9BF  3F16               	dw	16150
   285  00F9C1  3FC5               	dw	16325
   286  00F9C3  4073               	dw	16499
   287  00F9C5  4120               	dw	16672
   288  00F9C7  41CD               	dw	16845
   289  00F9C9  4279               	dw	17017
   290  00F9CB  4325               	dw	17189
   291  00F9CD  43D0               	dw	17360
   292  00F9CF  447A               	dw	17530
   293  00F9D1  4523               	dw	17699
   294  00F9D3  45CC               	dw	17868
   295  00F9D5  4674               	dw	18036
   296  00F9D7  471C               	dw	18204
   297  00F9D9  47C3               	dw	18371
   298  00F9DB  4869               	dw	18537
   299  00F9DD  490E               	dw	18702
   300  00F9DF  49B3               	dw	18867
   301  00F9E1  4A57               	dw	19031
   302  00F9E3  4AFA               	dw	19194
   303  00F9E5  4B9D               	dw	19357
   304  00F9E7  4C3F               	dw	19519
   305  00F9E9  4CE0               	dw	19680
   306  00F9EB  4D80               	dw	19840
   307  00F9ED  4E20               	dw	20000
   308  00F9EF  4EBF               	dw	20159
   309  00F9F1  4F5D               	dw	20317
   310  00F9F3  4FFA               	dw	20474
   311  00F9F5  5097               	dw	20631
   312  00F9F7  5133               	dw	20787
   313  00F9F9  51CE               	dw	20942
   314  00F9FB  5268               	dw	21096
   315  00F9FD  5301               	dw	21249
   316  00F9FF  539A               	dw	21402
   317  00FA01  5432               	dw	21554
   318  00FA03  54C9               	dw	21705
   319  00FA05  555F               	dw	21855
   320  00FA07  55F4               	dw	22004
   321  00FA09  5689               	dw	22153
   322  00FA0B  571D               	dw	22301
   323  00FA0D  57B0               	dw	22448
   324  00FA0F  5842               	dw	22594
   325  00FA11  58D3               	dw	22739
   326  00FA13  5963               	dw	22883
   327  00FA15  59F3               	dw	23027
   328  00FA17  5A81               	dw	23169
   329  00FA19  5B0F               	dw	23311
   330  00FA1B  5B9C               	dw	23452
   331  00FA1D  5C28               	dw	23592
   332  00FA1F  5CB3               	dw	23731
   333  00FA21  5D3D               	dw	23869
   334  00FA23  5DC6               	dw	24006
   335  00FA25  5E4F               	dw	24143
   336  00FA27  5ED6               	dw	24278
   337  00FA29  5F5D               	dw	24413
   338  00FA2B  5FE2               	dw	24546
   339  00FA2D  6067               	dw	24679
   340  00FA2F  60EB               	dw	24811
   341  00FA31  616E               	dw	24942
   342  00FA33  61F0               	dw	25072
   343  00FA35  6271               	dw	25201
   344  00FA37  62F1               	dw	25329
   345  00FA39  6370               	dw	25456
   346  00FA3B  63EE               	dw	25582
   347  00FA3D  646B               	dw	25707
   348  00FA3F  64E7               	dw	25831
   349  00FA41  6562               	dw	25954
   350  00FA43  65DD               	dw	26077
   351  00FA45  6656               	dw	26198
   352  00FA47  66CE               	dw	26318
   353  00FA49  6745               	dw	26437
   354  00FA4B  67BC               	dw	26556
   355  00FA4D  6831               	dw	26673
   356  00FA4F  68A5               	dw	26789
   357  00FA51  6919               	dw	26905
   358  00FA53  698B               	dw	27019
   359  00FA55  69FC               	dw	27132
   360  00FA57  6A6C               	dw	27244
   361  00FA59  6ADB               	dw	27355
   362  00FA5B  6B4A               	dw	27466
   363  00FA5D  6BB7               	dw	27575
   364  00FA5F  6C23               	dw	27683
   365  00FA61  6C8E               	dw	27790
   366  00FA63  6CF8               	dw	27896
   367  00FA65  6D61               	dw	28001
   368  00FA67  6DC9               	dw	28105
   369  00FA69  6E30               	dw	28208
   370  00FA6B  6E95               	dw	28309
   371  00FA6D  6EFA               	dw	28410
   372  00FA6F  6F5E               	dw	28510
   373  00FA71  6FC0               	dw	28608
   374  00FA73  7022               	dw	28706
   375  00FA75  7082               	dw	28802
   376  00FA77  70E1               	dw	28897
   377  00FA79  7140               	dw	28992
   378  00FA7B  719D               	dw	29085
   379  00FA7D  71F9               	dw	29177
   380  00FA7F  7254               	dw	29268
   381  00FA81  72AE               	dw	29358
   382  00FA83  7306               	dw	29446
   383  00FA85  735E               	dw	29534
   384  00FA87  73B5               	dw	29621
   385  00FA89  740A               	dw	29706
   386  00FA8B  745E               	dw	29790
   387  00FA8D  74B1               	dw	29873
   388  00FA8F  7503               	dw	29955
   389  00FA91  7554               	dw	30036
   390  00FA93  75A4               	dw	30116
   391  00FA95  75F3               	dw	30195
   392  00FA97  7640               	dw	30272
   393  00FA99  768D               	dw	30349
   394  00FA9B  76D8               	dw	30424
   395  00FA9D  7722               	dw	30498
   396  00FA9F  776B               	dw	30571
   397  00FAA1  77B3               	dw	30643
   398  00FAA3  77F9               	dw	30713
   399  00FAA5  783F               	dw	30783
   400  00FAA7  7883               	dw	30851
   401  00FAA9  78C6               	dw	30918
   402  00FAAB  7908               	dw	30984
   403  00FAAD  7949               	dw	31049
   404  00FAAF  7989               	dw	31113
   405  00FAB1  79C7               	dw	31175
   406  00FAB3  7A04               	dw	31236
   407  00FAB5  7A41               	dw	31297
   408  00FAB7  7A7C               	dw	31356
   409  00FAB9  7AB5               	dw	31413
   410  00FABB  7AEE               	dw	31470
   411  00FABD  7B25               	dw	31525
   412  00FABF  7B5C               	dw	31580
   413  00FAC1  7B91               	dw	31633
   414  00FAC3  7BC4               	dw	31684
   415  00FAC5  7BF7               	dw	31735
   416  00FAC7  7C29               	dw	31785
   417  00FAC9  7C59               	dw	31833
   418  00FACB  7C88               	dw	31880
   419  00FACD  7CB6               	dw	31926
   420  00FACF  7CE2               	dw	31970
   421  00FAD1  7D0E               	dw	32014
   422  00FAD3  7D38               	dw	32056
   423  00FAD5  7D61               	dw	32097
   424  00FAD7  7D89               	dw	32137
   425  00FAD9  7DB0               	dw	32176
   426  00FADB  7DD5               	dw	32213
   427  00FADD  7DF9               	dw	32249
   428  00FADF  7E1C               	dw	32284
   429  00FAE1  7E3E               	dw	32318
   430  00FAE3  7E5E               	dw	32350
   431  00FAE5  7E7E               	dw	32382
   432  00FAE7  7E9C               	dw	32412
   433  00FAE9  7EB9               	dw	32441
   434  00FAEB  7ED4               	dw	32468
   435  00FAED  7EEF               	dw	32495
   436  00FAEF  7F08               	dw	32520
   437  00FAF1  7F20               	dw	32544
   438  00FAF3  7F37               	dw	32567
   439  00FAF5  7F4C               	dw	32588
   440  00FAF7  7F61               	dw	32609
   441  00FAF9  7F74               	dw	32628
   442  00FAFB  7F86               	dw	32646
   443  00FAFD  7F96               	dw	32662
   444  00FAFF  7FA6               	dw	32678
   445  00FB01  7FB4               	dw	32692
   446  00FB03  7FC1               	dw	32705
   447  00FB05  7FCD               	dw	32717
   448  00FB07  7FD7               	dw	32727
   449  00FB09  7FE0               	dw	32736
   450  00FB0B  7FE8               	dw	32744
   451  00FB0D  7FEF               	dw	32751
   452  00FB0F  7FF5               	dw	32757
   453  00FB11  7FF9               	dw	32761
   454  00FB13  7FFC               	dw	32764
   455  00FB15  7FFE               	dw	32766
   456  00FB17  7FFF               	dw	32767
   457  00FB19  7FFE               	dw	32766
   458  00FB1B  7FFC               	dw	32764
   459  00FB1D  7FF9               	dw	32761
   460  00FB1F  7FF5               	dw	32757
   461  00FB21  7FEF               	dw	32751
   462  00FB23  7FE8               	dw	32744
   463  00FB25  7FE0               	dw	32736
   464  00FB27  7FD7               	dw	32727
   465  00FB29  7FCD               	dw	32717
   466  00FB2B  7FC1               	dw	32705
   467  00FB2D  7FB4               	dw	32692
   468  00FB2F  7FA6               	dw	32678
   469  00FB31  7F96               	dw	32662
   470  00FB33  7F86               	dw	32646
   471  00FB35  7F74               	dw	32628
   472  00FB37  7F61               	dw	32609
   473  00FB39  7F4C               	dw	32588
   474  00FB3B  7F37               	dw	32567
   475  00FB3D  7F20               	dw	32544
   476  00FB3F  7F08               	dw	32520
   477  00FB41  7EEF               	dw	32495
   478  00FB43  7ED4               	dw	32468
   479  00FB45  7EB9               	dw	32441
   480  00FB47  7E9C               	dw	32412
   481  00FB49  7E7E               	dw	32382
   482  00FB4B  7E5E               	dw	32350
   483  00FB4D  7E3E               	dw	32318
   484  00FB4F  7E1C               	dw	32284
   485  00FB51  7DF9               	dw	32249
   486  00FB53  7DD5               	dw	32213
   487  00FB55  7DB0               	dw	32176
   488  00FB57  7D89               	dw	32137
   489  00FB59  7D61               	dw	32097
   490  00FB5B  7D38               	dw	32056
   491  00FB5D  7D0E               	dw	32014
   492  00FB5F  7CE2               	dw	31970
   493  00FB61  7CB6               	dw	31926
   494  00FB63  7C88               	dw	31880
   495  00FB65  7C59               	dw	31833
   496  00FB67  7C29               	dw	31785
   497  00FB69  7BF7               	dw	31735
   498  00FB6B  7BC4               	dw	31684
   499  00FB6D  7B91               	dw	31633
   500  00FB6F  7B5C               	dw	31580
   501  00FB71  7B25               	dw	31525
   502  00FB73  7AEE               	dw	31470
   503  00FB75  7AB5               	dw	31413
   504  00FB77  7A7C               	dw	31356
   505  00FB79  7A41               	dw	31297
   506  00FB7B  7A04               	dw	31236
   507  00FB7D  79C7               	dw	31175
   508  00FB7F  7989               	dw	31113
   509  00FB81  7949               	dw	31049
   510  00FB83  7908               	dw	30984
   511  00FB85  78C6               	dw	30918
   512  00FB87  7883               	dw	30851
   513  00FB89  783F               	dw	30783
   514  00FB8B  77F9               	dw	30713
   515  00FB8D  77B3               	dw	30643
   516  00FB8F  776B               	dw	30571
   517  00FB91  7722               	dw	30498
   518  00FB93  76D8               	dw	30424
   519  00FB95  768D               	dw	30349
   520  00FB97  7640               	dw	30272
   521  00FB99  75F3               	dw	30195
   522  00FB9B  75A4               	dw	30116
   523  00FB9D  7554               	dw	30036
   524  00FB9F  7503               	dw	29955
   525  00FBA1  74B1               	dw	29873
   526  00FBA3  745E               	dw	29790
   527  00FBA5  740A               	dw	29706
   528  00FBA7  73B5               	dw	29621
   529  00FBA9  735E               	dw	29534
   530  00FBAB  7306               	dw	29446
   531  00FBAD  72AE               	dw	29358
   532  00FBAF  7254               	dw	29268
   533  00FBB1  71F9               	dw	29177
   534  00FBB3  719D               	dw	29085
   535  00FBB5  7140               	dw	28992
   536  00FBB7  70E1               	dw	28897
   537  00FBB9  7082               	dw	28802
   538  00FBBB  7022               	dw	28706
   539  00FBBD  6FC0               	dw	28608
   540  00FBBF  6F5E               	dw	28510
   541  00FBC1  6EFA               	dw	28410
   542  00FBC3  6E95               	dw	28309
   543  00FBC5  6E30               	dw	28208
   544  00FBC7  6DC9               	dw	28105
   545  00FBC9  6D61               	dw	28001
   546  00FBCB  6CF8               	dw	27896
   547  00FBCD  6C8E               	dw	27790
   548  00FBCF  6C23               	dw	27683
   549  00FBD1  6BB7               	dw	27575
   550  00FBD3  6B4A               	dw	27466
   551  00FBD5  6ADB               	dw	27355
   552  00FBD7  6A6C               	dw	27244
   553  00FBD9  69FC               	dw	27132
   554  00FBDB  698B               	dw	27019
   555  00FBDD  6919               	dw	26905
   556  00FBDF  68A5               	dw	26789
   557  00FBE1  6831               	dw	26673
   558  00FBE3  67BC               	dw	26556
   559  00FBE5  6745               	dw	26437
   560  00FBE7  66CE               	dw	26318
   561  00FBE9  6656               	dw	26198
   562  00FBEB  65DD               	dw	26077
   563  00FBED  6562               	dw	25954
   564  00FBEF  64E7               	dw	25831
   565  00FBF1  646B               	dw	25707
   566  00FBF3  63EE               	dw	25582
   567  00FBF5  6370               	dw	25456
   568  00FBF7  62F1               	dw	25329
   569  00FBF9  6271               	dw	25201
   570  00FBFB  61F0               	dw	25072
   571  00FBFD  616E               	dw	24942
   572  00FBFF  60EB               	dw	24811
   573  00FC01  6067               	dw	24679
   574  00FC03  5FE2               	dw	24546
   575  00FC05  5F5D               	dw	24413
   576  00FC07  5ED6               	dw	24278
   577  00FC09  5E4F               	dw	24143
   578  00FC0B  5DC6               	dw	24006
   579  00FC0D  5D3D               	dw	23869
   580  00FC0F  5CB3               	dw	23731
   581  00FC11  5C28               	dw	23592
   582  00FC13  5B9C               	dw	23452
   583  00FC15  5B0F               	dw	23311
   584  00FC17  5A81               	dw	23169
   585  00FC19  59F3               	dw	23027
   586  00FC1B  5963               	dw	22883
   587  00FC1D  58D3               	dw	22739
   588  00FC1F  5842               	dw	22594
   589  00FC21  57B0               	dw	22448
   590  00FC23  571D               	dw	22301
   591  00FC25  5689               	dw	22153
   592  00FC27  55F4               	dw	22004
   593  00FC29  555F               	dw	21855
   594  00FC2B  54C9               	dw	21705
   595  00FC2D  5432               	dw	21554
   596  00FC2F  539A               	dw	21402
   597  00FC31  5301               	dw	21249
   598  00FC33  5268               	dw	21096
   599  00FC35  51CE               	dw	20942
   600  00FC37  5133               	dw	20787
   601  00FC39  5097               	dw	20631
   602  00FC3B  4FFA               	dw	20474
   603  00FC3D  4F5D               	dw	20317
   604  00FC3F  4EBF               	dw	20159
   605  00FC41  4E20               	dw	20000
   606  00FC43  4D80               	dw	19840
   607  00FC45  4CE0               	dw	19680
   608  00FC47  4C3F               	dw	19519
   609  00FC49  4B9D               	dw	19357
   610  00FC4B  4AFA               	dw	19194
   611  00FC4D  4A57               	dw	19031
   612  00FC4F  49B3               	dw	18867
   613  00FC51  490E               	dw	18702
   614  00FC53  4869               	dw	18537
   615  00FC55  47C3               	dw	18371
   616  00FC57  471C               	dw	18204
   617  00FC59  4674               	dw	18036
   618  00FC5B  45CC               	dw	17868
   619  00FC5D  4523               	dw	17699
   620  00FC5F  447A               	dw	17530
   621  00FC61  43D0               	dw	17360
   622  00FC63  4325               	dw	17189
   623  00FC65  4279               	dw	17017
   624  00FC67  41CD               	dw	16845
   625  00FC69  4120               	dw	16672
   626  00FC6B  4073               	dw	16499
   627  00FC6D  3FC5               	dw	16325
   628  00FC6F  3F16               	dw	16150
   629  00FC71  3E67               	dw	15975
   630  00FC73  3DB7               	dw	15799
   631  00FC75  3D07               	dw	15623
   632  00FC77  3C56               	dw	15446
   633  00FC79  3BA4               	dw	15268
   634  00FC7B  3AF2               	dw	15090
   635  00FC7D  3A3F               	dw	14911
   636  00FC7F  398C               	dw	14732
   637  00FC81  38D8               	dw	14552
   638  00FC83  3824               	dw	14372
   639  00FC85  376F               	dw	14191
   640  00FC87  36B9               	dw	14009
   641  00FC89  3603               	dw	13827
   642  00FC8B  354D               	dw	13645
   643  00FC8D  3496               	dw	13462
   644  00FC8F  33DE               	dw	13278
   645  00FC91  3326               	dw	13094
   646  00FC93  326D               	dw	12909
   647  00FC95  31B4               	dw	12724
   648  00FC97  30FB               	dw	12539
   649  00FC99  3041               	dw	12353
   650  00FC9B  2F86               	dw	12166
   651  00FC9D  2ECC               	dw	11980
   652  00FC9F  2E10               	dw	11792
   653  00FCA1  2D54               	dw	11604
   654  00FCA3  2C98               	dw	11416
   655  00FCA5  2BDB               	dw	11227
   656  00FCA7  2B1E               	dw	11038
   657  00FCA9  2A61               	dw	10849
   658  00FCAB  29A3               	dw	10659
   659  00FCAD  28E5               	dw	10469
   660  00FCAF  2826               	dw	10278
   661  00FCB1  2767               	dw	10087
   662  00FCB3  26A7               	dw	9895
   663  00FCB5  25E7               	dw	9703
   664  00FCB7  2527               	dw	9511
   665  00FCB9  2467               	dw	9319
   666  00FCBB  23A6               	dw	9126
   667  00FCBD  22E4               	dw	8932
   668  00FCBF  2223               	dw	8739
   669  00FCC1  2161               	dw	8545
   670  00FCC3  209F               	dw	8351
   671  00FCC5  1FDC               	dw	8156
   672  00FCC7  1F19               	dw	7961
   673  00FCC9  1E56               	dw	7766
   674  00FCCB  1D93               	dw	7571
   675  00FCCD  1CCF               	dw	7375
   676  00FCCF  1C0B               	dw	7179
   677  00FCD1  1B46               	dw	6982
   678  00FCD3  1A82               	dw	6786
   679  00FCD5  19BD               	dw	6589
   680  00FCD7  18F8               	dw	6392
   681  00FCD9  1833               	dw	6195
   682  00FCDB  176D               	dw	5997
   683  00FCDD  16A7               	dw	5799
   684  00FCDF  15E1               	dw	5601
   685  00FCE1  151B               	dw	5403
   686  00FCE3  1455               	dw	5205
   687  00FCE5  138E               	dw	5006
   688  00FCE7  12C7               	dw	4807
   689  00FCE9  1200               	dw	4608
   690  00FCEB  1139               	dw	4409
   691  00FCED  1072               	dw	4210
   692  00FCEF  0FAB               	dw	4011
   693  00FCF1  0EE3               	dw	3811
   694  00FCF3  0E1B               	dw	3611
   695  00FCF5  0D53               	dw	3411
   696  00FCF7  0C8B               	dw	3211
   697  00FCF9  0BC3               	dw	3011
   698  00FCFB  0AFB               	dw	2811
   699  00FCFD  0A32               	dw	2610
   700  00FCFF  096A               	dw	2410
   701  00FD01  08A1               	dw	2209
   702  00FD03  07D9               	dw	2009
   703  00FD05  0710               	dw	1808
   704  00FD07  0647               	dw	1607
   705  00FD09  057E               	dw	1406
   706  00FD0B  04B6               	dw	1206
   707  00FD0D  03ED               	dw	1005
   708  00FD0F  0324               	dw	804
   709  00FD11  025B               	dw	603
   710  00FD13  0192               	dw	402
   711  00FD15  00C9               	dw	201
   712  00FD17  0000               	dw	0
   713  00FD19  FF37               	dw	65335
   714  00FD1B  FE6E               	dw	65134
   715  00FD1D  FDA5               	dw	64933
   716  00FD1F  FCDC               	dw	64732
   717  00FD21  FC13               	dw	64531
   718  00FD23  FB4A               	dw	64330
   719  00FD25  FA82               	dw	64130
   720  00FD27  F9B9               	dw	63929
   721  00FD29  F8F0               	dw	63728
   722  00FD2B  F827               	dw	63527
   723  00FD2D  F75F               	dw	63327
   724  00FD2F  F696               	dw	63126
   725  00FD31  F5CE               	dw	62926
   726  00FD33  F505               	dw	62725
   727  00FD35  F43D               	dw	62525
   728  00FD37  F375               	dw	62325
   729  00FD39  F2AD               	dw	62125
   730  00FD3B  F1E5               	dw	61925
   731  00FD3D  F11D               	dw	61725
   732  00FD3F  F055               	dw	61525
   733  00FD41  EF8E               	dw	61326
   734  00FD43  EEC7               	dw	61127
   735  00FD45  EE00               	dw	60928
   736  00FD47  ED39               	dw	60729
   737  00FD49  EC72               	dw	60530
   738  00FD4B  EBAB               	dw	60331
   739  00FD4D  EAE5               	dw	60133
   740  00FD4F  EA1F               	dw	59935
   741  00FD51  E959               	dw	59737
   742  00FD53  E893               	dw	59539
   743  00FD55  E7CD               	dw	59341
   744  00FD57  E708               	dw	59144
   745  00FD59  E643               	dw	58947
   746  00FD5B  E57E               	dw	58750
   747  00FD5D  E4BA               	dw	58554
   748  00FD5F  E3F5               	dw	58357
   749  00FD61  E331               	dw	58161
   750  00FD63  E26D               	dw	57965
   751  00FD65  E1AA               	dw	57770
   752  00FD67  E0E7               	dw	57575
   753  00FD69  E024               	dw	57380
   754  00FD6B  DF61               	dw	57185
   755  00FD6D  DE9F               	dw	56991
   756  00FD6F  DDDD               	dw	56797
   757  00FD71  DD1C               	dw	56604
   758  00FD73  DC5A               	dw	56410
   759  00FD75  DB99               	dw	56217
   760  00FD77  DAD9               	dw	56025
   761  00FD79  DA19               	dw	55833
   762  00FD7B  D959               	dw	55641
   763  00FD7D  D899               	dw	55449
   764  00FD7F  D7DA               	dw	55258
   765  00FD81  D71B               	dw	55067
   766  00FD83  D65D               	dw	54877
   767  00FD85  D59F               	dw	54687
   768  00FD87  D4E2               	dw	54498
   769  00FD89  D425               	dw	54309
   770  00FD8B  D368               	dw	54120
   771  00FD8D  D2AC               	dw	53932
   772  00FD8F  D1F0               	dw	53744
   773  00FD91  D134               	dw	53556
   774  00FD93  D07A               	dw	53370
   775  00FD95  CFBF               	dw	53183
   776  00FD97  CF05               	dw	52997
   777  00FD99  CE4C               	dw	52812
   778  00FD9B  CD93               	dw	52627
   779  00FD9D  CCDA               	dw	52442
   780  00FD9F  CC22               	dw	52258
   781  00FDA1  CB6A               	dw	52074
   782  00FDA3  CAB3               	dw	51891
   783  00FDA5  C9FD               	dw	51709
   784  00FDA7  C947               	dw	51527
   785  00FDA9  C891               	dw	51345
   786  00FDAB  C7DC               	dw	51164
   787  00FDAD  C728               	dw	50984
   788  00FDAF  C674               	dw	50804
   789  00FDB1  C5C1               	dw	50625
   790  00FDB3  C50E               	dw	50446
   791  00FDB5  C45C               	dw	50268
   792  00FDB7  C3AA               	dw	50090
   793  00FDB9  C2F9               	dw	49913
   794  00FDBB  C249               	dw	49737
   795  00FDBD  C199               	dw	49561
   796  00FDBF  C0EA               	dw	49386
   797  00FDC1  C03B               	dw	49211
   798  00FDC3  BF8D               	dw	49037
   799  00FDC5  BEE0               	dw	48864
   800  00FDC7  BE33               	dw	48691
   801  00FDC9  BD87               	dw	48519
   802  00FDCB  BCDB               	dw	48347
   803  00FDCD  BC30               	dw	48176
   804  00FDCF  BB86               	dw	48006
   805  00FDD1  BADD               	dw	47837
   806  00FDD3  BA34               	dw	47668
   807  00FDD5  B98C               	dw	47500
   808  00FDD7  B8E4               	dw	47332
   809  00FDD9  B83D               	dw	47165
   810  00FDDB  B797               	dw	46999
   811  00FDDD  B6F2               	dw	46834
   812  00FDDF  B64D               	dw	46669
   813  00FDE1  B5A9               	dw	46505
   814  00FDE3  B506               	dw	46342
   815  00FDE5  B463               	dw	46179
   816  00FDE7  B3C1               	dw	46017
   817  00FDE9  B320               	dw	45856
   818  00FDEB  B280               	dw	45696
   819  00FDED  B1E0               	dw	45536
   820  00FDEF  B141               	dw	45377
   821  00FDF1  B0A3               	dw	45219
   822  00FDF3  B006               	dw	45062
   823  00FDF5  AF69               	dw	44905
   824  00FDF7  AECD               	dw	44749
   825  00FDF9  AE32               	dw	44594
   826  00FDFB  AD98               	dw	44440
   827  00FDFD  ACFF               	dw	44287
   828  00FDFF  AC66               	dw	44134
   829  00FE01  ABCE               	dw	43982
   830  00FE03  AB37               	dw	43831
   831  00FE05  AAA1               	dw	43681
   832  00FE07  AA0C               	dw	43532
   833  00FE09  A977               	dw	43383
   834  00FE0B  A8E3               	dw	43235
   835  00FE0D  A850               	dw	43088
   836  00FE0F  A7BE               	dw	42942
   837  00FE11  A72D               	dw	42797
   838  00FE13  A69D               	dw	42653
   839  00FE15  A60D               	dw	42509
   840  00FE17  A57F               	dw	42367
   841  00FE19  A4F1               	dw	42225
   842  00FE1B  A464               	dw	42084
   843  00FE1D  A3D8               	dw	41944
   844  00FE1F  A34D               	dw	41805
   845  00FE21  A2C3               	dw	41667
   846  00FE23  A23A               	dw	41530
   847  00FE25  A1B1               	dw	41393
   848  00FE27  A12A               	dw	41258
   849  00FE29  A0A3               	dw	41123
   850  00FE2B  A01E               	dw	40990
   851  00FE2D  9F99               	dw	40857
   852  00FE2F  9F15               	dw	40725
   853  00FE31  9E92               	dw	40594
   854  00FE33  9E10               	dw	40464
   855  00FE35  9D8F               	dw	40335
   856  00FE37  9D0F               	dw	40207
   857  00FE39  9C90               	dw	40080
   858  00FE3B  9C12               	dw	39954
   859  00FE3D  9B95               	dw	39829
   860  00FE3F  9B19               	dw	39705
   861  00FE41  9A9E               	dw	39582
   862  00FE43  9A23               	dw	39459
   863  00FE45  99AA               	dw	39338
   864  00FE47  9932               	dw	39218
   865  00FE49  98BB               	dw	39099
   866  00FE4B  9844               	dw	38980
   867  00FE4D  97CF               	dw	38863
   868  00FE4F  975B               	dw	38747
   869  00FE51  96E7               	dw	38631
   870  00FE53  9675               	dw	38517
   871  00FE55  9604               	dw	38404
   872  00FE57  9594               	dw	38292
   873  00FE59  9525               	dw	38181
   874  00FE5B  94B6               	dw	38070
   875  00FE5D  9449               	dw	37961
   876  00FE5F  93DD               	dw	37853
   877  00FE61  9372               	dw	37746
   878  00FE63  9308               	dw	37640
   879  00FE65  929F               	dw	37535
   880  00FE67  9237               	dw	37431
   881  00FE69  91D0               	dw	37328
   882  00FE6B  916B               	dw	37227
   883  00FE6D  9106               	dw	37126
   884  00FE6F  90A2               	dw	37026
   885  00FE71  9040               	dw	36928
   886  00FE73  8FDE               	dw	36830
   887  00FE75  8F7E               	dw	36734
   888  00FE77  8F1F               	dw	36639
   889  00FE79  8EC0               	dw	36544
   890  00FE7B  8E63               	dw	36451
   891  00FE7D  8E07               	dw	36359
   892  00FE7F  8DAC               	dw	36268
   893  00FE81  8D52               	dw	36178
   894  00FE83  8CFA               	dw	36090
   895  00FE85  8CA2               	dw	36002
   896  00FE87  8C4B               	dw	35915
   897  00FE89  8BF6               	dw	35830
   898  00FE8B  8BA2               	dw	35746
   899  00FE8D  8B4F               	dw	35663
   900  00FE8F  8AFD               	dw	35581
   901  00FE91  8AAC               	dw	35500
   902  00FE93  8A5C               	dw	35420
   903  00FE95  8A0D               	dw	35341
   904  00FE97  89C0               	dw	35264
   905  00FE99  8973               	dw	35187
   906  00FE9B  8928               	dw	35112
   907  00FE9D  88DE               	dw	35038
   908  00FE9F  8895               	dw	34965
   909  00FEA1  884D               	dw	34893
   910  00FEA3  8807               	dw	34823
   911  00FEA5  87C1               	dw	34753
   912  00FEA7  877D               	dw	34685
   913  00FEA9  873A               	dw	34618
   914  00FEAB  86F8               	dw	34552
   915  00FEAD  86B7               	dw	34487
   916  00FEAF  8677               	dw	34423
   917  00FEB1  8639               	dw	34361
   918  00FEB3  85FC               	dw	34300
   919  00FEB5  85BF               	dw	34239
   920  00FEB7  8584               	dw	34180
   921  00FEB9  854B               	dw	34123
   922  00FEBB  8512               	dw	34066
   923  00FEBD  84DB               	dw	34011
   924  00FEBF  84A4               	dw	33956
   925  00FEC1  846F               	dw	33903
   926  00FEC3  843C               	dw	33852
   927  00FEC5  8409               	dw	33801
   928  00FEC7  83D7               	dw	33751
   929  00FEC9  83A7               	dw	33703
   930  00FECB  8378               	dw	33656
   931  00FECD  834A               	dw	33610
   932  00FECF  831E               	dw	33566
   933  00FED1  82F2               	dw	33522
   934  00FED3  82C8               	dw	33480
   935  00FED5  829F               	dw	33439
   936  00FED7  8277               	dw	33399
   937  00FED9  8250               	dw	33360
   938  00FEDB  822B               	dw	33323
   939  00FEDD  8207               	dw	33287
   940  00FEDF  81E4               	dw	33252
   941  00FEE1  81C2               	dw	33218
   942  00FEE3  81A2               	dw	33186
   943  00FEE5  8182               	dw	33154
   944  00FEE7  8164               	dw	33124
   945  00FEE9  8147               	dw	33095
   946  00FEEB  812C               	dw	33068
   947  00FEED  8111               	dw	33041
   948  00FEEF  80F8               	dw	33016
   949  00FEF1  80E0               	dw	32992
   950  00FEF3  80C9               	dw	32969
   951  00FEF5  80B4               	dw	32948
   952  00FEF7  809F               	dw	32927
   953  00FEF9  808C               	dw	32908
   954  00FEFB  807A               	dw	32890
   955  00FEFD  806A               	dw	32874
   956  00FEFF  805A               	dw	32858
   957  00FF01  804C               	dw	32844
   958  00FF03  803F               	dw	32831
   959  00FF05  8033               	dw	32819
   960  00FF07  8029               	dw	32809
   961  00FF09  8020               	dw	32800
   962  00FF0B  8018               	dw	32792
   963  00FF0D  8011               	dw	32785
   964  00FF0F  800B               	dw	32779
   965  00FF11  8007               	dw	32775
   966  00FF13  8004               	dw	32772
   967  00FF15  8002               	dw	32770
   968  00FF17                     __end_of_SineWave:
   969                           	opt stack 0
   970  00FF17                     _dpowers:
   971                           	opt stack 0
   972  00FF17  0001               	dw	1
   973  00FF19  000A               	dw	10
   974  00FF1B  0064               	dw	100
   975  00FF1D  03E8               	dw	1000
   976  00FF1F  2710               	dw	10000
   977  00FF21                     __end_of_dpowers:
   978                           	opt stack 0
   979  00FF21  3C                 	db	60
   980  00FF22  04                 	db	4
   981  00FF23  42                 	db	66
   982  00FF24  9F                 	db	159
   983  00FF25  6A                 	db	106
   984  00FF26  42                 	db	66
   985  00FF27  90                 	db	144
   986  00FF28  01                 	db	1
   987  00FF29  42                 	db	66
   988  00FF2A  4D                 	db	77
   989  00FF2B  BB                 	db	187
   990  00FF2C  40                 	db	64
   991  00FF2D  EC                 	db	236
   992  00FF2E  47                 	db	71
   993  00FF2F  3E                 	db	62
   994  00FF30  8E                 	db	142
   995  00FF31  1F                 	db	31
   996  00FF32  BB                 	db	187
   997  00FF33                     __end_ofatan@coeff_a:
   998                           	opt stack 0
   999  00FF33  3C                 	db	60
  1000  00FF34  04                 	db	4
  1001  00FF35  42                 	db	66
  1002  00FF36  5A                 	db	90
  1003  00FF37  8B                 	db	139
  1004  00FF38  42                 	db	66
  1005  00FF39  04                 	db	4
  1006  00FF3A  44                 	db	68
  1007  00FF3B  42                 	db	66
  1008  00FF3C  9C                 	db	156
  1009  00FF3D  4F                 	db	79
  1010  00FF3E  41                 	db	65
  1011  00FF3F  00                 	db	0
  1012  00FF40  80                 	db	128
  1013  00FF41  3F                 	db	63
  1014  00FF42                     __end_ofatan@coeff_b:
  1015                           	opt stack 0
  1016  0000                     _ADCSS0H	set	3715
  1017  0000                     _ADCSS0L	set	3714
  1018  0000                     _ADCSS1H	set	3717
  1019  0000                     _ADCSS1L	set	3716
  1020  0000                     _ANCON1	set	3655
  1021  0000                     _ANCON2	set	3654
  1022  0000                     _ANCON3	set	3653
  1023  0000                     _BAUDCON4bits	set	3837
  1024  0000                     _LCDCONbits	set	3801
  1025  0000                     _MEMCONbits	set	3811
  1026  0000                     _PORTKbits	set	3815
  1027  0000                     _PORTLbits	set	3812
  1028  0000                     _RCREG4	set	3834
  1029  0000                     _RCSTA4bits	set	3839
  1030  0000                     _RPINR0_1	set	3626
  1031  0000                     _RPINR26_27	set	3639
  1032  0000                     _RPINR28_29	set	3640
  1033  0000                     _RPINR4_5	set	3628
  1034  0000                     _RPINR6_7	set	3629
  1035  0000                     _RPOR10_11	set	3607
  1036  0000                     _RPOR12_13	set	3608
  1037  0000                     _RPOR22_23	set	3613
  1038  0000                     _RPOR30_31	set	3617
  1039  0000                     _RPOR34_35	set	3619
  1040  0000                     _SPBRG4	set	3835
  1041  0000                     _SPBRGH4	set	3836
  1042  0000                     _TRISLbits	set	3814
  1043  0000                     _TXREG4	set	3833
  1044  0000                     _TXSTA4bits	set	3838
  1045  0000                     _ADRC	set	29791
  1046  0000                     _ALTS	set	29792
  1047  0000                     _ANSEL10	set	29234
  1048  0000                     _ANSEL11	set	29235
  1049  0000                     _ANSEL16	set	29224
  1050  0000                     _ANSEL17	set	29225
  1051  0000                     _ANSEL18	set	29226
  1052  0000                     _ANSEL19	set	29227
  1053  0000                     _ANSEL21	set	29229
  1054  0000                     _ANSEL22	set	29230
  1055  0000                     _ANSEL6	set	29246
  1056  0000                     _ANSEL9	set	29233
  1057  0000                     _BUFREGEN	set	29803
  1058  0000                     _CH0NA0	set	29749
  1059  0000                     _CH0NA1	set	29750
  1060  0000                     _CH0NA2	set	29751
  1061  0000                     _CH0SA0	set	29744
  1062  0000                     _CH0SA1	set	29745
  1063  0000                     _CH0SA2	set	29746
  1064  0000                     _CH0SA3	set	29747
  1065  0000                     _CH0SA4	set	29748
  1066  0000                     _CPEN	set	30407
  1067  0000                     _CSCNA	set	29802
  1068  0000                     _CSS14	set	29726
  1069  0000                     _LCDA	set	30421
  1070  0000                     _LCDMD	set	30603
  1071  0000                     _NVCFG0	set	29805
  1072  0000                     _PVCFG0	set	29806
  1073  0000                     _PVCFG1	set	29807
  1074  0000                     _RL1	set	30497
  1075  0000                     _RL2	set	30498
  1076  0000                     _RL3	set	30499
  1077  0000                     _TRISK1	set	30537
  1078  0000                     _TRISL0	set	30512
  1079  0000                     _BAUDCON2bits	set	3889
  1080  0000                     _BAUDCON3bits	set	3885
  1081  0000                     _CCP3CON	set	3913
  1082  0000                     _CCPR3L	set	3914
  1083  0000                     _CCPTMRS0	set	3894
  1084  0000                     _CM1CONbits	set	3923
  1085  0000                     _PADCFG1	set	3924
  1086  0000                     _PADCFG1bits	set	3924
  1087  0000                     _PR4	set	3845
  1088  0000                     _PR6	set	3902
  1089  0000                     _PR8	set	3899
  1090  0000                     _RCREG3	set	3882
  1091  0000                     _RCSTA2bits	set	3891
  1092  0000                     _RCSTA3bits	set	3887
  1093  0000                     _SPBRG2	set	3871
  1094  0000                     _SPBRG3	set	3883
  1095  0000                     _SPBRGH1	set	3888
  1096  0000                     _SPBRGH2	set	3872
  1097  0000                     _SPBRGH3	set	3884
  1098  0000                     _SSP2ADD	set	3842
  1099  0000                     _SSP2BUF	set	3843
  1100  0000                     _SSP2CON1	set	3865
  1101  0000                     _SSP2CON1bits	set	3865
  1102  0000                     _SSP2CON2	set	3864
  1103  0000                     _SSP2CON2bits	set	3864
  1104  0000                     _SSP2CON3	set	3897
  1105  0000                     _SSP2CON3bits	set	3897
  1106  0000                     _SSP2STAT	set	3866
  1107  0000                     _SSP2STATbits	set	3866
  1108  0000                     _T4CONbits	set	3844
  1109  0000                     _T6CONbits	set	3901
  1110  0000                     _T8CONbits	set	3898
  1111  0000                     _TXREG2	set	3869
  1112  0000                     _TXSTA2bits	set	3890
  1113  0000                     _TXSTA3bits	set	3886
  1114  0000                     _T4CKPS1	set	30753
  1115  0000                     _T6CKPS1	set	31209
  1116  0000                     _TMR4ON	set	30754
  1117  0000                     _TMR6ON	set	31210
  1118  0000                     _ADCBUF0Hbits	set	4035
  1119  0000                     _ADCBUF0Lbits	set	4034
  1120  0000                     _BAUDCON1bits	set	3943
  1121  0000                     _CCP1CON	set	4025
  1122  0000                     _CCPR1L	set	4026
  1123  0000                     _INTCON2bits	set	4081
  1124  0000                     _INTCON3bits	set	4080
  1125  0000                     _INTCONbits	set	4082
  1126  0000                     _PIR1bits	set	3998
  1127  0000                     _PIR3bits	set	4004
  1128  0000                     _PIR6bits	set	4006
  1129  0000                     _PORTBbits	set	3969
  1130  0000                     _PORTDbits	set	3971
  1131  0000                     _PORTEbits	set	3972
  1132  0000                     _PORTFbits	set	3973
  1133  0000                     _PORTGbits	set	3974
  1134  0000                     _PORTHbits	set	3975
  1135  0000                     _PORTJbits	set	3976
  1136  0000                     _PR2	set	4043
  1137  0000                     _PSPCONbits	set	4007
  1138  0000                     _RCREG1	set	4014
  1139  0000                     _RCSTA1bits	set	4011
  1140  0000                     _SPBRG1	set	4015
  1141  0000                     _SSP1ADD	set	4040
  1142  0000                     _SSP1BUF	set	4041
  1143  0000                     _SSP1CON1	set	4038
  1144  0000                     _SSP1CON1bits	set	4038
  1145  0000                     _SSP1CON2bits	set	4037
  1146  0000                     _SSP1CON3	set	3945
  1147  0000                     _SSP1CON3bits	set	3945
  1148  0000                     _SSP1STAT	set	4039
  1149  0000                     _SSP1STATbits	set	4039
  1150  0000                     _T0CON	set	4053
  1151  0000                     _T2CONbits	set	4042
  1152  0000                     _TMR0L	set	4054
  1153  0000                     _TMR3H	set	4019
  1154  0000                     _TMR3L	set	4018
  1155  0000                     _TRISBbits	set	3987
  1156  0000                     _TRISCbits	set	3988
  1157  0000                     _TRISDbits	set	3989
  1158  0000                     _TRISEbits	set	3990
  1159  0000                     _TRISFbits	set	3991
  1160  0000                     _TRISGbits	set	3992
  1161  0000                     _TRISHbits	set	3993
  1162  0000                     _TRISJbits	set	3994
  1163  0000                     _TXREG1	set	4013
  1164  0000                     _TXSTA1bits	set	4012
  1165  0000                     _ADON	set	32271
  1166  0000                     _ASAM	set	32258
  1167  0000                     _DONE	set	32256
  1168  0000                     _FORM0	set	32264
  1169  0000                     _FORM1	set	32265
  1170  0000                     _INT1IF	set	32640
  1171  0000                     _INT3IF	set	32642
  1172  0000                     _IOLOCK	set	31542
  1173  0000                     _IPEN	set	32391
  1174  0000                     _MODE12	set	32266
  1175  0000                     _RC1IE	set	31981
  1176  0000                     _RC2IE	set	32029
  1177  0000                     _RC3IE	set	31501
  1178  0000                     _RC4IE	set	31503
  1179  0000                     _RD163	set	32143
  1180  0000                     _RG0	set	31792
  1181  0000                     _RG1	set	31793
  1182  0000                     _RG2	set	31794
  1183  0000                     _RG3	set	31795
  1184  0000                     _RG4	set	31796
  1185  0000                     _T3CKPS0	set	32140
  1186  0000                     _T3CKPS1	set	32141
  1187  0000                     _TMR0IE	set	32661
  1188  0000                     _TMR0IF	set	32658
  1189  0000                     _TMR0IP	set	32650
  1190  0000                     _TMR3CS0	set	32142
  1191  0000                     _TMR3CS1	set	32143
  1192  0000                     _TMR3IE	set	32001
  1193  0000                     _TMR3ON	set	32136
  1194  0000                     _TRISE0	set	31920
  1195  0000                     _TRISE1	set	31921
  1196  0000                     _TRISE2	set	31922
  1197  0000                     _TRISE3	set	31923
  1198  0000                     _TRISE4	set	31924
  1199  0000                     _TRISE5	set	31925
  1200  0000                     _TRISE6	set	31926
  1201  0000                     _TRISE7	set	31927
  1202  0000                     _TRISG7	set	31943
  1203  0000                     _TRISH0	set	31944
  1204  0000                     _TRISH1	set	31945
  1205  0000                     _TRISH2	set	31946
  1206  0000                     _TRISH3	set	31947
  1207  0000                     _TX1IE	set	31980
  1208  0000                     _TX2IE	set	32028
  1209  0000                     _TX3IE	set	31500
  1210  0000                     _TX4IE	set	31502
  1211  00FF42  4D                 	db	77	;'M'
  1212  00FF43  45                 	db	69	;'E'
  1213  00FF44  53                 	db	83	;'S'
  1214  00FF45  53                 	db	83	;'S'
  1215  00FF46  41                 	db	65	;'A'
  1216  00FF47  47                 	db	71	;'G'
  1217  00FF48  45                 	db	69	;'E'
  1218  00FF49  5F                 	db	95	;'_'
  1219  00FF4A  47                 	db	71	;'G'
  1220  00FF4B  4F                 	db	79	;'O'
  1221  00FF4C  45                 	db	69	;'E'
  1222  00FF4D  53                 	db	83	;'S'
  1223  00FF4E  5F                 	db	95	;'_'
  1224  00FF4F  48                 	db	72	;'H'
  1225  00FF50  45                 	db	69	;'E'
  1226  00FF51  52                 	db	82	;'R'
  1227  00FF52  45                 	db	69	;'E'
  1228  00FF53  0D                 	db	13
  1229  00FF54  0A                 	db	10
  1230  00FF55  00                 	db	0
  1231  00FF56                     STR_7:
  1232  00FF56  52                 	db	82	;'R'
  1233  00FF57  43                 	db	67	;'C'
  1234  00FF58  20                 	db	32
  1235  00FF59  4D                 	db	77	;'M'
  1236  00FF5A  6F                 	db	111	;'o'
  1237  00FF5B  64                 	db	100	;'d'
  1238  00FF5C  65                 	db	101	;'e'
  1239  00FF5D  0A                 	db	10
  1240  00FF5E  45                 	db	69	;'E'
  1241  00FF5F  52                 	db	82	;'R'
  1242  00FF60  52                 	db	82	;'R'
  1243  00FF61  3A                 	db	58	;':'
  1244  00FF62  20                 	db	32
  1245  00FF63  25                 	db	37
  1246  00FF64  69                 	db	105	;'i'
  1247  00FF65  20                 	db	32
  1248  00FF66  20                 	db	32
  1249  00FF67  00                 	db	0
  1250  00FF68                     STR_4:
  1251  00FF68  57                 	db	87	;'W'
  1252  00FF69  61                 	db	97	;'a'
  1253  00FF6A  6E                 	db	110	;'n'
  1254  00FF6B  64                 	db	100	;'d'
  1255  00FF6C  65                 	db	101	;'e'
  1256  00FF6D  72                 	db	114	;'r'
  1257  00FF6E  69                 	db	105	;'i'
  1258  00FF6F  6E                 	db	110	;'n'
  1259  00FF70  0A                 	db	10
  1260  00FF71  2D                 	db	45
  1261  00FF72  2D                 	db	45
  1262  00FF73  2D                 	db	45
  1263  00FF74  2E                 	db	46
  1264  00FF75  2E                 	db	46
  1265  00FF76  2D                 	db	45
  1266  00FF77  2D                 	db	45
  1267  00FF78  2D                 	db	45
  1268  00FF79  00                 	db	0
  1269  00FF7A                     STR_10:
  1270  00FF7A  50                 	db	80	;'P'
  1271  00FF7B  69                 	db	105	;'i'
  1272  00FF7C  78                 	db	120	;'x'
  1273  00FF7D  79                 	db	121	;'y'
  1274  00FF7E  20                 	db	32
  1275  00FF7F  43                 	db	67	;'C'
  1276  00FF80  6F                 	db	111	;'o'
  1277  00FF81  6D                 	db	109	;'m'
  1278  00FF82  0A                 	db	10
  1279  00FF83  20                 	db	32
  1280  00FF84  66                 	db	102	;'f'
  1281  00FF85  61                 	db	97	;'a'
  1282  00FF86  69                 	db	105	;'i'
  1283  00FF87  6C                 	db	108	;'l'
  1284  00FF88  75                 	db	117	;'u'
  1285  00FF89  72                 	db	114	;'r'
  1286  00FF8A  65                 	db	101	;'e'
  1287  00FF8B  00                 	db	0
  1288  00FF8C                     STR_9:
  1289  00FF8C  50                 	db	80	;'P'
  1290  00FF8D  69                 	db	105	;'i'
  1291  00FF8E  78                 	db	120	;'x'
  1292  00FF8F  79                 	db	121	;'y'
  1293  00FF90  20                 	db	32
  1294  00FF91  43                 	db	67	;'C'
  1295  00FF92  6F                 	db	111	;'o'
  1296  00FF93  6D                 	db	109	;'m'
  1297  00FF94  0A                 	db	10
  1298  00FF95  20                 	db	32
  1299  00FF96  73                 	db	115	;'s'
  1300  00FF97  75                 	db	117	;'u'
  1301  00FF98  63                 	db	99	;'c'
  1302  00FF99  63                 	db	99	;'c'
  1303  00FF9A  65                 	db	101	;'e'
  1304  00FF9B  73                 	db	115	;'s'
  1305  00FF9C  73                 	db	115	;'s'
  1306  00FF9D  00                 	db	0
  1307  00FF9E                     STR_3:
  1308  00FF9E  53                 	db	83	;'S'
  1309  00FF9F  65                 	db	101	;'e'
  1310  00FFA0  6C                 	db	108	;'l'
  1311  00FFA1  66                 	db	102	;'f'
  1312  00FFA2  20                 	db	32
  1313  00FFA3  43                 	db	67	;'C'
  1314  00FFA4  61                 	db	97	;'a'
  1315  00FFA5  6C                 	db	108	;'l'
  1316  00FFA6  0A                 	db	10
  1317  00FFA7  57                 	db	87	;'W'
  1318  00FFA8  61                 	db	97	;'a'
  1319  00FFA9  69                 	db	105	;'i'
  1320  00FFAA  74                 	db	116	;'t'
  1321  00FFAB  20                 	db	32
  1322  00FFAC  50                 	db	80	;'P'
  1323  00FFAD  6C                 	db	108	;'l'
  1324  00FFAE  7A                 	db	122	;'z'
  1325  00FFAF  00                 	db	0
  1326  00FFB0                     STR_6:
  1327  00FFB0  52                 	db	82	;'R'
  1328  00FFB1  43                 	db	67	;'C'
  1329  00FFB2  20                 	db	32
  1330  00FFB3  4D                 	db	77	;'M'
  1331  00FFB4  6F                 	db	111	;'o'
  1332  00FFB5  64                 	db	100	;'d'
  1333  00FFB6  65                 	db	101	;'e'
  1334  00FFB7  0A                 	db	10
  1335  00FFB8  53                 	db	83	;'S'
  1336  00FFB9  65                 	db	101	;'e'
  1337  00FFBA  61                 	db	97	;'a'
  1338  00FFBB  72                 	db	114	;'r'
  1339  00FFBC  63                 	db	99	;'c'
  1340  00FFBD  68                 	db	104	;'h'
  1341  00FFBE  2E                 	db	46
  1342  00FFBF  2E                 	db	46
  1343  00FFC0  00                 	db	0
  1344  00FFC1                     STR_5:
  1345  00FFC1  57                 	db	87	;'W'
  1346  00FFC2  65                 	db	101	;'e'
  1347  00FFC3  20                 	db	32
  1348  00FFC4  61                 	db	97	;'a'
  1349  00FFC5  72                 	db	114	;'r'
  1350  00FFC6  65                 	db	101	;'e'
  1351  00FFC7  0A                 	db	10
  1352  00FFC8  77                 	db	119	;'w'
  1353  00FFC9  69                 	db	105	;'i'
  1354  00FFCA  6E                 	db	110	;'n'
  1355  00FFCB  6E                 	db	110	;'n'
  1356  00FFCC  69                 	db	105	;'i'
  1357  00FFCD  6E                 	db	110	;'n'
  1358  00FFCE  67                 	db	103	;'g'
  1359  00FFCF  21                 	db	33
  1360  00FFD0  00                 	db	0
  1361  00FFD1                     STR_8:
  1362  00FFD1  61                 	db	97	;'a'
  1363  00FFD2  6E                 	db	110	;'n'
  1364  00FFD3  61                 	db	97	;'a'
  1365  00FFD4  3A                 	db	58	;':'
  1366  00FFD5  25                 	db	37
  1367  00FFD6  69                 	db	105	;'i'
  1368  00FFD7  0A                 	db	10
  1369  00FFD8  74                 	db	116	;'t'
  1370  00FFD9  79                 	db	121	;'y'
  1371  00FFDA  70                 	db	112	;'p'
  1372  00FFDB  65                 	db	101	;'e'
  1373  00FFDC  20                 	db	32
  1374  00FFDD  25                 	db	37
  1375  00FFDE  69                 	db	105	;'i'
  1376  00FFDF  00                 	db	0
  1377  00FFE0  41                 	db	65	;'A'
  1378  00FFE1  54                 	db	84	;'T'
  1379  00FFE2  2B                 	db	43
  1380  00FFE3  43                 	db	67	;'C'
  1381  00FFE4  4D                 	db	77	;'M'
  1382  00FFE5  47                 	db	71	;'G'
  1383  00FFE6  46                 	db	70	;'F'
  1384  00FFE7  3D                 	db	61	;'='
  1385  00FFE8  31                 	db	49	;'1'
  1386  00FFE9  00                 	db	0
  1387  00FFEA  41                 	db	65	;'A'
  1388  00FFEB  54                 	db	84	;'T'
  1389  00FFEC  2B                 	db	43
  1390  00FFED  43                 	db	67	;'C'
  1391  00FFEE  53                 	db	83	;'S'
  1392  00FFEF  51                 	db	81	;'Q'
  1393  00FFF0  0D                 	db	13
  1394  00FFF1  0A                 	db	10
  1395  00FFF2  00                 	db	0
  1396  00FFF3  41                 	db	65	;'A'
  1397  00FFF4  54                 	db	84	;'T'
  1398  00FFF5  2B                 	db	43
  1399  00FFF6  43                 	db	67	;'C'
  1400  00FFF7  4D                 	db	77	;'M'
  1401  00FFF8  47                 	db	71	;'G'
  1402  00FFF9  53                 	db	83	;'S'
  1403  00FFFA  3D                 	db	61	;'='
  1404  00FFFB  00                 	db	0
  1405  00FFFC                     STR_1:
  1406  00FFFC  25                 	db	37
  1407  00FFFD  00                 	db	0
  1408  0000                     
  1409                           ; #config settings
  1410  00FFFE  00                 	db	0	; dummy byte at the end
  1411  0000                     
  1412                           	psect	cinit
  1413  011AAC                     __pcinit:
  1414                           	opt stack 0
  1415  011AAC                     start_initialization:
  1416                           	opt stack 0
  1417  011AAC                     __initialization:
  1418                           	opt stack 0
  1419                           
  1420                           ; Clear objects allocated to BIGRAM (1000 bytes)
  1421  011AAC  EE03  F0C8         	lfsr	0,__pbssBIGRAM
  1422  011AB0  EE13 F0E8          	lfsr	1,1000
  1423  011AB4                     clear_0:
  1424  011AB4  6AEE               	clrf	postinc0,c
  1425  011AB6  50E5               	movf	postdec1,w,c
  1426  011AB8  50E1               	movf	fsr1l,w,c
  1427  011ABA  E1FC               	bnz	clear_0
  1428  011ABC  50E2               	movf	fsr1h,w,c
  1429  011ABE  E1FA               	bnz	clear_0
  1430                           
  1431                           ; Clear objects allocated to BANK3 (200 bytes)
  1432  011AC0  EE03  F000         	lfsr	0,__pbssBANK3
  1433  011AC4  0EC8               	movlw	200
  1434  011AC6                     clear_1:
  1435  011AC6  6AEE               	clrf	postinc0,c
  1436  011AC8  06E8               	decf	wreg,f,c
  1437  011ACA  E1FD               	bnz	clear_1
  1438                           
  1439                           ; Clear objects allocated to BANK2 (178 bytes)
  1440  011ACC  EE02  F000         	lfsr	0,__pbssBANK2
  1441  011AD0  0EB2               	movlw	178
  1442  011AD2                     clear_2:
  1443  011AD2  6AEE               	clrf	postinc0,c
  1444  011AD4  06E8               	decf	wreg,f,c
  1445  011AD6  E1FD               	bnz	clear_2
  1446                           
  1447                           ; Clear objects allocated to BANK1 (198 bytes)
  1448  011AD8  EE01  F000         	lfsr	0,__pbssBANK1
  1449  011ADC  0EC6               	movlw	198
  1450  011ADE                     clear_3:
  1451  011ADE  6AEE               	clrf	postinc0,c
  1452  011AE0  06E8               	decf	wreg,f,c
  1453  011AE2  E1FD               	bnz	clear_3
  1454                           
  1455                           ; Clear objects allocated to BANK0 (43 bytes)
  1456  011AE4  EE00  F0A7         	lfsr	0,__pbssBANK0
  1457  011AE8  0E2B               	movlw	43
  1458  011AEA                     clear_4:
  1459  011AEA  6AEE               	clrf	postinc0,c
  1460  011AEC  06E8               	decf	wreg,f,c
  1461  011AEE  E1FD               	bnz	clear_4
  1462                           
  1463                           ; Clear objects allocated to COMRAM (24 bytes)
  1464  011AF0  EE00  F022         	lfsr	0,__pbssCOMRAM
  1465  011AF4  0E18               	movlw	24
  1466  011AF6                     clear_5:
  1467  011AF6  6AEE               	clrf	postinc0,c
  1468  011AF8  06E8               	decf	wreg,f,c
  1469  011AFA  E1FD               	bnz	clear_5
  1470                           
  1471                           ; Initialize objects allocated to BANK1 (41 bytes)
  1472                           ; load TBLPTR registers with __pidataBANK1
  1473  011AFC  0E23               	movlw	low __pidataBANK1
  1474  011AFE  6EF6               	movwf	tblptrl,c
  1475  011B00  0E25               	movlw	high __pidataBANK1
  1476  011B02  6EF7               	movwf	tblptrh,c
  1477  011B04  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1478  011B06  6EF8               	movwf	tblptru,c
  1479  011B08  EE01  F0C6         	lfsr	0,__pdataBANK1
  1480  011B0C  EE10 F029          	lfsr	1,41
  1481  011B10                     copy_data0:
  1482  011B10  0009               	tblrd		*+
  1483  011B12  CFF5 FFEE          	movff	tablat,postinc0
  1484  011B16  50E5               	movf	postdec1,w,c
  1485  011B18  50E1               	movf	fsr1l,w,c
  1486  011B1A  E1FA               	bnz	copy_data0
  1487                           
  1488                           ; Initialize objects allocated to BANK0 (41 bytes)
  1489                           ; load TBLPTR registers with __pidataBANK0
  1490  011B1C  0EFA               	movlw	low __pidataBANK0
  1491  011B1E  6EF6               	movwf	tblptrl,c
  1492  011B20  0E24               	movlw	high __pidataBANK0
  1493  011B22  6EF7               	movwf	tblptrh,c
  1494  011B24  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1495  011B26  6EF8               	movwf	tblptru,c
  1496  011B28  EE00  F0D2         	lfsr	0,__pdataBANK0
  1497  011B2C  EE10 F029          	lfsr	1,41
  1498  011B30                     copy_data1:
  1499  011B30  0009               	tblrd		*+
  1500  011B32  CFF5 FFEE          	movff	tablat,postinc0
  1501  011B36  50E5               	movf	postdec1,w,c
  1502  011B38  50E1               	movf	fsr1l,w,c
  1503  011B3A  E1FA               	bnz	copy_data1
  1504                           
  1505                           ; Initialize objects allocated to COMRAM (7 bytes)
  1506                           ; load TBLPTR registers with __pidataCOMRAM
  1507  011B3C  0E0E               	movlw	low __pidataCOMRAM
  1508  011B3E  6EF6               	movwf	tblptrl,c
  1509  011B40  0E26               	movlw	high __pidataCOMRAM
  1510  011B42  6EF7               	movwf	tblptrh,c
  1511  011B44  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1512  011B46  6EF8               	movwf	tblptru,c
  1513  011B48  EE00  F03A         	lfsr	0,__pdataCOMRAM
  1514  011B4C  EE10 F007          	lfsr	1,7
  1515  011B50                     copy_data2:
  1516  011B50  0009               	tblrd		*+
  1517  011B52  CFF5 FFEE          	movff	tablat,postinc0
  1518  011B56  50E5               	movf	postdec1,w,c
  1519  011B58  50E1               	movf	fsr1l,w,c
  1520  011B5A  E1FA               	bnz	copy_data2
  1521  011B5C                     end_of_initialization:
  1522                           	opt stack 0
  1523  011B5C                     __end_of__initialization:
  1524                           	opt stack 0
  1525  011B5C  0100               	movlb	0
  1526  011B5E  EFA7  F08E         	goto	_main	;jump to C main() function
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537                           	psect	bssCOMRAM
  1538  000022                     __pbssCOMRAM:
  1539                           	opt stack 0
  1540  000022                     _left_count:
  1541                           	opt stack 0
  1542  000022                     	ds	4
  1543  000026                     _millisCount:
  1544                           	opt stack 0
  1545  000026                     	ds	4
  1546  00002A                     _right_count:
  1547                           	opt stack 0
  1548  00002A                     	ds	4
  1549  00002E                     _errno:
  1550                           	opt stack 0
  1551  00002E                     	ds	2
  1552  000030                     _spbrg:
  1553                           	opt stack 0
  1554  000030                     	ds	2
  1555  000032                     delay_init@config:
  1556                           	opt stack 0
  1557  000032                     	ds	2
  1558  000034                     _FONA_INDEX:
  1559                           	opt stack 0
  1560  000034                     	ds	1
  1561  000035                     _PIXY_INDEX:
  1562                           	opt stack 0
  1563  000035                     	ds	1
  1564  000036                     _UART4_INDEX:
  1565                           	opt stack 0
  1566  000036                     	ds	1
  1567  000037                     _USB_INDEX:
  1568                           	opt stack 0
  1569  000037                     	ds	1
  1570  000038                     _config:
  1571                           	opt stack 0
  1572  000038                     	ds	1
  1573  000039                     _mode:
  1574                           	opt stack 0
  1575  000039                     	ds	1
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           postinc0	equ	0xFEE
  1581                           wreg	equ	0xFE8
  1582                           postdec1	equ	0xFE5
  1583                           fsr1h	equ	0xFE2
  1584                           fsr1l	equ	0xFE1
  1585                           
  1586                           	psect	dataCOMRAM
  1587  00003A                     __pdataCOMRAM:
  1588                           	opt stack 0
  1589  00003A                     compass_pixyInit@F16129:
  1590                           	opt stack 0
  1591  00003A                     	ds	4
  1592  00003E                     LCD_printVal@F16365:
  1593                           	opt stack 0
  1594  00003E                     	ds	3
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           
  1605                           	psect	bssBANK0
  1606  0000A7                     __pbssBANK0:
  1607                           	opt stack 0
  1608  0000A7                     _PS2data:
  1609                           	opt stack 0
  1610  0000A7                     	ds	21
  1611  0000BC                     PS2_readGamepad@F16093:
  1612                           	opt stack 0
  1613  0000BC                     	ds	12
  1614  0000C8                     _last_read:
  1615                           	opt stack 0
  1616  0000C8                     	ds	4
  1617  0000CC                     _buttons:
  1618                           	opt stack 0
  1619  0000CC                     	ds	2
  1620  0000CE                     _last_buttons:
  1621                           	opt stack 0
  1622  0000CE                     	ds	2
  1623  0000D0                     _controller_type:
  1624                           	opt stack 0
  1625  0000D0                     	ds	1
  1626  0000D1                     _read_delay:
  1627                           	opt stack 0
  1628  0000D1                     	ds	1
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1h	equ	0xFE2
  1637                           fsr1l	equ	0xFE1
  1638                           
  1639                           	psect	dataBANK0
  1640  0000D2                     __pdataBANK0:
  1641                           	opt stack 0
  1642  0000D2                     PS2_readGamepad@F16091:
  1643                           	opt stack 0
  1644  0000D2                     	ds	9
  1645  0000DB                     _type_read:
  1646                           	opt stack 0
  1647  0000DB                     	ds	9
  1648  0000E4                     _exit_config:
  1649                           	opt stack 0
  1650  0000E4                     	ds	9
  1651  0000ED                     _set_mode:
  1652                           	opt stack 0
  1653  0000ED                     	ds	9
  1654  0000F6                     _enter_config:
  1655                           	opt stack 0
  1656  0000F6                     	ds	5
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           postdec1	equ	0xFE5
  1664                           fsr1h	equ	0xFE2
  1665                           fsr1l	equ	0xFE1
  1666                           
  1667                           	psect	bssBANK1
  1668  000100                     __pbssBANK1:
  1669                           	opt stack 0
  1670  000100                     _FONA_BUFF:
  1671                           	opt stack 0
  1672  000100                     	ds	50
  1673  000132                     LCD_printString@F16347:
  1674                           	opt stack 0
  1675  000132                     	ds	20
  1676  000146                     _realNumbers:
  1677                           	opt stack 0
  1678  000146                     	ds	128
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           postdec1	equ	0xFE5
  1686                           fsr1h	equ	0xFE2
  1687                           fsr1l	equ	0xFE1
  1688                           
  1689                           	psect	dataBANK1
  1690  0001C6                     __pdataBANK1:
  1691                           	opt stack 0
  1692  0001C6                     FONA_CheckStrength@F16408:
  1693                           	opt stack 0
  1694  0001C6                     	ds	21
  1695  0001DB                     FONA_init@F16396:
  1696                           	opt stack 0
  1697  0001DB                     	ds	20
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           
  1708                           	psect	bssBANK2
  1709  000200                     __pbssBANK2:
  1710                           	opt stack 0
  1711  000200                     _USART4_BUFF:
  1712                           	opt stack 0
  1713  000200                     	ds	50
  1714  000232                     _imaginaryNumbers:
  1715                           	opt stack 0
  1716  000232                     	ds	128
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           postdec1	equ	0xFE5
  1724                           fsr1h	equ	0xFE2
  1725                           fsr1l	equ	0xFE1
  1726                           
  1727                           	psect	bssBANK3
  1728  000300                     __pbssBANK3:
  1729                           	opt stack 0
  1730  000300                     UART_transmitString@F16323:
  1731                           	opt stack 0
  1732  000300                     	ds	200
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           postdec1	equ	0xFE5
  1740                           fsr1h	equ	0xFE2
  1741                           fsr1l	equ	0xFE1
  1742                           
  1743                           	psect	bssBIGRAM
  1744  0003C8                     __pbssBIGRAM:
  1745                           	opt stack 0
  1746  0003C8                     _PIXY_BUFF:
  1747                           	opt stack 0
  1748  0003C8                     	ds	500
  1749  0005BC                     _USB_BUFF:
  1750                           	opt stack 0
  1751  0005BC                     	ds	500
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           postinc0	equ	0xFEE
  1757                           wreg	equ	0xFE8
  1758                           postdec1	equ	0xFE5
  1759                           fsr1h	equ	0xFE2
  1760                           fsr1l	equ	0xFE1
  1761                           
  1762                           	psect	cstackBANK2
  1763  0002B2                     __pcstackBANK2:
  1764                           	opt stack 0
  1765  0002B2                     LCD_printString@tempString:
  1766                           	opt stack 0
  1767                           
  1768                           ; 20 bytes @ 0x0
  1769  0002B2                     	ds	20
  1770  0002C6                     LCD_printString@string:
  1771                           	opt stack 0
  1772                           
  1773                           ; 20 bytes @ 0x14
  1774  0002C6                     	ds	20
  1775  0002DA                     LCD_printString@x:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x28
  1779  0002DA                     	ds	1
  1780  0002DB                     LCD_printString@val:
  1781                           	opt stack 0
  1782                           
  1783                           ; 2 bytes @ 0x29
  1784  0002DB                     	ds	2
  1785  0002DD                     LCD_printString@aptr:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x2B
  1789  0002DD                     	ds	2
  1790  0002DF                     LCD_printString@tempString_590:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x2D
  1794  0002DF                     	ds	2
  1795  0002E1                     LCD_printString@i:
  1796                           	opt stack 0
  1797                           
  1798                           ; 2 bytes @ 0x2F
  1799  0002E1                     	ds	2
  1800  0002E3                     LCD_printString@i_591:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x31
  1804  0002E3                     	ds	2
  1805                           tblptru	equ	0xFF8
  1806                           tblptrh	equ	0xFF7
  1807                           tblptrl	equ	0xFF6
  1808                           tablat	equ	0xFF5
  1809                           postinc0	equ	0xFEE
  1810                           wreg	equ	0xFE8
  1811                           postdec1	equ	0xFE5
  1812                           fsr1h	equ	0xFE2
  1813                           fsr1l	equ	0xFE1
  1814                           
  1815                           	psect	cstackBANK0
  1816  000060                     __pcstackBANK0:
  1817                           	opt stack 0
  1818  000060                     ??_SetDCEPWM1:
  1819  000060                     ??_SetDCEPWM3:
  1820  000060                     ?___wmul:
  1821                           	opt stack 0
  1822  000060                     ?___lwdiv:
  1823                           	opt stack 0
  1824  000060                     ?_millis:
  1825                           	opt stack 0
  1826  000060                     I2C_write@address:
  1827                           	opt stack 0
  1828  000060                     OpenEPWM1@period:
  1829                           	opt stack 0
  1830  000060                     SetOutputEPWM1@eccpmx:
  1831                           	opt stack 0
  1832  000060                     OpenEPWM3@period:
  1833                           	opt stack 0
  1834  000060                     SetOutputEPWM3@eccpmx:
  1835                           	opt stack 0
  1836  000060                     ___wmul@multiplier:
  1837                           	opt stack 0
  1838  000060                     ___lwdiv@dividend:
  1839                           	opt stack 0
  1840  000060                     strcat@to:
  1841                           	opt stack 0
  1842  000060                     delay_us@x:
  1843                           	opt stack 0
  1844                           
  1845                           ; 4 bytes @ 0x0
  1846  000060                     	ds	1
  1847  000061                     SetOutputEPWM1@outputconfig:
  1848                           	opt stack 0
  1849  000061                     SetOutputEPWM3@outputconfig:
  1850                           	opt stack 0
  1851  000061                     I2C_write@data:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x1
  1855  000061                     	ds	1
  1856  000062                     SetDCEPWM1@DCycle:
  1857                           	opt stack 0
  1858  000062                     SetDCEPWM3@DCycle:
  1859                           	opt stack 0
  1860  000062                     ___wmul@multiplicand:
  1861                           	opt stack 0
  1862  000062                     ___lwdiv@divisor:
  1863                           	opt stack 0
  1864  000062                     strcat@from:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x2
  1868  000062                     	ds	1
  1869  000063                     I2C_write@length:
  1870                           	opt stack 0
  1871                           
  1872                           ; 1 bytes @ 0x3
  1873  000063                     	ds	1
  1874  000064                     ?___awdiv:
  1875                           	opt stack 0
  1876  000064                     PS2_shiftInOut@byte:
  1877                           	opt stack 0
  1878  000064                     I2C_write@channel:
  1879                           	opt stack 0
  1880  000064                     ___lwdiv@counter:
  1881                           	opt stack 0
  1882  000064                     ___awdiv@dividend:
  1883                           	opt stack 0
  1884  000064                     delay_ms@x:
  1885                           	opt stack 0
  1886                           
  1887                           ; 4 bytes @ 0x4
  1888  000064                     	ds	1
  1889  000065                     PS2_shiftInOut@tmp:
  1890                           	opt stack 0
  1891  000065                     I2C_write@x:
  1892                           	opt stack 0
  1893  000065                     ___lwdiv@quotient:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x5
  1897  000065                     	ds	1
  1898  000066                     PS2_shiftInOut@i:
  1899                           	opt stack 0
  1900  000066                     I2C_write@x_4006:
  1901                           	opt stack 0
  1902  000066                     ___awdiv@divisor:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x6
  1906  000066                     	ds	1
  1907  000067                     ?___lwmod:
  1908                           	opt stack 0
  1909  000067                     I2C_write@retry:
  1910                           	opt stack 0
  1911  000067                     ___lwmod@dividend:
  1912                           	opt stack 0
  1913                           
  1914                           ; 2 bytes @ 0x7
  1915  000067                     	ds	1
  1916  000068                     ??_LCD_placeCursor:
  1917  000068                     ___awdiv@counter:
  1918                           	opt stack 0
  1919  000068                     PS2_sendCommandString@string:
  1920                           	opt stack 0
  1921  000068                     compass_pixyInit@data_3283:
  1922                           	opt stack 0
  1923                           
  1924                           ; 4 bytes @ 0x8
  1925  000068                     	ds	1
  1926  000069                     ___awdiv@sign:
  1927                           	opt stack 0
  1928  000069                     ___lwmod@divisor:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x9
  1932  000069                     	ds	1
  1933  00006A                     PS2_sendCommandString@len:
  1934                           	opt stack 0
  1935  00006A                     ___awdiv@quotient:
  1936                           	opt stack 0
  1937                           
  1938                           ; 2 bytes @ 0xA
  1939  00006A                     	ds	1
  1940  00006B                     ??_PS2_sendCommandString:
  1941  00006B                     ?_sprintf:
  1942                           	opt stack 0
  1943  00006B                     sprintf@sp:
  1944                           	opt stack 0
  1945                           
  1946                           ; 2 bytes @ 0xB
  1947  00006B                     	ds	1
  1948  00006C                     LCD_placeCursor@x:
  1949                           	opt stack 0
  1950  00006C                     motorDrive_setSpeeds@rSpeed:
  1951                           	opt stack 0
  1952  00006C                     compass_pixyInit@data:
  1953                           	opt stack 0
  1954                           
  1955                           ; 1 bytes @ 0xC
  1956  00006C                     	ds	1
  1957  00006D                     ??_motorDrive_setSpeeds:
  1958  00006D                     LCD_placeCursor@address:
  1959                           	opt stack 0
  1960  00006D                     compass_pixyInit@retVal:
  1961                           	opt stack 0
  1962  00006D                     sprintf@f:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0xD
  1966  00006D                     	ds	1
  1967  00006E                     compass_pixyInit@retry:
  1968                           	opt stack 0
  1969  00006E                     PS2_sendCommandString@y:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0xE
  1973  00006E                     	ds	2
  1974  000070                     ??_PS2_readGamepad:
  1975                           
  1976                           ; 0 bytes @ 0x10
  1977  000070                     	ds	1
  1978  000071                     motorDrive_setSpeeds@templ:
  1979                           	opt stack 0
  1980  000071                     sprintf@ap:
  1981                           	opt stack 0
  1982                           
  1983                           ; 2 bytes @ 0x11
  1984  000071                     	ds	2
  1985  000073                     sprintf@flag:
  1986                           	opt stack 0
  1987  000073                     motorDrive_setSpeeds@tempr:
  1988                           	opt stack 0
  1989                           
  1990                           ; 2 bytes @ 0x13
  1991  000073                     	ds	1
  1992  000074                     sprintf@prec:
  1993                           	opt stack 0
  1994                           
  1995                           ; 1 bytes @ 0x14
  1996  000074                     	ds	1
  1997  000075                     _motorDrive_setSpeeds$2374:
  1998                           	opt stack 0
  1999  000075                     sprintf@val:
  2000                           	opt stack 0
  2001  000075                     PS2_readGamepad@dword2:
  2002                           	opt stack 0
  2003                           
  2004                           ; 12 bytes @ 0x15
  2005  000075                     	ds	2
  2006  000077                     sprintf@c:
  2007                           	opt stack 0
  2008  000077                     _motorDrive_setSpeeds$2375:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x17
  2012  000077                     	ds	1
  2013  000078                     ?_LCD_printString:
  2014                           	opt stack 0
  2015  000078                     LCD_printString@y:
  2016                           	opt stack 0
  2017                           
  2018                           ; 1 bytes @ 0x18
  2019  000078                     	ds	1
  2020  000079                     LCD_printString@input:
  2021                           	opt stack 0
  2022  000079                     _motorDrive_setSpeeds$2376:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x19
  2026  000079                     	ds	2
  2027  00007B                     _motorDrive_setSpeeds$2377:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x1B
  2031  00007B                     	ds	2
  2032  00007D                     _motorDrive_setSpeeds$2378:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x1D
  2036  00007D                     	ds	2
  2037  00007F                     ??_LCD_printString:
  2038  00007F                     _motorDrive_setSpeeds$2379:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x1F
  2042  00007F                     	ds	2
  2043  000081                     _motorDrive_setSpeeds$2380:
  2044                           	opt stack 0
  2045  000081                     PS2_readGamepad@dword:
  2046                           	opt stack 0
  2047                           
  2048                           ; 9 bytes @ 0x21
  2049  000081                     	ds	2
  2050  000083                     motorDrive_setSpeeds@lSpeed:
  2051                           	opt stack 0
  2052                           
  2053                           ; 1 bytes @ 0x23
  2054  000083                     	ds	7
  2055  00008A                     PS2_readGamepad@temp:
  2056                           	opt stack 0
  2057                           
  2058                           ; 4 bytes @ 0x2A
  2059  00008A                     	ds	4
  2060  00008E                     PS2_readGamepad@i:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x2E
  2064  00008E                     	ds	2
  2065  000090                     PS2_readGamepad@i_2507:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x30
  2069  000090                     	ds	2
  2070  000092                     PS2_init@temp:
  2071                           	opt stack 0
  2072                           
  2073                           ; 9 bytes @ 0x32
  2074  000092                     	ds	9
  2075  00009B                     PS2_init@y:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x3B
  2079  00009B                     	ds	2
  2080  00009D                     PS2_init@i:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x3D
  2084  00009D                     	ds	2
  2085  00009F                     ??_RCMode:
  2086                           
  2087                           ; 0 bytes @ 0x3F
  2088  00009F                     	ds	1
  2089  0000A0                     RCMode@left_speed:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0x40
  2093  0000A0                     	ds	2
  2094  0000A2                     RCMode@right_speed:
  2095                           	opt stack 0
  2096                           
  2097                           ; 2 bytes @ 0x42
  2098  0000A2                     	ds	2
  2099  0000A4                     RCMode@type:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0x44
  2103  0000A4                     	ds	1
  2104  0000A5                     RCMode@done:
  2105                           	opt stack 0
  2106                           
  2107                           ; 1 bytes @ 0x45
  2108  0000A5                     	ds	1
  2109  0000A6                     main@retVal:
  2110                           	opt stack 0
  2111                           
  2112                           ; 1 bytes @ 0x46
  2113  0000A6                     	ds	1
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           postdec1	equ	0xFE5
  2121                           fsr1h	equ	0xFE2
  2122                           fsr1l	equ	0xFE1
  2123                           
  2124                           	psect	cstackCOMRAM
  2125  000001                     __pcstackCOMRAM:
  2126                           	opt stack 0
  2127  000001                     ??_encoderInterrupt:
  2128  000001                     
  2129                           ; 2 bytes @ 0x0
  2130  000001                     	ds	17
  2131  000012                     ??_communicationInterruptHandler:
  2132                           
  2133                           ; 0 bytes @ 0x11
  2134  000012                     	ds	14
  2135  000020                     ??_PS2_shiftInOut:
  2136  000020                     LCD_placeCursor@y:
  2137                           	opt stack 0
  2138  000020                     settings_readButton@t:
  2139                           	opt stack 0
  2140  000020                     settings_auto@t:
  2141                           	opt stack 0
  2142  000020                     settings_wander@t:
  2143                           	opt stack 0
  2144  000020                     settings_selfTest@t:
  2145                           	opt stack 0
  2146  000020                     PS2_analog@button:
  2147                           	opt stack 0
  2148  000020                     I2C_init@channel:
  2149                           	opt stack 0
  2150  000020                     OpenEPWM1@timer_source:
  2151                           	opt stack 0
  2152  000020                     SetOutputEPWM1@outputmode:
  2153                           	opt stack 0
  2154  000020                     OpenEPWM3@timer_source:
  2155                           	opt stack 0
  2156  000020                     SetOutputEPWM3@outputmode:
  2157                           	opt stack 0
  2158  000020                     ___lwmod@counter:
  2159                           	opt stack 0
  2160  000020                     SetDCEPWM1@dutycycle:
  2161                           	opt stack 0
  2162  000020                     SetDCEPWM3@dutycycle:
  2163                           	opt stack 0
  2164  000020                     ___wmul@product:
  2165                           	opt stack 0
  2166  000020                     strcat@cp:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x1F
  2170  000020                     	ds	1
  2171  000021                     ??_sprintf:
  2172  000021                     ??_OpenEPWM1:
  2173  000021                     ??_OpenEPWM3:
  2174  000021                     
  2175                           ; 0 bytes @ 0x20
  2176  000021                     	ds	1
  2177  000022                     tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           
  2187                           ; 0 bytes @ 0x21
  2188 ;;
  2189 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2190 ;;
  2191 ;; *************** function _main *****************
  2192 ;; Defined at:
  2193 ;;		line 103 in file "main.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  retVal          1   70[BANK0 ] char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;Total ram usage:        1 bytes
  2212 ;; Hardware stack levels required when called:   10
  2213 ;; This function calls:
  2214 ;;		_LCD_printString
  2215 ;;		_RCMode
  2216 ;;		_compass_pixyInit
  2217 ;;		_competitionMode
  2218 ;;		_init
  2219 ;;		_selfTest
  2220 ;;		_settings_auto
  2221 ;;		_settings_readButton
  2222 ;;		_settings_selfTest
  2223 ;;		_settings_wander
  2224 ;;		_wanderMode
  2225 ;; This function is called by:
  2226 ;;		Startup code after reset
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text0
  2231  011D4E                     __ptext0:
  2232                           	opt stack 0
  2233  011D4E                     _main:
  2234                           	opt stack 21
  2235                           
  2236                           ;main.c: 105: signed char retVal = 0;
  2237                           
  2238                           ;incstack = 0
  2239  011D4E  0E00               	movlw	0
  2240  011D50  0100               	movlb	0	; () banked
  2241  011D52  6FA6               	movwf	main@retVal& (0+255),b
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 106: IPEN = 1;
  2245  011D54  8ED0               	bsf	4048,7,c	;volatile
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;main.c: 107: init();
  2249  011D56  EC53  F092         	call	_init	;wreg free
  2250                           
  2251                           ;main.c: 109: retVal = compass_pixyInit();
  2252  011D5A  ECF7  F08F         	call	_compass_pixyInit	;wreg free
  2253  011D5E  0100               	movlb	0	; () banked
  2254  011D60  6FA6               	movwf	main@retVal& (0+255),b
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 111: if(retVal == 0) {
  2258  011D62  0100               	movlb	0	; () banked
  2259  011D64  51A6               	movf	main@retVal& (0+255),w,b
  2260  011D66  0100               	movlb	0	; () banked
  2261  011D68  A4D8               	btfss	status,2,c
  2262  011D6A  D00D               	goto	l7896
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;main.c: 112: LCD_printString(0, 0, "Pixy Com\n success");
  2266  011D6C  0E00               	movlw	0
  2267  011D6E  0100               	movlb	0	; () banked
  2268  011D70  6F78               	movwf	LCD_printString@y& (0+255),b
  2269  011D72  0E8C               	movlw	low STR_9
  2270  011D74  0100               	movlb	0	; () banked
  2271  011D76  6F79               	movwf	LCD_printString@input& (0+255),b
  2272  011D78  0EFF               	movlw	high STR_9
  2273  011D7A  0100               	movlb	0	; () banked
  2274  011D7C  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  2275  011D7E  0E00               	movlw	0
  2276  011D80  EC00  F080         	call	_LCD_printString
  2277                           
  2278                           ;main.c: 113: }
  2279  011D84  D00D               	goto	l7898
  2280  011D86                     l7896:
  2281                           
  2282                           ;main.c: 114: else
  2283                           ;main.c: 115: LCD_printString(0, 0, "Pixy Com\n failure");
  2284  011D86  0E00               	movlw	0
  2285  011D88  0100               	movlb	0	; () banked
  2286  011D8A  6F78               	movwf	LCD_printString@y& (0+255),b
  2287  011D8C  0E7A               	movlw	low STR_10
  2288  011D8E  0100               	movlb	0	; () banked
  2289  011D90  6F79               	movwf	LCD_printString@input& (0+255),b
  2290  011D92  0EFF               	movlw	high STR_10
  2291  011D94  0100               	movlb	0	; () banked
  2292  011D96  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  2293  011D98  0E00               	movlw	0
  2294  011D9A  EC00  F080         	call	_LCD_printString
  2295                           
  2296                           ;main.c: 123: while(settings_readButton() == 0);
  2297  011D9E  D000               	goto	l7898
  2298  011DA0                     l7898:
  2299  011DA0  ECEA  F092         	call	_settings_readButton	;wreg free
  2300  011DA4  0900               	iorlw	0
  2301  011DA6  B4D8               	btfsc	status,2,c
  2302  011DA8  D7FB               	goto	l7898
  2303                           
  2304                           ;main.c: 125: if(settings_selfTest() == 1)
  2305  011DAA  ECF9  F092         	call	_settings_selfTest	;wreg free
  2306  011DAE  06E8               	decf	wreg,f,c
  2307  011DB0  A4D8               	btfss	status,2,c
  2308  011DB2  D003               	goto	l7904
  2309                           
  2310                           ;main.c: 126: {
  2311                           ;main.c: 127: selfTest();
  2312  011DB4  ECEF  F091         	call	_selfTest	;wreg free
  2313  011DB8  D000               	goto	l7904
  2314  011DBA                     l7904:
  2315                           
  2316                           ;main.c: 128: }
  2317                           ;main.c: 130: if(settings_wander() == 1)
  2318  011DBA  ECF2  F092         	call	_settings_wander	;wreg free
  2319  011DBE  06E8               	decf	wreg,f,c
  2320  011DC0  A4D8               	btfss	status,2,c
  2321  011DC2  D003               	goto	l7908
  2322                           
  2323                           ;main.c: 131: {
  2324                           ;main.c: 132: wanderMode();
  2325  011DC4  ECA6  F092         	call	_wanderMode	;wreg free
  2326  011DC8  D000               	goto	l7908
  2327  011DCA                     l7908:
  2328                           
  2329                           ;main.c: 133: }
  2330                           ;main.c: 135: if(settings_auto() == 1)
  2331  011DCA  ECE2  F092         	call	_settings_auto	;wreg free
  2332  011DCE  06E8               	decf	wreg,f,c
  2333  011DD0  B4D8               	btfsc	status,2,c
  2334                           
  2335                           ;main.c: 136: {
  2336                           ;main.c: 137: competitionMode();
  2337  011DD2  ECB4  F092         	call	_competitionMode	;wreg free
  2338                           
  2339                           ;main.c: 138: }
  2340                           ;main.c: 140: RCMode();
  2341  011DD6  ECCF  F08A         	call	_RCMode	;wreg free
  2342  011DDA  EF7B  F000         	goto	start
  2343  011DDE                     __end_of_main:
  2344                           	opt stack 0
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           postinc0	equ	0xFEE
  2350                           wreg	equ	0xFE8
  2351                           postdec1	equ	0xFE5
  2352                           fsr1h	equ	0xFE2
  2353                           fsr1l	equ	0xFE1
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _wanderMode *****************
  2357 ;; Defined at:
  2358 ;;		line 54 in file "main.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;		None               void
  2365 ;; Registers used:
  2366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    7
  2379 ;; This function calls:
  2380 ;;		_LCD_printString
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text1
  2387  01254C                     __ptext1:
  2388                           	opt stack 0
  2389  01254C                     _wanderMode:
  2390                           	opt stack 23
  2391                           
  2392                           ;main.c: 56: LCD_printString(0,0, "Wanderin\n---..---");
  2393                           
  2394                           ;incstack = 0
  2395  01254C  0E00               	movlw	0
  2396  01254E  0100               	movlb	0	; () banked
  2397  012550  6F78               	movwf	LCD_printString@y& (0+255),b
  2398  012552  0E68               	movlw	low STR_4
  2399  012554  0100               	movlb	0	; () banked
  2400  012556  6F79               	movwf	LCD_printString@input& (0+255),b
  2401  012558  0EFF               	movlw	high STR_4
  2402  01255A  0100               	movlb	0	; () banked
  2403  01255C  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  2404  01255E  0E00               	movlw	0
  2405  012560  EC00  F080         	call	_LCD_printString
  2406  012564  D7FF               	goto	l236
  2407  012566  0012               	return		;funcret
  2408  012568                     __end_of_wanderMode:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           status	equ	0xFD8
  2420                           
  2421 ;; *************** function _settings_wander *****************
  2422 ;; Defined at:
  2423 ;;		line 80 in file "settings.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  t               1   31[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      unsigned char 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;Total ram usage:        1 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text2
  2452  0125E4                     __ptext2:
  2453                           	opt stack 0
  2454  0125E4                     _settings_wander:
  2455                           	opt stack 27
  2456                           
  2457                           ;settings.c: 82: char t = RG2;
  2458                           
  2459                           ;incstack = 0
  2460  0125E4  0E00               	movlw	0
  2461  0125E6  B486               	btfsc	3974,2,c	;volatile
  2462  0125E8  0E01               	movlw	1
  2463  0125EA  6E20               	movwf	settings_wander@t,c
  2464                           
  2465                           ;settings.c: 83: return t;
  2466  0125EC  5020               	movf	settings_wander@t,w,c
  2467  0125EE  0012               	return	
  2468  0125F0  0012               	return		;funcret
  2469  0125F2                     __end_of_settings_wander:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           postdec1	equ	0xFE5
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _settings_selfTest *****************
  2483 ;; Defined at:
  2484 ;;		line 94 in file "settings.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  t               1   31[COMRAM] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      unsigned char 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    3
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text3
  2513  0125F2                     __ptext3:
  2514                           	opt stack 0
  2515  0125F2                     _settings_selfTest:
  2516                           	opt stack 27
  2517                           
  2518                           ;settings.c: 96: char t = RG0;
  2519                           
  2520                           ;incstack = 0
  2521  0125F2  0E00               	movlw	0
  2522  0125F4  B086               	btfsc	3974,0,c	;volatile
  2523  0125F6  0E01               	movlw	1
  2524  0125F8  6E20               	movwf	settings_selfTest@t,c
  2525                           
  2526                           ;settings.c: 97: return t;
  2527  0125FA  5020               	movf	settings_selfTest@t,w,c
  2528  0125FC  0012               	return	
  2529  0125FE  0012               	return		;funcret
  2530  012600                     __end_of_settings_selfTest:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _settings_auto *****************
  2544 ;; Defined at:
  2545 ;;		line 66 in file "settings.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  t               1   31[COMRAM] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;Total ram usage:        1 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    3
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text4
  2574  0125C4                     __ptext4:
  2575                           	opt stack 0
  2576  0125C4                     _settings_auto:
  2577                           	opt stack 27
  2578                           
  2579                           ;settings.c: 68: char t = RL1;
  2580                           
  2581                           ;incstack = 0
  2582  0125C4  0E00               	movlw	0
  2583  0125C6  010E               	movlb	14	; () banked
  2584  0125C8  B3E4               	btfsc	228,1,b	;volatile
  2585  0125CA  0E01               	movlw	1
  2586  0125CC  6E20               	movwf	settings_auto@t,c
  2587                           
  2588                           ;settings.c: 69: return t;
  2589  0125CE  5020               	movf	settings_auto@t,w,c
  2590  0125D0  0012               	return	
  2591                           
  2592                           ; BSR set to: 14
  2593                           
  2594                           ; BSR set to: 14
  2595  0125D2  0012               	return		;funcret
  2596  0125D4                     __end_of_settings_auto:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           postdec1	equ	0xFE5
  2605                           fsr1h	equ	0xFE2
  2606                           fsr1l	equ	0xFE1
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function _selfTest *****************
  2610 ;; Defined at:
  2611 ;;		line 44 in file "main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    7
  2632 ;; This function calls:
  2633 ;;		_LCD_printString
  2634 ;;		_settings_readButton
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text5
  2641  0123DE                     __ptext5:
  2642                           	opt stack 0
  2643  0123DE                     _selfTest:
  2644                           	opt stack 23
  2645                           
  2646                           ;main.c: 48: LCD_printString(0,0, "Self Cal\nWait Plz");
  2647                           
  2648                           ; BSR set to: 14
  2649                           ;incstack = 0
  2650  0123DE  0E00               	movlw	0
  2651  0123E0  0100               	movlb	0	; () banked
  2652  0123E2  6F78               	movwf	LCD_printString@y& (0+255),b
  2653  0123E4  0E9E               	movlw	low STR_3
  2654  0123E6  0100               	movlb	0	; () banked
  2655  0123E8  6F79               	movwf	LCD_printString@input& (0+255),b
  2656  0123EA  0EFF               	movlw	high STR_3
  2657  0123EC  0100               	movlb	0	; () banked
  2658  0123EE  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  2659  0123F0  0E00               	movlw	0
  2660  0123F2  EC00  F080         	call	_LCD_printString
  2661                           
  2662                           ;main.c: 50: while(settings_readButton() == 0);
  2663  0123F6  D000               	goto	l7526
  2664  0123F8                     l7526:
  2665  0123F8  ECEA  F092         	call	_settings_readButton	;wreg free
  2666  0123FC  0900               	iorlw	0
  2667  0123FE  A4D8               	btfss	status,2,c
  2668  012400  D002               	goto	l7528
  2669  012402  D7FA               	goto	l7526
  2670                           
  2671                           ;main.c: 51: while(settings_readButton() == 1);
  2672  012404  D000               	goto	l7528
  2673  012406                     l7528:
  2674  012406  ECEA  F092         	call	_settings_readButton	;wreg free
  2675  01240A  06E8               	decf	wreg,f,c
  2676  01240C  B4D8               	btfsc	status,2,c
  2677  01240E  D7FB               	goto	l7528
  2678  012410  0012               	return		;funcret
  2679  012412                     __end_of_selfTest:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           status	equ	0xFD8
  2691                           
  2692 ;; *************** function _settings_readButton *****************
  2693 ;; Defined at:
  2694 ;;		line 45 in file "settings.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  t               1   31[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      unsigned char 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    3
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_selfTest
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text6
  2724  0125D4                     __ptext6:
  2725                           	opt stack 0
  2726  0125D4                     _settings_readButton:
  2727                           	opt stack 27
  2728                           
  2729                           ;settings.c: 47: char t = RL3;
  2730                           
  2731                           ;incstack = 0
  2732  0125D4  0E00               	movlw	0
  2733  0125D6  010E               	movlb	14	; () banked
  2734  0125D8  B7E4               	btfsc	228,3,b	;volatile
  2735  0125DA  0E01               	movlw	1
  2736  0125DC  6E20               	movwf	settings_readButton@t,c
  2737                           
  2738                           ;settings.c: 48: return t;
  2739  0125DE  5020               	movf	settings_readButton@t,w,c
  2740  0125E0  0012               	return	
  2741                           
  2742                           ; BSR set to: 14
  2743                           
  2744                           ; BSR set to: 14
  2745  0125E2  0012               	return		;funcret
  2746  0125E4                     __end_of_settings_readButton:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           postdec1	equ	0xFE5
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function _init *****************
  2760 ;; Defined at:
  2761 ;;		line 30 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    6
  2782 ;; This function calls:
  2783 ;;		_I2C_init
  2784 ;;		_LCD_init4bit
  2785 ;;		_UART_init
  2786 ;;		_clearMillis
  2787 ;;		_encoders_init
  2788 ;;		_fft_init
  2789 ;;		_motorDrive_init
  2790 ;;		_settings_init
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text7
  2797  0124A6                     __ptext7:
  2798                           	opt stack 0
  2799  0124A6                     _init:
  2800                           	opt stack 24
  2801                           
  2802                           ;main.c: 32: settings_init();
  2803                           
  2804                           ; BSR set to: 14
  2805                           ;incstack = 0
  2806  0124A6  EC3C  F092         	call	_settings_init	;wreg free
  2807                           
  2808                           ;main.c: 33: fft_init();
  2809  0124AA  EC35  F090         	call	_fft_init	;wreg free
  2810                           
  2811                           ;main.c: 34: motorDrive_init();
  2812  0124AE  EC34  F08F         	call	_motorDrive_init	;wreg free
  2813                           
  2814                           ;main.c: 35: LCD_init4bit();
  2815  0124B2  EC61  F083         	call	_LCD_init4bit	;wreg free
  2816                           
  2817                           ;main.c: 36: UART_init();
  2818  0124B6  EC01  F08C         	call	_UART_init	;wreg free
  2819                           
  2820                           ;main.c: 37: encoders_init();
  2821  0124BA  EC68  F092         	call	_encoders_init	;wreg free
  2822                           
  2823                           ;main.c: 38: I2C_init(1);
  2824  0124BE  0E01               	movlw	1
  2825  0124C0  ECB6  F091         	call	_I2C_init
  2826                           
  2827                           ;main.c: 39: I2C_init(1);
  2828  0124C4  0E01               	movlw	1
  2829  0124C6  ECB6  F091         	call	_I2C_init
  2830                           
  2831                           ;main.c: 41: clearMillis();
  2832  0124CA  ECCE  F092         	call	_clearMillis	;wreg free
  2833  0124CE  0012               	return		;funcret
  2834  0124D0                     __end_of_init:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _settings_init *****************
  2848 ;; Defined at:
  2849 ;;		line 16 in file "settings.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg, status,2
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    3
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_init
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text8
  2878  012478                     __ptext8:
  2879                           	opt stack 0
  2880  012478                     _settings_init:
  2881                           	opt stack 26
  2882                           
  2883                           ;settings.c: 18: CM1CONbits.CON = 0;
  2884                           
  2885                           ;incstack = 0
  2886  012478  010F               	movlb	15	; () banked
  2887  01247A  9F53               	bcf	83,7,b	;volatile
  2888                           
  2889                           ; BSR set to: 15
  2890                           ;settings.c: 19: ANCON1 = 0;
  2891  01247C  0E00               	movlw	0
  2892  01247E  010E               	movlb	14	; () banked
  2893  012480  6F47               	movwf	71,b	;volatile
  2894                           
  2895                           ;settings.c: 20: ANCON2 = 0;
  2896  012482  0E00               	movlw	0
  2897  012484  010E               	movlb	14	; () banked
  2898  012486  6F46               	movwf	70,b	;volatile
  2899                           
  2900                           ; BSR set to: 14
  2901                           ;settings.c: 22: TRISGbits.TRISG0 = 1;
  2902  012488  8098               	bsf	3992,0,c	;volatile
  2903                           
  2904                           ; BSR set to: 14
  2905                           ;settings.c: 23: TRISGbits.TRISG1 = 1;
  2906  01248A  8298               	bsf	3992,1,c	;volatile
  2907                           
  2908                           ; BSR set to: 14
  2909                           ;settings.c: 24: TRISGbits.TRISG2 = 1;
  2910  01248C  8498               	bsf	3992,2,c	;volatile
  2911                           
  2912                           ; BSR set to: 14
  2913                           ;settings.c: 25: TRISGbits.TRISG3 = 1;
  2914  01248E  8698               	bsf	3992,3,c	;volatile
  2915                           
  2916                           ; BSR set to: 14
  2917                           ;settings.c: 26: TRISGbits.TRISG4 = 1;
  2918  012490  8898               	bsf	3992,4,c	;volatile
  2919                           
  2920                           ; BSR set to: 14
  2921                           ;settings.c: 27: TRISLbits.TRISL1 = 1;
  2922  012492  010E               	movlb	14	; () banked
  2923  012494  83E6               	bsf	230,1,b	;volatile
  2924                           
  2925                           ; BSR set to: 14
  2926                           ;settings.c: 28: TRISLbits.TRISL2 = 1;
  2927  012496  010E               	movlb	14	; () banked
  2928  012498  85E6               	bsf	230,2,b	;volatile
  2929                           
  2930                           ; BSR set to: 14
  2931                           ;settings.c: 29: TRISLbits.TRISL3 = 1;
  2932  01249A  010E               	movlb	14	; () banked
  2933  01249C  87E6               	bsf	230,3,b	;volatile
  2934                           
  2935                           ;settings.c: 32: PADCFG1 = 0b00010001;
  2936  01249E  0E11               	movlw	17
  2937  0124A0  010F               	movlb	15	; () banked
  2938  0124A2  6F54               	movwf	84,b	;volatile
  2939                           
  2940                           ; BSR set to: 15
  2941  0124A4  0012               	return		;funcret
  2942  0124A6                     __end_of_settings_init:
  2943                           	opt stack 0
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           postdec1	equ	0xFE5
  2951                           fsr1h	equ	0xFE2
  2952                           fsr1l	equ	0xFE1
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _motorDrive_init *****************
  2956 ;; Defined at:
  2957 ;;		line 15 in file "motorDrive.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;		None               void
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    5
  2978 ;; This function calls:
  2979 ;;		_OpenEPWM1
  2980 ;;		_OpenEPWM3
  2981 ;;		_SetDCEPWM1
  2982 ;;		_SetDCEPWM3
  2983 ;;		_SetOutputEPWM1
  2984 ;;		_SetOutputEPWM3
  2985 ;;		_motorDrive_setSpeeds
  2986 ;; This function is called by:
  2987 ;;		_init
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text9
  2992  011E68                     __ptext9:
  2993                           	opt stack 0
  2994  011E68                     _motorDrive_init:
  2995                           	opt stack 24
  2996                           
  2997                           ;motorDrive.c: 22: IOLOCK = 0;
  2998                           
  2999                           ; BSR set to: 15
  3000                           ;incstack = 0
  3001  011E68  9C66               	bcf	3942,6,c	;volatile
  3002                           
  3003                           ;motorDrive.c: 24: RPOR34_35 |= 0xF8;
  3004  011E6A  0EF8               	movlw	248
  3005  011E6C  010E               	movlb	14	; () banked
  3006  011E6E  1323               	iorwf	35,f,b	;volatile
  3007                           
  3008                           ; BSR set to: 14
  3009                           ;motorDrive.c: 25: TRISE6 = 0;
  3010  011E70  9C96               	bcf	3990,6,c	;volatile
  3011                           
  3012                           ;motorDrive.c: 29: RPOR30_31 |= 0x4F;
  3013  011E72  0E4F               	movlw	79
  3014  011E74  010E               	movlb	14	; () banked
  3015  011E76  1321               	iorwf	33,f,b	;volatile
  3016                           
  3017                           ; BSR set to: 14
  3018                           ;motorDrive.c: 30: TRISE7 = 0;
  3019  011E78  9E96               	bcf	3990,7,c	;volatile
  3020                           
  3021                           ; BSR set to: 14
  3022                           ;motorDrive.c: 32: IOLOCK = 1;
  3023  011E7A  8C66               	bsf	3942,6,c	;volatile
  3024                           
  3025                           ; BSR set to: 14
  3026                           ;motorDrive.c: 38: TRISL0 = 0;
  3027  011E7C  010E               	movlb	14	; () banked
  3028  011E7E  91E6               	bcf	230,0,b	;volatile
  3029                           
  3030                           ; BSR set to: 14
  3031                           ;motorDrive.c: 39: TRISK1 = 0;
  3032  011E80  010E               	movlb	14	; () banked
  3033  011E82  93E9               	bcf	233,1,b	;volatile
  3034                           
  3035                           ; BSR set to: 14
  3036                           ;motorDrive.c: 43: TMR4ON = 1;
  3037  011E84  010F               	movlb	15	; () banked
  3038  011E86  8504               	bsf	4,2,b	;volatile
  3039                           
  3040                           ; BSR set to: 15
  3041                           ;motorDrive.c: 44: T4CKPS1 = 1;
  3042  011E88  010F               	movlb	15	; () banked
  3043  011E8A  8304               	bsf	4,1,b	;volatile
  3044                           
  3045                           ; BSR set to: 15
  3046                           ;motorDrive.c: 46: TMR6ON = 1;
  3047  011E8C  010F               	movlb	15	; () banked
  3048  011E8E  853D               	bsf	61,2,b	;volatile
  3049                           
  3050                           ; BSR set to: 15
  3051                           ;motorDrive.c: 47: T6CKPS1 = 1;
  3052  011E90  010F               	movlb	15	; () banked
  3053  011E92  833D               	bsf	61,1,b	;volatile
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;motorDrive.c: 50: OpenEPWM1(0x33, 0b10101111);
  3057  011E94  0EAF               	movlw	175
  3058  011E96  6E20               	movwf	OpenEPWM1@timer_source,c
  3059  011E98  0E33               	movlw	51
  3060  011E9A  ECB7  F08F         	call	_OpenEPWM1
  3061                           
  3062                           ;motorDrive.c: 51: SetDCEPWM1(0x0);
  3063  011E9E  0E00               	movlw	0
  3064  011EA0  6E21               	movwf	SetDCEPWM1@dutycycle+1,c
  3065  011EA2  0E00               	movlw	0
  3066  011EA4  6E20               	movwf	SetDCEPWM1@dutycycle,c
  3067  011EA6  EC53  F091         	call	_SetDCEPWM1	;wreg free
  3068                           
  3069                           ;motorDrive.c: 52: SetOutputEPWM1( 0b00111111, 0b11111100);
  3070  011EAA  0EFC               	movlw	252
  3071  011EAC  6E20               	movwf	SetOutputEPWM1@outputmode,c
  3072  011EAE  0E3F               	movlw	63
  3073  011EB0  EC06  F08E         	call	_SetOutputEPWM1
  3074                           
  3075                           ;motorDrive.c: 55: CCP1CON = 0b00001100;
  3076  011EB4  0E0C               	movlw	12
  3077  011EB6  6EB9               	movwf	4025,c	;volatile
  3078                           
  3079                           ;motorDrive.c: 56: CCPTMRS0 = 0b01001001;
  3080  011EB8  0E49               	movlw	73
  3081  011EBA  010F               	movlb	15	; () banked
  3082  011EBC  6F36               	movwf	54,b	;volatile
  3083                           
  3084                           ; BSR set to: 15
  3085                           ;motorDrive.c: 60: OpenEPWM3(0x33, 0b11101111);
  3086  011EBE  0EEF               	movlw	239
  3087  011EC0  6E20               	movwf	OpenEPWM3@timer_source,c
  3088  011EC2  0E33               	movlw	51
  3089  011EC4  ECEF  F08E         	call	_OpenEPWM3
  3090                           
  3091                           ;motorDrive.c: 61: SetDCEPWM3(0x0);
  3092  011EC8  0E00               	movlw	0
  3093  011ECA  6E21               	movwf	SetDCEPWM3@dutycycle+1,c
  3094  011ECC  0E00               	movlw	0
  3095  011ECE  6E20               	movwf	SetDCEPWM3@dutycycle,c
  3096  011ED0  EC2F  F091         	call	_SetDCEPWM3	;wreg free
  3097                           
  3098                           ;motorDrive.c: 62: SetOutputEPWM3( 0b00111111, 0b11111100);
  3099  011ED4  0EFC               	movlw	252
  3100  011ED6  6E20               	movwf	SetOutputEPWM3@outputmode,c
  3101  011ED8  0E3F               	movlw	63
  3102  011EDA  ECB1  F08D         	call	_SetOutputEPWM3
  3103                           
  3104                           ;motorDrive.c: 64: motorDrive_setSpeeds(0,0);
  3105  011EDE  0E00               	movlw	0
  3106  011EE0  0100               	movlb	0	; () banked
  3107  011EE2  6F6C               	movwf	motorDrive_setSpeeds@rSpeed& (0+255),b
  3108  011EE4  0E00               	movlw	0
  3109  011EE6  ECBE  F086         	call	_motorDrive_setSpeeds
  3110  011EEA  0012               	return		;funcret
  3111  011EEC                     __end_of_motorDrive_init:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           status	equ	0xFD8
  3123                           
  3124 ;; *************** function _SetOutputEPWM3 *****************
  3125 ;; Defined at:
  3126 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setoc.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  outputconfig    1    wreg     unsigned char 
  3129 ;;  outputmode      1   31[COMRAM] unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  3132 ;;  eccpmx          1    0[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3142 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    3
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_motorDrive_init
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text10
  3157  011B62                     __ptext10:
  3158                           	opt stack 0
  3159  011B62                     _SetOutputEPWM3:
  3160                           	opt stack 25
  3161                           
  3162                           ;incstack = 0
  3163                           ;SetOutputEPWM3@outputconfig stored from wreg
  3164  011B62  0100               	movlb	0	; () banked
  3165  011B64  6F61               	movwf	SetOutputEPWM3@outputconfig& (0+255),b
  3166                           
  3167                           ; BSR set to: 0
  3168  011B66  0E00               	movlw	0
  3169  011B68  0100               	movlb	0	; () banked
  3170  011B6A  6F60               	movwf	SetOutputEPWM3@eccpmx& (0+255),b
  3171                           
  3172                           ; BSR set to: 0
  3173  011B6C  0E3F               	movlw	63
  3174  011B6E  0100               	movlb	0	; () banked
  3175  011B70  1361               	iorwf	SetOutputEPWM3@outputconfig& (0+255),f,b
  3176                           
  3177                           ; BSR set to: 0
  3178  011B72  0EFC               	movlw	252
  3179  011B74  1220               	iorwf	SetOutputEPWM3@outputmode,f,c
  3180                           
  3181                           ; BSR set to: 0
  3182  011B76  010F               	movlb	15	; () banked
  3183  011B78  5149               	movf	73,w,b	;volatile
  3184  011B7A  09C0               	iorlw	192
  3185  011B7C  0100               	movlb	0	; () banked
  3186  011B7E  1561               	andwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3187  011B80  010F               	movlb	15	; () banked
  3188  011B82  6F49               	movwf	73,b	;volatile
  3189                           
  3190                           ; BSR set to: 15
  3191  011B84  010F               	movlb	15	; () banked
  3192  011B86  5149               	movf	73,w,b	;volatile
  3193  011B88  090F               	iorlw	15
  3194  011B8A  1420               	andwf	SetOutputEPWM3@outputmode,w,c
  3195  011B8C  010F               	movlb	15	; () banked
  3196  011B8E  6F49               	movwf	73,b	;volatile
  3197                           
  3198                           ; BSR set to: 15
  3199  011B90  0E05               	movlw	5
  3200  011B92  6EF6               	movwf	tblptrl,c
  3201  011B94                     	if	1	;There is more than 1 active tblptr byte
  3202  011B94  0E00               	movlw	0
  3203  011B96  6EF7               	movwf	tblptrh,c
  3204  011B98                     	endif
  3205  011B98                     	if	1	;There are 3 active tblptr bytes
  3206  011B98  0E30               	movlw	48
  3207  011B9A  6EF8               	movwf	tblptru,c
  3208  011B9C                     	endif
  3209  011B9C  0008               	tblrd		*
  3210  011B9E  0100               	movlb	12288	; () banked
  3211  011BA0  A2F5               	btfss	tablat,1,c
  3212  011BA2  D003               	goto	l6962
  3213                           
  3214                           ; BSR set to: 0
  3215  011BA4  0100               	movlb	0	; () banked
  3216  011BA6  6960               	setf	SetOutputEPWM3@eccpmx& (0+255),b
  3217  011BA8  D004               	goto	l6964
  3218  011BAA                     l6962:
  3219                           
  3220                           ; BSR set to: 0
  3221  011BAA  0E00               	movlw	0
  3222  011BAC  0100               	movlb	0	; () banked
  3223  011BAE  6F60               	movwf	SetOutputEPWM3@eccpmx& (0+255),b
  3224  011BB0  D000               	goto	l6964
  3225  011BB2                     l6964:
  3226                           
  3227                           ; BSR set to: 0
  3228  011BB2  0E3F               	movlw	63
  3229  011BB4  0100               	movlb	0	; () banked
  3230  011BB6  1961               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3231  011BB8  A4D8               	btfss	status,2,c
  3232  011BBA  D002               	goto	l6968
  3233                           
  3234                           ; BSR set to: 0
  3235  011BBC  9098               	bcf	3992,0,c	;volatile
  3236  011BBE  0012               	return	
  3237  011BC0                     l6968:
  3238                           
  3239                           ; BSR set to: 0
  3240  011BC0  0EBF               	movlw	191
  3241  011BC2  0100               	movlb	0	; () banked
  3242  011BC4  1961               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3243  011BC6  A4D8               	btfss	status,2,c
  3244  011BC8  D00A               	goto	l6976
  3245                           
  3246                           ; BSR set to: 0
  3247  011BCA  9098               	bcf	3992,0,c	;volatile
  3248                           
  3249                           ; BSR set to: 0
  3250  011BCC  0100               	movlb	0	; () banked
  3251  011BCE  5160               	movf	SetOutputEPWM3@eccpmx& (0+255),w,b
  3252  011BD0  0100               	movlb	0	; () banked
  3253  011BD2  B4D8               	btfsc	status,2,c
  3254  011BD4  D002               	goto	l1274
  3255                           
  3256                           ; BSR set to: 0
  3257  011BD6  9896               	bcf	3990,4,c	;volatile
  3258  011BD8  0012               	return	
  3259  011BDA                     l1274:
  3260                           
  3261                           ; BSR set to: 0
  3262  011BDA  9A99               	bcf	3993,5,c	;volatile
  3263                           
  3264                           ; BSR set to: 0
  3265  011BDC  0012               	return	
  3266  011BDE                     l6976:
  3267                           
  3268                           ; BSR set to: 0
  3269  011BDE  0E7F               	movlw	127
  3270  011BE0  0100               	movlb	0	; () banked
  3271  011BE2  1961               	xorwf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3272  011BE4  B4D8               	btfsc	status,2,c
  3273  011BE6  D004               	goto	l1279
  3274                           
  3275                           ; BSR set to: 0
  3276  011BE8  0100               	movlb	0	; () banked
  3277  011BEA  2961               	incf	SetOutputEPWM3@outputconfig& (0+255),w,b
  3278  011BEC  A4D8               	btfss	status,2,c
  3279  011BEE  0012               	return	
  3280  011BF0                     l1279:
  3281                           
  3282                           ; BSR set to: 0
  3283  011BF0  9098               	bcf	3992,0,c	;volatile
  3284                           
  3285                           ; BSR set to: 0
  3286  011BF2  0100               	movlb	0	; () banked
  3287  011BF4  5160               	movf	SetOutputEPWM3@eccpmx& (0+255),w,b
  3288  011BF6  0100               	movlb	0	; () banked
  3289  011BF8  B4D8               	btfsc	status,2,c
  3290  011BFA  D003               	goto	l1280
  3291                           
  3292                           ; BSR set to: 0
  3293  011BFC  9896               	bcf	3990,4,c	;volatile
  3294  011BFE  9696               	bcf	3990,3,c	;volatile
  3295  011C00  D002               	goto	l1281
  3296  011C02                     l1280:
  3297                           
  3298                           ; BSR set to: 0
  3299  011C02  9A99               	bcf	3993,5,c	;volatile
  3300  011C04  9899               	bcf	3993,4,c	;volatile
  3301  011C06                     l1281:
  3302                           
  3303                           ; BSR set to: 0
  3304  011C06  9698               	bcf	3992,3,c	;volatile
  3305                           
  3306                           ; BSR set to: 0
  3307                           
  3308                           ; BSR set to: 0
  3309  011C08  0012               	return	
  3310                           
  3311                           ; BSR set to: 0
  3312                           
  3313                           ; BSR set to: 0
  3314  011C0A  0012               	return		;funcret
  3315  011C0C                     __end_of_SetOutputEPWM3:
  3316                           	opt stack 0
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           postdec1	equ	0xFE5
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _SetOutputEPWM1 *****************
  3329 ;; Defined at:
  3330 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setoc.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  outputconfig    1    wreg     unsigned char 
  3333 ;;  outputmode      1   31[COMRAM] unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  3336 ;;  eccpmx          1    0[BANK0 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;Total ram usage:        3 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_motorDrive_init
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text11
  3361  011C0C                     __ptext11:
  3362                           	opt stack 0
  3363  011C0C                     _SetOutputEPWM1:
  3364                           	opt stack 25
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;incstack = 0
  3368                           ;SetOutputEPWM1@outputconfig stored from wreg
  3369  011C0C  0100               	movlb	0	; () banked
  3370  011C0E  6F61               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  3371                           
  3372                           ; BSR set to: 0
  3373  011C10  0E00               	movlw	0
  3374  011C12  0100               	movlb	0	; () banked
  3375  011C14  6F60               	movwf	SetOutputEPWM1@eccpmx& (0+255),b
  3376                           
  3377                           ; BSR set to: 0
  3378  011C16  0E3F               	movlw	63
  3379  011C18  0100               	movlb	0	; () banked
  3380  011C1A  1361               	iorwf	SetOutputEPWM1@outputconfig& (0+255),f,b
  3381                           
  3382                           ; BSR set to: 0
  3383  011C1C  0EFC               	movlw	252
  3384  011C1E  1220               	iorwf	SetOutputEPWM1@outputmode,f,c
  3385                           
  3386                           ; BSR set to: 0
  3387  011C20  50B9               	movf	4025,w,c	;volatile
  3388  011C22  09C0               	iorlw	192
  3389  011C24  0100               	movlb	0	; () banked
  3390  011C26  1561               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3391  011C28  6EB9               	movwf	4025,c	;volatile
  3392                           
  3393                           ; BSR set to: 0
  3394  011C2A  50B9               	movf	4025,w,c	;volatile
  3395  011C2C  090F               	iorlw	15
  3396  011C2E  1420               	andwf	SetOutputEPWM1@outputmode,w,c
  3397  011C30  6EB9               	movwf	4025,c	;volatile
  3398                           
  3399                           ; BSR set to: 0
  3400  011C32  0E05               	movlw	5
  3401  011C34  6EF6               	movwf	tblptrl,c
  3402  011C36                     	if	1	;There is more than 1 active tblptr byte
  3403  011C36  0E00               	movlw	0
  3404  011C38  6EF7               	movwf	tblptrh,c
  3405  011C3A                     	endif
  3406  011C3A                     	if	1	;There are 3 active tblptr bytes
  3407  011C3A  0E30               	movlw	48
  3408  011C3C  6EF8               	movwf	tblptru,c
  3409  011C3E                     	endif
  3410  011C3E  0008               	tblrd		*
  3411  011C40  0100               	movlb	12288	; () banked
  3412  011C42  A2F5               	btfss	tablat,1,c
  3413  011C44  D003               	goto	l6904
  3414                           
  3415                           ; BSR set to: 0
  3416  011C46  0100               	movlb	0	; () banked
  3417  011C48  6960               	setf	SetOutputEPWM1@eccpmx& (0+255),b
  3418  011C4A  D004               	goto	l6906
  3419  011C4C                     l6904:
  3420                           
  3421                           ; BSR set to: 0
  3422  011C4C  0E00               	movlw	0
  3423  011C4E  0100               	movlb	0	; () banked
  3424  011C50  6F60               	movwf	SetOutputEPWM1@eccpmx& (0+255),b
  3425  011C52  D000               	goto	l6906
  3426  011C54                     l6906:
  3427                           
  3428                           ; BSR set to: 0
  3429  011C54  0E3F               	movlw	63
  3430  011C56  0100               	movlb	0	; () banked
  3431  011C58  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3432  011C5A  A4D8               	btfss	status,2,c
  3433  011C5C  D002               	goto	l6910
  3434                           
  3435                           ; BSR set to: 0
  3436  011C5E  9494               	bcf	3988,2,c	;volatile
  3437  011C60  0012               	return	
  3438  011C62                     l6910:
  3439                           
  3440                           ; BSR set to: 0
  3441  011C62  0EBF               	movlw	191
  3442  011C64  0100               	movlb	0	; () banked
  3443  011C66  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3444  011C68  A4D8               	btfss	status,2,c
  3445  011C6A  D00A               	goto	l6918
  3446                           
  3447                           ; BSR set to: 0
  3448  011C6C  9494               	bcf	3988,2,c	;volatile
  3449                           
  3450                           ; BSR set to: 0
  3451  011C6E  0100               	movlb	0	; () banked
  3452  011C70  5160               	movf	SetOutputEPWM1@eccpmx& (0+255),w,b
  3453  011C72  0100               	movlb	0	; () banked
  3454  011C74  B4D8               	btfsc	status,2,c
  3455  011C76  D002               	goto	l1213
  3456                           
  3457                           ; BSR set to: 0
  3458  011C78  9C96               	bcf	3990,6,c	;volatile
  3459  011C7A  0012               	return	
  3460  011C7C                     l1213:
  3461                           
  3462                           ; BSR set to: 0
  3463  011C7C  9E99               	bcf	3993,7,c	;volatile
  3464                           
  3465                           ; BSR set to: 0
  3466  011C7E  0012               	return	
  3467  011C80                     l6918:
  3468                           
  3469                           ; BSR set to: 0
  3470  011C80  0E7F               	movlw	127
  3471  011C82  0100               	movlb	0	; () banked
  3472  011C84  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3473  011C86  B4D8               	btfsc	status,2,c
  3474  011C88  D004               	goto	l1218
  3475                           
  3476                           ; BSR set to: 0
  3477  011C8A  0100               	movlb	0	; () banked
  3478  011C8C  2961               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  3479  011C8E  A4D8               	btfss	status,2,c
  3480  011C90  0012               	return	
  3481  011C92                     l1218:
  3482                           
  3483                           ; BSR set to: 0
  3484  011C92  9494               	bcf	3988,2,c	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487  011C94  0100               	movlb	0	; () banked
  3488  011C96  5160               	movf	SetOutputEPWM1@eccpmx& (0+255),w,b
  3489  011C98  0100               	movlb	0	; () banked
  3490  011C9A  B4D8               	btfsc	status,2,c
  3491  011C9C  D003               	goto	l1219
  3492                           
  3493                           ; BSR set to: 0
  3494  011C9E  9C96               	bcf	3990,6,c	;volatile
  3495  011CA0  9A96               	bcf	3990,5,c	;volatile
  3496  011CA2  D002               	goto	l1220
  3497  011CA4                     l1219:
  3498                           
  3499                           ; BSR set to: 0
  3500  011CA4  9E99               	bcf	3993,7,c	;volatile
  3501  011CA6  9C99               	bcf	3993,6,c	;volatile
  3502  011CA8                     l1220:
  3503                           
  3504                           ; BSR set to: 0
  3505  011CA8  9898               	bcf	3992,4,c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           
  3509                           ; BSR set to: 0
  3510  011CAA  0012               	return	
  3511                           
  3512                           ; BSR set to: 0
  3513                           
  3514                           ; BSR set to: 0
  3515  011CAC  0012               	return		;funcret
  3516  011CAE                     __end_of_SetOutputEPWM1:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _OpenEPWM3 *****************
  3530 ;; Defined at:
  3531 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3open.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  period          1    wreg     unsigned char 
  3534 ;;  timer_source    1   31[COMRAM] unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  period          1    0[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3546 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;Total ram usage:        3 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    3
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_motorDrive_init
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text12
  3561  011DDE                     __ptext12:
  3562                           	opt stack 0
  3563  011DDE                     _OpenEPWM3:
  3564                           	opt stack 25
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;incstack = 0
  3568                           ;OpenEPWM3@period stored from wreg
  3569  011DDE  0100               	movlb	0	; () banked
  3570  011DE0  6F60               	movwf	OpenEPWM3@period& (0+255),b
  3571                           
  3572                           ; BSR set to: 0
  3573  011DE2  0E0C               	movlw	12
  3574  011DE4  010F               	movlb	15	; () banked
  3575  011DE6  6F49               	movwf	73,b	;volatile
  3576                           
  3577                           ; BSR set to: 15
  3578  011DE8  0E3F               	movlw	63
  3579  011DEA  010F               	movlb	15	; () banked
  3580  011DEC  1736               	andwf	54,f,b	;volatile
  3581                           
  3582                           ; BSR set to: 15
  3583  011DEE  C020  F021         	movff	OpenEPWM3@timer_source,??_OpenEPWM3
  3584  011DF2  0E30               	movlw	48
  3585  011DF4  1621               	andwf	??_OpenEPWM3,f,c
  3586  011DF6  90D8               	bcf	status,0,c
  3587  011DF8  3621               	rlcf	??_OpenEPWM3,f,c
  3588  011DFA  90D8               	bcf	status,0,c
  3589  011DFC  3421               	rlcf	??_OpenEPWM3,w,c
  3590  011DFE  010F               	movlb	15	; () banked
  3591  011E00  1336               	iorwf	54,f,b	;volatile
  3592                           
  3593                           ; BSR set to: 15
  3594  011E02  CF36 F021          	movff	3894,??_OpenEPWM3	;volatile
  3595  011E06  0EC0               	movlw	192
  3596  011E08  1621               	andwf	??_OpenEPWM3,f,c
  3597  011E0A  A4D8               	btfss	status,2,c
  3598  011E0C  D005               	goto	l6936
  3599                           
  3600                           ; BSR set to: 15
  3601  011E0E  94CA               	bcf	4042,2,c	;volatile
  3602  011E10  C060  FFCB         	movff	OpenEPWM3@period,4043	;volatile
  3603  011E14  84CA               	bsf	4042,2,c	;volatile
  3604  011E16  0012               	return	
  3605  011E18                     l6936:
  3606                           
  3607                           ; BSR set to: 15
  3608  011E18  010F               	movlb	15	; () banked
  3609  011E1A  5136               	movf	54,w,b	;volatile
  3610  011E1C  0BC0               	andlw	192
  3611  011E1E  0A40               	xorlw	64
  3612  011E20  A4D8               	btfss	status,2,c
  3613  011E22  D007               	goto	l6940
  3614                           
  3615                           ; BSR set to: 15
  3616  011E24  010F               	movlb	15	; () banked
  3617  011E26  9504               	bcf	4,2,b	;volatile
  3618  011E28  C060  FF05         	movff	OpenEPWM3@period,3845	;volatile
  3619  011E2C  010F               	movlb	15	; () banked
  3620  011E2E  8504               	bsf	4,2,b	;volatile
  3621  011E30  0012               	return	
  3622  011E32                     l6940:
  3623                           
  3624                           ; BSR set to: 15
  3625  011E32  010F               	movlb	15	; () banked
  3626  011E34  5136               	movf	54,w,b	;volatile
  3627  011E36  0BC0               	andlw	192
  3628  011E38  0A80               	xorlw	128
  3629  011E3A  A4D8               	btfss	status,2,c
  3630  011E3C  D007               	goto	l6944
  3631                           
  3632                           ; BSR set to: 15
  3633  011E3E  010F               	movlb	15	; () banked
  3634  011E40  953D               	bcf	61,2,b	;volatile
  3635  011E42  C060  FF3E         	movff	OpenEPWM3@period,3902	;volatile
  3636  011E46  010F               	movlb	15	; () banked
  3637  011E48  853D               	bsf	61,2,b	;volatile
  3638  011E4A  0012               	return	
  3639  011E4C                     l6944:
  3640                           
  3641                           ; BSR set to: 15
  3642  011E4C  010F               	movlb	15	; () banked
  3643  011E4E  5136               	movf	54,w,b	;volatile
  3644  011E50  0BC0               	andlw	192
  3645  011E52  0AC0               	xorlw	192
  3646  011E54  A4D8               	btfss	status,2,c
  3647  011E56  0012               	return	
  3648                           
  3649                           ; BSR set to: 15
  3650  011E58  010F               	movlb	15	; () banked
  3651  011E5A  953A               	bcf	58,2,b	;volatile
  3652  011E5C  C060  FF3B         	movff	OpenEPWM3@period,3899	;volatile
  3653  011E60  010F               	movlb	15	; () banked
  3654  011E62  853A               	bsf	58,2,b	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657                           
  3658                           ; BSR set to: 15
  3659                           
  3660                           ; BSR set to: 15
  3661  011E64  0012               	return	
  3662                           
  3663                           ; BSR set to: 15
  3664                           
  3665                           ; BSR set to: 15
  3666  011E66  0012               	return		;funcret
  3667  011E68                     __end_of_OpenEPWM3:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           postinc0	equ	0xFEE
  3674                           wreg	equ	0xFE8
  3675                           postdec1	equ	0xFE5
  3676                           fsr1h	equ	0xFE2
  3677                           fsr1l	equ	0xFE1
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _OpenEPWM1 *****************
  3681 ;; Defined at:
  3682 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1open.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  period          1    wreg     unsigned char 
  3685 ;;  timer_source    1   31[COMRAM] unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  period          1    0[BANK0 ] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;Total ram usage:        3 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    3
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_motorDrive_init
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text13
  3712  011F6E                     __ptext13:
  3713                           	opt stack 0
  3714  011F6E                     _OpenEPWM1:
  3715                           	opt stack 25
  3716                           
  3717                           ; BSR set to: 15
  3718                           ;incstack = 0
  3719                           ;OpenEPWM1@period stored from wreg
  3720  011F6E  0100               	movlb	0	; () banked
  3721  011F70  6F60               	movwf	OpenEPWM1@period& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724  011F72  0E0C               	movlw	12
  3725  011F74  6EB9               	movwf	4025,c	;volatile
  3726                           
  3727                           ; BSR set to: 0
  3728  011F76  0EFC               	movlw	252
  3729  011F78  010F               	movlb	15	; () banked
  3730  011F7A  1736               	andwf	54,f,b	;volatile
  3731                           
  3732                           ; BSR set to: 15
  3733  011F7C  3820               	swapf	OpenEPWM1@timer_source,w,c
  3734  011F7E  46E8               	rlncf	wreg,f,c
  3735  011F80  0B1F               	andlw	31
  3736  011F82  0B03               	andlw	3
  3737  011F84  010F               	movlb	15	; () banked
  3738  011F86  1336               	iorwf	54,f,b	;volatile
  3739                           
  3740                           ; BSR set to: 15
  3741  011F88  CF36 F021          	movff	3894,??_OpenEPWM1	;volatile
  3742  011F8C  0E07               	movlw	7
  3743  011F8E  1621               	andwf	??_OpenEPWM1,f,c
  3744  011F90  A4D8               	btfss	status,2,c
  3745  011F92  D005               	goto	l6878
  3746                           
  3747                           ; BSR set to: 15
  3748  011F94  94CA               	bcf	4042,2,c	;volatile
  3749  011F96  C060  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  3750  011F9A  84CA               	bsf	4042,2,c	;volatile
  3751  011F9C  0012               	return	
  3752  011F9E                     l6878:
  3753                           
  3754                           ; BSR set to: 15
  3755  011F9E  010F               	movlb	15	; () banked
  3756  011FA0  5136               	movf	54,w,b	;volatile
  3757  011FA2  0B07               	andlw	7
  3758  011FA4  06E8               	decf	wreg,f,c
  3759  011FA6  A4D8               	btfss	status,2,c
  3760  011FA8  D007               	goto	l6882
  3761                           
  3762                           ; BSR set to: 15
  3763  011FAA  010F               	movlb	15	; () banked
  3764  011FAC  9504               	bcf	4,2,b	;volatile
  3765  011FAE  C060  FF05         	movff	OpenEPWM1@period,3845	;volatile
  3766  011FB2  010F               	movlb	15	; () banked
  3767  011FB4  8504               	bsf	4,2,b	;volatile
  3768  011FB6  0012               	return	
  3769  011FB8                     l6882:
  3770                           
  3771                           ; BSR set to: 15
  3772  011FB8  010F               	movlb	15	; () banked
  3773  011FBA  5136               	movf	54,w,b	;volatile
  3774  011FBC  0B07               	andlw	7
  3775  011FBE  0A02               	xorlw	2
  3776  011FC0  A4D8               	btfss	status,2,c
  3777  011FC2  D007               	goto	l6886
  3778                           
  3779                           ; BSR set to: 15
  3780  011FC4  010F               	movlb	15	; () banked
  3781  011FC6  953D               	bcf	61,2,b	;volatile
  3782  011FC8  C060  FF3E         	movff	OpenEPWM1@period,3902	;volatile
  3783  011FCC  010F               	movlb	15	; () banked
  3784  011FCE  853D               	bsf	61,2,b	;volatile
  3785  011FD0  0012               	return	
  3786  011FD2                     l6886:
  3787                           
  3788                           ; BSR set to: 15
  3789  011FD2  010F               	movlb	15	; () banked
  3790  011FD4  5136               	movf	54,w,b	;volatile
  3791  011FD6  0B07               	andlw	7
  3792  011FD8  0A03               	xorlw	3
  3793  011FDA  A4D8               	btfss	status,2,c
  3794  011FDC  0012               	return	
  3795                           
  3796                           ; BSR set to: 15
  3797  011FDE  010F               	movlb	15	; () banked
  3798  011FE0  953A               	bcf	58,2,b	;volatile
  3799  011FE2  C060  FF3B         	movff	OpenEPWM1@period,3899	;volatile
  3800  011FE6  010F               	movlb	15	; () banked
  3801  011FE8  853A               	bsf	58,2,b	;volatile
  3802                           
  3803                           ; BSR set to: 15
  3804                           
  3805                           ; BSR set to: 15
  3806                           
  3807                           ; BSR set to: 15
  3808  011FEA  0012               	return	
  3809                           
  3810                           ; BSR set to: 15
  3811                           
  3812                           ; BSR set to: 15
  3813  011FEC  0012               	return		;funcret
  3814  011FEE                     __end_of_OpenEPWM1:
  3815                           	opt stack 0
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _fft_init *****************
  3828 ;; Defined at:
  3829 ;;		line 8 in file "fft.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		wreg, status,2
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_init
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text14
  3858  01206A                     __ptext14:
  3859                           	opt stack 0
  3860  01206A                     _fft_init:
  3861                           	opt stack 26
  3862                           
  3863                           ;fft.c: 10: ANCON3 = 0b00100000;
  3864                           
  3865                           ; BSR set to: 15
  3866                           ;incstack = 0
  3867  01206A  0E20               	movlw	32
  3868  01206C  010E               	movlb	14	; () banked
  3869  01206E  6F45               	movwf	69,b	;volatile
  3870                           
  3871                           ;fft.c: 12: ADCSS0L = 0;
  3872  012070  0E00               	movlw	0
  3873  012072  010E               	movlb	14	; () banked
  3874  012074  6F82               	movwf	130,b	;volatile
  3875                           
  3876                           ;fft.c: 13: ADCSS0H = 0;
  3877  012076  0E00               	movlw	0
  3878  012078  010E               	movlb	14	; () banked
  3879  01207A  6F83               	movwf	131,b	;volatile
  3880                           
  3881                           ;fft.c: 14: ADCSS1L = 0;
  3882  01207C  0E00               	movlw	0
  3883  01207E  010E               	movlb	14	; () banked
  3884  012080  6F84               	movwf	132,b	;volatile
  3885                           
  3886                           ;fft.c: 15: ADCSS1H = 0;
  3887  012082  0E00               	movlw	0
  3888  012084  010E               	movlb	14	; () banked
  3889  012086  6F85               	movwf	133,b	;volatile
  3890                           
  3891                           ; BSR set to: 14
  3892                           ;fft.c: 17: CSS14 = 1;
  3893  012088  010E               	movlb	14	; () banked
  3894  01208A  8D83               	bsf	131,6,b	;volatile
  3895                           
  3896                           ; BSR set to: 14
  3897                           ;fft.c: 19: CH0SA0 = 0;
  3898  01208C  010E               	movlb	14	; () banked
  3899  01208E  9186               	bcf	134,0,b	;volatile
  3900                           
  3901                           ; BSR set to: 14
  3902                           ;fft.c: 20: CH0SA1 = 1;
  3903  012090  010E               	movlb	14	; () banked
  3904  012092  8386               	bsf	134,1,b	;volatile
  3905                           
  3906                           ; BSR set to: 14
  3907                           ;fft.c: 21: CH0SA2 = 1;
  3908  012094  010E               	movlb	14	; () banked
  3909  012096  8586               	bsf	134,2,b	;volatile
  3910                           
  3911                           ; BSR set to: 14
  3912                           ;fft.c: 22: CH0SA3 = 1;
  3913  012098  010E               	movlb	14	; () banked
  3914  01209A  8786               	bsf	134,3,b	;volatile
  3915                           
  3916                           ; BSR set to: 14
  3917                           ;fft.c: 23: CH0SA4 = 0;
  3918  01209C  010E               	movlb	14	; () banked
  3919  01209E  9986               	bcf	134,4,b	;volatile
  3920                           
  3921                           ; BSR set to: 14
  3922                           ;fft.c: 25: CH0NA0 = 0;
  3923  0120A0  010E               	movlb	14	; () banked
  3924  0120A2  9B86               	bcf	134,5,b	;volatile
  3925                           
  3926                           ; BSR set to: 14
  3927                           ;fft.c: 26: CH0NA1 = 0;
  3928  0120A4  010E               	movlb	14	; () banked
  3929  0120A6  9D86               	bcf	134,6,b	;volatile
  3930                           
  3931                           ; BSR set to: 14
  3932                           ;fft.c: 27: CH0NA2 = 0;
  3933  0120A8  010E               	movlb	14	; () banked
  3934  0120AA  9F86               	bcf	134,7,b	;volatile
  3935                           
  3936                           ; BSR set to: 14
  3937                           ;fft.c: 29: ALTS = 0;
  3938  0120AC  010E               	movlb	14	; () banked
  3939  0120AE  918C               	bcf	140,0,b	;volatile
  3940                           
  3941                           ; BSR set to: 14
  3942                           ;fft.c: 32: ADRC = 1;
  3943  0120B0  010E               	movlb	14	; () banked
  3944  0120B2  8F8B               	bsf	139,7,b	;volatile
  3945                           
  3946                           ; BSR set to: 14
  3947                           ;fft.c: 33: ANSEL22 = 1;
  3948  0120B4  010E               	movlb	14	; () banked
  3949  0120B6  8D45               	bsf	69,6,b	;volatile
  3950                           
  3951                           ; BSR set to: 14
  3952                           ;fft.c: 34: ADON = 1;
  3953  0120B8  8EC1               	bsf	4033,7,c	;volatile
  3954                           
  3955                           ; BSR set to: 14
  3956                           ;fft.c: 35: MODE12 = 1;
  3957  0120BA  84C1               	bsf	4033,2,c	;volatile
  3958                           
  3959                           ; BSR set to: 14
  3960                           ;fft.c: 36: CSCNA = 1;
  3961  0120BC  010E               	movlb	14	; () banked
  3962  0120BE  858D               	bsf	141,2,b	;volatile
  3963                           
  3964                           ; BSR set to: 14
  3965                           ;fft.c: 37: FORM0 = 1;
  3966  0120C0  80C1               	bsf	4033,0,c	;volatile
  3967                           
  3968                           ; BSR set to: 14
  3969                           ;fft.c: 38: FORM1 = 0;
  3970  0120C2  92C1               	bcf	4033,1,c	;volatile
  3971                           
  3972                           ; BSR set to: 14
  3973                           ;fft.c: 39: ASAM = 1;
  3974  0120C4  84C0               	bsf	4032,2,c	;volatile
  3975                           
  3976                           ; BSR set to: 14
  3977                           ;fft.c: 40: PVCFG0 = 0;
  3978  0120C6  010E               	movlb	14	; () banked
  3979  0120C8  9D8D               	bcf	141,6,b	;volatile
  3980                           
  3981                           ; BSR set to: 14
  3982                           ;fft.c: 41: PVCFG1 = 0;
  3983  0120CA  010E               	movlb	14	; () banked
  3984  0120CC  9F8D               	bcf	141,7,b	;volatile
  3985                           
  3986                           ; BSR set to: 14
  3987                           ;fft.c: 42: NVCFG0 = 0;
  3988  0120CE  010E               	movlb	14	; () banked
  3989  0120D0  9B8D               	bcf	141,5,b	;volatile
  3990                           
  3991                           ; BSR set to: 14
  3992                           ;fft.c: 43: BUFREGEN = 1;
  3993  0120D2  010E               	movlb	14	; () banked
  3994  0120D4  878D               	bsf	141,3,b	;volatile
  3995                           
  3996                           ; BSR set to: 14
  3997                           ;fft.c: 44: CSCNA = 0;
  3998  0120D6  010E               	movlb	14	; () banked
  3999  0120D8  958D               	bcf	141,2,b	;volatile
  4000                           
  4001                           ; BSR set to: 14
  4002  0120DA  0012               	return		;funcret
  4003  0120DC                     __end_of_fft_init:
  4004                           	opt stack 0
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           postinc0	equ	0xFEE
  4010                           wreg	equ	0xFE8
  4011                           postdec1	equ	0xFE5
  4012                           fsr1h	equ	0xFE2
  4013                           fsr1l	equ	0xFE1
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _encoders_init *****************
  4017 ;; Defined at:
  4018 ;;		line 6 in file "encoders.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_init
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text15
  4047  0124D0                     __ptext15:
  4048                           	opt stack 0
  4049  0124D0                     _encoders_init:
  4050                           	opt stack 26
  4051                           
  4052                           ;encoders.c: 9: TRISBbits.TRISB0 = 1;
  4053                           
  4054                           ; BSR set to: 14
  4055                           ;incstack = 0
  4056  0124D0  8093               	bsf	3987,0,c	;volatile
  4057                           
  4058                           ;encoders.c: 10: TRISBbits.TRISB1 = 1;
  4059  0124D2  8293               	bsf	3987,1,c	;volatile
  4060                           
  4061                           ;encoders.c: 11: TRISBbits.TRISB2 = 1;
  4062  0124D4  8493               	bsf	3987,2,c	;volatile
  4063                           
  4064                           ;encoders.c: 12: TRISBbits.TRISB3 = 1;
  4065  0124D6  8693               	bsf	3987,3,c	;volatile
  4066                           
  4067                           ;encoders.c: 21: IOLOCK = 0;
  4068  0124D8  9C66               	bcf	3942,6,c	;volatile
  4069                           
  4070                           ;encoders.c: 22: RPINR26_27 &= 0xF2;
  4071  0124DA  0EF2               	movlw	242
  4072  0124DC  010E               	movlb	14	; () banked
  4073  0124DE  1737               	andwf	55,f,b	;volatile
  4074                           
  4075                           ;encoders.c: 23: RPINR28_29 &= 0xF1;
  4076  0124E0  0EF1               	movlw	241
  4077  0124E2  010E               	movlb	14	; () banked
  4078  0124E4  1738               	andwf	56,f,b	;volatile
  4079                           
  4080                           ; BSR set to: 14
  4081                           ;encoders.c: 24: IOLOCK = 1;
  4082  0124E6  8C66               	bsf	3942,6,c	;volatile
  4083                           
  4084                           ; BSR set to: 14
  4085                           ;encoders.c: 26: INTCON2bits.INTEDG1 = 1;
  4086  0124E8  8AF1               	bsf	intcon2,5,c	;volatile
  4087                           
  4088                           ; BSR set to: 14
  4089                           ;encoders.c: 27: INTCON3bits.INT1IP = 0;
  4090  0124EA  9CF0               	bcf	intcon3,6,c	;volatile
  4091                           
  4092                           ; BSR set to: 14
  4093                           ;encoders.c: 28: INTCON3bits.INT1IF = 0;
  4094  0124EC  90F0               	bcf	intcon3,0,c	;volatile
  4095                           
  4096                           ; BSR set to: 14
  4097                           ;encoders.c: 29: INTCON3bits.INT1IE = 1;
  4098  0124EE  86F0               	bsf	intcon3,3,c	;volatile
  4099                           
  4100                           ; BSR set to: 14
  4101                           ;encoders.c: 32: INTCON2bits.INTEDG3 = 1;
  4102  0124F0  86F1               	bsf	intcon2,3,c	;volatile
  4103                           
  4104                           ; BSR set to: 14
  4105                           ;encoders.c: 33: INTCON2bits.INT3IP = 0;
  4106  0124F2  92F1               	bcf	intcon2,1,c	;volatile
  4107                           
  4108                           ; BSR set to: 14
  4109                           ;encoders.c: 34: INTCON3bits.INT3IF = 0;
  4110  0124F4  94F0               	bcf	intcon3,2,c	;volatile
  4111                           
  4112                           ; BSR set to: 14
  4113                           ;encoders.c: 35: INTCON3bits.INT3IE = 1;
  4114  0124F6  8AF0               	bsf	intcon3,5,c	;volatile
  4115                           
  4116                           ; BSR set to: 14
  4117  0124F8  0012               	return		;funcret
  4118  0124FA                     __end_of_encoders_init:
  4119                           	opt stack 0
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           intcon2	equ	0xFF1
  4125                           intcon3	equ	0xFF0
  4126                           postinc0	equ	0xFEE
  4127                           wreg	equ	0xFE8
  4128                           postdec1	equ	0xFE5
  4129                           fsr1h	equ	0xFE2
  4130                           fsr1l	equ	0xFE1
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _clearMillis *****************
  4134 ;; Defined at:
  4135 ;;		line 120 in file "delays.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;		None               void
  4142 ;; Registers used:
  4143 ;;		wreg, status,2
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    3
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_init
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text16
  4164  01259C                     __ptext16:
  4165                           	opt stack 0
  4166  01259C                     _clearMillis:
  4167                           	opt stack 26
  4168                           
  4169                           ;delays.c: 122: TMR0L = 193;
  4170                           
  4171                           ; BSR set to: 14
  4172                           ;incstack = 0
  4173  01259C  0EC1               	movlw	193
  4174  01259E  6ED6               	movwf	4054,c	;volatile
  4175                           
  4176                           ;delays.c: 123: millisCount = 0;
  4177  0125A0  0E00               	movlw	0
  4178  0125A2  6E26               	movwf	_millisCount,c
  4179  0125A4  0E00               	movlw	0
  4180  0125A6  6E27               	movwf	_millisCount+1,c
  4181  0125A8  0E00               	movlw	0
  4182  0125AA  6E28               	movwf	_millisCount+2,c
  4183  0125AC  0E00               	movlw	0
  4184  0125AE  6E29               	movwf	_millisCount+3,c
  4185  0125B0  0012               	return		;funcret
  4186  0125B2                     __end_of_clearMillis:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           intcon2	equ	0xFF1
  4193                           intcon3	equ	0xFF0
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postdec1	equ	0xFE5
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           status	equ	0xFD8
  4200                           
  4201 ;; *************** function _UART_init *****************
  4202 ;; Defined at:
  4203 ;;		line 21 in file "UART.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    3
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_init
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text17
  4232  011802                     __ptext17:
  4233                           	opt stack 0
  4234  011802                     _UART_init:
  4235                           	opt stack 26
  4236                           
  4237                           ;UART.c: 43: IOLOCK = 0;
  4238                           
  4239                           ;incstack = 0
  4240  011802  9C66               	bcf	3942,6,c	;volatile
  4241                           
  4242                           ;UART.c: 45: RPINR6_7 &= 0xF6;
  4243  011804  0EF6               	movlw	246
  4244  011806  010E               	movlb	14	; () banked
  4245  011808  172D               	andwf	45,f,b	;volatile
  4246                           
  4247                           ;UART.c: 46: RPOR22_23 |= 0xF1;
  4248  01180A  0EF1               	movlw	241
  4249  01180C  010E               	movlb	14	; () banked
  4250  01180E  131D               	iorwf	29,f,b	;volatile
  4251                           
  4252                           ;UART.c: 48: RPINR4_5 &= 0xF4;
  4253  011810  0EF4               	movlw	244
  4254  011812  010E               	movlb	14	; () banked
  4255  011814  172C               	andwf	44,f,b	;volatile
  4256                           
  4257                           ;UART.c: 49: RPOR10_11 |= 0x2F;
  4258  011816  0E2F               	movlw	47
  4259  011818  010E               	movlb	14	; () banked
  4260  01181A  1317               	iorwf	23,f,b	;volatile
  4261                           
  4262                           ;UART.c: 51: RPINR0_1 &= 0xF6;
  4263  01181C  0EF6               	movlw	246
  4264  01181E  010E               	movlb	14	; () banked
  4265  011820  172A               	andwf	42,f,b	;volatile
  4266                           
  4267                           ;UART.c: 52: RPOR12_13 |= 0x3F;
  4268  011822  0E3F               	movlw	63
  4269  011824  010E               	movlb	14	; () banked
  4270  011826  1318               	iorwf	24,f,b	;volatile
  4271                           
  4272                           ; BSR set to: 14
  4273                           ;UART.c: 54: IOLOCK = 1;
  4274  011828  8C66               	bsf	3942,6,c	;volatile
  4275                           
  4276                           ; BSR set to: 14
  4277                           ;UART.c: 56: INTCONbits.GIE = 1;
  4278  01182A  8EF2               	bsf	intcon,7,c	;volatile
  4279                           
  4280                           ; BSR set to: 14
  4281                           ;UART.c: 59: INTCONbits.PEIE = 1;
  4282  01182C  8CF2               	bsf	intcon,6,c	;volatile
  4283                           
  4284                           ; BSR set to: 14
  4285                           ;UART.c: 69: SPBRG1 = 34;
  4286  01182E  0E22               	movlw	34
  4287  011830  6EAF               	movwf	4015,c	;volatile
  4288                           
  4289                           ; BSR set to: 14
  4290                           ;UART.c: 70: SPBRGH1 = 0;
  4291  011832  0E00               	movlw	0
  4292  011834  010F               	movlb	15	; () banked
  4293  011836  6F30               	movwf	48,b	;volatile
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;UART.c: 72: TXSTA1bits.BRGH = 0;
  4297  011838  94AC               	bcf	4012,2,c	;volatile
  4298                           
  4299                           ; BSR set to: 15
  4300                           ;UART.c: 74: BAUDCON1bits.ABDOVF = 0;
  4301  01183A  9E67               	bcf	3943,7,c	;volatile
  4302                           
  4303                           ; BSR set to: 15
  4304                           ;UART.c: 75: BAUDCON1bits.BRG16 = 1;
  4305  01183C  8667               	bsf	3943,3,c	;volatile
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;UART.c: 76: BAUDCON1bits.RCIDL = 0;
  4309  01183E  9C67               	bcf	3943,6,c	;volatile
  4310                           
  4311                           ; BSR set to: 15
  4312                           ;UART.c: 77: BAUDCON1bits.RXDTP = 0;
  4313  011840  9A67               	bcf	3943,5,c	;volatile
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;UART.c: 79: TXSTA1bits.SYNC = 0;
  4317  011842  98AC               	bcf	4012,4,c	;volatile
  4318                           
  4319                           ; BSR set to: 15
  4320                           ;UART.c: 80: RCSTA1bits.SPEN = 1;
  4321  011844  8EAB               	bsf	4011,7,c	;volatile
  4322                           
  4323                           ; BSR set to: 15
  4324                           ;UART.c: 81: RCSTA1bits.RX9 = 0;
  4325  011846  9CAB               	bcf	4011,6,c	;volatile
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;UART.c: 82: RCSTA1bits.CREN = 1;
  4329  011848  88AB               	bsf	4011,4,c	;volatile
  4330                           
  4331                           ; BSR set to: 15
  4332                           ;UART.c: 84: TXSTA1bits.TXEN = 1;
  4333  01184A  8AAC               	bsf	4012,5,c	;volatile
  4334                           
  4335                           ; BSR set to: 15
  4336                           ;UART.c: 85: TXSTA1bits.TX9 = 0;
  4337  01184C  9CAC               	bcf	4012,6,c	;volatile
  4338                           
  4339                           ; BSR set to: 15
  4340                           ;UART.c: 88: TX1IE = 0;
  4341  01184E  989D               	bcf	3997,4,c	;volatile
  4342                           
  4343                           ; BSR set to: 15
  4344                           ;UART.c: 89: RC1IE = 1;
  4345  011850  8A9D               	bsf	3997,5,c	;volatile
  4346                           
  4347                           ; BSR set to: 15
  4348                           ;UART.c: 99: SPBRG2 = 34;
  4349  011852  0E22               	movlw	34
  4350  011854  010F               	movlb	15	; () banked
  4351  011856  6F1F               	movwf	31,b	;volatile
  4352                           
  4353                           ; BSR set to: 15
  4354                           ;UART.c: 100: SPBRGH2 = 0;
  4355  011858  0E00               	movlw	0
  4356  01185A  010F               	movlb	15	; () banked
  4357  01185C  6F20               	movwf	32,b	;volatile
  4358                           
  4359                           ; BSR set to: 15
  4360                           ;UART.c: 102: TXSTA2bits.BRGH = 0;
  4361  01185E  010F               	movlb	15	; () banked
  4362  011860  9532               	bcf	50,2,b	;volatile
  4363                           
  4364                           ; BSR set to: 15
  4365                           ;UART.c: 104: BAUDCON2bits.ABDOVF = 0;
  4366  011862  010F               	movlb	15	; () banked
  4367  011864  9F31               	bcf	49,7,b	;volatile
  4368                           
  4369                           ; BSR set to: 15
  4370                           ;UART.c: 105: BAUDCON2bits.BRG16 = 1;
  4371  011866  010F               	movlb	15	; () banked
  4372  011868  8731               	bsf	49,3,b	;volatile
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;UART.c: 106: BAUDCON2bits.RCIDL = 0;
  4376  01186A  010F               	movlb	15	; () banked
  4377  01186C  9D31               	bcf	49,6,b	;volatile
  4378                           
  4379                           ; BSR set to: 15
  4380                           ;UART.c: 107: BAUDCON2bits.RXDTP = 0;
  4381  01186E  010F               	movlb	15	; () banked
  4382  011870  9B31               	bcf	49,5,b	;volatile
  4383                           
  4384                           ; BSR set to: 15
  4385                           ;UART.c: 109: TXSTA2bits.SYNC = 0;
  4386  011872  010F               	movlb	15	; () banked
  4387  011874  9932               	bcf	50,4,b	;volatile
  4388                           
  4389                           ; BSR set to: 15
  4390                           ;UART.c: 110: RCSTA2bits.SPEN = 1;
  4391  011876  010F               	movlb	15	; () banked
  4392  011878  8F33               	bsf	51,7,b	;volatile
  4393                           
  4394                           ; BSR set to: 15
  4395                           ;UART.c: 111: RCSTA2bits.RX9 = 0;
  4396  01187A  010F               	movlb	15	; () banked
  4397  01187C  9D33               	bcf	51,6,b	;volatile
  4398                           
  4399                           ; BSR set to: 15
  4400                           ;UART.c: 112: RCSTA2bits.CREN = 1;
  4401  01187E  010F               	movlb	15	; () banked
  4402  011880  8933               	bsf	51,4,b	;volatile
  4403                           
  4404                           ; BSR set to: 15
  4405                           ;UART.c: 114: TXSTA2bits.TXEN = 1;
  4406  011882  010F               	movlb	15	; () banked
  4407  011884  8B32               	bsf	50,5,b	;volatile
  4408                           
  4409                           ; BSR set to: 15
  4410                           ;UART.c: 115: TXSTA2bits.TX9 = 0;
  4411  011886  010F               	movlb	15	; () banked
  4412  011888  9D32               	bcf	50,6,b	;volatile
  4413                           
  4414                           ; BSR set to: 15
  4415                           ;UART.c: 118: TX2IE = 0;
  4416  01188A  98A3               	bcf	4003,4,c	;volatile
  4417                           
  4418                           ; BSR set to: 15
  4419                           ;UART.c: 119: RC2IE = 1;
  4420  01188C  8AA3               	bsf	4003,5,c	;volatile
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;UART.c: 129: SPBRG3 = 34;
  4424  01188E  0E22               	movlw	34
  4425  011890  010F               	movlb	15	; () banked
  4426  011892  6F2B               	movwf	43,b	;volatile
  4427                           
  4428                           ; BSR set to: 15
  4429                           ;UART.c: 130: SPBRGH3 = 0;
  4430  011894  0E00               	movlw	0
  4431  011896  010F               	movlb	15	; () banked
  4432  011898  6F2C               	movwf	44,b	;volatile
  4433                           
  4434                           ; BSR set to: 15
  4435                           ;UART.c: 132: TXSTA3bits.BRGH = 0;
  4436  01189A  010F               	movlb	15	; () banked
  4437  01189C  952E               	bcf	46,2,b	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;UART.c: 134: BAUDCON3bits.ABDOVF = 0;
  4441  01189E  010F               	movlb	15	; () banked
  4442  0118A0  9F2D               	bcf	45,7,b	;volatile
  4443                           
  4444                           ; BSR set to: 15
  4445                           ;UART.c: 135: BAUDCON3bits.BRG16 = 1;
  4446  0118A2  010F               	movlb	15	; () banked
  4447  0118A4  872D               	bsf	45,3,b	;volatile
  4448                           
  4449                           ; BSR set to: 15
  4450                           ;UART.c: 136: BAUDCON3bits.RCIDL = 0;
  4451  0118A6  010F               	movlb	15	; () banked
  4452  0118A8  9D2D               	bcf	45,6,b	;volatile
  4453                           
  4454                           ; BSR set to: 15
  4455                           ;UART.c: 137: BAUDCON3bits.RXDTP = 0;
  4456  0118AA  010F               	movlb	15	; () banked
  4457  0118AC  9B2D               	bcf	45,5,b	;volatile
  4458                           
  4459                           ; BSR set to: 15
  4460                           ;UART.c: 139: TXSTA3bits.SYNC = 0;
  4461  0118AE  010F               	movlb	15	; () banked
  4462  0118B0  992E               	bcf	46,4,b	;volatile
  4463                           
  4464                           ; BSR set to: 15
  4465                           ;UART.c: 140: RCSTA3bits.SPEN = 1;
  4466  0118B2  010F               	movlb	15	; () banked
  4467  0118B4  8F2F               	bsf	47,7,b	;volatile
  4468                           
  4469                           ; BSR set to: 15
  4470                           ;UART.c: 141: RCSTA3bits.RX9 = 0;
  4471  0118B6  010F               	movlb	15	; () banked
  4472  0118B8  9D2F               	bcf	47,6,b	;volatile
  4473                           
  4474                           ; BSR set to: 15
  4475                           ;UART.c: 142: RCSTA3bits.CREN = 1;
  4476  0118BA  010F               	movlb	15	; () banked
  4477  0118BC  892F               	bsf	47,4,b	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480                           ;UART.c: 144: TXSTA3bits.TXEN = 1;
  4481  0118BE  010F               	movlb	15	; () banked
  4482  0118C0  8B2E               	bsf	46,5,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;UART.c: 145: TXSTA3bits.TX9 = 0;
  4486  0118C2  010F               	movlb	15	; () banked
  4487  0118C4  9D2E               	bcf	46,6,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;UART.c: 147: TX3IE = 0;
  4491  0118C6  9861               	bcf	3937,4,c	;volatile
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;UART.c: 148: RC3IE = 1;
  4495  0118C8  8A61               	bsf	3937,5,c	;volatile
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;UART.c: 158: TRISDbits.TRISD4 = 1;
  4499  0118CA  8895               	bsf	3989,4,c	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;UART.c: 159: TRISDbits.TRISD2 = 0;
  4503  0118CC  9495               	bcf	3989,2,c	;volatile
  4504                           
  4505                           ; BSR set to: 15
  4506                           ;UART.c: 162: SPBRG4 = 34;
  4507  0118CE  0E22               	movlw	34
  4508  0118D0  010E               	movlb	14	; () banked
  4509  0118D2  6FFB               	movwf	251,b	;volatile
  4510                           
  4511                           ; BSR set to: 14
  4512                           ;UART.c: 163: SPBRGH4 = 0;
  4513  0118D4  0E00               	movlw	0
  4514  0118D6  010E               	movlb	14	; () banked
  4515  0118D8  6FFC               	movwf	252,b	;volatile
  4516                           
  4517                           ; BSR set to: 14
  4518                           ;UART.c: 165: TXSTA4bits.BRGH = 0;
  4519  0118DA  010E               	movlb	14	; () banked
  4520  0118DC  95FE               	bcf	254,2,b	;volatile
  4521                           
  4522                           ; BSR set to: 14
  4523                           ;UART.c: 167: BAUDCON4bits.ABDOVF = 0;
  4524  0118DE  010E               	movlb	14	; () banked
  4525  0118E0  9FFD               	bcf	253,7,b	;volatile
  4526                           
  4527                           ; BSR set to: 14
  4528                           ;UART.c: 168: BAUDCON4bits.BRG16 = 1;
  4529  0118E2  010E               	movlb	14	; () banked
  4530  0118E4  87FD               	bsf	253,3,b	;volatile
  4531                           
  4532                           ; BSR set to: 14
  4533                           ;UART.c: 169: BAUDCON4bits.RCIDL = 0;
  4534  0118E6  010E               	movlb	14	; () banked
  4535  0118E8  9DFD               	bcf	253,6,b	;volatile
  4536                           
  4537                           ; BSR set to: 14
  4538                           ;UART.c: 170: BAUDCON4bits.RXDTP = 0;
  4539  0118EA  010E               	movlb	14	; () banked
  4540  0118EC  9BFD               	bcf	253,5,b	;volatile
  4541                           
  4542                           ; BSR set to: 14
  4543                           ;UART.c: 172: TXSTA4bits.SYNC = 0;
  4544  0118EE  010E               	movlb	14	; () banked
  4545  0118F0  99FE               	bcf	254,4,b	;volatile
  4546                           
  4547                           ; BSR set to: 14
  4548                           ;UART.c: 173: RCSTA4bits.SPEN = 1;
  4549  0118F2  010E               	movlb	14	; () banked
  4550  0118F4  8FFF               	bsf	255,7,b	;volatile
  4551                           
  4552                           ; BSR set to: 14
  4553                           ;UART.c: 174: RCSTA4bits.RX9 = 0;
  4554  0118F6  010E               	movlb	14	; () banked
  4555  0118F8  9DFF               	bcf	255,6,b	;volatile
  4556                           
  4557                           ; BSR set to: 14
  4558                           ;UART.c: 175: RCSTA4bits.CREN = 1;
  4559  0118FA  010E               	movlb	14	; () banked
  4560  0118FC  89FF               	bsf	255,4,b	;volatile
  4561                           
  4562                           ; BSR set to: 14
  4563                           ;UART.c: 177: TXSTA4bits.TXEN = 1;
  4564  0118FE  010E               	movlb	14	; () banked
  4565  011900  8BFE               	bsf	254,5,b	;volatile
  4566                           
  4567                           ; BSR set to: 14
  4568                           ;UART.c: 178: TXSTA4bits.TX9 = 0;
  4569  011902  010E               	movlb	14	; () banked
  4570  011904  9DFE               	bcf	254,6,b	;volatile
  4571                           
  4572                           ; BSR set to: 14
  4573                           ;UART.c: 181: TX4IE = 0;
  4574  011906  9C61               	bcf	3937,6,c	;volatile
  4575                           
  4576                           ; BSR set to: 14
  4577                           ;UART.c: 182: RC4IE = 1;
  4578  011908  8E61               	bsf	3937,7,c	;volatile
  4579                           
  4580                           ; BSR set to: 14
  4581  01190A  0012               	return		;funcret
  4582  01190C                     __end_of_UART_init:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           intcon3	equ	0xFF0
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _LCD_init4bit *****************
  4599 ;; Defined at:
  4600 ;;		line 47 in file "LCD.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;		None               void
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    5
  4621 ;; This function calls:
  4622 ;;		_delay_init
  4623 ;;		_delay_ms
  4624 ;;		_delay_us
  4625 ;; This function is called by:
  4626 ;;		_init
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text18
  4631  0106C2                     __ptext18:
  4632                           	opt stack 0
  4633  0106C2                     _LCD_init4bit:
  4634                           	opt stack 24
  4635                           
  4636                           ;LCD.c: 50: mode = 1;
  4637                           
  4638                           ; BSR set to: 14
  4639                           ;incstack = 0
  4640  0106C2  0E01               	movlw	1
  4641  0106C4  6E39               	movwf	_mode,c	;volatile
  4642                           
  4643                           ;LCD.c: 52: ANSEL21 = 0;
  4644  0106C6  010E               	movlb	14	; () banked
  4645  0106C8  9B45               	bcf	69,5,b	;volatile
  4646                           
  4647                           ; BSR set to: 14
  4648                           ;LCD.c: 53: ANSEL6 = 0;
  4649  0106CA  010E               	movlb	14	; () banked
  4650  0106CC  9D47               	bcf	71,6,b	;volatile
  4651                           
  4652                           ; BSR set to: 14
  4653                           ;LCD.c: 54: ANSEL11 = 0;
  4654  0106CE  010E               	movlb	14	; () banked
  4655  0106D0  9746               	bcf	70,3,b	;volatile
  4656                           
  4657                           ; BSR set to: 14
  4658                           ;LCD.c: 55: ANSEL10 = 0;
  4659  0106D2  010E               	movlb	14	; () banked
  4660  0106D4  9546               	bcf	70,2,b	;volatile
  4661                           
  4662                           ; BSR set to: 14
  4663                           ;LCD.c: 56: ANSEL9 = 0;
  4664  0106D6  010E               	movlb	14	; () banked
  4665  0106D8  9346               	bcf	70,1,b	;volatile
  4666                           
  4667                           ; BSR set to: 14
  4668                           ;LCD.c: 58: MEMCONbits.EBDIS = 1;
  4669  0106DA  010E               	movlb	14	; () banked
  4670  0106DC  8FE3               	bsf	227,7,b	;volatile
  4671                           
  4672                           ; BSR set to: 14
  4673                           ;LCD.c: 59: PSPCONbits.PSPMODE = 0;
  4674  0106DE  98A7               	bcf	4007,4,c	;volatile
  4675                           
  4676                           ; BSR set to: 14
  4677                           ;LCD.c: 60: LCDMD = 0;
  4678  0106E0  010E               	movlb	14	; () banked
  4679  0106E2  97F1               	bcf	241,3,b	;volatile
  4680                           
  4681                           ; BSR set to: 14
  4682                           ;LCD.c: 61: LCDCONbits.WERR = 0;
  4683  0106E4  010E               	movlb	14	; () banked
  4684  0106E6  9BD9               	bcf	217,5,b	;volatile
  4685                           
  4686                           ; BSR set to: 14
  4687                           ;LCD.c: 62: CPEN = 0;
  4688  0106E8  010E               	movlb	14	; () banked
  4689  0106EA  9FD8               	bcf	216,7,b	;volatile
  4690                           
  4691                           ; BSR set to: 14
  4692                           ;LCD.c: 63: LCDA = 0;
  4693  0106EC  010E               	movlb	14	; () banked
  4694  0106EE  9BDA               	bcf	218,5,b	;volatile
  4695                           
  4696                           ; BSR set to: 14
  4697                           ;LCD.c: 65: PORTEbits.RE2 = 0;
  4698  0106F0  9484               	bcf	3972,2,c	;volatile
  4699                           
  4700                           ; BSR set to: 14
  4701                           ;LCD.c: 66: PORTEbits.RE0 = 0;
  4702  0106F2  9084               	bcf	3972,0,c	;volatile
  4703                           
  4704                           ; BSR set to: 14
  4705                           ;LCD.c: 67: PORTEbits.RE1 = 0;
  4706  0106F4  9284               	bcf	3972,1,c	;volatile
  4707                           
  4708                           ; BSR set to: 14
  4709                           ;LCD.c: 68: PORTHbits.RH5 = 0;
  4710  0106F6  9A87               	bcf	3975,5,c	;volatile
  4711                           
  4712                           ; BSR set to: 14
  4713                           ;LCD.c: 70: PORTEbits.RE4 = 0;
  4714  0106F8  9884               	bcf	3972,4,c	;volatile
  4715                           
  4716                           ; BSR set to: 14
  4717                           ;LCD.c: 71: PORTDbits.RD0 = 0;
  4718  0106FA  9083               	bcf	3971,0,c	;volatile
  4719                           
  4720                           ; BSR set to: 14
  4721                           ;LCD.c: 72: PORTGbits.RG7 = 0;
  4722  0106FC  9E86               	bcf	3974,7,c	;volatile
  4723                           
  4724                           ; BSR set to: 14
  4725                           ;LCD.c: 76: TRISDbits.TRISD0 = 0;
  4726  0106FE  9095               	bcf	3989,0,c	;volatile
  4727                           
  4728                           ; BSR set to: 14
  4729                           ;LCD.c: 77: TRISEbits.TRISE0 = 0;
  4730  010700  9096               	bcf	3990,0,c	;volatile
  4731                           
  4732                           ; BSR set to: 14
  4733                           ;LCD.c: 78: TRISEbits.TRISE1 = 0;
  4734  010702  9296               	bcf	3990,1,c	;volatile
  4735                           
  4736                           ; BSR set to: 14
  4737                           ;LCD.c: 79: TRISEbits.TRISE2 = 0;
  4738  010704  9496               	bcf	3990,2,c	;volatile
  4739                           
  4740                           ; BSR set to: 14
  4741                           ;LCD.c: 80: TRISEbits.TRISE3 = 0;
  4742  010706  9696               	bcf	3990,3,c	;volatile
  4743                           
  4744                           ; BSR set to: 14
  4745                           ;LCD.c: 81: TRISEbits.TRISE4 = 0;
  4746  010708  9896               	bcf	3990,4,c	;volatile
  4747                           
  4748                           ; BSR set to: 14
  4749                           ;LCD.c: 82: TRISHbits.TRISH5 = 0;
  4750  01070A  9A99               	bcf	3993,5,c	;volatile
  4751                           
  4752                           ; BSR set to: 14
  4753                           ;LCD.c: 84: delay_init();
  4754  01070C  EC23  F092         	call	_delay_init	;wreg free
  4755                           
  4756                           ;LCD.c: 85: delay_ms(100);
  4757  010710  0E64               	movlw	100
  4758  010712  0100               	movlb	0	; () banked
  4759  010714  6F64               	movwf	delay_ms@x& (0+255),b
  4760  010716  0E00               	movlw	0
  4761  010718  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  4762  01071A  0E00               	movlw	0
  4763  01071C  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  4764  01071E  0E00               	movlw	0
  4765  010720  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  4766  010722  EC0A  F091         	call	_delay_ms	;wreg free
  4767                           
  4768                           ;LCD.c: 87: PORTDbits.RD0 = 0;
  4769  010726  9083               	bcf	3971,0,c	;volatile
  4770                           
  4771                           ;LCD.c: 88: PORTGbits.RG7 = 0;
  4772  010728  9E86               	bcf	3974,7,c	;volatile
  4773                           
  4774                           ;LCD.c: 91: delay_us(40);;
  4775  01072A  0E28               	movlw	40
  4776  01072C  0100               	movlb	0	; () banked
  4777  01072E  6F60               	movwf	delay_us@x& (0+255),b
  4778  010730  0E00               	movlw	0
  4779  010732  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4780  010734  0E00               	movlw	0
  4781  010736  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4782  010738  0E00               	movlw	0
  4783  01073A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4784  01073C  EC97  F091         	call	_delay_us	;wreg free
  4785                           
  4786                           ;LCD.c: 92: PORTEbits.RE4 = 1;
  4787  010740  8884               	bsf	3972,4,c	;volatile
  4788                           
  4789                           ;LCD.c: 93: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTEb
      +                          its.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4790  010742  9A87               	bcf	3975,5,c	;volatile
  4791  010744  9284               	bcf	3972,1,c	;volatile
  4792  010746  8084               	bsf	3972,0,c	;volatile
  4793  010748  8484               	bsf	3972,2,c	;volatile
  4794                           
  4795                           ;LCD.c: 94: delay_us(40);;
  4796  01074A  0E28               	movlw	40
  4797  01074C  0100               	movlb	0	; () banked
  4798  01074E  6F60               	movwf	delay_us@x& (0+255),b
  4799  010750  0E00               	movlw	0
  4800  010752  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4801  010754  0E00               	movlw	0
  4802  010756  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4803  010758  0E00               	movlw	0
  4804  01075A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4805  01075C  EC97  F091         	call	_delay_us	;wreg free
  4806                           
  4807                           ;LCD.c: 95: PORTEbits.RE4 = 0;
  4808  010760  9884               	bcf	3972,4,c	;volatile
  4809                           
  4810                           ;LCD.c: 97: delay_ms(50);
  4811  010762  0E32               	movlw	50
  4812  010764  0100               	movlb	0	; () banked
  4813  010766  6F64               	movwf	delay_ms@x& (0+255),b
  4814  010768  0E00               	movlw	0
  4815  01076A  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  4816  01076C  0E00               	movlw	0
  4817  01076E  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  4818  010770  0E00               	movlw	0
  4819  010772  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  4820  010774  EC0A  F091         	call	_delay_ms	;wreg free
  4821                           
  4822                           ;LCD.c: 100: delay_us(40);;
  4823  010778  0E28               	movlw	40
  4824  01077A  0100               	movlb	0	; () banked
  4825  01077C  6F60               	movwf	delay_us@x& (0+255),b
  4826  01077E  0E00               	movlw	0
  4827  010780  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4828  010782  0E00               	movlw	0
  4829  010784  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4830  010786  0E00               	movlw	0
  4831  010788  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4832  01078A  EC97  F091         	call	_delay_us	;wreg free
  4833                           
  4834                           ;LCD.c: 101: PORTEbits.RE4 = 1;
  4835  01078E  8884               	bsf	3972,4,c	;volatile
  4836                           
  4837                           ;LCD.c: 102: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4838  010790  9A87               	bcf	3975,5,c	;volatile
  4839  010792  9284               	bcf	3972,1,c	;volatile
  4840  010794  8084               	bsf	3972,0,c	;volatile
  4841  010796  8484               	bsf	3972,2,c	;volatile
  4842                           
  4843                           ;LCD.c: 103: delay_us(40);;
  4844  010798  0E28               	movlw	40
  4845  01079A  0100               	movlb	0	; () banked
  4846  01079C  6F60               	movwf	delay_us@x& (0+255),b
  4847  01079E  0E00               	movlw	0
  4848  0107A0  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4849  0107A2  0E00               	movlw	0
  4850  0107A4  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4851  0107A6  0E00               	movlw	0
  4852  0107A8  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4853  0107AA  EC97  F091         	call	_delay_us	;wreg free
  4854                           
  4855                           ;LCD.c: 104: PORTEbits.RE4 = 0;
  4856  0107AE  9884               	bcf	3972,4,c	;volatile
  4857                           
  4858                           ;LCD.c: 106: delay_ms(50);
  4859  0107B0  0E32               	movlw	50
  4860  0107B2  0100               	movlb	0	; () banked
  4861  0107B4  6F64               	movwf	delay_ms@x& (0+255),b
  4862  0107B6  0E00               	movlw	0
  4863  0107B8  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  4864  0107BA  0E00               	movlw	0
  4865  0107BC  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  4866  0107BE  0E00               	movlw	0
  4867  0107C0  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  4868  0107C2  EC0A  F091         	call	_delay_ms	;wreg free
  4869                           
  4870                           ;LCD.c: 109: delay_us(40);;
  4871  0107C6  0E28               	movlw	40
  4872  0107C8  0100               	movlb	0	; () banked
  4873  0107CA  6F60               	movwf	delay_us@x& (0+255),b
  4874  0107CC  0E00               	movlw	0
  4875  0107CE  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4876  0107D0  0E00               	movlw	0
  4877  0107D2  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4878  0107D4  0E00               	movlw	0
  4879  0107D6  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4880  0107D8  EC97  F091         	call	_delay_us	;wreg free
  4881                           
  4882                           ;LCD.c: 110: PORTEbits.RE4 = 1;
  4883  0107DC  8884               	bsf	3972,4,c	;volatile
  4884                           
  4885                           ;LCD.c: 111: { PORTHbits.RH5 = ((0x3 >> 3) & 1); PORTEbits.RE1 = ((0x3 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x3 >> 1) & 1); PORTEbits.RE2 = (0x3 & 1); };
  4886  0107DE  9A87               	bcf	3975,5,c	;volatile
  4887  0107E0  9284               	bcf	3972,1,c	;volatile
  4888  0107E2  8084               	bsf	3972,0,c	;volatile
  4889  0107E4  8484               	bsf	3972,2,c	;volatile
  4890                           
  4891                           ;LCD.c: 112: delay_us(40);;
  4892  0107E6  0E28               	movlw	40
  4893  0107E8  0100               	movlb	0	; () banked
  4894  0107EA  6F60               	movwf	delay_us@x& (0+255),b
  4895  0107EC  0E00               	movlw	0
  4896  0107EE  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4897  0107F0  0E00               	movlw	0
  4898  0107F2  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4899  0107F4  0E00               	movlw	0
  4900  0107F6  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4901  0107F8  EC97  F091         	call	_delay_us	;wreg free
  4902                           
  4903                           ;LCD.c: 113: PORTEbits.RE4 = 0;
  4904  0107FC  9884               	bcf	3972,4,c	;volatile
  4905                           
  4906                           ;LCD.c: 115: delay_ms(50);
  4907  0107FE  0E32               	movlw	50
  4908  010800  0100               	movlb	0	; () banked
  4909  010802  6F64               	movwf	delay_ms@x& (0+255),b
  4910  010804  0E00               	movlw	0
  4911  010806  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  4912  010808  0E00               	movlw	0
  4913  01080A  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  4914  01080C  0E00               	movlw	0
  4915  01080E  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  4916  010810  EC0A  F091         	call	_delay_ms	;wreg free
  4917                           
  4918                           ;LCD.c: 118: delay_us(40);;
  4919  010814  0E28               	movlw	40
  4920  010816  0100               	movlb	0	; () banked
  4921  010818  6F60               	movwf	delay_us@x& (0+255),b
  4922  01081A  0E00               	movlw	0
  4923  01081C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4924  01081E  0E00               	movlw	0
  4925  010820  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4926  010822  0E00               	movlw	0
  4927  010824  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4928  010826  EC97  F091         	call	_delay_us	;wreg free
  4929                           
  4930                           ;LCD.c: 119: PORTEbits.RE4 = 1;
  4931  01082A  8884               	bsf	3972,4,c	;volatile
  4932                           
  4933                           ;LCD.c: 120: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  4934  01082C  9A87               	bcf	3975,5,c	;volatile
  4935  01082E  9284               	bcf	3972,1,c	;volatile
  4936  010830  8084               	bsf	3972,0,c	;volatile
  4937  010832  9484               	bcf	3972,2,c	;volatile
  4938                           
  4939                           ;LCD.c: 121: delay_us(40);;
  4940  010834  0E28               	movlw	40
  4941  010836  0100               	movlb	0	; () banked
  4942  010838  6F60               	movwf	delay_us@x& (0+255),b
  4943  01083A  0E00               	movlw	0
  4944  01083C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4945  01083E  0E00               	movlw	0
  4946  010840  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4947  010842  0E00               	movlw	0
  4948  010844  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4949  010846  EC97  F091         	call	_delay_us	;wreg free
  4950                           
  4951                           ;LCD.c: 122: PORTEbits.RE4 = 0;
  4952  01084A  9884               	bcf	3972,4,c	;volatile
  4953                           
  4954                           ;LCD.c: 124: delay_ms(5);
  4955  01084C  0E05               	movlw	5
  4956  01084E  0100               	movlb	0	; () banked
  4957  010850  6F64               	movwf	delay_ms@x& (0+255),b
  4958  010852  0E00               	movlw	0
  4959  010854  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  4960  010856  0E00               	movlw	0
  4961  010858  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  4962  01085A  0E00               	movlw	0
  4963  01085C  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  4964  01085E  EC0A  F091         	call	_delay_ms	;wreg free
  4965                           
  4966                           ;LCD.c: 127: delay_us(40);;
  4967  010862  0E28               	movlw	40
  4968  010864  0100               	movlb	0	; () banked
  4969  010866  6F60               	movwf	delay_us@x& (0+255),b
  4970  010868  0E00               	movlw	0
  4971  01086A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4972  01086C  0E00               	movlw	0
  4973  01086E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4974  010870  0E00               	movlw	0
  4975  010872  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4976  010874  EC97  F091         	call	_delay_us	;wreg free
  4977                           
  4978                           ;LCD.c: 128: PORTEbits.RE4 = 1;
  4979  010878  8884               	bsf	3972,4,c	;volatile
  4980                           
  4981                           ;LCD.c: 129: { PORTHbits.RH5 = ((0x2 >> 3) & 1); PORTEbits.RE1 = ((0x2 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x2 >> 1) & 1); PORTEbits.RE2 = (0x2 & 1); };
  4982  01087A  9A87               	bcf	3975,5,c	;volatile
  4983  01087C  9284               	bcf	3972,1,c	;volatile
  4984  01087E  8084               	bsf	3972,0,c	;volatile
  4985  010880  9484               	bcf	3972,2,c	;volatile
  4986                           
  4987                           ;LCD.c: 130: delay_us(40);;
  4988  010882  0E28               	movlw	40
  4989  010884  0100               	movlb	0	; () banked
  4990  010886  6F60               	movwf	delay_us@x& (0+255),b
  4991  010888  0E00               	movlw	0
  4992  01088A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  4993  01088C  0E00               	movlw	0
  4994  01088E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  4995  010890  0E00               	movlw	0
  4996  010892  6F63               	movwf	(delay_us@x+3)& (0+255),b
  4997  010894  EC97  F091         	call	_delay_us	;wreg free
  4998                           
  4999                           ;LCD.c: 131: PORTEbits.RE4 = 0;
  5000  010898  9884               	bcf	3972,4,c	;volatile
  5001                           
  5002                           ;LCD.c: 133: delay_us(40);;
  5003  01089A  0E28               	movlw	40
  5004  01089C  0100               	movlb	0	; () banked
  5005  01089E  6F60               	movwf	delay_us@x& (0+255),b
  5006  0108A0  0E00               	movlw	0
  5007  0108A2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5008  0108A4  0E00               	movlw	0
  5009  0108A6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5010  0108A8  0E00               	movlw	0
  5011  0108AA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5012  0108AC  EC97  F091         	call	_delay_us	;wreg free
  5013                           
  5014                           ;LCD.c: 134: PORTEbits.RE4 = 1;
  5015  0108B0  8884               	bsf	3972,4,c	;volatile
  5016                           
  5017                           ;LCD.c: 135: { PORTHbits.RH5 = ((0x8 >> 3) & 1); PORTEbits.RE1 = ((0x8 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x8 >> 1) & 1); PORTEbits.RE2 = (0x8 & 1); };
  5018  0108B2  8A87               	bsf	3975,5,c	;volatile
  5019  0108B4  9284               	bcf	3972,1,c	;volatile
  5020  0108B6  9084               	bcf	3972,0,c	;volatile
  5021  0108B8  9484               	bcf	3972,2,c	;volatile
  5022                           
  5023                           ;LCD.c: 136: delay_us(40);;
  5024  0108BA  0E28               	movlw	40
  5025  0108BC  0100               	movlb	0	; () banked
  5026  0108BE  6F60               	movwf	delay_us@x& (0+255),b
  5027  0108C0  0E00               	movlw	0
  5028  0108C2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5029  0108C4  0E00               	movlw	0
  5030  0108C6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5031  0108C8  0E00               	movlw	0
  5032  0108CA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5033  0108CC  EC97  F091         	call	_delay_us	;wreg free
  5034                           
  5035                           ;LCD.c: 137: PORTEbits.RE4 = 0;
  5036  0108D0  9884               	bcf	3972,4,c	;volatile
  5037                           
  5038                           ;LCD.c: 140: delay_us(40);;
  5039  0108D2  0E28               	movlw	40
  5040  0108D4  0100               	movlb	0	; () banked
  5041  0108D6  6F60               	movwf	delay_us@x& (0+255),b
  5042  0108D8  0E00               	movlw	0
  5043  0108DA  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5044  0108DC  0E00               	movlw	0
  5045  0108DE  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5046  0108E0  0E00               	movlw	0
  5047  0108E2  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5048  0108E4  EC97  F091         	call	_delay_us	;wreg free
  5049                           
  5050                           ;LCD.c: 141: PORTEbits.RE4 = 1;
  5051  0108E8  8884               	bsf	3972,4,c	;volatile
  5052                           
  5053                           ;LCD.c: 142: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5054  0108EA  9A87               	bcf	3975,5,c	;volatile
  5055  0108EC  9284               	bcf	3972,1,c	;volatile
  5056  0108EE  9084               	bcf	3972,0,c	;volatile
  5057  0108F0  9484               	bcf	3972,2,c	;volatile
  5058                           
  5059                           ;LCD.c: 143: delay_us(40);;
  5060  0108F2  0E28               	movlw	40
  5061  0108F4  0100               	movlb	0	; () banked
  5062  0108F6  6F60               	movwf	delay_us@x& (0+255),b
  5063  0108F8  0E00               	movlw	0
  5064  0108FA  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5065  0108FC  0E00               	movlw	0
  5066  0108FE  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5067  010900  0E00               	movlw	0
  5068  010902  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5069  010904  EC97  F091         	call	_delay_us	;wreg free
  5070                           
  5071                           ;LCD.c: 144: PORTEbits.RE4 = 0;
  5072  010908  9884               	bcf	3972,4,c	;volatile
  5073                           
  5074                           ;LCD.c: 146: delay_us(40);;
  5075  01090A  0E28               	movlw	40
  5076  01090C  0100               	movlb	0	; () banked
  5077  01090E  6F60               	movwf	delay_us@x& (0+255),b
  5078  010910  0E00               	movlw	0
  5079  010912  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5080  010914  0E00               	movlw	0
  5081  010916  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5082  010918  0E00               	movlw	0
  5083  01091A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5084  01091C  EC97  F091         	call	_delay_us	;wreg free
  5085                           
  5086                           ;LCD.c: 147: PORTEbits.RE4 = 1;
  5087  010920  8884               	bsf	3972,4,c	;volatile
  5088                           
  5089                           ;LCD.c: 148: { PORTHbits.RH5 = ((0xF >> 3) & 1); PORTEbits.RE1 = ((0xF >> 2) & 1); PORTE
      +                          bits.RE0 = ((0xF >> 1) & 1); PORTEbits.RE2 = (0xF & 1); };
  5090  010922  8A87               	bsf	3975,5,c	;volatile
  5091  010924  8284               	bsf	3972,1,c	;volatile
  5092  010926  8084               	bsf	3972,0,c	;volatile
  5093  010928  8484               	bsf	3972,2,c	;volatile
  5094                           
  5095                           ;LCD.c: 149: delay_us(40);;
  5096  01092A  0E28               	movlw	40
  5097  01092C  0100               	movlb	0	; () banked
  5098  01092E  6F60               	movwf	delay_us@x& (0+255),b
  5099  010930  0E00               	movlw	0
  5100  010932  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5101  010934  0E00               	movlw	0
  5102  010936  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5103  010938  0E00               	movlw	0
  5104  01093A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5105  01093C  EC97  F091         	call	_delay_us	;wreg free
  5106                           
  5107                           ;LCD.c: 150: PORTEbits.RE4 = 0;
  5108  010940  9884               	bcf	3972,4,c	;volatile
  5109                           
  5110                           ;LCD.c: 153: delay_us(40);;
  5111  010942  0E28               	movlw	40
  5112  010944  0100               	movlb	0	; () banked
  5113  010946  6F60               	movwf	delay_us@x& (0+255),b
  5114  010948  0E00               	movlw	0
  5115  01094A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5116  01094C  0E00               	movlw	0
  5117  01094E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5118  010950  0E00               	movlw	0
  5119  010952  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5120  010954  EC97  F091         	call	_delay_us	;wreg free
  5121                           
  5122                           ;LCD.c: 154: PORTEbits.RE4 = 1;
  5123  010958  8884               	bsf	3972,4,c	;volatile
  5124                           
  5125                           ;LCD.c: 155: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5126  01095A  9A87               	bcf	3975,5,c	;volatile
  5127  01095C  9284               	bcf	3972,1,c	;volatile
  5128  01095E  9084               	bcf	3972,0,c	;volatile
  5129  010960  9484               	bcf	3972,2,c	;volatile
  5130                           
  5131                           ;LCD.c: 156: delay_us(40);;
  5132  010962  0E28               	movlw	40
  5133  010964  0100               	movlb	0	; () banked
  5134  010966  6F60               	movwf	delay_us@x& (0+255),b
  5135  010968  0E00               	movlw	0
  5136  01096A  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5137  01096C  0E00               	movlw	0
  5138  01096E  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5139  010970  0E00               	movlw	0
  5140  010972  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5141  010974  EC97  F091         	call	_delay_us	;wreg free
  5142                           
  5143                           ;LCD.c: 157: PORTEbits.RE4 = 0;
  5144  010978  9884               	bcf	3972,4,c	;volatile
  5145                           
  5146                           ;LCD.c: 159: delay_us(40);;
  5147  01097A  0E28               	movlw	40
  5148  01097C  0100               	movlb	0	; () banked
  5149  01097E  6F60               	movwf	delay_us@x& (0+255),b
  5150  010980  0E00               	movlw	0
  5151  010982  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5152  010984  0E00               	movlw	0
  5153  010986  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5154  010988  0E00               	movlw	0
  5155  01098A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5156  01098C  EC97  F091         	call	_delay_us	;wreg free
  5157                           
  5158                           ;LCD.c: 160: PORTEbits.RE4 = 1;
  5159  010990  8884               	bsf	3972,4,c	;volatile
  5160                           
  5161                           ;LCD.c: 161: { PORTHbits.RH5 = ((0x1 >> 3) & 1); PORTEbits.RE1 = ((0x1 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x1 >> 1) & 1); PORTEbits.RE2 = (0x1 & 1); };
  5162  010992  9A87               	bcf	3975,5,c	;volatile
  5163  010994  9284               	bcf	3972,1,c	;volatile
  5164  010996  9084               	bcf	3972,0,c	;volatile
  5165  010998  8484               	bsf	3972,2,c	;volatile
  5166                           
  5167                           ;LCD.c: 162: delay_us(40);;
  5168  01099A  0E28               	movlw	40
  5169  01099C  0100               	movlb	0	; () banked
  5170  01099E  6F60               	movwf	delay_us@x& (0+255),b
  5171  0109A0  0E00               	movlw	0
  5172  0109A2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5173  0109A4  0E00               	movlw	0
  5174  0109A6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5175  0109A8  0E00               	movlw	0
  5176  0109AA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5177  0109AC  EC97  F091         	call	_delay_us	;wreg free
  5178                           
  5179                           ;LCD.c: 163: PORTEbits.RE4 = 0;
  5180  0109B0  9884               	bcf	3972,4,c	;volatile
  5181                           
  5182                           ;LCD.c: 166: delay_us(40);;
  5183  0109B2  0E28               	movlw	40
  5184  0109B4  0100               	movlb	0	; () banked
  5185  0109B6  6F60               	movwf	delay_us@x& (0+255),b
  5186  0109B8  0E00               	movlw	0
  5187  0109BA  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5188  0109BC  0E00               	movlw	0
  5189  0109BE  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5190  0109C0  0E00               	movlw	0
  5191  0109C2  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5192  0109C4  EC97  F091         	call	_delay_us	;wreg free
  5193                           
  5194                           ;LCD.c: 167: PORTEbits.RE4 = 1;
  5195  0109C8  8884               	bsf	3972,4,c	;volatile
  5196                           
  5197                           ;LCD.c: 168: { PORTHbits.RH5 = ((0x0 >> 3) & 1); PORTEbits.RE1 = ((0x0 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x0 >> 1) & 1); PORTEbits.RE2 = (0x0 & 1); };
  5198  0109CA  9A87               	bcf	3975,5,c	;volatile
  5199  0109CC  9284               	bcf	3972,1,c	;volatile
  5200  0109CE  9084               	bcf	3972,0,c	;volatile
  5201  0109D0  9484               	bcf	3972,2,c	;volatile
  5202                           
  5203                           ;LCD.c: 169: delay_us(40);;
  5204  0109D2  0E28               	movlw	40
  5205  0109D4  0100               	movlb	0	; () banked
  5206  0109D6  6F60               	movwf	delay_us@x& (0+255),b
  5207  0109D8  0E00               	movlw	0
  5208  0109DA  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5209  0109DC  0E00               	movlw	0
  5210  0109DE  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5211  0109E0  0E00               	movlw	0
  5212  0109E2  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5213  0109E4  EC97  F091         	call	_delay_us	;wreg free
  5214                           
  5215                           ;LCD.c: 170: PORTEbits.RE4 = 0;
  5216  0109E8  9884               	bcf	3972,4,c	;volatile
  5217                           
  5218                           ;LCD.c: 172: delay_us(40);;
  5219  0109EA  0E28               	movlw	40
  5220  0109EC  0100               	movlb	0	; () banked
  5221  0109EE  6F60               	movwf	delay_us@x& (0+255),b
  5222  0109F0  0E00               	movlw	0
  5223  0109F2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5224  0109F4  0E00               	movlw	0
  5225  0109F6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5226  0109F8  0E00               	movlw	0
  5227  0109FA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5228  0109FC  EC97  F091         	call	_delay_us	;wreg free
  5229                           
  5230                           ;LCD.c: 173: PORTEbits.RE4 = 1;
  5231  010A00  8884               	bsf	3972,4,c	;volatile
  5232                           
  5233                           ;LCD.c: 174: { PORTHbits.RH5 = ((0x6 >> 3) & 1); PORTEbits.RE1 = ((0x6 >> 2) & 1); PORTE
      +                          bits.RE0 = ((0x6 >> 1) & 1); PORTEbits.RE2 = (0x6 & 1); };
  5234  010A02  9A87               	bcf	3975,5,c	;volatile
  5235  010A04  8284               	bsf	3972,1,c	;volatile
  5236  010A06  8084               	bsf	3972,0,c	;volatile
  5237  010A08  9484               	bcf	3972,2,c	;volatile
  5238                           
  5239                           ;LCD.c: 175: delay_us(40);;
  5240  010A0A  0E28               	movlw	40
  5241  010A0C  0100               	movlb	0	; () banked
  5242  010A0E  6F60               	movwf	delay_us@x& (0+255),b
  5243  010A10  0E00               	movlw	0
  5244  010A12  6F61               	movwf	(delay_us@x+1)& (0+255),b
  5245  010A14  0E00               	movlw	0
  5246  010A16  6F62               	movwf	(delay_us@x+2)& (0+255),b
  5247  010A18  0E00               	movlw	0
  5248  010A1A  6F63               	movwf	(delay_us@x+3)& (0+255),b
  5249  010A1C  EC97  F091         	call	_delay_us	;wreg free
  5250                           
  5251                           ;LCD.c: 176: PORTEbits.RE4 = 0;
  5252  010A20  9884               	bcf	3972,4,c	;volatile
  5253  010A22  0012               	return		;funcret
  5254  010A24                     __end_of_LCD_init4bit:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           intcon	equ	0xFF2
  5261                           intcon2	equ	0xFF1
  5262                           intcon3	equ	0xFF0
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           status	equ	0xFD8
  5269                           
  5270 ;; *************** function _delay_init *****************
  5271 ;; Defined at:
  5272 ;;		line 7 in file "delays.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;		None               void
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    3
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_LCD_init4bit
  5297 ;;		_LCD_init8bit
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text19
  5302  012446                     __ptext19:
  5303                           	opt stack 0
  5304  012446                     _delay_init:
  5305                           	opt stack 25
  5306                           
  5307                           ;delays.c: 9: static int config = 0;
  5308                           ;delays.c: 12: if(config == 1)
  5309                           
  5310                           ;incstack = 0
  5311  012446  0432               	decf	delay_init@config,w,c
  5312  012448  1033               	iorwf	delay_init@config+1,w,c
  5313  01244A  B4D8               	btfsc	status,2,c
  5314  01244C  0012               	return	
  5315  01244E  D001               	goto	l311
  5316                           
  5317                           ;delays.c: 13: {
  5318                           ;delays.c: 14: return;
  5319  012450  0012               	return	
  5320  012452                     l311:
  5321                           
  5322                           ;delays.c: 15: }
  5323                           ;delays.c: 18: TMR3CS0 = 1;
  5324  012452  8CB1               	bsf	4017,6,c	;volatile
  5325                           
  5326                           ;delays.c: 19: TMR3CS1 = 1;
  5327  012454  8EB1               	bsf	4017,7,c	;volatile
  5328                           
  5329                           ;delays.c: 22: T3CKPS0 = 0;
  5330  012456  98B1               	bcf	4017,4,c	;volatile
  5331                           
  5332                           ;delays.c: 23: T3CKPS1 = 0;
  5333  012458  9AB1               	bcf	4017,5,c	;volatile
  5334                           
  5335                           ;delays.c: 26: RD163 = 1;
  5336  01245A  8EB1               	bsf	4017,7,c	;volatile
  5337                           
  5338                           ;delays.c: 29: TMR3IE = 0;
  5339  01245C  92A0               	bcf	4000,1,c	;volatile
  5340                           
  5341                           ;delays.c: 32: TMR3ON = 1;
  5342  01245E  80B1               	bsf	4017,0,c	;volatile
  5343                           
  5344                           ;delays.c: 34: config = 1;
  5345  012460  0E00               	movlw	0
  5346  012462  6E33               	movwf	delay_init@config+1,c
  5347  012464  0E01               	movlw	1
  5348  012466  6E32               	movwf	delay_init@config,c
  5349                           
  5350                           ;delays.c: 42: T0CON = 0b11010111;
  5351  012468  0ED7               	movlw	215
  5352  01246A  6ED5               	movwf	4053,c	;volatile
  5353                           
  5354                           ;delays.c: 43: TMR0IP = 1;
  5355  01246C  84F1               	bsf	intcon2,2,c	;volatile
  5356                           
  5357                           ;delays.c: 44: TMR0IF = 0;
  5358  01246E  94F2               	bcf	intcon,2,c	;volatile
  5359                           
  5360                           ;delays.c: 45: TMR0IE = 1;
  5361  012470  8AF2               	bsf	intcon,5,c	;volatile
  5362                           
  5363                           ;delays.c: 46: TMR0L = 193;
  5364  012472  0EC1               	movlw	193
  5365  012474  6ED6               	movwf	4054,c	;volatile
  5366  012476  0012               	return		;funcret
  5367  012478                     __end_of_delay_init:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           intcon	equ	0xFF2
  5374                           intcon2	equ	0xFF1
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postdec1	equ	0xFE5
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function _I2C_init *****************
  5384 ;; Defined at:
  5385 ;;		line 30 in file "I2C.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  channel         1    wreg     unsigned char 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  channel         1   31[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  2  154[None  ] int 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;Total ram usage:        1 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    3
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_init
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text20
  5414  01236C                     __ptext20:
  5415                           	opt stack 0
  5416  01236C                     _I2C_init:
  5417                           	opt stack 26
  5418                           
  5419                           ;incstack = 0
  5420                           ;I2C_init@channel stored from wreg
  5421  01236C  6E20               	movwf	I2C_init@channel,c
  5422                           
  5423                           ;I2C.c: 32: if(channel == 1) {
  5424  01236E  0420               	decf	I2C_init@channel,w,c
  5425  012370  A4D8               	btfss	status,2,c
  5426  012372  D00A               	goto	l5498
  5427                           
  5428                           ;I2C.c: 34: SSP1STAT = 0x80;
  5429  012374  0E80               	movlw	128
  5430  012376  6EC7               	movwf	4039,c	;volatile
  5431                           
  5432                           ;I2C.c: 35: SSP1CON1 = 0x08;
  5433  012378  0E08               	movlw	8
  5434  01237A  6EC6               	movwf	4038,c	;volatile
  5435                           
  5436                           ;I2C.c: 37: SSP1CON3 = 0x40;
  5437  01237C  0E40               	movlw	64
  5438  01237E  6E69               	movwf	3945,c	;volatile
  5439                           
  5440                           ;I2C.c: 38: SSP1ADD = 0x9F;
  5441  012380  0E9F               	movlw	159
  5442  012382  6EC8               	movwf	4040,c	;volatile
  5443                           
  5444                           ;I2C.c: 40: SSP1CON1bits.SSPEN = 1;
  5445  012384  8AC6               	bsf	4038,5,c	;volatile
  5446                           
  5447                           ;I2C.c: 41: }
  5448  012386  0012               	return	
  5449  012388                     l5498:
  5450                           
  5451                           ;I2C.c: 42: else {
  5452                           ;I2C.c: 44: SSP2STAT = 0x80;
  5453  012388  0E80               	movlw	128
  5454  01238A  010F               	movlb	15	; () banked
  5455  01238C  6F1A               	movwf	26,b	;volatile
  5456                           
  5457                           ;I2C.c: 45: SSP2CON1 = 0x08;
  5458  01238E  0E08               	movlw	8
  5459  012390  010F               	movlb	15	; () banked
  5460  012392  6F19               	movwf	25,b	;volatile
  5461                           
  5462                           ;I2C.c: 47: SSP2CON3 = 0x40;
  5463  012394  0E40               	movlw	64
  5464  012396  010F               	movlb	15	; () banked
  5465  012398  6F39               	movwf	57,b	;volatile
  5466                           
  5467                           ;I2C.c: 48: SSP2ADD = 0x9F;
  5468  01239A  0E9F               	movlw	159
  5469  01239C  010F               	movlb	15	; () banked
  5470  01239E  6F02               	movwf	2,b	;volatile
  5471                           
  5472                           ; BSR set to: 15
  5473                           ;I2C.c: 50: SSP2CON1bits.SSPEN = 1;
  5474  0123A0  010F               	movlb	15	; () banked
  5475  0123A2  8B19               	bsf	25,5,b	;volatile
  5476  0123A4  0012               	return	
  5477                           
  5478                           ; BSR set to: 15
  5479  0123A6  0012               	return		;funcret
  5480  0123A8                     __end_of_I2C_init:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           intcon	equ	0xFF2
  5487                           intcon2	equ	0xFF1
  5488                           intcon3	equ	0xFF0
  5489                           postinc0	equ	0xFEE
  5490                           wreg	equ	0xFE8
  5491                           postdec1	equ	0xFE5
  5492                           fsr1h	equ	0xFE2
  5493                           fsr1l	equ	0xFE1
  5494                           status	equ	0xFD8
  5495                           
  5496 ;; *************** function _competitionMode *****************
  5497 ;; Defined at:
  5498 ;;		line 63 in file "main.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;		None               void
  5505 ;; Registers used:
  5506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    7
  5519 ;; This function calls:
  5520 ;;		_LCD_printString
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text21
  5527  012568                     __ptext21:
  5528                           	opt stack 0
  5529  012568                     _competitionMode:
  5530                           	opt stack 23
  5531                           
  5532                           ;main.c: 65: LCD_printString(0,0, "We are\nwinning!");
  5533                           
  5534                           ;incstack = 0
  5535  012568  0E00               	movlw	0
  5536  01256A  0100               	movlb	0	; () banked
  5537  01256C  6F78               	movwf	LCD_printString@y& (0+255),b
  5538  01256E  0EC1               	movlw	low STR_5
  5539  012570  0100               	movlb	0	; () banked
  5540  012572  6F79               	movwf	LCD_printString@input& (0+255),b
  5541  012574  0EFF               	movlw	high STR_5
  5542  012576  0100               	movlb	0	; () banked
  5543  012578  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  5544  01257A  0E00               	movlw	0
  5545  01257C  EC00  F080         	call	_LCD_printString
  5546  012580  D7FF               	goto	l242
  5547  012582  0012               	return		;funcret
  5548  012584                     __end_of_competitionMode:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           intcon	equ	0xFF2
  5555                           intcon2	equ	0xFF1
  5556                           intcon3	equ	0xFF0
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _compass_pixyInit *****************
  5565 ;; Defined at:
  5566 ;;		line 70 in file "compass.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  data            4    8[BANK0 ] unsigned char [4]
  5571 ;;  retry           1   14[BANK0 ] unsigned char 
  5572 ;;  retVal          1   13[BANK0 ] char 
  5573 ;;  data            1   12[BANK0 ] char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      char 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;Total ram usage:        7 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    4
  5590 ;; This function calls:
  5591 ;;		_I2C_write
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text22
  5598  011FEE                     __ptext22:
  5599                           	opt stack 0
  5600  011FEE                     _compass_pixyInit:
  5601                           	opt stack 26
  5602                           
  5603                           ;compass.c: 74: signed char retVal, data;
  5604                           ;compass.c: 75: unsigned char retry = 3;
  5605                           
  5606                           ;incstack = 0
  5607  011FEE  0E03               	movlw	3
  5608  011FF0  0100               	movlb	0	; () banked
  5609  011FF2  6F6E               	movwf	compass_pixyInit@retry& (0+255),b
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;compass.c: 77: data = SSP1BUF;
  5613  011FF4  CFC9 F06C          	movff	4041,compass_pixyInit@data	;volatile
  5614  011FF8  D000               	goto	l7564
  5615  011FFA                     l7564:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;compass.c: 80: unsigned char data[] = {
  5619                           ;compass.c: 81: 0x00,
  5620                           ;compass.c: 82: 0x50,
  5621                           ;compass.c: 83: 0x20,
  5622                           ;compass.c: 84: 0x00
  5623                           ;compass.c: 85: };
  5624  011FFA  C03A  F068         	movff	compass_pixyInit@F16129,compass_pixyInit@data_3283
  5625  011FFE  C03B  F069         	movff	compass_pixyInit@F16129+1,compass_pixyInit@data_3283+1
  5626  012002  C03C  F06A         	movff	compass_pixyInit@F16129+2,compass_pixyInit@data_3283+2
  5627  012006  C03D  F06B         	movff	compass_pixyInit@F16129+3,compass_pixyInit@data_3283+3
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;compass.c: 86: retVal = I2C_write(1, 0x3C, data, 4);
  5631  01200A  0E3C               	movlw	60
  5632  01200C  0100               	movlb	0	; () banked
  5633  01200E  6F60               	movwf	I2C_write@address& (0+255),b
  5634  012010  0E68               	movlw	low compass_pixyInit@data_3283
  5635  012012  0100               	movlb	0	; () banked
  5636  012014  6F61               	movwf	I2C_write@data& (0+255),b
  5637  012016  0E00               	movlw	high compass_pixyInit@data_3283
  5638  012018  0100               	movlb	0	; () banked
  5639  01201A  6F62               	movwf	(I2C_write@data+1)& (0+255),b
  5640  01201C  0E04               	movlw	4
  5641  01201E  0100               	movlb	0	; () banked
  5642  012020  6F63               	movwf	I2C_write@length& (0+255),b
  5643  012022  0E01               	movlw	1
  5644  012024  EC6F  F08B         	call	_I2C_write
  5645  012028  0100               	movlb	0	; () banked
  5646  01202A  6F6D               	movwf	compass_pixyInit@retVal& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;compass.c: 87: if(retVal == -3) {
  5650  01202C  0EFD               	movlw	253
  5651  01202E  0100               	movlb	0	; () banked
  5652  012030  196D               	xorwf	compass_pixyInit@retVal& (0+255),w,b
  5653  012032  A4D8               	btfss	status,2,c
  5654  012034  D002               	goto	l7572
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;compass.c: 88: SSP1CON1bits.WCOL=0;
  5658  012036  9EC6               	bcf	4038,7,c	;volatile
  5659  012038  D000               	goto	l7572
  5660  01203A                     l7572:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;compass.c: 89: }
  5664                           ;compass.c: 90: retry--;
  5665  01203A  0100               	movlb	0	; () banked
  5666  01203C  076E               	decf	compass_pixyInit@retry& (0+255),f,b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;compass.c: 91: } while(retVal!=0 && retry > 0);
  5670  01203E  0100               	movlb	0	; () banked
  5671  012040  516D               	movf	compass_pixyInit@retVal& (0+255),w,b
  5672  012042  0100               	movlb	0	; () banked
  5673  012044  B4D8               	btfsc	status,2,c
  5674  012046  D007               	goto	l7578
  5675                           
  5676                           ; BSR set to: 0
  5677  012048  0100               	movlb	0	; () banked
  5678  01204A  516E               	movf	compass_pixyInit@retry& (0+255),w,b
  5679  01204C  0100               	movlb	0	; () banked
  5680  01204E  B4D8               	btfsc	status,2,c
  5681  012050  D002               	goto	l7578
  5682  012052  D7D3               	goto	l7564
  5683                           
  5684                           ; BSR set to: 0
  5685  012054  D000               	goto	l7578
  5686  012056                     l7578:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;compass.c: 92: if(retry == 0) {
  5690  012056  0100               	movlb	0	; () banked
  5691  012058  516E               	movf	compass_pixyInit@retry& (0+255),w,b
  5692  01205A  0100               	movlb	0	; () banked
  5693  01205C  A4D8               	btfss	status,2,c
  5694  01205E  D002               	goto	l7586
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;compass.c: 93: return -1;
  5698  012060  0EFF               	movlw	255
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;compass.c: 94: }
  5702                           
  5703                           ; BSR set to: 0
  5704  012062  0012               	return	
  5705  012064                     l7586:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;compass.c: 95: else
  5709                           ;compass.c: 96: return 0;
  5710  012064  0E00               	movlw	0
  5711                           
  5712                           ; BSR set to: 0
  5713  012066  0012               	return	
  5714                           
  5715                           ; BSR set to: 0
  5716                           
  5717                           ; BSR set to: 0
  5718  012068  0012               	return		;funcret
  5719  01206A                     __end_of_compass_pixyInit:
  5720                           	opt stack 0
  5721                           tblptru	equ	0xFF8
  5722                           tblptrh	equ	0xFF7
  5723                           tblptrl	equ	0xFF6
  5724                           tablat	equ	0xFF5
  5725                           intcon	equ	0xFF2
  5726                           intcon2	equ	0xFF1
  5727                           intcon3	equ	0xFF0
  5728                           postinc0	equ	0xFEE
  5729                           wreg	equ	0xFE8
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           status	equ	0xFD8
  5734                           
  5735 ;; *************** function _I2C_write *****************
  5736 ;; Defined at:
  5737 ;;		line 64 in file "I2C.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  channel         1    wreg     unsigned char 
  5740 ;;  address         1    0[BANK0 ] unsigned char 
  5741 ;;  data            2    1[BANK0 ] PTR unsigned char 
  5742 ;;		 -> compass_pixyInit@data_3283(4), 
  5743 ;;  length          1    3[BANK0 ] unsigned char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  channel         1    4[BANK0 ] unsigned char 
  5746 ;;  x               1    6[BANK0 ] unsigned char 
  5747 ;;  x               1    5[BANK0 ] unsigned char 
  5748 ;;  retry           1    7[BANK0 ] unsigned char 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      char 
  5751 ;; Registers used:
  5752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;Total ram usage:        8 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    3
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_compass_pixyInit
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text23
  5773  0116DE                     __ptext23:
  5774                           	opt stack 0
  5775  0116DE                     _I2C_write:
  5776                           	opt stack 26
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;incstack = 0
  5780                           ;I2C_write@channel stored from wreg
  5781  0116DE  0100               	movlb	0	; () banked
  5782  0116E0  6F64               	movwf	I2C_write@channel& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;I2C.c: 67: unsigned char retry = 3;
  5786  0116E2  0E03               	movlw	3
  5787  0116E4  0100               	movlb	0	; () banked
  5788  0116E6  6F67               	movwf	I2C_write@retry& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;I2C.c: 69: if(channel == 1) {
  5792  0116E8  0100               	movlb	0	; () banked
  5793  0116EA  0564               	decf	I2C_write@channel& (0+255),w,b
  5794  0116EC  A4D8               	btfss	status,2,c
  5795  0116EE  D03D               	goto	l1096
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;I2C.c: 70: SSP1CON3bits.PCIE = 0;
  5799  0116F0  9C69               	bcf	3945,6,c	;volatile
  5800                           
  5801                           ;I2C.c: 71: SSP1CON2bits.SEN = 1;
  5802  0116F2  80C5               	bsf	4037,0,c	;volatile
  5803  0116F4                     l1097:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;I2C.c: 73: SSP1BUF = address | 0x00;
  5807  0116F4  C060  FFC9         	movff	I2C_write@address,4041	;volatile
  5808                           
  5809                           ;I2C.c: 74: while(SSP1STATbits.RW);
  5810  0116F8  D000               	goto	l1098
  5811  0116FA                     l1098:
  5812                           
  5813                           ; BSR set to: 0
  5814  0116FA  B4C7               	btfsc	4039,2,c	;volatile
  5815  0116FC  D7FE               	goto	l1098
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;I2C.c: 75: retry--;
  5819                           
  5820                           ; BSR set to: 0
  5821  0116FE  0100               	movlb	0	; () banked
  5822  011700  0767               	decf	I2C_write@retry& (0+255),f,b
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;I2C.c: 76: } while(SSP1CON2bits.ACKSTAT == 1 && retry != 0);
  5826  011702  ACC5               	btfss	4037,6,c	;volatile
  5827  011704  D005               	goto	l1103
  5828                           
  5829                           ; BSR set to: 0
  5830  011706  0100               	movlb	0	; () banked
  5831  011708  5167               	movf	I2C_write@retry& (0+255),w,b
  5832  01170A  0100               	movlb	0	; () banked
  5833  01170C  A4D8               	btfss	status,2,c
  5834  01170E  D7F2               	goto	l1097
  5835  011710                     l1103:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;I2C.c: 78: if(SSP1CON2bits.ACKSTAT == 0) {
  5839  011710  BCC5               	btfsc	4037,6,c	;volatile
  5840  011712  D027               	goto	l1104
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;I2C.c: 80: for(unsigned char x = 0; x < length; x++) {
  5844  011714  0E00               	movlw	0
  5845  011716  0100               	movlb	0	; () banked
  5846  011718  6F65               	movwf	I2C_write@x& (0+255),b
  5847  01171A  D019               	goto	l7466
  5848  01171C                     l7456:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;I2C.c: 81: SSP1BUF = data[x];
  5852  01171C  0100               	movlb	0	; () banked
  5853  01171E  5165               	movf	I2C_write@x& (0+255),w,b
  5854  011720  0D01               	mullw	1
  5855  011722  50F3               	movf	prodl,w,c
  5856  011724  0100               	movlb	0	; () banked
  5857  011726  2561               	addwf	I2C_write@data& (0+255),w,b
  5858  011728  6ED9               	movwf	fsr2l,c
  5859  01172A  50F4               	movf	prodh,w,c
  5860  01172C  0100               	movlb	0	; () banked
  5861  01172E  2162               	addwfc	(I2C_write@data+1)& (0+255),w,b
  5862  011730  6EDA               	movwf	fsr2h,c
  5863  011732  50DF               	movf	indf2,w,c
  5864  011734  6EC9               	movwf	4041,c	;volatile
  5865                           
  5866                           ;I2C.c: 82: while(SSP1STATbits.RW);
  5867  011736  D000               	goto	l1107
  5868  011738                     l1107:
  5869                           
  5870                           ; BSR set to: 0
  5871  011738  B4C7               	btfsc	4039,2,c	;volatile
  5872  01173A  D7FE               	goto	l1107
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;I2C.c: 84: if(SSP1CON2bits.ACKSTAT) {
  5876  01173C  ACC5               	btfss	4037,6,c	;volatile
  5877  01173E  D004               	goto	l7464
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;I2C.c: 85: SSP1CON2bits.PEN = 1;
  5881  011740  84C5               	bsf	4037,2,c	;volatile
  5882                           
  5883                           ;I2C.c: 86: SSP1CON3bits.PCIE = 1;
  5884  011742  8C69               	bsf	3945,6,c	;volatile
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;I2C.c: 87: return -2;
  5888  011744  0EFE               	movlw	254
  5889                           
  5890                           ; BSR set to: 0
  5891  011746  0012               	return	
  5892  011748                     l7464:
  5893                           
  5894                           ; BSR set to: 0
  5895  011748  0100               	movlb	0	; () banked
  5896  01174A  2B65               	incf	I2C_write@x& (0+255),f,b
  5897  01174C  D000               	goto	l7466
  5898  01174E                     l7466:
  5899                           
  5900                           ; BSR set to: 0
  5901  01174E  0100               	movlb	0	; () banked
  5902  011750  5163               	movf	I2C_write@length& (0+255),w,b
  5903  011752  0100               	movlb	0	; () banked
  5904  011754  5D65               	subwf	I2C_write@x& (0+255),w,b
  5905  011756  A0D8               	btfss	status,0,c
  5906  011758  D7E1               	goto	l7456
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;I2C.c: 88: }
  5910                           ;I2C.c: 89: }
  5911                           ;I2C.c: 90: SSP1CON2bits.PEN = 1;
  5912  01175A  84C5               	bsf	4037,2,c	;volatile
  5913                           
  5914                           ;I2C.c: 91: SSP1CON3bits.PCIE = 1;
  5915  01175C  8C69               	bsf	3945,6,c	;volatile
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;I2C.c: 92: return 0;
  5919  01175E  0E00               	movlw	0
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;I2C.c: 94: }
  5923                           
  5924                           ; BSR set to: 0
  5925  011760  0012               	return	
  5926  011762                     l1104:
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;I2C.c: 95: else {
  5930                           ;I2C.c: 96: SSP1CON2bits.PEN = 1;
  5931  011762  84C5               	bsf	4037,2,c	;volatile
  5932                           
  5933                           ;I2C.c: 97: SSP1CON3bits.PCIE = 1;
  5934  011764  8C69               	bsf	3945,6,c	;volatile
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;I2C.c: 98: return -1;
  5938  011766  0EFF               	movlw	255
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;I2C.c: 99: }
  5942                           ;I2C.c: 101: }
  5943                           
  5944                           ; BSR set to: 0
  5945  011768  0012               	return	
  5946  01176A                     l1096:
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;I2C.c: 102: else {
  5950                           ;I2C.c: 104: SSP2CON3bits.PCIE = 0;
  5951  01176A  010F               	movlb	15	; () banked
  5952  01176C  9D39               	bcf	57,6,b	;volatile
  5953                           
  5954                           ;I2C.c: 105: SSP2CON2bits.SEN = 1;
  5955  01176E  010F               	movlb	15	; () banked
  5956  011770  8118               	bsf	24,0,b	;volatile
  5957  011772                     l1115:
  5958                           
  5959                           ;I2C.c: 107: SSP2BUF = address | 0x00;
  5960  011772  C060  FF03         	movff	I2C_write@address,3843	;volatile
  5961                           
  5962                           ;I2C.c: 108: while(SSP2STATbits.RW2);
  5963  011776  D000               	goto	l1116
  5964  011778                     l1116:
  5965  011778  010F               	movlb	15	; () banked
  5966  01177A  B51A               	btfsc	26,2,b	;volatile
  5967  01177C  D7FD               	goto	l1116
  5968                           
  5969                           ; BSR set to: 15
  5970                           ;I2C.c: 109: retry--;
  5971                           
  5972                           ; BSR set to: 15
  5973  01177E  0100               	movlb	0	; () banked
  5974  011780  0767               	decf	I2C_write@retry& (0+255),f,b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;I2C.c: 110: } while(SSP2CON2bits.ACKSTAT == 1 && retry != 0);
  5978  011782  010F               	movlb	15	; () banked
  5979  011784  AD18               	btfss	24,6,b	;volatile
  5980  011786  D005               	goto	l1121
  5981                           
  5982                           ; BSR set to: 15
  5983  011788  0100               	movlb	0	; () banked
  5984  01178A  5167               	movf	I2C_write@retry& (0+255),w,b
  5985  01178C  0100               	movlb	0	; () banked
  5986  01178E  A4D8               	btfss	status,2,c
  5987  011790  D7F0               	goto	l1115
  5988  011792                     l1121:
  5989                           
  5990                           ;I2C.c: 112: if(SSP2CON2bits.ACKSTAT == 0) {
  5991  011792  010F               	movlb	15	; () banked
  5992  011794  BD18               	btfsc	24,6,b	;volatile
  5993  011796  D02E               	goto	l1122
  5994                           
  5995                           ; BSR set to: 15
  5996                           ;I2C.c: 114: for(unsigned char x = 0; x < length; x++) {
  5997  011798  0E00               	movlw	0
  5998  01179A  0100               	movlb	0	; () banked
  5999  01179C  6F66               	movwf	I2C_write@x_4006& (0+255),b
  6000  01179E  D01E               	goto	l7496
  6001  0117A0                     l7486:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;I2C.c: 115: SSP2BUF = data[x];
  6005  0117A0  0100               	movlb	0	; () banked
  6006  0117A2  5166               	movf	I2C_write@x_4006& (0+255),w,b
  6007  0117A4  0D01               	mullw	1
  6008  0117A6  50F3               	movf	prodl,w,c
  6009  0117A8  0100               	movlb	0	; () banked
  6010  0117AA  2561               	addwf	I2C_write@data& (0+255),w,b
  6011  0117AC  6ED9               	movwf	fsr2l,c
  6012  0117AE  50F4               	movf	prodh,w,c
  6013  0117B0  0100               	movlb	0	; () banked
  6014  0117B2  2162               	addwfc	(I2C_write@data+1)& (0+255),w,b
  6015  0117B4  6EDA               	movwf	fsr2h,c
  6016  0117B6  50DF               	movf	indf2,w,c
  6017  0117B8  010F               	movlb	15	; () banked
  6018  0117BA  6F03               	movwf	3,b	;volatile
  6019                           
  6020                           ;I2C.c: 116: while(SSP2STATbits.RW2);
  6021  0117BC  D000               	goto	l1125
  6022  0117BE                     l1125:
  6023                           
  6024                           ; BSR set to: 15
  6025  0117BE  010F               	movlb	15	; () banked
  6026  0117C0  B51A               	btfsc	26,2,b	;volatile
  6027  0117C2  D7FD               	goto	l1125
  6028                           
  6029                           ; BSR set to: 15
  6030                           ;I2C.c: 118: if(SSP2CON2bits.ACKSTAT) {
  6031  0117C4  010F               	movlb	15	; () banked
  6032  0117C6  AD18               	btfss	24,6,b	;volatile
  6033  0117C8  D006               	goto	l7494
  6034                           
  6035                           ; BSR set to: 15
  6036                           ;I2C.c: 119: SSP2CON2bits.PEN = 1;
  6037  0117CA  010F               	movlb	15	; () banked
  6038  0117CC  8518               	bsf	24,2,b	;volatile
  6039                           
  6040                           ;I2C.c: 120: SSP2CON3bits.PCIE = 1;
  6041  0117CE  010F               	movlb	15	; () banked
  6042  0117D0  8D39               	bsf	57,6,b	;volatile
  6043                           
  6044                           ; BSR set to: 15
  6045                           ;I2C.c: 121: return -2;
  6046  0117D2  0EFE               	movlw	254
  6047                           
  6048                           ; BSR set to: 15
  6049  0117D4  0012               	return	
  6050  0117D6                     l7494:
  6051                           
  6052                           ; BSR set to: 15
  6053  0117D6  0100               	movlb	0	; () banked
  6054  0117D8  2B66               	incf	I2C_write@x_4006& (0+255),f,b
  6055  0117DA  D000               	goto	l7496
  6056  0117DC                     l7496:
  6057                           
  6058                           ; BSR set to: 0
  6059  0117DC  0100               	movlb	0	; () banked
  6060  0117DE  5163               	movf	I2C_write@length& (0+255),w,b
  6061  0117E0  0100               	movlb	0	; () banked
  6062  0117E2  5D66               	subwf	I2C_write@x_4006& (0+255),w,b
  6063  0117E4  A0D8               	btfss	status,0,c
  6064  0117E6  D7DC               	goto	l7486
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;I2C.c: 122: }
  6068                           ;I2C.c: 123: }
  6069                           ;I2C.c: 124: SSP2CON2bits.PEN = 1;
  6070  0117E8  010F               	movlb	15	; () banked
  6071  0117EA  8518               	bsf	24,2,b	;volatile
  6072                           
  6073                           ;I2C.c: 125: SSP2CON3bits.PCIE = 1;
  6074  0117EC  010F               	movlb	15	; () banked
  6075  0117EE  8D39               	bsf	57,6,b	;volatile
  6076                           
  6077                           ; BSR set to: 15
  6078                           ;I2C.c: 126: return 0;
  6079  0117F0  0E00               	movlw	0
  6080                           
  6081                           ; BSR set to: 15
  6082                           ;I2C.c: 128: }
  6083                           
  6084                           ; BSR set to: 15
  6085  0117F2  0012               	return	
  6086  0117F4                     l1122:
  6087                           
  6088                           ; BSR set to: 15
  6089                           ;I2C.c: 129: else {
  6090                           ;I2C.c: 130: SSP2CON2bits.PEN = 1;
  6091  0117F4  010F               	movlb	15	; () banked
  6092  0117F6  8518               	bsf	24,2,b	;volatile
  6093                           
  6094                           ;I2C.c: 131: SSP2CON3bits.PCIE = 1;
  6095  0117F8  010F               	movlb	15	; () banked
  6096  0117FA  8D39               	bsf	57,6,b	;volatile
  6097                           
  6098                           ; BSR set to: 15
  6099                           ;I2C.c: 132: return -1;
  6100  0117FC  0EFF               	movlw	255
  6101                           
  6102                           ; BSR set to: 15
  6103                           
  6104                           ; BSR set to: 15
  6105  0117FE  0012               	return	
  6106                           
  6107                           ; BSR set to: 15
  6108  011800  0012               	return		;funcret
  6109  011802                     __end_of_I2C_write:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           intcon2	equ	0xFF1
  6119                           intcon3	equ	0xFF0
  6120                           postinc0	equ	0xFEE
  6121                           wreg	equ	0xFE8
  6122                           postdec1	equ	0xFE5
  6123                           fsr1h	equ	0xFE2
  6124                           fsr1l	equ	0xFE1
  6125                           indf2	equ	0xFDF
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _RCMode *****************
  6131 ;; Defined at:
  6132 ;;		line 72 in file "main.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  right_speed     2   66[BANK0 ] int 
  6137 ;;  left_speed      2   64[BANK0 ] int 
  6138 ;;  done            1   69[BANK0 ] unsigned char 
  6139 ;;  type            1   68[BANK0 ] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;		None               void
  6142 ;; Registers used:
  6143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6152 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;Total ram usage:        7 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    9
  6156 ;; This function calls:
  6157 ;;		_LCD_printString
  6158 ;;		_PS2_analog
  6159 ;;		_PS2_init
  6160 ;;		_PS2_readGamepad
  6161 ;;		_PS2_readType
  6162 ;;		___awdiv
  6163 ;;		_delay_ms
  6164 ;;		_motorDrive_setSpeeds
  6165 ;; This function is called by:
  6166 ;;		_main
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text24
  6171  01159E                     __ptext24:
  6172                           	opt stack 0
  6173  01159E                     _RCMode:
  6174                           	opt stack 21
  6175                           
  6176                           ;main.c: 74: LCD_printString(0,0, "RC Mode\nSearch..");
  6177                           
  6178                           ;incstack = 0
  6179  01159E  0E00               	movlw	0
  6180  0115A0  0100               	movlb	0	; () banked
  6181  0115A2  6F78               	movwf	LCD_printString@y& (0+255),b
  6182  0115A4  0EB0               	movlw	low STR_6
  6183  0115A6  0100               	movlb	0	; () banked
  6184  0115A8  6F79               	movwf	LCD_printString@input& (0+255),b
  6185  0115AA  0EFF               	movlw	high STR_6
  6186  0115AC  0100               	movlb	0	; () banked
  6187  0115AE  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  6188  0115B0  0E00               	movlw	0
  6189  0115B2  EC00  F080         	call	_LCD_printString
  6190                           
  6191                           ;main.c: 75: char done = PS2_init();
  6192  0115B6  EC10  F08A         	call	_PS2_init	;wreg free
  6193  0115BA  D01D               	goto	L1
  6194  0115BC                     l7538:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;main.c: 77: {
  6198                           ;main.c: 78: LCD_printString(0,0, "RC Mode\nERR: %i  ",done);
  6199  0115BC  0E00               	movlw	0
  6200  0115BE  0100               	movlb	0	; () banked
  6201  0115C0  6F78               	movwf	LCD_printString@y& (0+255),b
  6202  0115C2  0E56               	movlw	low STR_7
  6203  0115C4  0100               	movlb	0	; () banked
  6204  0115C6  6F79               	movwf	LCD_printString@input& (0+255),b
  6205  0115C8  0EFF               	movlw	high STR_7
  6206  0115CA  0100               	movlb	0	; () banked
  6207  0115CC  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  6208  0115CE  C0A5  F07B         	movff	RCMode@done,?_LCD_printString+3
  6209  0115D2  0100               	movlb	0	; () banked
  6210  0115D4  6B7C               	clrf	(?_LCD_printString+4)& (0+255),b
  6211  0115D6  0E00               	movlw	0
  6212  0115D8  EC00  F080         	call	_LCD_printString
  6213                           
  6214                           ;main.c: 79: delay_ms(500);
  6215  0115DC  0EF4               	movlw	244
  6216  0115DE  0100               	movlb	0	; () banked
  6217  0115E0  6F64               	movwf	delay_ms@x& (0+255),b
  6218  0115E2  0E01               	movlw	1
  6219  0115E4  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  6220  0115E6  0E00               	movlw	0
  6221  0115E8  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  6222  0115EA  0E00               	movlw	0
  6223  0115EC  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  6224  0115EE  EC0A  F091         	call	_delay_ms	;wreg free
  6225                           
  6226                           ;main.c: 80: done = PS2_init();
  6227  0115F2  EC10  F08A         	call	_PS2_init	;wreg free
  6228  0115F6                     L1:
  6229  0115F6  0100               	movlb	0	; () banked
  6230  0115F8  6FA5               	movwf	RCMode@done& (0+255),b
  6231  0115FA  D000               	goto	l7544
  6232  0115FC                     l7544:
  6233                           
  6234                           ; BSR set to: 0
  6235  0115FC  0100               	movlb	0	; () banked
  6236  0115FE  51A5               	movf	RCMode@done& (0+255),w,b
  6237  011600  0100               	movlb	0	; () banked
  6238  011602  A4D8               	btfss	status,2,c
  6239  011604  D7DB               	goto	l7538
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;main.c: 81: }
  6243                           ;main.c: 83: char type = PS2_readType();
  6244                           
  6245                           ; BSR set to: 0
  6246  011606  ECD4  F091         	call	_PS2_readType	;wreg free
  6247  01160A  0100               	movlb	0	; () banked
  6248  01160C  6FA4               	movwf	RCMode@type& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;main.c: 85: LCD_printString(0,0, "ana:%i\ntype %i",PS2_analog(7),type);
  6252  01160E  0E00               	movlw	0
  6253  011610  0100               	movlb	0	; () banked
  6254  011612  6F78               	movwf	LCD_printString@y& (0+255),b
  6255  011614  0ED1               	movlw	low STR_8
  6256  011616  0100               	movlb	0	; () banked
  6257  011618  6F79               	movwf	LCD_printString@input& (0+255),b
  6258  01161A  0EFF               	movlw	high STR_8
  6259  01161C  0100               	movlb	0	; () banked
  6260  01161E  6F7A               	movwf	(LCD_printString@input+1)& (0+255),b
  6261  011620  0E07               	movlw	7
  6262  011622  ECC2  F092         	call	_PS2_analog
  6263  011626  0100               	movlb	0	; () banked
  6264  011628  6F9F               	movwf	??_RCMode& (0+255),b
  6265  01162A  0100               	movlb	0	; () banked
  6266  01162C  519F               	movf	??_RCMode& (0+255),w,b
  6267  01162E  0100               	movlb	0	; () banked
  6268  011630  6F7B               	movwf	(?_LCD_printString+3)& (0+255),b
  6269  011632  6B7C               	clrf	(?_LCD_printString+4)& (0+255),b
  6270  011634  C0A4  F07D         	movff	RCMode@type,?_LCD_printString+5
  6271  011638  0100               	movlb	0	; () banked
  6272  01163A  6B7E               	clrf	(?_LCD_printString+6)& (0+255),b
  6273  01163C  0E00               	movlw	0
  6274  01163E  EC00  F080         	call	_LCD_printString
  6275  011642  D000               	goto	l7550
  6276  011644                     l7550:
  6277                           
  6278                           ;main.c: 90: {
  6279                           ;main.c: 91: PS2_readGamepad();
  6280  011644  EC14  F088         	call	_PS2_readGamepad	;wreg free
  6281                           
  6282                           ;main.c: 93: int left_speed = ((PS2_analog(8) * 120) / 255) - 60;
  6283  011648  0E08               	movlw	8
  6284  01164A  ECC2  F092         	call	_PS2_analog
  6285  01164E  0100               	movlb	0	; () banked
  6286  011650  6F9F               	movwf	??_RCMode& (0+255),b
  6287  011652  0100               	movlb	0	; () banked
  6288  011654  519F               	movf	??_RCMode& (0+255),w,b
  6289  011656  0D78               	mullw	120
  6290  011658  CFF3 F064          	movff	prodl,___awdiv@dividend
  6291  01165C  CFF4 F065          	movff	prodh,___awdiv@dividend+1
  6292  011660  0E00               	movlw	0
  6293  011662  0100               	movlb	0	; () banked
  6294  011664  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  6295  011666  6966               	setf	___awdiv@divisor& (0+255),b
  6296  011668  EC86  F08C         	call	___awdiv	;wreg free
  6297  01166C  0EC4               	movlw	196
  6298  01166E  0100               	movlb	0	; () banked
  6299  011670  2564               	addwf	?___awdiv& (0+255),w,b
  6300  011672  0100               	movlb	0	; () banked
  6301  011674  6FA0               	movwf	RCMode@left_speed& (0+255),b
  6302  011676  0EFF               	movlw	255
  6303  011678  0100               	movlb	0	; () banked
  6304  01167A  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  6305  01167C  0100               	movlb	0	; () banked
  6306  01167E  6FA1               	movwf	(RCMode@left_speed+1)& (0+255),b
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;main.c: 94: int right_speed = ((PS2_analog(6) * 120) / 255) - 60;
  6310  011680  0E06               	movlw	6
  6311  011682  ECC2  F092         	call	_PS2_analog
  6312  011686  0100               	movlb	0	; () banked
  6313  011688  6F9F               	movwf	??_RCMode& (0+255),b
  6314  01168A  0100               	movlb	0	; () banked
  6315  01168C  519F               	movf	??_RCMode& (0+255),w,b
  6316  01168E  0D78               	mullw	120
  6317  011690  CFF3 F064          	movff	prodl,___awdiv@dividend
  6318  011694  CFF4 F065          	movff	prodh,___awdiv@dividend+1
  6319  011698  0E00               	movlw	0
  6320  01169A  0100               	movlb	0	; () banked
  6321  01169C  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  6322  01169E  6966               	setf	___awdiv@divisor& (0+255),b
  6323  0116A0  EC86  F08C         	call	___awdiv	;wreg free
  6324  0116A4  0EC4               	movlw	196
  6325  0116A6  0100               	movlb	0	; () banked
  6326  0116A8  2564               	addwf	?___awdiv& (0+255),w,b
  6327  0116AA  0100               	movlb	0	; () banked
  6328  0116AC  6FA2               	movwf	RCMode@right_speed& (0+255),b
  6329  0116AE  0EFF               	movlw	255
  6330  0116B0  0100               	movlb	0	; () banked
  6331  0116B2  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  6332  0116B4  0100               	movlb	0	; () banked
  6333  0116B6  6FA3               	movwf	(RCMode@right_speed+1)& (0+255),b
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;main.c: 98: motorDrive_setSpeeds(right_speed, left_speed);
  6337  0116B8  C0A0  F06C         	movff	RCMode@left_speed,motorDrive_setSpeeds@rSpeed
  6338  0116BC  0100               	movlb	0	; () banked
  6339  0116BE  51A2               	movf	RCMode@right_speed& (0+255),w,b
  6340  0116C0  ECBE  F086         	call	_motorDrive_setSpeeds
  6341                           
  6342                           ;main.c: 99: delay_ms(50);
  6343  0116C4  0E32               	movlw	50
  6344  0116C6  0100               	movlb	0	; () banked
  6345  0116C8  6F64               	movwf	delay_ms@x& (0+255),b
  6346  0116CA  0E00               	movlw	0
  6347  0116CC  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  6348  0116CE  0E00               	movlw	0
  6349  0116D0  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  6350  0116D2  0E00               	movlw	0
  6351  0116D4  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  6352  0116D6  EC0A  F091         	call	_delay_ms	;wreg free
  6353  0116DA  D7B4               	goto	l7550
  6354  0116DC  0012               	return		;funcret
  6355  0116DE                     __end_of_RCMode:
  6356                           	opt stack 0
  6357                           tblptru	equ	0xFF8
  6358                           tblptrh	equ	0xFF7
  6359                           tblptrl	equ	0xFF6
  6360                           tablat	equ	0xFF5
  6361                           prodh	equ	0xFF4
  6362                           prodl	equ	0xFF3
  6363                           intcon	equ	0xFF2
  6364                           intcon2	equ	0xFF1
  6365                           intcon3	equ	0xFF0
  6366                           postinc0	equ	0xFEE
  6367                           wreg	equ	0xFE8
  6368                           postdec1	equ	0xFE5
  6369                           fsr1h	equ	0xFE2
  6370                           fsr1l	equ	0xFE1
  6371                           indf2	equ	0xFDF
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _motorDrive_setSpeeds *****************
  6377 ;; Defined at:
  6378 ;;		line 68 in file "motorDrive.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  lSpeed          1    wreg     char 
  6381 ;;  rSpeed          1   12[BANK0 ] char 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  lSpeed          1   35[BANK0 ] char 
  6384 ;;  tempr           2   19[BANK0 ] int 
  6385 ;;  templ           2   17[BANK0 ] int 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;		None               void
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;Total ram usage:       24 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    4
  6402 ;; This function calls:
  6403 ;;		_SetDCEPWM1
  6404 ;;		_SetDCEPWM3
  6405 ;;		___awdiv
  6406 ;;		___wmul
  6407 ;; This function is called by:
  6408 ;;		_RCMode
  6409 ;;		_motorDrive_init
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text25
  6414  010D7C                     __ptext25:
  6415                           	opt stack 0
  6416  010D7C                     _motorDrive_setSpeeds:
  6417                           	opt stack 24
  6418                           
  6419                           ;incstack = 0
  6420                           ;motorDrive_setSpeeds@lSpeed stored from wreg
  6421  010D7C  0100               	movlb	0	; () banked
  6422  010D7E  6F83               	movwf	motorDrive_setSpeeds@lSpeed& (0+255),b
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;motorDrive.c: 70: PORTLbits.RL0 = (lSpeed >> 7 ) & 0x1 ^ 0x1;
  6426  010D80  C083  F06D         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  6427  010D84  0E07               	movlw	7
  6428  010D86  0100               	movlb	0	; () banked
  6429  010D88  6F6E               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6430  010D8A                     u4695:
  6431  010D8A  0100               	movlb	0	; () banked
  6432  010D8C  356D               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6433  010D8E  336D               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6434  010D90  0100               	movlb	0	; () banked
  6435  010D92  2F6E               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6436  010D94  D7FA               	goto	u4695
  6437  010D96  0E01               	movlw	1
  6438  010D98  0100               	movlb	0	; () banked
  6439  010D9A  176D               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  6440  010D9C  0E01               	movlw	1
  6441  010D9E  0100               	movlb	0	; () banked
  6442  010DA0  1B6D               	xorwf	??_motorDrive_setSpeeds& (0+255),f,b
  6443  010DA2  010E               	movlb	14	; () banked
  6444  010DA4  51E4               	movf	228,w,b	;volatile
  6445  010DA6  0100               	movlb	0	; () banked
  6446  010DA8  196D               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  6447  010DAA  0BFE               	andlw	-2
  6448  010DAC  196D               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  6449  010DAE  010E               	movlb	14	; () banked
  6450  010DB0  6FE4               	movwf	228,b	;volatile
  6451                           
  6452                           ;motorDrive.c: 71: PORTKbits.RK1 = (rSpeed >> 7 ) & 0x1;
  6453  010DB2  C06C  F06D         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  6454  010DB6  0E07               	movlw	7
  6455  010DB8  0100               	movlb	0	; () banked
  6456  010DBA  6F6E               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6457  010DBC                     u4705:
  6458  010DBC  0100               	movlb	0	; () banked
  6459  010DBE  356D               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6460  010DC0  336D               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6461  010DC2  0100               	movlb	0	; () banked
  6462  010DC4  2F6E               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6463  010DC6  D7FA               	goto	u4705
  6464  010DC8  0E01               	movlw	1
  6465  010DCA  0100               	movlb	0	; () banked
  6466  010DCC  176D               	andwf	??_motorDrive_setSpeeds& (0+255),f,b
  6467  010DCE  0100               	movlb	0	; () banked
  6468  010DD0  476D               	rlncf	??_motorDrive_setSpeeds& (0+255),f,b
  6469  010DD2  010E               	movlb	14	; () banked
  6470  010DD4  51E7               	movf	231,w,b	;volatile
  6471  010DD6  0100               	movlb	0	; () banked
  6472  010DD8  196D               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  6473  010DDA  0BFD               	andlw	-3
  6474  010DDC  196D               	xorwf	??_motorDrive_setSpeeds& (0+255),w,b
  6475  010DDE  010E               	movlb	14	; () banked
  6476  010DE0  6FE7               	movwf	231,b	;volatile
  6477                           
  6478                           ;motorDrive.c: 73: lSpeed = ((lSpeed < 100) ? lSpeed : 100);
  6479  010DE2  0100               	movlb	0	; () banked
  6480  010DE4  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6481  010DE6  0A80               	xorlw	128
  6482  010DE8  0F1C               	addlw	-228
  6483  010DEA  A0D8               	btfss	status,0,c
  6484  010DEC  D006               	goto	l6810
  6485                           
  6486                           ; BSR set to: 0
  6487  010DEE  0E00               	movlw	0
  6488  010DF0  0100               	movlb	0	; () banked
  6489  010DF2  6F76               	movwf	(_motorDrive_setSpeeds$2374+1)& (0+255),b
  6490  010DF4  0E64               	movlw	100
  6491  010DF6  6F75               	movwf	_motorDrive_setSpeeds$2374& (0+255),b
  6492  010DF8  D008               	goto	l6812
  6493  010DFA                     l6810:
  6494                           
  6495                           ; BSR set to: 0
  6496  010DFA  0100               	movlb	0	; () banked
  6497  010DFC  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6498  010DFE  0100               	movlb	0	; () banked
  6499  010E00  6F75               	movwf	_motorDrive_setSpeeds$2374& (0+255),b
  6500  010E02  6B76               	clrf	(_motorDrive_setSpeeds$2374+1)& (0+255),b
  6501  010E04  BF75               	btfsc	_motorDrive_setSpeeds$2374& (0+255),7,b
  6502  010E06  0776               	decf	(_motorDrive_setSpeeds$2374+1)& (0+255),f,b
  6503  010E08  D000               	goto	l6812
  6504  010E0A                     l6812:
  6505                           
  6506                           ; BSR set to: 0
  6507  010E0A  C075  F083         	movff	_motorDrive_setSpeeds$2374,motorDrive_setSpeeds@lSpeed
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;motorDrive.c: 74: rSpeed = ((rSpeed < 100) ? rSpeed : 100);
  6511  010E0E  0100               	movlb	0	; () banked
  6512  010E10  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6513  010E12  0A80               	xorlw	128
  6514  010E14  0F1C               	addlw	-228
  6515  010E16  A0D8               	btfss	status,0,c
  6516  010E18  D006               	goto	l6818
  6517                           
  6518                           ; BSR set to: 0
  6519  010E1A  0E00               	movlw	0
  6520  010E1C  0100               	movlb	0	; () banked
  6521  010E1E  6F78               	movwf	(_motorDrive_setSpeeds$2375+1)& (0+255),b
  6522  010E20  0E64               	movlw	100
  6523  010E22  6F77               	movwf	_motorDrive_setSpeeds$2375& (0+255),b
  6524  010E24  D008               	goto	l6820
  6525  010E26                     l6818:
  6526                           
  6527                           ; BSR set to: 0
  6528  010E26  0100               	movlb	0	; () banked
  6529  010E28  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6530  010E2A  0100               	movlb	0	; () banked
  6531  010E2C  6F77               	movwf	_motorDrive_setSpeeds$2375& (0+255),b
  6532  010E2E  6B78               	clrf	(_motorDrive_setSpeeds$2375+1)& (0+255),b
  6533  010E30  BF77               	btfsc	_motorDrive_setSpeeds$2375& (0+255),7,b
  6534  010E32  0778               	decf	(_motorDrive_setSpeeds$2375+1)& (0+255),f,b
  6535  010E34  D000               	goto	l6820
  6536  010E36                     l6820:
  6537                           
  6538                           ; BSR set to: 0
  6539  010E36  C077  F06C         	movff	_motorDrive_setSpeeds$2375,motorDrive_setSpeeds@rSpeed
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;motorDrive.c: 76: lSpeed = ((lSpeed > -100) ? lSpeed : -100);
  6543  010E3A  0100               	movlb	0	; () banked
  6544  010E3C  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6545  010E3E  0A80               	xorlw	128
  6546  010E40  0FE3               	addlw	227
  6547  010E42  B0D8               	btfsc	status,0,c
  6548  010E44  D006               	goto	l6826
  6549                           
  6550                           ; BSR set to: 0
  6551  010E46  0EFF               	movlw	255
  6552  010E48  0100               	movlb	0	; () banked
  6553  010E4A  6F7A               	movwf	(_motorDrive_setSpeeds$2376+1)& (0+255),b
  6554  010E4C  0E9C               	movlw	156
  6555  010E4E  6F79               	movwf	_motorDrive_setSpeeds$2376& (0+255),b
  6556  010E50  D008               	goto	l6828
  6557  010E52                     l6826:
  6558                           
  6559                           ; BSR set to: 0
  6560  010E52  0100               	movlb	0	; () banked
  6561  010E54  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6562  010E56  0100               	movlb	0	; () banked
  6563  010E58  6F79               	movwf	_motorDrive_setSpeeds$2376& (0+255),b
  6564  010E5A  6B7A               	clrf	(_motorDrive_setSpeeds$2376+1)& (0+255),b
  6565  010E5C  BF79               	btfsc	_motorDrive_setSpeeds$2376& (0+255),7,b
  6566  010E5E  077A               	decf	(_motorDrive_setSpeeds$2376+1)& (0+255),f,b
  6567  010E60  D000               	goto	l6828
  6568  010E62                     l6828:
  6569                           
  6570                           ; BSR set to: 0
  6571  010E62  C079  F083         	movff	_motorDrive_setSpeeds$2376,motorDrive_setSpeeds@lSpeed
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;motorDrive.c: 77: rSpeed = ((rSpeed > -100) ? rSpeed : -100);
  6575  010E66  0100               	movlb	0	; () banked
  6576  010E68  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6577  010E6A  0A80               	xorlw	128
  6578  010E6C  0FE3               	addlw	227
  6579  010E6E  B0D8               	btfsc	status,0,c
  6580  010E70  D006               	goto	l6834
  6581                           
  6582                           ; BSR set to: 0
  6583  010E72  0EFF               	movlw	255
  6584  010E74  0100               	movlb	0	; () banked
  6585  010E76  6F7C               	movwf	(_motorDrive_setSpeeds$2377+1)& (0+255),b
  6586  010E78  0E9C               	movlw	156
  6587  010E7A  6F7B               	movwf	_motorDrive_setSpeeds$2377& (0+255),b
  6588  010E7C  D008               	goto	l6836
  6589  010E7E                     l6834:
  6590                           
  6591                           ; BSR set to: 0
  6592  010E7E  0100               	movlb	0	; () banked
  6593  010E80  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6594  010E82  0100               	movlb	0	; () banked
  6595  010E84  6F7B               	movwf	_motorDrive_setSpeeds$2377& (0+255),b
  6596  010E86  6B7C               	clrf	(_motorDrive_setSpeeds$2377+1)& (0+255),b
  6597  010E88  BF7B               	btfsc	_motorDrive_setSpeeds$2377& (0+255),7,b
  6598  010E8A  077C               	decf	(_motorDrive_setSpeeds$2377+1)& (0+255),f,b
  6599  010E8C  D000               	goto	l6836
  6600  010E8E                     l6836:
  6601                           
  6602                           ; BSR set to: 0
  6603  010E8E  C07B  F06C         	movff	_motorDrive_setSpeeds$2377,motorDrive_setSpeeds@rSpeed
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;motorDrive.c: 79: lSpeed = ((lSpeed >> 7 ) & 0x1) ? ((lSpeed < 0) ? (lSpeed*-1) : lSpee
      +                          d) : 100-lSpeed;
  6607  010E92  C083  F06D         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  6608  010E96  0E07               	movlw	7
  6609  010E98  0100               	movlb	0	; () banked
  6610  010E9A  6F6E               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6611  010E9C                     u4755:
  6612  010E9C  0100               	movlb	0	; () banked
  6613  010E9E  356D               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6614  010EA0  336D               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6615  010EA2  0100               	movlb	0	; () banked
  6616  010EA4  2F6E               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6617  010EA6  D7FA               	goto	u4755
  6618  010EA8  0100               	movlb	0	; () banked
  6619  010EAA  516D               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  6620  010EAC  0100               	movlb	0	; () banked
  6621  010EAE  6F6F               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  6622  010EB0  6B70               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  6623  010EB2  BF6F               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  6624  010EB4  0770               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  6625  010EB6  0100               	movlb	0	; () banked
  6626  010EB8  B16F               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  6627  010EBA  D016               	goto	l6842
  6628                           
  6629                           ; BSR set to: 0
  6630  010EBC  C083  F06D         	movff	motorDrive_setSpeeds@lSpeed,??_motorDrive_setSpeeds
  6631  010EC0  0100               	movlb	0	; () banked
  6632  010EC2  6B6E               	clrf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6633  010EC4  BF6D               	btfsc	??_motorDrive_setSpeeds& (0+255),7,b
  6634  010EC6  076E               	decf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6635  010EC8  0100               	movlb	0	; () banked
  6636  010ECA  1F6D               	comf	??_motorDrive_setSpeeds& (0+255),f,b
  6637  010ECC  1F6E               	comf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6638  010ECE  4B6D               	infsnz	??_motorDrive_setSpeeds& (0+255),f,b
  6639  010ED0  2B6E               	incf	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6640  010ED2  0E64               	movlw	100
  6641  010ED4  0100               	movlb	0	; () banked
  6642  010ED6  256D               	addwf	??_motorDrive_setSpeeds& (0+255),w,b
  6643  010ED8  0100               	movlb	0	; () banked
  6644  010EDA  6F7D               	movwf	_motorDrive_setSpeeds$2378& (0+255),b
  6645  010EDC  0E00               	movlw	0
  6646  010EDE  0100               	movlb	0	; () banked
  6647  010EE0  216E               	addwfc	(??_motorDrive_setSpeeds+1)& (0+255),w,b
  6648  010EE2  0100               	movlb	0	; () banked
  6649  010EE4  6F7E               	movwf	(_motorDrive_setSpeeds$2378+1)& (0+255),b
  6650  010EE6  D02A               	goto	l6850
  6651  010EE8                     l6842:
  6652                           
  6653                           ; BSR set to: 0
  6654  010EE8  0100               	movlb	0	; () banked
  6655  010EEA  BF83               	btfsc	motorDrive_setSpeeds@lSpeed& (0+255),7,b
  6656  010EEC  D008               	goto	l6846
  6657                           
  6658                           ; BSR set to: 0
  6659  010EEE  0100               	movlb	0	; () banked
  6660  010EF0  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6661  010EF2  0100               	movlb	0	; () banked
  6662  010EF4  6F7F               	movwf	_motorDrive_setSpeeds$2379& (0+255),b
  6663  010EF6  6B80               	clrf	(_motorDrive_setSpeeds$2379+1)& (0+255),b
  6664  010EF8  BF7F               	btfsc	_motorDrive_setSpeeds$2379& (0+255),7,b
  6665  010EFA  0780               	decf	(_motorDrive_setSpeeds$2379+1)& (0+255),f,b
  6666  010EFC  D01A               	goto	l6848
  6667  010EFE                     l6846:
  6668                           
  6669                           ; BSR set to: 0
  6670  010EFE  0100               	movlb	0	; () banked
  6671  010F00  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6672  010F02  0100               	movlb	0	; () banked
  6673  010F04  6F60               	movwf	___wmul@multiplier& (0+255),b
  6674  010F06  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  6675  010F08  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  6676  010F0A  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  6677  010F0C  0E00               	movlw	0
  6678  010F0E  0100               	movlb	0	; () banked
  6679  010F10  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6680  010F12  0E01               	movlw	1
  6681  010F14  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6682  010F16  EC09  F092         	call	___wmul	;wreg free
  6683  010F1A  0100               	movlb	0	; () banked
  6684  010F1C  1F60               	comf	?___wmul& (0+255),f,b
  6685  010F1E  0100               	movlb	0	; () banked
  6686  010F20  1F61               	comf	(?___wmul+1)& (0+255),f,b
  6687  010F22  0100               	movlb	0	; () banked
  6688  010F24  4B60               	infsnz	?___wmul& (0+255),f,b
  6689  010F26  2B61               	incf	(?___wmul+1)& (0+255),f,b
  6690  010F28  C060  F07F         	movff	?___wmul,_motorDrive_setSpeeds$2379
  6691  010F2C  C061  F080         	movff	?___wmul+1,_motorDrive_setSpeeds$2379+1
  6692  010F30  D000               	goto	l6848
  6693  010F32                     l6848:
  6694                           
  6695                           ; BSR set to: 0
  6696  010F32  C07F  F07D         	movff	_motorDrive_setSpeeds$2379,_motorDrive_setSpeeds$2378
  6697  010F36  C080  F07E         	movff	_motorDrive_setSpeeds$2379+1,_motorDrive_setSpeeds$2378+1
  6698  010F3A  D000               	goto	l6850
  6699  010F3C                     l6850:
  6700                           
  6701                           ; BSR set to: 0
  6702  010F3C  C07D  F083         	movff	_motorDrive_setSpeeds$2378,motorDrive_setSpeeds@lSpeed
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;motorDrive.c: 80: rSpeed = ((rSpeed >> 7 ) & 0x1) ? 100 + rSpeed : rSpeed;
  6706  010F40  C06C  F06D         	movff	motorDrive_setSpeeds@rSpeed,??_motorDrive_setSpeeds
  6707  010F44  0E07               	movlw	7
  6708  010F46  0100               	movlb	0	; () banked
  6709  010F48  6F6E               	movwf	(??_motorDrive_setSpeeds+1)& (0+255),b
  6710  010F4A                     u4785:
  6711  010F4A  0100               	movlb	0	; () banked
  6712  010F4C  356D               	rlcf	??_motorDrive_setSpeeds& (0+255),w,b
  6713  010F4E  336D               	rrcf	??_motorDrive_setSpeeds& (0+255),f,b
  6714  010F50  0100               	movlb	0	; () banked
  6715  010F52  2F6E               	decfsz	(??_motorDrive_setSpeeds+1)& (0+255),f,b
  6716  010F54  D7FA               	goto	u4785
  6717  010F56  0100               	movlb	0	; () banked
  6718  010F58  516D               	movf	??_motorDrive_setSpeeds& (0+255),w,b
  6719  010F5A  0100               	movlb	0	; () banked
  6720  010F5C  6F6F               	movwf	(??_motorDrive_setSpeeds+2)& (0+255),b
  6721  010F5E  6B70               	clrf	(??_motorDrive_setSpeeds+3)& (0+255),b
  6722  010F60  BF6F               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),7,b
  6723  010F62  0770               	decf	(??_motorDrive_setSpeeds+3)& (0+255),f,b
  6724  010F64  0100               	movlb	0	; () banked
  6725  010F66  B16F               	btfsc	(??_motorDrive_setSpeeds+2)& (0+255),0,b
  6726  010F68  D008               	goto	l6856
  6727                           
  6728                           ; BSR set to: 0
  6729  010F6A  0100               	movlb	0	; () banked
  6730  010F6C  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6731  010F6E  0100               	movlb	0	; () banked
  6732  010F70  6F81               	movwf	_motorDrive_setSpeeds$2380& (0+255),b
  6733  010F72  6B82               	clrf	(_motorDrive_setSpeeds$2380+1)& (0+255),b
  6734  010F74  BF81               	btfsc	_motorDrive_setSpeeds$2380& (0+255),7,b
  6735  010F76  0782               	decf	(_motorDrive_setSpeeds$2380+1)& (0+255),f,b
  6736  010F78  D00E               	goto	l6858
  6737  010F7A                     l6856:
  6738                           
  6739                           ; BSR set to: 0
  6740  010F7A  0E64               	movlw	100
  6741  010F7C  0100               	movlb	0	; () banked
  6742  010F7E  256C               	addwf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6743  010F80  0100               	movlb	0	; () banked
  6744  010F82  6F81               	movwf	_motorDrive_setSpeeds$2380& (0+255),b
  6745  010F84  6AE8               	clrf	wreg,c
  6746  010F86  B0D8               	btfsc	status,0,c
  6747  010F88  2AE8               	incf	wreg,f,c
  6748  010F8A  0100               	movlb	0	; () banked
  6749  010F8C  BF6C               	btfsc	motorDrive_setSpeeds@rSpeed& (0+255),7,b
  6750  010F8E  06E8               	decf	wreg,f,c
  6751  010F90  0100               	movlb	0	; () banked
  6752  010F92  6F82               	movwf	(_motorDrive_setSpeeds$2380+1)& (0+255),b
  6753  010F94  D000               	goto	l6858
  6754  010F96                     l6858:
  6755                           
  6756                           ; BSR set to: 0
  6757  010F96  C081  F06C         	movff	_motorDrive_setSpeeds$2380,motorDrive_setSpeeds@rSpeed
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;motorDrive.c: 82: int templ = ((0xD0 * lSpeed) / 100);
  6761  010F9A  0100               	movlb	0	; () banked
  6762  010F9C  5183               	movf	motorDrive_setSpeeds@lSpeed& (0+255),w,b
  6763  010F9E  0100               	movlb	0	; () banked
  6764  010FA0  6F60               	movwf	___wmul@multiplier& (0+255),b
  6765  010FA2  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  6766  010FA4  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  6767  010FA6  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  6768  010FA8  0E00               	movlw	0
  6769  010FAA  0100               	movlb	0	; () banked
  6770  010FAC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6771  010FAE  0ED0               	movlw	208
  6772  010FB0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6773  010FB2  EC09  F092         	call	___wmul	;wreg free
  6774  010FB6  C060  F064         	movff	?___wmul,___awdiv@dividend
  6775  010FBA  C061  F065         	movff	?___wmul+1,___awdiv@dividend+1
  6776  010FBE  0E00               	movlw	0
  6777  010FC0  0100               	movlb	0	; () banked
  6778  010FC2  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  6779  010FC4  0E64               	movlw	100
  6780  010FC6  6F66               	movwf	___awdiv@divisor& (0+255),b
  6781  010FC8  EC86  F08C         	call	___awdiv	;wreg free
  6782  010FCC  C064  F071         	movff	?___awdiv,motorDrive_setSpeeds@templ
  6783  010FD0  C065  F072         	movff	?___awdiv+1,motorDrive_setSpeeds@templ+1
  6784                           
  6785                           ;motorDrive.c: 83: int tempr = ((0xD0 * rSpeed) / 100);
  6786  010FD4  0100               	movlb	0	; () banked
  6787  010FD6  516C               	movf	motorDrive_setSpeeds@rSpeed& (0+255),w,b
  6788  010FD8  0100               	movlb	0	; () banked
  6789  010FDA  6F60               	movwf	___wmul@multiplier& (0+255),b
  6790  010FDC  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  6791  010FDE  BF60               	btfsc	___wmul@multiplier& (0+255),7,b
  6792  010FE0  0761               	decf	(___wmul@multiplier+1)& (0+255),f,b
  6793  010FE2  0E00               	movlw	0
  6794  010FE4  0100               	movlb	0	; () banked
  6795  010FE6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6796  010FE8  0ED0               	movlw	208
  6797  010FEA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6798  010FEC  EC09  F092         	call	___wmul	;wreg free
  6799  010FF0  C060  F064         	movff	?___wmul,___awdiv@dividend
  6800  010FF4  C061  F065         	movff	?___wmul+1,___awdiv@dividend+1
  6801  010FF8  0E00               	movlw	0
  6802  010FFA  0100               	movlb	0	; () banked
  6803  010FFC  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  6804  010FFE  0E64               	movlw	100
  6805  011000  6F66               	movwf	___awdiv@divisor& (0+255),b
  6806  011002  EC86  F08C         	call	___awdiv	;wreg free
  6807  011006  C064  F073         	movff	?___awdiv,motorDrive_setSpeeds@tempr
  6808  01100A  C065  F074         	movff	?___awdiv+1,motorDrive_setSpeeds@tempr+1
  6809                           
  6810                           ;motorDrive.c: 85: SetDCEPWM1(tempr);
  6811  01100E  C073  F020         	movff	motorDrive_setSpeeds@tempr,SetDCEPWM1@dutycycle
  6812  011012  C074  F021         	movff	motorDrive_setSpeeds@tempr+1,SetDCEPWM1@dutycycle+1
  6813  011016  EC53  F091         	call	_SetDCEPWM1	;wreg free
  6814                           
  6815                           ;motorDrive.c: 86: SetDCEPWM3(templ);
  6816  01101A  C071  F020         	movff	motorDrive_setSpeeds@templ,SetDCEPWM3@dutycycle
  6817  01101E  C072  F021         	movff	motorDrive_setSpeeds@templ+1,SetDCEPWM3@dutycycle+1
  6818  011022  EC2F  F091         	call	_SetDCEPWM3	;wreg free
  6819  011026  0012               	return		;funcret
  6820  011028                     __end_of_motorDrive_setSpeeds:
  6821                           	opt stack 0
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           intcon2	equ	0xFF1
  6830                           intcon3	equ	0xFF0
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           postdec1	equ	0xFE5
  6834                           fsr1h	equ	0xFE2
  6835                           fsr1l	equ	0xFE1
  6836                           indf2	equ	0xFDF
  6837                           fsr2h	equ	0xFDA
  6838                           fsr2l	equ	0xFD9
  6839                           status	equ	0xFD8
  6840                           
  6841 ;; *************** function ___wmul *****************
  6842 ;; Defined at:
  6843 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6846 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  product         2   31[COMRAM] unsigned int 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  2    0[BANK0 ] unsigned int 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, prodl, prodh
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;Total ram usage:        6 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    3
  6865 ;; This function calls:
  6866 ;;		Nothing
  6867 ;; This function is called by:
  6868 ;;		_motorDrive_setSpeeds
  6869 ;;		_fft_execute
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text26
  6874  012412                     __ptext26:
  6875                           	opt stack 0
  6876  012412                     ___wmul:
  6877                           	opt stack 24
  6878                           
  6879                           ;incstack = 0
  6880  012412  0100               	movlb	0	; () banked
  6881  012414  5160               	movf	___wmul@multiplier& (0+255),w,b
  6882  012416  0100               	movlb	0	; () banked
  6883  012418  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6884  01241A  CFF3 F020          	movff	prodl,___wmul@product
  6885  01241E  CFF4 F021          	movff	prodh,___wmul@product+1
  6886  012422  0100               	movlb	0	; () banked
  6887  012424  5160               	movf	___wmul@multiplier& (0+255),w,b
  6888  012426  0100               	movlb	0	; () banked
  6889  012428  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6890  01242A  50F3               	movf	prodl,w,c
  6891  01242C  2621               	addwf	___wmul@product+1,f,c
  6892  01242E  0100               	movlb	0	; () banked
  6893  012430  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6894  012432  0100               	movlb	0	; () banked
  6895  012434  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6896  012436  50F3               	movf	prodl,w,c
  6897  012438  2621               	addwf	___wmul@product+1,f,c
  6898                           
  6899                           ; BSR set to: 0
  6900  01243A  C020  F060         	movff	___wmul@product,?___wmul
  6901  01243E  C021  F061         	movff	___wmul@product+1,?___wmul+1
  6902  012442  0012               	return	
  6903                           
  6904                           ; BSR set to: 0
  6905                           
  6906                           ; BSR set to: 0
  6907  012444  0012               	return		;funcret
  6908  012446                     __end_of___wmul:
  6909                           	opt stack 0
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           prodh	equ	0xFF4
  6915                           prodl	equ	0xFF3
  6916                           intcon	equ	0xFF2
  6917                           intcon2	equ	0xFF1
  6918                           intcon3	equ	0xFF0
  6919                           postinc0	equ	0xFEE
  6920                           wreg	equ	0xFE8
  6921                           postdec1	equ	0xFE5
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           indf2	equ	0xFDF
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function ___awdiv *****************
  6930 ;; Defined at:
  6931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  dividend        2    4[BANK0 ] int 
  6934 ;;  divisor         2    6[BANK0 ] int 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  quotient        2   10[BANK0 ] int 
  6937 ;;  sign            1    9[BANK0 ] unsigned char 
  6938 ;;  counter         1    8[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  2    4[BANK0 ] int 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;Total ram usage:        8 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    3
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_RCMode
  6959 ;;		_motorDrive_setSpeeds
  6960 ;;		_compass_cart2polar
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text27
  6965  01190C                     __ptext27:
  6966                           	opt stack 0
  6967  01190C                     ___awdiv:
  6968                           	opt stack 24
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;incstack = 0
  6972  01190C  0E00               	movlw	0
  6973  01190E  0100               	movlb	0	; () banked
  6974  011910  6F69               	movwf	___awdiv@sign& (0+255),b
  6975                           
  6976                           ; BSR set to: 0
  6977  011912  0100               	movlb	0	; () banked
  6978  011914  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6979  011916  D009               	goto	l6570
  6980                           
  6981                           ; BSR set to: 0
  6982  011918  0100               	movlb	0	; () banked
  6983  01191A  6D66               	negf	___awdiv@divisor& (0+255),b
  6984  01191C  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6985  01191E  B0D8               	btfsc	status,0,c
  6986  011920  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 0
  6989  011922  0E01               	movlw	1
  6990  011924  0100               	movlb	0	; () banked
  6991  011926  6F69               	movwf	___awdiv@sign& (0+255),b
  6992  011928  D000               	goto	l6570
  6993  01192A                     l6570:
  6994                           
  6995                           ; BSR set to: 0
  6996  01192A  0100               	movlb	0	; () banked
  6997  01192C  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6998  01192E  D009               	goto	l6576
  6999                           
  7000                           ; BSR set to: 0
  7001  011930  0100               	movlb	0	; () banked
  7002  011932  6D64               	negf	___awdiv@dividend& (0+255),b
  7003  011934  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7004  011936  B0D8               	btfsc	status,0,c
  7005  011938  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7006                           
  7007                           ; BSR set to: 0
  7008  01193A  0E01               	movlw	1
  7009  01193C  0100               	movlb	0	; () banked
  7010  01193E  1B69               	xorwf	___awdiv@sign& (0+255),f,b
  7011  011940  D000               	goto	l6576
  7012  011942                     l6576:
  7013                           
  7014                           ; BSR set to: 0
  7015  011942  0E00               	movlw	0
  7016  011944  0100               	movlb	0	; () banked
  7017  011946  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
  7018  011948  0E00               	movlw	0
  7019  01194A  6F6A               	movwf	___awdiv@quotient& (0+255),b
  7020                           
  7021                           ; BSR set to: 0
  7022  01194C  0100               	movlb	0	; () banked
  7023  01194E  5166               	movf	___awdiv@divisor& (0+255),w,b
  7024  011950  0100               	movlb	0	; () banked
  7025  011952  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7026  011954  B4D8               	btfsc	status,2,c
  7027  011956  D031               	goto	l6598
  7028                           
  7029                           ; BSR set to: 0
  7030  011958  0E01               	movlw	1
  7031  01195A  0100               	movlb	0	; () banked
  7032  01195C  6F68               	movwf	___awdiv@counter& (0+255),b
  7033  01195E  D007               	goto	l6584
  7034  011960                     l6582:
  7035                           
  7036                           ; BSR set to: 0
  7037  011960  0100               	movlb	0	; () banked
  7038  011962  90D8               	bcf	status,0,c
  7039  011964  3766               	rlcf	___awdiv@divisor& (0+255),f,b
  7040  011966  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7041  011968  0100               	movlb	0	; () banked
  7042  01196A  2B68               	incf	___awdiv@counter& (0+255),f,b
  7043  01196C  D000               	goto	l6584
  7044  01196E                     l6584:
  7045                           
  7046                           ; BSR set to: 0
  7047  01196E  0100               	movlb	0	; () banked
  7048  011970  BF67               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7049  011972  D002               	goto	l6586
  7050  011974  D7F5               	goto	l6582
  7051                           
  7052                           ; BSR set to: 0
  7053  011976  D000               	goto	l6586
  7054  011978                     l6586:
  7055                           
  7056                           ; BSR set to: 0
  7057  011978  0100               	movlb	0	; () banked
  7058  01197A  90D8               	bcf	status,0,c
  7059  01197C  376A               	rlcf	___awdiv@quotient& (0+255),f,b
  7060  01197E  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7061                           
  7062                           ; BSR set to: 0
  7063  011980  0100               	movlb	0	; () banked
  7064  011982  5166               	movf	___awdiv@divisor& (0+255),w,b
  7065  011984  0100               	movlb	0	; () banked
  7066  011986  5D64               	subwf	___awdiv@dividend& (0+255),w,b
  7067  011988  0100               	movlb	0	; () banked
  7068  01198A  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7069  01198C  0100               	movlb	0	; () banked
  7070  01198E  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7071  011990  A0D8               	btfss	status,0,c
  7072  011992  D00B               	goto	l6594
  7073                           
  7074                           ; BSR set to: 0
  7075  011994  0100               	movlb	0	; () banked
  7076  011996  5166               	movf	___awdiv@divisor& (0+255),w,b
  7077  011998  0100               	movlb	0	; () banked
  7078  01199A  5F64               	subwf	___awdiv@dividend& (0+255),f,b
  7079  01199C  0100               	movlb	0	; () banked
  7080  01199E  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7081  0119A0  0100               	movlb	0	; () banked
  7082  0119A2  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7083                           
  7084                           ; BSR set to: 0
  7085  0119A4  0100               	movlb	0	; () banked
  7086  0119A6  816A               	bsf	___awdiv@quotient& (0+255),0,b
  7087  0119A8  D000               	goto	l6594
  7088  0119AA                     l6594:
  7089                           
  7090                           ; BSR set to: 0
  7091  0119AA  0100               	movlb	0	; () banked
  7092  0119AC  90D8               	bcf	status,0,c
  7093  0119AE  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7094  0119B0  3366               	rrcf	___awdiv@divisor& (0+255),f,b
  7095                           
  7096                           ; BSR set to: 0
  7097  0119B2  0100               	movlb	0	; () banked
  7098  0119B4  2F68               	decfsz	___awdiv@counter& (0+255),f,b
  7099  0119B6  D7E0               	goto	l6586
  7100                           
  7101                           ; BSR set to: 0
  7102  0119B8  D000               	goto	l6598
  7103  0119BA                     l6598:
  7104                           
  7105                           ; BSR set to: 0
  7106  0119BA  0100               	movlb	0	; () banked
  7107  0119BC  5169               	movf	___awdiv@sign& (0+255),w,b
  7108  0119BE  0100               	movlb	0	; () banked
  7109  0119C0  B4D8               	btfsc	status,2,c
  7110  0119C2  D006               	goto	l6602
  7111                           
  7112                           ; BSR set to: 0
  7113  0119C4  0100               	movlb	0	; () banked
  7114  0119C6  6D6A               	negf	___awdiv@quotient& (0+255),b
  7115  0119C8  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7116  0119CA  B0D8               	btfsc	status,0,c
  7117  0119CC  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7118  0119CE  D000               	goto	l6602
  7119  0119D0                     l6602:
  7120                           
  7121                           ; BSR set to: 0
  7122  0119D0  C06A  F064         	movff	___awdiv@quotient,?___awdiv
  7123  0119D4  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
  7124  0119D8  0012               	return	
  7125                           
  7126                           ; BSR set to: 0
  7127                           
  7128                           ; BSR set to: 0
  7129  0119DA  0012               	return		;funcret
  7130  0119DC                     __end_of___awdiv:
  7131                           	opt stack 0
  7132                           tblptru	equ	0xFF8
  7133                           tblptrh	equ	0xFF7
  7134                           tblptrl	equ	0xFF6
  7135                           tablat	equ	0xFF5
  7136                           prodh	equ	0xFF4
  7137                           prodl	equ	0xFF3
  7138                           intcon	equ	0xFF2
  7139                           intcon2	equ	0xFF1
  7140                           intcon3	equ	0xFF0
  7141                           postinc0	equ	0xFEE
  7142                           wreg	equ	0xFE8
  7143                           postdec1	equ	0xFE5
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           indf2	equ	0xFDF
  7147                           fsr2h	equ	0xFDA
  7148                           fsr2l	equ	0xFD9
  7149                           status	equ	0xFD8
  7150                           
  7151 ;; *************** function _SetDCEPWM3 *****************
  7152 ;; Defined at:
  7153 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew3setdc.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  dutycycle       2   31[COMRAM] unsigned int 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  DCycle          2    2[BANK0 ] struct PWMDC
  7158 ;; Return value:  Size  Location     Type
  7159 ;;		None               void
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;Total ram usage:        6 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    3
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_motorDrive_init
  7178 ;;		_motorDrive_setSpeeds
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text28
  7183  01225E                     __ptext28:
  7184                           	opt stack 0
  7185  01225E                     _SetDCEPWM3:
  7186                           	opt stack 24
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;incstack = 0
  7190  01225E  C020  F060         	movff	SetDCEPWM3@dutycycle,??_SetDCEPWM3
  7191  012262  C021  F061         	movff	SetDCEPWM3@dutycycle+1,??_SetDCEPWM3+1
  7192  012266  0E06               	movlw	6
  7193  012268                     u4335:
  7194  012268  90D8               	bcf	status,0,c
  7195  01226A  0100               	movlb	0	; () banked
  7196  01226C  3760               	rlcf	??_SetDCEPWM3& (0+255),f,b
  7197  01226E  3761               	rlcf	(??_SetDCEPWM3+1)& (0+255),f,b
  7198  012270  2EE8               	decfsz	wreg,f,c
  7199  012272  D7FA               	goto	u4335
  7200  012274  C060  F062         	movff	??_SetDCEPWM3,SetDCEPWM3@DCycle
  7201  012278  C061  F063         	movff	??_SetDCEPWM3+1,SetDCEPWM3@DCycle+1
  7202                           
  7203                           ; BSR set to: 0
  7204  01227C  C063  FF4A         	movff	SetDCEPWM3@DCycle+1,3914	;volatile
  7205  012280  C062  F060         	movff	SetDCEPWM3@DCycle,??_SetDCEPWM3
  7206  012284  0100               	movlb	0	; () banked
  7207  012286  90D8               	bcf	status,0,c
  7208  012288  3360               	rrcf	??_SetDCEPWM3& (0+255),f,b
  7209  01228A  0100               	movlb	0	; () banked
  7210  01228C  90D8               	bcf	status,0,c
  7211  01228E  3360               	rrcf	??_SetDCEPWM3& (0+255),f,b
  7212  012290  0E30               	movlw	48
  7213  012292  0100               	movlb	0	; () banked
  7214  012294  1760               	andwf	??_SetDCEPWM3& (0+255),f,b
  7215  012296  010F               	movlb	15	; () banked
  7216  012298  5149               	movf	73,w,b	;volatile
  7217  01229A  0BCF               	andlw	207
  7218  01229C  0100               	movlb	0	; () banked
  7219  01229E  1160               	iorwf	??_SetDCEPWM3& (0+255),w,b
  7220  0122A0  010F               	movlb	15	; () banked
  7221  0122A2  6F49               	movwf	73,b	;volatile
  7222                           
  7223                           ; BSR set to: 15
  7224  0122A4  0012               	return		;funcret
  7225  0122A6                     __end_of_SetDCEPWM3:
  7226                           	opt stack 0
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           intcon2	equ	0xFF1
  7235                           intcon3	equ	0xFF0
  7236                           postinc0	equ	0xFEE
  7237                           wreg	equ	0xFE8
  7238                           postdec1	equ	0xFE5
  7239                           fsr1h	equ	0xFE2
  7240                           fsr1l	equ	0xFE1
  7241                           indf2	equ	0xFDF
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function _SetDCEPWM1 *****************
  7247 ;; Defined at:
  7248 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setdc.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  dutycycle       2   31[COMRAM] unsigned int 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  DCycle          2    2[BANK0 ] struct PWMDC
  7253 ;; Return value:  Size  Location     Type
  7254 ;;		None               void
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;Total ram usage:        6 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    3
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_motorDrive_init
  7273 ;;		_motorDrive_setSpeeds
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text29
  7278  0122A6                     __ptext29:
  7279                           	opt stack 0
  7280  0122A6                     _SetDCEPWM1:
  7281                           	opt stack 24
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;incstack = 0
  7285  0122A6  C020  F060         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7286  0122AA  C021  F061         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7287  0122AE  0E06               	movlw	6
  7288  0122B0                     u4325:
  7289  0122B0  90D8               	bcf	status,0,c
  7290  0122B2  0100               	movlb	0	; () banked
  7291  0122B4  3760               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7292  0122B6  3761               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7293  0122B8  2EE8               	decfsz	wreg,f,c
  7294  0122BA  D7FA               	goto	u4325
  7295  0122BC  C060  F062         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7296  0122C0  C061  F063         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7297                           
  7298                           ; BSR set to: 0
  7299  0122C4  C063  FFBA         	movff	SetDCEPWM1@DCycle+1,4026	;volatile
  7300  0122C8  C062  F060         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7301  0122CC  0100               	movlb	0	; () banked
  7302  0122CE  90D8               	bcf	status,0,c
  7303  0122D0  3360               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7304  0122D2  0100               	movlb	0	; () banked
  7305  0122D4  90D8               	bcf	status,0,c
  7306  0122D6  3360               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7307  0122D8  0E30               	movlw	48
  7308  0122DA  0100               	movlb	0	; () banked
  7309  0122DC  1760               	andwf	??_SetDCEPWM1& (0+255),f,b
  7310  0122DE  50B9               	movf	4025,w,c	;volatile
  7311  0122E0  0BCF               	andlw	207
  7312  0122E2  0100               	movlb	0	; () banked
  7313  0122E4  1160               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7314  0122E6  6EB9               	movwf	4025,c	;volatile
  7315                           
  7316                           ; BSR set to: 0
  7317  0122E8  0012               	return		;funcret
  7318  0122EA                     __end_of_SetDCEPWM1:
  7319                           	opt stack 0
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           intcon2	equ	0xFF1
  7328                           intcon3	equ	0xFF0
  7329                           postinc0	equ	0xFEE
  7330                           wreg	equ	0xFE8
  7331                           postdec1	equ	0xFE5
  7332                           fsr1h	equ	0xFE2
  7333                           fsr1l	equ	0xFE1
  7334                           indf2	equ	0xFDF
  7335                           fsr2h	equ	0xFDA
  7336                           fsr2l	equ	0xFD9
  7337                           status	equ	0xFD8
  7338                           
  7339 ;; *************** function _PS2_readType *****************
  7340 ;; Defined at:
  7341 ;;		line 172 in file "PS2.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      unsigned char 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;Total ram usage:        0 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    3
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_RCMode
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text30
  7370  0123A8                     __ptext30:
  7371                           	opt stack 0
  7372  0123A8                     _PS2_readType:
  7373                           	opt stack 26
  7374                           
  7375                           ;PS2.c: 174: if(controller_type == 0x03)
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;incstack = 0
  7379  0123A8  0E03               	movlw	3
  7380  0123AA  0100               	movlb	0	; () banked
  7381  0123AC  19D0               	xorwf	_controller_type& (0+255),w,b	;volatile
  7382  0123AE  A4D8               	btfss	status,2,c
  7383  0123B0  D003               	goto	l5582
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;PS2.c: 175: return 1;
  7387  0123B2  0E01               	movlw	1
  7388                           
  7389                           ; BSR set to: 0
  7390  0123B4  0012               	return	
  7391                           
  7392                           ; BSR set to: 0
  7393  0123B6  D00F               	goto	l5596
  7394  0123B8                     l5582:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;PS2.c: 176: else if(controller_type == 0x01)
  7398  0123B8  0100               	movlb	0	; () banked
  7399  0123BA  05D0               	decf	_controller_type& (0+255),w,b	;volatile
  7400  0123BC  A4D8               	btfss	status,2,c
  7401  0123BE  D003               	goto	l5590
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;PS2.c: 177: return 2;
  7405  0123C0  0E02               	movlw	2
  7406                           
  7407                           ; BSR set to: 0
  7408  0123C2  0012               	return	
  7409                           
  7410                           ; BSR set to: 0
  7411  0123C4  D008               	goto	l5596
  7412  0123C6                     l5590:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;PS2.c: 178: else if(controller_type == 0x0C)
  7416  0123C6  0E0C               	movlw	12
  7417  0123C8  0100               	movlb	0	; () banked
  7418  0123CA  19D0               	xorwf	_controller_type& (0+255),w,b	;volatile
  7419  0123CC  A4D8               	btfss	status,2,c
  7420  0123CE  D003               	goto	l5596
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;PS2.c: 179: return 3;
  7424  0123D0  0E03               	movlw	3
  7425                           
  7426                           ; BSR set to: 0
  7427  0123D2  0012               	return	
  7428                           
  7429                           ; BSR set to: 0
  7430                           
  7431                           ; BSR set to: 0
  7432  0123D4  D000               	goto	l5596
  7433  0123D6                     l5596:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;PS2.c: 181: return controller_type;
  7437  0123D6  0100               	movlb	0	; () banked
  7438  0123D8  51D0               	movf	_controller_type& (0+255),w,b	;volatile
  7439  0123DA  0012               	return	
  7440                           
  7441                           ; BSR set to: 0
  7442                           
  7443                           ; BSR set to: 0
  7444  0123DC  0012               	return		;funcret
  7445  0123DE                     __end_of_PS2_readType:
  7446                           	opt stack 0
  7447                           tblptru	equ	0xFF8
  7448                           tblptrh	equ	0xFF7
  7449                           tblptrl	equ	0xFF6
  7450                           tablat	equ	0xFF5
  7451                           prodh	equ	0xFF4
  7452                           prodl	equ	0xFF3
  7453                           intcon	equ	0xFF2
  7454                           intcon2	equ	0xFF1
  7455                           intcon3	equ	0xFF0
  7456                           postinc0	equ	0xFEE
  7457                           wreg	equ	0xFE8
  7458                           postdec1	equ	0xFE5
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _PS2_init *****************
  7467 ;; Defined at:
  7468 ;;		line 14 in file "PS2.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  i               2   61[BANK0 ] int 
  7473 ;;  y               2   59[BANK0 ] int 
  7474 ;;  temp            9   50[BANK0 ] unsigned char [9]
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      unsigned char 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;Total ram usage:       13 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    8
  7491 ;; This function calls:
  7492 ;;		_PS2_readGamepad
  7493 ;;		_PS2_sendCommandString
  7494 ;;		_PS2_shiftInOut
  7495 ;;		_delay_us
  7496 ;; This function is called by:
  7497 ;;		_RCMode
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text31
  7502  011420                     __ptext31:
  7503                           	opt stack 0
  7504  011420                     _PS2_init:
  7505                           	opt stack 21
  7506                           
  7507                           ;PS2.c: 16: char temp[sizeof(type_read)];
  7508                           ;PS2.c: 18: TRISFbits.TRISF2 = 0;
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;incstack = 0
  7512  011420  9497               	bcf	3991,2,c	;volatile
  7513                           
  7514                           ;PS2.c: 19: TRISFbits.TRISF3 = 1;
  7515  011422  8697               	bsf	3991,3,c	;volatile
  7516                           
  7517                           ;PS2.c: 20: TRISFbits.TRISF5 = 0;
  7518  011424  9A97               	bcf	3991,5,c	;volatile
  7519                           
  7520                           ;PS2.c: 21: TRISFbits.TRISF6 = 0;
  7521  011426  9C97               	bcf	3991,6,c	;volatile
  7522                           
  7523                           ;PS2.c: 24: PORTFbits.RF2 = 1;
  7524  011428  8485               	bsf	3973,2,c	;volatile
  7525                           
  7526                           ;PS2.c: 25: PORTFbits.RF5 = 1;
  7527  01142A  8A85               	bsf	3973,5,c	;volatile
  7528                           
  7529                           ;PS2.c: 27: PS2_readGamepad();
  7530  01142C  EC14  F088         	call	_PS2_readGamepad	;wreg free
  7531                           
  7532                           ;PS2.c: 28: PS2_readGamepad();
  7533  011430  EC14  F088         	call	_PS2_readGamepad	;wreg free
  7534                           
  7535                           ;PS2.c: 30: if(PS2data[1] != 0x41 && PS2data[1] != 0x73 && PS2data[1] != 0x79)
  7536  011434  0E41               	movlw	65
  7537  011436  0100               	movlb	0	; () banked
  7538  011438  19A8               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7539  01143A  B4D8               	btfsc	status,2,c
  7540  01143C  D00C               	goto	l7390
  7541                           
  7542                           ; BSR set to: 0
  7543  01143E  0E73               	movlw	115
  7544  011440  0100               	movlb	0	; () banked
  7545  011442  19A8               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7546  011444  B4D8               	btfsc	status,2,c
  7547  011446  D007               	goto	l7390
  7548                           
  7549                           ; BSR set to: 0
  7550  011448  0E79               	movlw	121
  7551  01144A  0100               	movlb	0	; () banked
  7552  01144C  19A8               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7553  01144E  B4D8               	btfsc	status,2,c
  7554  011450  D002               	goto	l7390
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;PS2.c: 31: {
  7558                           ;PS2.c: 32: return 1;
  7559  011452  0E01               	movlw	1
  7560                           
  7561                           ; BSR set to: 0
  7562  011454  0012               	return	
  7563  011456                     l7390:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;PS2.c: 33: }
  7567                           ;PS2.c: 36: read_delay = 1;
  7568  011456  0E01               	movlw	1
  7569  011458  0100               	movlb	0	; () banked
  7570  01145A  6FD1               	movwf	_read_delay& (0+255),b	;volatile
  7571                           
  7572                           ;PS2.c: 38: for(int y = 0; y <= 10; y++)
  7573  01145C  0E00               	movlw	0
  7574  01145E  0100               	movlb	0	; () banked
  7575  011460  6F9C               	movwf	(PS2_init@y+1)& (0+255),b
  7576  011462  0E00               	movlw	0
  7577  011464  6F9B               	movwf	PS2_init@y& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580  011466  0100               	movlb	0	; () banked
  7581  011468  BF9C               	btfsc	(PS2_init@y+1)& (0+255),7,b
  7582  01146A  D00A               	goto	l7396
  7583  01146C  0100               	movlb	0	; () banked
  7584  01146E  519C               	movf	(PS2_init@y+1)& (0+255),w,b
  7585  011470  E106               	bnz	u5190
  7586  011472  0E0B               	movlw	11
  7587  011474  0100               	movlb	0	; () banked
  7588  011476  5D9B               	subwf	PS2_init@y& (0+255),w,b
  7589  011478  B0D8               	btfsc	status,0,c
  7590  01147A  D08E               	goto	l7438
  7591  01147C  D001               	goto	l7396
  7592  01147E                     u5190:
  7593                           
  7594                           ; BSR set to: 0
  7595  01147E  D08C               	goto	l7438
  7596  011480                     l7396:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;PS2.c: 39: {
  7600                           ;PS2.c: 40: PS2_sendCommandString(enter_config, sizeof(enter_config));
  7601  011480  0EF6               	movlw	low _enter_config
  7602  011482  0100               	movlb	0	; () banked
  7603  011484  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  7604  011486  0E00               	movlw	high _enter_config
  7605  011488  0100               	movlb	0	; () banked
  7606  01148A  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7607  01148C  0E05               	movlw	5
  7608  01148E  0100               	movlb	0	; () banked
  7609  011490  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  7610  011492  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  7611                           
  7612                           ;PS2.c: 43: delay_us(4);
  7613  011496  0E04               	movlw	4
  7614  011498  0100               	movlb	0	; () banked
  7615  01149A  6F60               	movwf	delay_us@x& (0+255),b
  7616  01149C  0E00               	movlw	0
  7617  01149E  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7618  0114A0  0E00               	movlw	0
  7619  0114A2  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7620  0114A4  0E00               	movlw	0
  7621  0114A6  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7622  0114A8  EC97  F091         	call	_delay_us	;wreg free
  7623                           
  7624                           ;PS2.c: 45: PORTFbits.RF2 = 1;
  7625  0114AC  8485               	bsf	3973,2,c	;volatile
  7626                           
  7627                           ;PS2.c: 46: PORTFbits.RF5 = 1;
  7628  0114AE  8A85               	bsf	3973,5,c	;volatile
  7629                           
  7630                           ;PS2.c: 47: PORTFbits.RF6 = 0;
  7631  0114B0  9C85               	bcf	3973,6,c	;volatile
  7632                           
  7633                           ;PS2.c: 49: delay_us(4);
  7634  0114B2  0E04               	movlw	4
  7635  0114B4  0100               	movlb	0	; () banked
  7636  0114B6  6F60               	movwf	delay_us@x& (0+255),b
  7637  0114B8  0E00               	movlw	0
  7638  0114BA  6F61               	movwf	(delay_us@x+1)& (0+255),b
  7639  0114BC  0E00               	movlw	0
  7640  0114BE  6F62               	movwf	(delay_us@x+2)& (0+255),b
  7641  0114C0  0E00               	movlw	0
  7642  0114C2  6F63               	movwf	(delay_us@x+3)& (0+255),b
  7643  0114C4  EC97  F091         	call	_delay_us	;wreg free
  7644                           
  7645                           ;PS2.c: 51: for (int i = 0; i<9; i++)
  7646  0114C8  0E00               	movlw	0
  7647  0114CA  0100               	movlb	0	; () banked
  7648  0114CC  6F9E               	movwf	(PS2_init@i+1)& (0+255),b
  7649  0114CE  0E00               	movlw	0
  7650  0114D0  6F9D               	movwf	PS2_init@i& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653  0114D2  0100               	movlb	0	; () banked
  7654  0114D4  BF9E               	btfsc	(PS2_init@i+1)& (0+255),7,b
  7655  0114D6  D00A               	goto	l7414
  7656  0114D8  0100               	movlb	0	; () banked
  7657  0114DA  519E               	movf	(PS2_init@i+1)& (0+255),w,b
  7658  0114DC  E125               	bnz	l905
  7659  0114DE  0E09               	movlw	9
  7660  0114E0  0100               	movlb	0	; () banked
  7661  0114E2  5D9D               	subwf	PS2_init@i& (0+255),w,b
  7662  0114E4  B0D8               	btfsc	status,0,c
  7663  0114E6  D020               	goto	l905
  7664  0114E8  D001               	goto	l7414
  7665                           
  7666                           ; BSR set to: 0
  7667  0114EA  D01E               	goto	l905
  7668  0114EC                     l7414:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;PS2.c: 52: {
  7672                           ;PS2.c: 53: temp[i] = PS2_shiftInOut(type_read[i]);
  7673  0114EC  0E92               	movlw	low PS2_init@temp
  7674  0114EE  0100               	movlb	0	; () banked
  7675  0114F0  259D               	addwf	PS2_init@i& (0+255),w,b
  7676  0114F2  6ED9               	movwf	fsr2l,c
  7677  0114F4  0E00               	movlw	high PS2_init@temp
  7678  0114F6  0100               	movlb	0	; () banked
  7679  0114F8  219E               	addwfc	(PS2_init@i+1)& (0+255),w,b
  7680  0114FA  6EDA               	movwf	fsr2h,c
  7681  0114FC  0EDB               	movlw	low _type_read
  7682  0114FE  0100               	movlb	0	; () banked
  7683  011500  259D               	addwf	PS2_init@i& (0+255),w,b
  7684  011502  6EE1               	movwf	fsr1l,c
  7685  011504  0E00               	movlw	high _type_read
  7686  011506  0100               	movlb	0	; () banked
  7687  011508  219E               	addwfc	(PS2_init@i+1)& (0+255),w,b
  7688  01150A  6EE2               	movwf	fsr1h,c
  7689  01150C  50E7               	movf	indf1,w,c
  7690  01150E  EC57  F08E         	call	_PS2_shiftInOut
  7691  011512  6EDF               	movwf	indf2,c
  7692  011514  0100               	movlb	0	; () banked
  7693  011516  4B9D               	infsnz	PS2_init@i& (0+255),f,b
  7694  011518  2B9E               	incf	(PS2_init@i+1)& (0+255),f,b
  7695                           
  7696                           ; BSR set to: 0
  7697  01151A  0100               	movlb	0	; () banked
  7698  01151C  BF9E               	btfsc	(PS2_init@i+1)& (0+255),7,b
  7699  01151E  D7E6               	goto	l7414
  7700  011520  0100               	movlb	0	; () banked
  7701  011522  519E               	movf	(PS2_init@i+1)& (0+255),w,b
  7702  011524  E101               	bnz	u5210
  7703  011526  D7DB               	goto	L2
  7704  011528                     u5210:
  7705  011528                     l905:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;PS2.c: 54: }
  7709                           ;PS2.c: 56: PORTFbits.RF6 = 1;
  7710  011528  8C85               	bsf	3973,6,c	;volatile
  7711                           
  7712                           ;PS2.c: 58: controller_type = temp[3];
  7713  01152A  C095  F0D0         	movff	PS2_init@temp+3,_controller_type	;volatile
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;PS2.c: 60: PS2_sendCommandString(set_mode, sizeof(set_mode));
  7717  01152E  0EED               	movlw	low _set_mode
  7718  011530  0100               	movlb	0	; () banked
  7719  011532  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  7720  011534  0E00               	movlw	high _set_mode
  7721  011536  0100               	movlb	0	; () banked
  7722  011538  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7723  01153A  0E09               	movlw	9
  7724  01153C  0100               	movlb	0	; () banked
  7725  01153E  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  7726  011540  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  7727                           
  7728                           ;PS2.c: 62: PS2_sendCommandString(exit_config, sizeof(exit_config));
  7729  011544  0EE4               	movlw	low _exit_config
  7730  011546  0100               	movlb	0	; () banked
  7731  011548  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  7732  01154A  0E00               	movlw	high _exit_config
  7733  01154C  0100               	movlb	0	; () banked
  7734  01154E  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  7735  011550  0E09               	movlw	9
  7736  011552  0100               	movlb	0	; () banked
  7737  011554  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  7738  011556  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  7739                           
  7740                           ;PS2.c: 64: PS2_readGamepad();
  7741  01155A  EC14  F088         	call	_PS2_readGamepad	;wreg free
  7742                           
  7743                           ;PS2.c: 66: if(PS2data[1] == 0x73)
  7744  01155E  0E73               	movlw	115
  7745  011560  0100               	movlb	0	; () banked
  7746  011562  19A8               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  7747  011564  B4D8               	btfsc	status,2,c
  7748  011566  D018               	goto	l7438
  7749  011568  D001               	goto	l7428
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;PS2.c: 67: break;
  7753  01156A  D016               	goto	l7438
  7754  01156C                     l7428:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;PS2.c: 69: if(y == 10)
  7758  01156C  0E0A               	movlw	10
  7759  01156E  0100               	movlb	0	; () banked
  7760  011570  199B               	xorwf	PS2_init@y& (0+255),w,b
  7761  011572  0100               	movlb	0	; () banked
  7762  011574  119C               	iorwf	(PS2_init@y+1)& (0+255),w,b
  7763  011576  A4D8               	btfss	status,2,c
  7764  011578  D002               	goto	l7434
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;PS2.c: 70: {
  7768                           ;PS2.c: 71: return 2;
  7769  01157A  0E02               	movlw	2
  7770                           
  7771                           ; BSR set to: 0
  7772  01157C  0012               	return	
  7773  01157E                     l7434:
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;PS2.c: 72: }
  7777                           ;PS2.c: 73: read_delay += 1;
  7778  01157E  0100               	movlb	0	; () banked
  7779  011580  2BD1               	incf	_read_delay& (0+255),f,b	;volatile
  7780  011582  0100               	movlb	0	; () banked
  7781  011584  4B9B               	infsnz	PS2_init@y& (0+255),f,b
  7782  011586  2B9C               	incf	(PS2_init@y+1)& (0+255),f,b
  7783                           
  7784                           ; BSR set to: 0
  7785  011588  0100               	movlb	0	; () banked
  7786  01158A  BF9C               	btfsc	(PS2_init@y+1)& (0+255),7,b
  7787  01158C  D779               	goto	l7396
  7788  01158E  0100               	movlb	0	; () banked
  7789  011590  519C               	movf	(PS2_init@y+1)& (0+255),w,b
  7790  011592  E102               	bnz	l7438
  7791  011594  D76E               	goto	L3
  7792  011596  D000               	goto	l7438
  7793  011598                     l7438:
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;PS2.c: 74: }
  7797                           ;PS2.c: 75: return 0;
  7798  011598  0E00               	movlw	0
  7799  01159A  0012               	return	
  7800                           
  7801                           ; BSR set to: 0
  7802                           
  7803                           ; BSR set to: 0
  7804  01159C  0012               	return		;funcret
  7805  01159E                     __end_of_PS2_init:
  7806                           	opt stack 0
  7807                           tblptru	equ	0xFF8
  7808                           tblptrh	equ	0xFF7
  7809                           tblptrl	equ	0xFF6
  7810                           tablat	equ	0xFF5
  7811                           prodh	equ	0xFF4
  7812                           prodl	equ	0xFF3
  7813                           intcon	equ	0xFF2
  7814                           intcon2	equ	0xFF1
  7815                           intcon3	equ	0xFF0
  7816                           postinc0	equ	0xFEE
  7817                           wreg	equ	0xFE8
  7818                           indf1	equ	0xFE7
  7819                           postdec1	equ	0xFE5
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _PS2_readGamepad *****************
  7828 ;; Defined at:
  7829 ;;		line 78 in file "PS2.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  i               2   48[BANK0 ] int 
  7834 ;;  i               2   46[BANK0 ] int 
  7835 ;;  dword2         12   21[BANK0 ] unsigned char [12]
  7836 ;;  dword           9   33[BANK0 ] unsigned char [9]
  7837 ;;  temp            4   42[BANK0 ] long 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;		None               void
  7840 ;; Registers used:
  7841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7851 ;;Total ram usage:       34 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    7
  7854 ;; This function calls:
  7855 ;;		_PS2_reconfig
  7856 ;;		_PS2_shiftInOut
  7857 ;;		_delay_ms
  7858 ;;		_delay_us
  7859 ;;		_millis
  7860 ;; This function is called by:
  7861 ;;		_RCMode
  7862 ;;		_PS2_init
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text32
  7867  011028                     __ptext32:
  7868                           	opt stack 0
  7869  011028                     _PS2_readGamepad:
  7870                           	opt stack 22
  7871                           
  7872                           ;PS2.c: 80: long temp = millis() - last_read;
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;incstack = 0
  7876  011028  C0C8  F070         	movff	_last_read,??_PS2_readGamepad	;volatile
  7877  01102C  C0C9  F071         	movff	_last_read+1,??_PS2_readGamepad+1	;volatile
  7878  011030  C0CA  F072         	movff	_last_read+2,??_PS2_readGamepad+2	;volatile
  7879  011034  C0CB  F073         	movff	_last_read+3,??_PS2_readGamepad+3	;volatile
  7880  011038  0100               	movlb	0	; () banked
  7881  01103A  1F70               	comf	??_PS2_readGamepad& (0+255),f,b
  7882  01103C  1F71               	comf	(??_PS2_readGamepad+1)& (0+255),f,b
  7883  01103E  1F72               	comf	(??_PS2_readGamepad+2)& (0+255),f,b
  7884  011040  1F73               	comf	(??_PS2_readGamepad+3)& (0+255),f,b
  7885  011042  2B70               	incf	??_PS2_readGamepad& (0+255),f,b
  7886  011044  0E00               	movlw	0
  7887  011046  2371               	addwfc	(??_PS2_readGamepad+1)& (0+255),f,b
  7888  011048  2372               	addwfc	(??_PS2_readGamepad+2)& (0+255),f,b
  7889  01104A  2373               	addwfc	(??_PS2_readGamepad+3)& (0+255),f,b
  7890  01104C  ECD9  F092         	call	_millis	;wreg free
  7891  011050  0100               	movlb	0	; () banked
  7892  011052  5170               	movf	??_PS2_readGamepad& (0+255),w,b
  7893  011054  0100               	movlb	0	; () banked
  7894  011056  2560               	addwf	?_millis& (0+255),w,b
  7895  011058  0100               	movlb	0	; () banked
  7896  01105A  6F8A               	movwf	PS2_readGamepad@temp& (0+255),b
  7897  01105C  0100               	movlb	0	; () banked
  7898  01105E  5171               	movf	(??_PS2_readGamepad+1)& (0+255),w,b
  7899  011060  0100               	movlb	0	; () banked
  7900  011062  2161               	addwfc	(?_millis+1)& (0+255),w,b
  7901  011064  0100               	movlb	0	; () banked
  7902  011066  6F8B               	movwf	(PS2_readGamepad@temp+1)& (0+255),b
  7903  011068  0100               	movlb	0	; () banked
  7904  01106A  5172               	movf	(??_PS2_readGamepad+2)& (0+255),w,b
  7905  01106C  0100               	movlb	0	; () banked
  7906  01106E  2162               	addwfc	(?_millis+2)& (0+255),w,b
  7907  011070  0100               	movlb	0	; () banked
  7908  011072  6F8C               	movwf	(PS2_readGamepad@temp+2)& (0+255),b
  7909  011074  0100               	movlb	0	; () banked
  7910  011076  5173               	movf	(??_PS2_readGamepad+3)& (0+255),w,b
  7911  011078  0100               	movlb	0	; () banked
  7912  01107A  2163               	addwfc	(?_millis+3)& (0+255),w,b
  7913  01107C  0100               	movlb	0	; () banked
  7914  01107E  6F8D               	movwf	(PS2_readGamepad@temp+3)& (0+255),b
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;PS2.c: 82: if (temp > 1500)
  7918  011080  0100               	movlb	0	; () banked
  7919  011082  BF8D               	btfsc	(PS2_readGamepad@temp+3)& (0+255),7,b
  7920  011084  D010               	goto	l6760
  7921  011086  0100               	movlb	0	; () banked
  7922  011088  518D               	movf	(PS2_readGamepad@temp+3)& (0+255),w,b
  7923  01108A  0100               	movlb	0	; () banked
  7924  01108C  118C               	iorwf	(PS2_readGamepad@temp+2)& (0+255),w,b
  7925  01108E  E108               	bnz	u4600
  7926  011090  0EDD               	movlw	221
  7927  011092  0100               	movlb	0	; () banked
  7928  011094  5D8A               	subwf	PS2_readGamepad@temp& (0+255),w,b
  7929  011096  0E05               	movlw	5
  7930  011098  0100               	movlb	0	; () banked
  7931  01109A  598B               	subwfb	(PS2_readGamepad@temp+1)& (0+255),w,b
  7932  01109C  A0D8               	btfss	status,0,c
  7933  01109E  D003               	goto	l6760
  7934  0110A0                     u4600:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;PS2.c: 83: {
  7938                           ;PS2.c: 84: PS2_reconfig();
  7939  0110A0  EC75  F091         	call	_PS2_reconfig	;wreg free
  7940  0110A4  D000               	goto	l6760
  7941  0110A6                     l6760:
  7942                           
  7943                           ;PS2.c: 85: }
  7944                           ;PS2.c: 87: if(temp < read_delay)
  7945  0110A6  C0D1  F070         	movff	_read_delay,??_PS2_readGamepad	;volatile
  7946  0110AA  0100               	movlb	0	; () banked
  7947  0110AC  6B71               	clrf	(??_PS2_readGamepad+1)& (0+255),b
  7948  0110AE  6B72               	clrf	(??_PS2_readGamepad+2)& (0+255),b
  7949  0110B0  6B73               	clrf	(??_PS2_readGamepad+3)& (0+255),b
  7950  0110B2  0100               	movlb	0	; () banked
  7951  0110B4  5170               	movf	??_PS2_readGamepad& (0+255),w,b
  7952  0110B6  0100               	movlb	0	; () banked
  7953  0110B8  5D8A               	subwf	PS2_readGamepad@temp& (0+255),w,b
  7954  0110BA  0100               	movlb	0	; () banked
  7955  0110BC  5171               	movf	(??_PS2_readGamepad+1)& (0+255),w,b
  7956  0110BE  0100               	movlb	0	; () banked
  7957  0110C0  598B               	subwfb	(PS2_readGamepad@temp+1)& (0+255),w,b
  7958  0110C2  0100               	movlb	0	; () banked
  7959  0110C4  5172               	movf	(??_PS2_readGamepad+2)& (0+255),w,b
  7960  0110C6  0100               	movlb	0	; () banked
  7961  0110C8  598C               	subwfb	(PS2_readGamepad@temp+2)& (0+255),w,b
  7962  0110CA  0100               	movlb	0	; () banked
  7963  0110CC  518D               	movf	(PS2_readGamepad@temp+3)& (0+255),w,b
  7964  0110CE  0A80               	xorlw	128
  7965  0110D0  0100               	movlb	0	; () banked
  7966  0110D2  6F74               	movwf	(??_PS2_readGamepad+4)& (0+255),b
  7967  0110D4  0100               	movlb	0	; () banked
  7968  0110D6  5173               	movf	(??_PS2_readGamepad+3)& (0+255),w,b
  7969  0110D8  0A80               	xorlw	128
  7970  0110DA  0100               	movlb	0	; () banked
  7971  0110DC  5974               	subwfb	(??_PS2_readGamepad+4)& (0+255),w,b
  7972  0110DE  B0D8               	btfsc	status,0,c
  7973  0110E0  D02A               	goto	l6764
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;PS2.c: 88: {
  7977                           ;PS2.c: 89: delay_ms(read_delay - temp);
  7978  0110E2  C08A  F070         	movff	PS2_readGamepad@temp,??_PS2_readGamepad
  7979  0110E6  C08B  F071         	movff	PS2_readGamepad@temp+1,??_PS2_readGamepad+1
  7980  0110EA  C08C  F072         	movff	PS2_readGamepad@temp+2,??_PS2_readGamepad+2
  7981  0110EE  C08D  F073         	movff	PS2_readGamepad@temp+3,??_PS2_readGamepad+3
  7982  0110F2  0100               	movlb	0	; () banked
  7983  0110F4  1F70               	comf	??_PS2_readGamepad& (0+255),f,b
  7984  0110F6  1F71               	comf	(??_PS2_readGamepad+1)& (0+255),f,b
  7985  0110F8  1F72               	comf	(??_PS2_readGamepad+2)& (0+255),f,b
  7986  0110FA  1F73               	comf	(??_PS2_readGamepad+3)& (0+255),f,b
  7987  0110FC  2B70               	incf	??_PS2_readGamepad& (0+255),f,b
  7988  0110FE  0E00               	movlw	0
  7989  011100  2371               	addwfc	(??_PS2_readGamepad+1)& (0+255),f,b
  7990  011102  2372               	addwfc	(??_PS2_readGamepad+2)& (0+255),f,b
  7991  011104  2373               	addwfc	(??_PS2_readGamepad+3)& (0+255),f,b
  7992  011106  0100               	movlb	0	; () banked
  7993  011108  51D1               	movf	_read_delay& (0+255),w,b	;volatile
  7994  01110A  0100               	movlb	0	; () banked
  7995  01110C  2570               	addwf	??_PS2_readGamepad& (0+255),w,b
  7996  01110E  0100               	movlb	0	; () banked
  7997  011110  6F64               	movwf	delay_ms@x& (0+255),b
  7998  011112  0E00               	movlw	0
  7999  011114  0100               	movlb	0	; () banked
  8000  011116  2171               	addwfc	(??_PS2_readGamepad+1)& (0+255),w,b
  8001  011118  0100               	movlb	0	; () banked
  8002  01111A  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  8003  01111C  0E00               	movlw	0
  8004  01111E  0100               	movlb	0	; () banked
  8005  011120  2172               	addwfc	(??_PS2_readGamepad+2)& (0+255),w,b
  8006  011122  0100               	movlb	0	; () banked
  8007  011124  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  8008  011126  0E00               	movlw	0
  8009  011128  0100               	movlb	0	; () banked
  8010  01112A  2173               	addwfc	(??_PS2_readGamepad+3)& (0+255),w,b
  8011  01112C  0100               	movlb	0	; () banked
  8012  01112E  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  8013  011130  EC0A  F091         	call	_delay_ms	;wreg free
  8014  011134  D000               	goto	l6764
  8015  011136                     l6764:
  8016                           
  8017                           ;PS2.c: 90: }
  8018                           ;PS2.c: 92: last_buttons = buttons;
  8019  011136  C0CC  F0CE         	movff	_buttons,_last_buttons	;volatile
  8020  01113A  C0CD  F0CF         	movff	_buttons+1,_last_buttons+1	;volatile
  8021                           
  8022                           ;PS2.c: 94: PORTFbits.RF2 = 1;
  8023  01113E  8485               	bsf	3973,2,c	;volatile
  8024                           
  8025                           ;PS2.c: 95: PORTFbits.RF5 = 1;
  8026  011140  8A85               	bsf	3973,5,c	;volatile
  8027                           
  8028                           ;PS2.c: 96: PORTFbits.RF6 = 0;
  8029  011142  9C85               	bcf	3973,6,c	;volatile
  8030                           
  8031                           ;PS2.c: 98: delay_us(4);
  8032  011144  0E04               	movlw	4
  8033  011146  0100               	movlb	0	; () banked
  8034  011148  6F60               	movwf	delay_us@x& (0+255),b
  8035  01114A  0E00               	movlw	0
  8036  01114C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  8037  01114E  0E00               	movlw	0
  8038  011150  6F62               	movwf	(delay_us@x+2)& (0+255),b
  8039  011152  0E00               	movlw	0
  8040  011154  6F63               	movwf	(delay_us@x+3)& (0+255),b
  8041  011156  EC97  F091         	call	_delay_us	;wreg free
  8042                           
  8043                           ;PS2.c: 101: char dword[9] = {0x01,0x42,0,0,0x00,0,0,0,0};
  8044  01115A  EE20  F0D2         	lfsr	2,PS2_readGamepad@F16091
  8045  01115E  EE10  F081         	lfsr	1,PS2_readGamepad@dword
  8046  011162  0E08               	movlw	8
  8047  011164                     u4621:
  8048  011164  CFDB FFE3          	movff	plusw2,plusw1
  8049  011168  06E8               	decf	wreg,f,c
  8050  01116A  E2FC               	bc	u4621
  8051                           
  8052                           ;PS2.c: 102: char dword2[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
  8053  01116C  EE20  F0BC         	lfsr	2,PS2_readGamepad@F16093
  8054  011170  EE10  F075         	lfsr	1,PS2_readGamepad@dword2
  8055  011174  0E0B               	movlw	11
  8056  011176                     u4631:
  8057  011176  CFDB FFE3          	movff	plusw2,plusw1
  8058  01117A  06E8               	decf	wreg,f,c
  8059  01117C  E2FC               	bc	u4631
  8060                           
  8061                           ;PS2.c: 105: for (int i = 0; i<9; i++)
  8062  01117E  0E00               	movlw	0
  8063  011180  0100               	movlb	0	; () banked
  8064  011182  6F8F               	movwf	(PS2_readGamepad@i+1)& (0+255),b
  8065  011184  0E00               	movlw	0
  8066  011186  6F8E               	movwf	PS2_readGamepad@i& (0+255),b
  8067  011188                     l6778:
  8068                           
  8069                           ; BSR set to: 0
  8070  011188  0100               	movlb	0	; () banked
  8071  01118A  BF8F               	btfsc	(PS2_readGamepad@i+1)& (0+255),7,b
  8072  01118C  D00A               	goto	l6782
  8073  01118E  0100               	movlb	0	; () banked
  8074  011190  518F               	movf	(PS2_readGamepad@i+1)& (0+255),w,b
  8075  011192  E120               	bnz	l6788
  8076  011194  0E09               	movlw	9
  8077  011196  0100               	movlb	0	; () banked
  8078  011198  5D8E               	subwf	PS2_readGamepad@i& (0+255),w,b
  8079  01119A  B0D8               	btfsc	status,0,c
  8080  01119C  D01B               	goto	l6788
  8081  01119E  D001               	goto	l6782
  8082                           
  8083                           ; BSR set to: 0
  8084  0111A0  D019               	goto	l6788
  8085  0111A2                     l6782:
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;PS2.c: 106: {
  8089                           ;PS2.c: 107: PS2data[i] = PS2_shiftInOut(dword[i]);
  8090  0111A2  0EA7               	movlw	low _PS2data
  8091  0111A4  0100               	movlb	0	; () banked
  8092  0111A6  258E               	addwf	PS2_readGamepad@i& (0+255),w,b
  8093  0111A8  6ED9               	movwf	fsr2l,c
  8094  0111AA  0E00               	movlw	high _PS2data
  8095  0111AC  0100               	movlb	0	; () banked
  8096  0111AE  218F               	addwfc	(PS2_readGamepad@i+1)& (0+255),w,b
  8097  0111B0  6EDA               	movwf	fsr2h,c
  8098  0111B2  0E81               	movlw	low PS2_readGamepad@dword
  8099  0111B4  0100               	movlb	0	; () banked
  8100  0111B6  258E               	addwf	PS2_readGamepad@i& (0+255),w,b
  8101  0111B8  6EE1               	movwf	fsr1l,c
  8102  0111BA  0E00               	movlw	high PS2_readGamepad@dword
  8103  0111BC  0100               	movlb	0	; () banked
  8104  0111BE  218F               	addwfc	(PS2_readGamepad@i+1)& (0+255),w,b
  8105  0111C0  6EE2               	movwf	fsr1h,c
  8106  0111C2  50E7               	movf	indf1,w,c
  8107  0111C4  EC57  F08E         	call	_PS2_shiftInOut
  8108  0111C8  6EDF               	movwf	indf2,c
  8109  0111CA  0100               	movlb	0	; () banked
  8110  0111CC  4B8E               	infsnz	PS2_readGamepad@i& (0+255),f,b
  8111  0111CE  2B8F               	incf	(PS2_readGamepad@i+1)& (0+255),f,b
  8112  0111D0  D7DB               	goto	l6778
  8113                           
  8114                           ; BSR set to: 0
  8115  0111D2  D000               	goto	l6788
  8116  0111D4                     l6788:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;PS2.c: 108: }
  8120                           ;PS2.c: 110: if(PS2data[1] == 0x79)
  8121  0111D4  0E79               	movlw	121
  8122  0111D6  0100               	movlb	0	; () banked
  8123  0111D8  19A8               	xorwf	(_PS2data+1)& (0+255),w,b	;volatile
  8124  0111DA  A4D8               	btfss	status,2,c
  8125  0111DC  D035               	goto	l918
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;PS2.c: 111: {
  8129                           ;PS2.c: 112: for (int i = 0; i<12; i++)
  8130  0111DE  0E00               	movlw	0
  8131  0111E0  0100               	movlb	0	; () banked
  8132  0111E2  6F91               	movwf	(PS2_readGamepad@i_2507+1)& (0+255),b
  8133  0111E4  0E00               	movlw	0
  8134  0111E6  6F90               	movwf	PS2_readGamepad@i_2507& (0+255),b
  8135  0111E8                     l6792:
  8136                           
  8137                           ; BSR set to: 0
  8138  0111E8  0100               	movlb	0	; () banked
  8139  0111EA  BF91               	btfsc	(PS2_readGamepad@i_2507+1)& (0+255),7,b
  8140  0111EC  D00A               	goto	l6796
  8141  0111EE  0100               	movlb	0	; () banked
  8142  0111F0  5191               	movf	(PS2_readGamepad@i_2507+1)& (0+255),w,b
  8143  0111F2  E12A               	bnz	l918
  8144  0111F4  0E0C               	movlw	12
  8145  0111F6  0100               	movlb	0	; () banked
  8146  0111F8  5D90               	subwf	PS2_readGamepad@i_2507& (0+255),w,b
  8147  0111FA  B0D8               	btfsc	status,0,c
  8148  0111FC  D025               	goto	l918
  8149  0111FE  D001               	goto	l6796
  8150                           
  8151                           ; BSR set to: 0
  8152  011200  D023               	goto	l918
  8153  011202                     l6796:
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;PS2.c: 113: {
  8157                           ;PS2.c: 114: PS2data[i+9] = PS2_shiftInOut(dword2[i]);
  8158  011202  0E09               	movlw	9
  8159  011204  0100               	movlb	0	; () banked
  8160  011206  2590               	addwf	PS2_readGamepad@i_2507& (0+255),w,b
  8161  011208  0100               	movlb	0	; () banked
  8162  01120A  6F70               	movwf	??_PS2_readGamepad& (0+255),b
  8163  01120C  0E00               	movlw	0
  8164  01120E  0100               	movlb	0	; () banked
  8165  011210  2191               	addwfc	(PS2_readGamepad@i_2507+1)& (0+255),w,b
  8166  011212  0100               	movlb	0	; () banked
  8167  011214  6F71               	movwf	(??_PS2_readGamepad+1)& (0+255),b
  8168  011216  0EA7               	movlw	low _PS2data
  8169  011218  0100               	movlb	0	; () banked
  8170  01121A  2570               	addwf	??_PS2_readGamepad& (0+255),w,b
  8171  01121C  6ED9               	movwf	fsr2l,c
  8172  01121E  0E00               	movlw	high _PS2data
  8173  011220  0100               	movlb	0	; () banked
  8174  011222  2171               	addwfc	(??_PS2_readGamepad+1)& (0+255),w,b
  8175  011224  6EDA               	movwf	fsr2h,c
  8176  011226  0E75               	movlw	low PS2_readGamepad@dword2
  8177  011228  0100               	movlb	0	; () banked
  8178  01122A  2590               	addwf	PS2_readGamepad@i_2507& (0+255),w,b
  8179  01122C  6EE1               	movwf	fsr1l,c
  8180  01122E  0E00               	movlw	high PS2_readGamepad@dword2
  8181  011230  0100               	movlb	0	; () banked
  8182  011232  2191               	addwfc	(PS2_readGamepad@i_2507+1)& (0+255),w,b
  8183  011234  6EE2               	movwf	fsr1h,c
  8184  011236  50E7               	movf	indf1,w,c
  8185  011238  EC57  F08E         	call	_PS2_shiftInOut
  8186  01123C  6EDF               	movwf	indf2,c
  8187  01123E  0100               	movlb	0	; () banked
  8188  011240  4B90               	infsnz	PS2_readGamepad@i_2507& (0+255),f,b
  8189  011242  2B91               	incf	(PS2_readGamepad@i_2507+1)& (0+255),f,b
  8190  011244  D7D1               	goto	l6792
  8191                           
  8192                           ; BSR set to: 0
  8193  011246  D000               	goto	l918
  8194  011248                     l918:
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;PS2.c: 115: }
  8198                           ;PS2.c: 116: }
  8199                           ;PS2.c: 118: PORTFbits.RF6 = 1;
  8200  011248  8C85               	bsf	3973,6,c	;volatile
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;PS2.c: 120: buttons = *(unsigned int*)(PS2data+3);
  8204  01124A  EE20  F0AA         	lfsr	2,_PS2data+3
  8205  01124E  CFDE F0CC          	movff	postinc2,_buttons	;volatile
  8206  011252  CFDD F0CD          	movff	postdec2,_buttons+1	;volatile
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;PS2.c: 121: last_read = millis();
  8210  011256  ECD9  F092         	call	_millis	;wreg free
  8211  01125A  C060  F0C8         	movff	?_millis,_last_read	;volatile
  8212  01125E  C061  F0C9         	movff	?_millis+1,_last_read+1	;volatile
  8213  011262  C062  F0CA         	movff	?_millis+2,_last_read+2	;volatile
  8214  011266  C063  F0CB         	movff	?_millis+3,_last_read+3	;volatile
  8215  01126A  0012               	return		;funcret
  8216  01126C                     __end_of_PS2_readGamepad:
  8217                           	opt stack 0
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           intcon	equ	0xFF2
  8225                           intcon2	equ	0xFF1
  8226                           intcon3	equ	0xFF0
  8227                           postinc0	equ	0xFEE
  8228                           wreg	equ	0xFE8
  8229                           indf1	equ	0xFE7
  8230                           postdec1	equ	0xFE5
  8231                           plusw1	equ	0xFE3
  8232                           fsr1h	equ	0xFE2
  8233                           fsr1l	equ	0xFE1
  8234                           indf2	equ	0xFDF
  8235                           postinc2	equ	0xFDE
  8236                           postdec2	equ	0xFDD
  8237                           plusw2	equ	0xFDB
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _millis *****************
  8243 ;; Defined at:
  8244 ;;		line 115 in file "delays.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  4    0[BANK0 ] unsigned long 
  8251 ;; Registers used:
  8252 ;;		None
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        4 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    3
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_PS2_readGamepad
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text33
  8273  0125B2                     __ptext33:
  8274                           	opt stack 0
  8275  0125B2                     _millis:
  8276                           	opt stack 25
  8277                           
  8278                           ;delays.c: 117: return millisCount;
  8279                           
  8280                           ;incstack = 0
  8281  0125B2  C026  F060         	movff	_millisCount,?_millis
  8282  0125B6  C027  F061         	movff	_millisCount+1,?_millis+1
  8283  0125BA  C028  F062         	movff	_millisCount+2,?_millis+2
  8284  0125BE  C029  F063         	movff	_millisCount+3,?_millis+3
  8285  0125C2  0012               	return		;funcret
  8286  0125C4                     __end_of_millis:
  8287                           	opt stack 0
  8288                           tblptru	equ	0xFF8
  8289                           tblptrh	equ	0xFF7
  8290                           tblptrl	equ	0xFF6
  8291                           tablat	equ	0xFF5
  8292                           prodh	equ	0xFF4
  8293                           prodl	equ	0xFF3
  8294                           intcon	equ	0xFF2
  8295                           intcon2	equ	0xFF1
  8296                           intcon3	equ	0xFF0
  8297                           postinc0	equ	0xFEE
  8298                           wreg	equ	0xFE8
  8299                           indf1	equ	0xFE7
  8300                           postdec1	equ	0xFE5
  8301                           plusw1	equ	0xFE3
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           plusw2	equ	0xFDB
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312 ;; *************** function _PS2_reconfig *****************
  8313 ;; Defined at:
  8314 ;;		line 124 in file "PS2.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;		None
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;		None
  8319 ;; Return value:  Size  Location     Type
  8320 ;;		None               void
  8321 ;; Registers used:
  8322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;Total ram usage:        0 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:    6
  8335 ;; This function calls:
  8336 ;;		_PS2_sendCommandString
  8337 ;; This function is called by:
  8338 ;;		_PS2_readGamepad
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text34
  8343  0122EA                     __ptext34:
  8344                           	opt stack 0
  8345  0122EA                     _PS2_reconfig:
  8346                           	opt stack 22
  8347                           
  8348                           ;PS2.c: 126: PS2_sendCommandString(enter_config, sizeof(enter_config));
  8349                           
  8350                           ;incstack = 0
  8351  0122EA  0EF6               	movlw	low _enter_config
  8352  0122EC  0100               	movlb	0	; () banked
  8353  0122EE  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  8354  0122F0  0E00               	movlw	high _enter_config
  8355  0122F2  0100               	movlb	0	; () banked
  8356  0122F4  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  8357  0122F6  0E05               	movlw	5
  8358  0122F8  0100               	movlb	0	; () banked
  8359  0122FA  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  8360  0122FC  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  8361                           
  8362                           ;PS2.c: 127: PS2_sendCommandString(set_mode, sizeof(set_mode));
  8363  012300  0EED               	movlw	low _set_mode
  8364  012302  0100               	movlb	0	; () banked
  8365  012304  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  8366  012306  0E00               	movlw	high _set_mode
  8367  012308  0100               	movlb	0	; () banked
  8368  01230A  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  8369  01230C  0E09               	movlw	9
  8370  01230E  0100               	movlb	0	; () banked
  8371  012310  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  8372  012312  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  8373                           
  8374                           ;PS2.c: 128: PS2_sendCommandString(exit_config, sizeof(exit_config));
  8375  012316  0EE4               	movlw	low _exit_config
  8376  012318  0100               	movlb	0	; () banked
  8377  01231A  6F68               	movwf	PS2_sendCommandString@string& (0+255),b
  8378  01231C  0E00               	movlw	high _exit_config
  8379  01231E  0100               	movlb	0	; () banked
  8380  012320  6F69               	movwf	(PS2_sendCommandString@string+1)& (0+255),b
  8381  012322  0E09               	movlw	9
  8382  012324  0100               	movlb	0	; () banked
  8383  012326  6F6A               	movwf	PS2_sendCommandString@len& (0+255),b
  8384  012328  EC6E  F090         	call	_PS2_sendCommandString	;wreg free
  8385  01232C  0012               	return		;funcret
  8386  01232E                     __end_of_PS2_reconfig:
  8387                           	opt stack 0
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           intcon2	equ	0xFF1
  8396                           intcon3	equ	0xFF0
  8397                           postinc0	equ	0xFEE
  8398                           wreg	equ	0xFE8
  8399                           indf1	equ	0xFE7
  8400                           postdec1	equ	0xFE5
  8401                           plusw1	equ	0xFE3
  8402                           fsr1h	equ	0xFE2
  8403                           fsr1l	equ	0xFE1
  8404                           indf2	equ	0xFDF
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           plusw2	equ	0xFDB
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _PS2_sendCommandString *****************
  8413 ;; Defined at:
  8414 ;;		line 131 in file "PS2.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  string          2    8[BANK0 ] PTR unsigned char 
  8417 ;;		 -> exit_config(9), set_mode(9), enter_config(5), 
  8418 ;;  len             1   10[BANK0 ] unsigned char 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  y               2   14[BANK0 ] int 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;		None               void
  8423 ;; Registers used:
  8424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8430 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;Total ram usage:        8 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    5
  8437 ;; This function calls:
  8438 ;;		_PS2_shiftInOut
  8439 ;;		_delay_ms
  8440 ;; This function is called by:
  8441 ;;		_PS2_init
  8442 ;;		_PS2_reconfig
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text35
  8447  0120DC                     __ptext35:
  8448                           	opt stack 0
  8449  0120DC                     _PS2_sendCommandString:
  8450                           	opt stack 22
  8451                           
  8452                           ;PS2.c: 133: PORTFbits.RF6 = 0;
  8453                           
  8454                           ;incstack = 0
  8455  0120DC  9C85               	bcf	3973,6,c	;volatile
  8456                           
  8457                           ;PS2.c: 134: for (int y=0; y < len; y++)
  8458  0120DE  0E00               	movlw	0
  8459  0120E0  0100               	movlb	0	; () banked
  8460  0120E2  6F6F               	movwf	(PS2_sendCommandString@y+1)& (0+255),b
  8461  0120E4  0E00               	movlw	0
  8462  0120E6  6F6E               	movwf	PS2_sendCommandString@y& (0+255),b
  8463  0120E8  D011               	goto	l6540
  8464  0120EA                     l6536:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;PS2.c: 135: {
  8468                           ;PS2.c: 136: PS2_shiftInOut(string[y]);
  8469  0120EA  0100               	movlb	0	; () banked
  8470  0120EC  516E               	movf	PS2_sendCommandString@y& (0+255),w,b
  8471  0120EE  0100               	movlb	0	; () banked
  8472  0120F0  2568               	addwf	PS2_sendCommandString@string& (0+255),w,b
  8473  0120F2  6ED9               	movwf	fsr2l,c
  8474  0120F4  0100               	movlb	0	; () banked
  8475  0120F6  516F               	movf	(PS2_sendCommandString@y+1)& (0+255),w,b
  8476  0120F8  0100               	movlb	0	; () banked
  8477  0120FA  2169               	addwfc	(PS2_sendCommandString@string+1)& (0+255),w,b
  8478  0120FC  6EDA               	movwf	fsr2h,c
  8479  0120FE  50DF               	movf	indf2,w,c
  8480  012100  EC57  F08E         	call	_PS2_shiftInOut
  8481  012104  0100               	movlb	0	; () banked
  8482  012106  4B6E               	infsnz	PS2_sendCommandString@y& (0+255),f,b
  8483  012108  2B6F               	incf	(PS2_sendCommandString@y+1)& (0+255),f,b
  8484  01210A  D000               	goto	l6540
  8485  01210C                     l6540:
  8486                           
  8487                           ; BSR set to: 0
  8488  01210C  0100               	movlb	0	; () banked
  8489  01210E  516A               	movf	PS2_sendCommandString@len& (0+255),w,b
  8490  012110  0100               	movlb	0	; () banked
  8491  012112  6F6B               	movwf	??_PS2_sendCommandString& (0+255),b
  8492  012114  6B6C               	clrf	(??_PS2_sendCommandString+1)& (0+255),b
  8493  012116  0100               	movlb	0	; () banked
  8494  012118  516B               	movf	??_PS2_sendCommandString& (0+255),w,b
  8495  01211A  0100               	movlb	0	; () banked
  8496  01211C  5D6E               	subwf	PS2_sendCommandString@y& (0+255),w,b
  8497  01211E  0100               	movlb	0	; () banked
  8498  012120  516F               	movf	(PS2_sendCommandString@y+1)& (0+255),w,b
  8499  012122  0A80               	xorlw	128
  8500  012124  0100               	movlb	0	; () banked
  8501  012126  6F6D               	movwf	(??_PS2_sendCommandString+2)& (0+255),b
  8502  012128  0100               	movlb	0	; () banked
  8503  01212A  516C               	movf	(??_PS2_sendCommandString+1)& (0+255),w,b
  8504  01212C  0A80               	xorlw	128
  8505  01212E  0100               	movlb	0	; () banked
  8506  012130  596D               	subwfb	(??_PS2_sendCommandString+2)& (0+255),w,b
  8507  012132  A0D8               	btfss	status,0,c
  8508  012134  D7DA               	goto	l6536
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;PS2.c: 137: }
  8512                           ;PS2.c: 139: PORTFbits.RF6 = 1;
  8513  012136  8C85               	bsf	3973,6,c	;volatile
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;PS2.c: 140: delay_ms(read_delay);
  8517  012138  0100               	movlb	0	; () banked
  8518  01213A  51D1               	movf	_read_delay& (0+255),w,b	;volatile
  8519  01213C  0100               	movlb	0	; () banked
  8520  01213E  6F64               	movwf	delay_ms@x& (0+255),b
  8521  012140  6B65               	clrf	(delay_ms@x+1)& (0+255),b
  8522  012142  6B66               	clrf	(delay_ms@x+2)& (0+255),b
  8523  012144  6B67               	clrf	(delay_ms@x+3)& (0+255),b
  8524  012146  EC0A  F091         	call	_delay_ms	;wreg free
  8525  01214A  0012               	return		;funcret
  8526  01214C                     __end_of_PS2_sendCommandString:
  8527                           	opt stack 0
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           prodh	equ	0xFF4
  8533                           prodl	equ	0xFF3
  8534                           intcon	equ	0xFF2
  8535                           intcon2	equ	0xFF1
  8536                           intcon3	equ	0xFF0
  8537                           postinc0	equ	0xFEE
  8538                           wreg	equ	0xFE8
  8539                           indf1	equ	0xFE7
  8540                           postdec1	equ	0xFE5
  8541                           plusw1	equ	0xFE3
  8542                           fsr1h	equ	0xFE2
  8543                           fsr1l	equ	0xFE1
  8544                           indf2	equ	0xFDF
  8545                           postinc2	equ	0xFDE
  8546                           postdec2	equ	0xFDD
  8547                           plusw2	equ	0xFDB
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function _PS2_shiftInOut *****************
  8553 ;; Defined at:
  8554 ;;		line 143 in file "PS2.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  byte            1    wreg     unsigned char 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  byte            1    4[BANK0 ] unsigned char 
  8559 ;;  i               1    6[BANK0 ] unsigned char 
  8560 ;;  tmp             1    5[BANK0 ] unsigned char 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      unsigned char 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, cstack
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;Total ram usage:        5 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:    4
  8577 ;; This function calls:
  8578 ;;		_delay_us
  8579 ;; This function is called by:
  8580 ;;		_PS2_init
  8581 ;;		_PS2_readGamepad
  8582 ;;		_PS2_sendCommandString
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text36
  8587  011CAE                     __ptext36:
  8588                           	opt stack 0
  8589  011CAE                     _PS2_shiftInOut:
  8590                           	opt stack 24
  8591                           
  8592                           ;incstack = 0
  8593                           ;PS2_shiftInOut@byte stored from wreg
  8594  011CAE  0100               	movlb	0	; () banked
  8595  011CB0  6F64               	movwf	PS2_shiftInOut@byte& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;PS2.c: 145: unsigned char tmp = 0;
  8599  011CB2  0E00               	movlw	0
  8600  011CB4  0100               	movlb	0	; () banked
  8601  011CB6  6F65               	movwf	PS2_shiftInOut@tmp& (0+255),b
  8602                           
  8603                           ;PS2.c: 146: for(unsigned char i = 0; i < 8; i++)
  8604  011CB8  0E00               	movlw	0
  8605  011CBA  0100               	movlb	0	; () banked
  8606  011CBC  6F66               	movwf	PS2_shiftInOut@i& (0+255),b
  8607  011CBE  D033               	goto	l6524
  8608                           
  8609                           ; BSR set to: 0
  8610                           
  8611                           ; BSR set to: 0
  8612  011CC0  D036               	goto	l934
  8613  011CC2                     l6510:
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;PS2.c: 147: {
  8617                           ;PS2.c: 148: if((byte & (1<<i)))
  8618  011CC2  C066  F020         	movff	PS2_shiftInOut@i,??_PS2_shiftInOut
  8619  011CC6  0E01               	movlw	1
  8620  011CC8  6E21               	movwf	(??_PS2_shiftInOut+1)& (0+255),c
  8621  011CCA  2A20               	incf	??_PS2_shiftInOut,f,c
  8622  011CCC  D002               	goto	u4264
  8623  011CCE                     u4265:
  8624  011CCE  90D8               	bcf	status,0,c
  8625  011CD0  3621               	rlcf	??_PS2_shiftInOut+1,f,c
  8626  011CD2                     u4264:
  8627  011CD2  2E20               	decfsz	??_PS2_shiftInOut,f,c
  8628  011CD4  D7FC               	goto	u4265
  8629  011CD6  5021               	movf	??_PS2_shiftInOut+1,w,c
  8630  011CD8  0100               	movlb	0	; () banked
  8631  011CDA  1564               	andwf	PS2_shiftInOut@byte& (0+255),w,b
  8632  011CDC  0900               	iorlw	0
  8633  011CDE  B4D8               	btfsc	status,2,c
  8634  011CE0  D002               	goto	l935
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;PS2.c: 149: {
  8638                           ;PS2.c: 150: PORTFbits.RF2 = 1;
  8639  011CE2  8485               	bsf	3973,2,c	;volatile
  8640                           
  8641                           ;PS2.c: 151: }
  8642  011CE4  D001               	goto	l936
  8643  011CE6                     l935:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;PS2.c: 152: else
  8647                           ;PS2.c: 153: {
  8648                           ;PS2.c: 154: PORTFbits.RF2 = 0;
  8649  011CE6  9485               	bcf	3973,2,c	;volatile
  8650  011CE8                     l936:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;PS2.c: 155: }
  8654                           ;PS2.c: 157: PORTFbits.RF5 = 0;
  8655  011CE8  9A85               	bcf	3973,5,c	;volatile
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;PS2.c: 158: delay_us(5);
  8659  011CEA  0E05               	movlw	5
  8660  011CEC  0100               	movlb	0	; () banked
  8661  011CEE  6F60               	movwf	delay_us@x& (0+255),b
  8662  011CF0  0E00               	movlw	0
  8663  011CF2  6F61               	movwf	(delay_us@x+1)& (0+255),b
  8664  011CF4  0E00               	movlw	0
  8665  011CF6  6F62               	movwf	(delay_us@x+2)& (0+255),b
  8666  011CF8  0E00               	movlw	0
  8667  011CFA  6F63               	movwf	(delay_us@x+3)& (0+255),b
  8668  011CFC  EC97  F091         	call	_delay_us	;wreg free
  8669                           
  8670                           ;PS2.c: 160: if(PORTFbits.RF3 == 1)
  8671  011D00  A685               	btfss	3973,3,c	;volatile
  8672  011D02  D00E               	goto	l6520
  8673                           
  8674                           ;PS2.c: 161: {
  8675                           ;PS2.c: 162: tmp |= (0x1 << i);;
  8676  011D04  C066  F020         	movff	PS2_shiftInOut@i,??_PS2_shiftInOut
  8677  011D08  0E01               	movlw	1
  8678  011D0A  6E21               	movwf	(??_PS2_shiftInOut+1)& (0+255),c
  8679  011D0C  2A20               	incf	??_PS2_shiftInOut,f,c
  8680  011D0E  D002               	goto	u4294
  8681  011D10                     u4295:
  8682  011D10  90D8               	bcf	status,0,c
  8683  011D12  3621               	rlcf	??_PS2_shiftInOut+1,f,c
  8684  011D14                     u4294:
  8685  011D14  2E20               	decfsz	??_PS2_shiftInOut,f,c
  8686  011D16  D7FC               	goto	u4295
  8687  011D18  5021               	movf	??_PS2_shiftInOut+1,w,c
  8688  011D1A  0100               	movlb	0	; () banked
  8689  011D1C  1365               	iorwf	PS2_shiftInOut@tmp& (0+255),f,b
  8690  011D1E  D000               	goto	l6520
  8691  011D20                     l6520:
  8692                           
  8693                           ;PS2.c: 163: }
  8694                           ;PS2.c: 165: PORTFbits.RF5 = 1;
  8695  011D20  8A85               	bsf	3973,5,c	;volatile
  8696  011D22  0100               	movlb	0	; () banked
  8697  011D24  2B66               	incf	PS2_shiftInOut@i& (0+255),f,b
  8698  011D26                     l6524:
  8699                           
  8700                           ; BSR set to: 0
  8701  011D26  0E07               	movlw	7
  8702  011D28  0100               	movlb	0	; () banked
  8703  011D2A  6566               	cpfsgt	PS2_shiftInOut@i& (0+255),b
  8704  011D2C  D7CA               	goto	l6510
  8705  011D2E                     l934:
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;PS2.c: 166: }
  8709                           ;PS2.c: 167: PORTFbits.RF2 = 1;
  8710  011D2E  8485               	bsf	3973,2,c	;volatile
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;PS2.c: 168: delay_us(4);
  8714  011D30  0E04               	movlw	4
  8715  011D32  0100               	movlb	0	; () banked
  8716  011D34  6F60               	movwf	delay_us@x& (0+255),b
  8717  011D36  0E00               	movlw	0
  8718  011D38  6F61               	movwf	(delay_us@x+1)& (0+255),b
  8719  011D3A  0E00               	movlw	0
  8720  011D3C  6F62               	movwf	(delay_us@x+2)& (0+255),b
  8721  011D3E  0E00               	movlw	0
  8722  011D40  6F63               	movwf	(delay_us@x+3)& (0+255),b
  8723  011D42  EC97  F091         	call	_delay_us	;wreg free
  8724                           
  8725                           ;PS2.c: 169: return tmp;
  8726  011D46  0100               	movlb	0	; () banked
  8727  011D48  5165               	movf	PS2_shiftInOut@tmp& (0+255),w,b
  8728  011D4A  0012               	return	
  8729                           
  8730                           ; BSR set to: 0
  8731                           
  8732                           ; BSR set to: 0
  8733  011D4C  0012               	return		;funcret
  8734  011D4E                     __end_of_PS2_shiftInOut:
  8735                           	opt stack 0
  8736                           tblptru	equ	0xFF8
  8737                           tblptrh	equ	0xFF7
  8738                           tblptrl	equ	0xFF6
  8739                           tablat	equ	0xFF5
  8740                           prodh	equ	0xFF4
  8741                           prodl	equ	0xFF3
  8742                           intcon	equ	0xFF2
  8743                           intcon2	equ	0xFF1
  8744                           intcon3	equ	0xFF0
  8745                           postinc0	equ	0xFEE
  8746                           wreg	equ	0xFE8
  8747                           indf1	equ	0xFE7
  8748                           postdec1	equ	0xFE5
  8749                           plusw1	equ	0xFE3
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           indf2	equ	0xFDF
  8753                           postinc2	equ	0xFDE
  8754                           postdec2	equ	0xFDD
  8755                           plusw2	equ	0xFDB
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760 ;; *************** function _PS2_analog *****************
  8761 ;; Defined at:
  8762 ;;		line 242 in file "PS2.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  button          1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  button          1   31[COMRAM] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      unsigned char 
  8769 ;; Registers used:
  8770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;Total ram usage:        1 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    3
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_RCMode
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text37
  8791  012584                     __ptext37:
  8792                           	opt stack 0
  8793  012584                     _PS2_analog:
  8794                           	opt stack 26
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;incstack = 0
  8798                           ;PS2_analog@button stored from wreg
  8799  012584  6E20               	movwf	PS2_analog@button,c
  8800                           
  8801                           ;PS2.c: 244: return PS2data[button];
  8802  012586  5020               	movf	PS2_analog@button,w,c
  8803  012588  0D01               	mullw	1
  8804  01258A  0EA7               	movlw	low _PS2data
  8805  01258C  24F3               	addwf	prodl,w,c
  8806  01258E  6ED9               	movwf	fsr2l,c
  8807  012590  0E00               	movlw	high _PS2data
  8808  012592  20F4               	addwfc	prodh,w,c
  8809  012594  6EDA               	movwf	fsr2h,c
  8810  012596  50DF               	movf	indf2,w,c
  8811  012598  0012               	return	
  8812  01259A  0012               	return		;funcret
  8813  01259C                     __end_of_PS2_analog:
  8814                           	opt stack 0
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           intcon2	equ	0xFF1
  8823                           intcon3	equ	0xFF0
  8824                           postinc0	equ	0xFEE
  8825                           wreg	equ	0xFE8
  8826                           indf1	equ	0xFE7
  8827                           postdec1	equ	0xFE5
  8828                           plusw1	equ	0xFE3
  8829                           fsr1h	equ	0xFE2
  8830                           fsr1l	equ	0xFE1
  8831                           indf2	equ	0xFDF
  8832                           postinc2	equ	0xFDE
  8833                           postdec2	equ	0xFDD
  8834                           plusw2	equ	0xFDB
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _LCD_printString *****************
  8840 ;; Defined at:
  8841 ;;		line 312 in file "LCD.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  x               1    wreg     unsigned char 
  8844 ;;  y               1   24[BANK0 ] unsigned char 
  8845 ;;  input           2   25[BANK0 ] PTR unsigned char 
  8846 ;;		 -> STR_10(18), STR_9(18), STR_8(15), STR_7(18), 
  8847 ;;		 -> STR_6(17), STR_5(16), STR_4(18), STR_3(18), 
  8848 ;;		 -> LCD_printBin@string(9), LCD_printVal@temp(3), LCD_printChar@string(2), 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  x               1   40[BANK2 ] unsigned char 
  8851 ;;  tempString     20    0[BANK2 ] unsigned char [20]
  8852 ;;  val             2   41[BANK2 ] int 
  8853 ;;  tempString      2   45[BANK2 ] unsigned char [2]
  8854 ;;  i               2   49[BANK2 ] int 
  8855 ;;  i               2   47[BANK2 ] int 
  8856 ;;  string         20   20[BANK2 ] unsigned char [20]
  8857 ;;  aptr            2   43[BANK2 ] PTR void [1]
  8858 ;;		 -> ?_LCD_printString(0), 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;		None               void
  8861 ;; Registers used:
  8862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8868 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Totals:         0      11       0      51       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;Total ram usage:       62 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    6
  8875 ;; This function calls:
  8876 ;;		_LCD_placeCursor
  8877 ;;		_delay_ms
  8878 ;;		_delay_us
  8879 ;;		_sprintf
  8880 ;;		_strcat
  8881 ;; This function is called by:
  8882 ;;		_selfTest
  8883 ;;		_wanderMode
  8884 ;;		_competitionMode
  8885 ;;		_RCMode
  8886 ;;		_main
  8887 ;;		_LCD_printChar
  8888 ;;		_LCD_printVal
  8889 ;;		_LCD_printBin
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text38
  8894  010000                     __ptext38:
  8895                           	opt stack 0
  8896  010000                     _LCD_printString:
  8897                           	opt stack 23
  8898                           
  8899                           ;incstack = 0
  8900                           ;LCD_printString@x stored from wreg
  8901  010000  0102               	movlb	2	; () banked
  8902  010002  6FDA               	movwf	LCD_printString@x& (0+255),b
  8903                           
  8904                           ; BSR set to: 2
  8905                           ;LCD.c: 314: char string[20] = "\0";
  8906  010004  EE21  F032         	lfsr	2,LCD_printString@F16347
  8907  010008  EE12  F0C6         	lfsr	1,LCD_printString@string
  8908  01000C  0E13               	movlw	19
  8909  01000E                     u5021:
  8910  01000E  CFDB FFE3          	movff	plusw2,plusw1
  8911  010012  06E8               	decf	wreg,f,c
  8912  010014  E2FC               	bc	u5021
  8913                           
  8914                           ; BSR set to: 2
  8915                           ;LCD.c: 316: va_list aptr;
  8916                           ;LCD.c: 317: *aptr = __va_start();
  8917  010016  0E7B               	movlw	low (?_LCD_printString+3)
  8918  010018  0102               	movlb	2	; () banked
  8919  01001A  6FDD               	movwf	LCD_printString@aptr& (0+255),b
  8920  01001C  0E00               	movlw	high (?_LCD_printString+3)
  8921  01001E  0102               	movlb	2	; () banked
  8922  010020  6FDE               	movwf	(LCD_printString@aptr+1)& (0+255),b
  8923                           
  8924                           ; BSR set to: 2
  8925                           ;LCD.c: 319: LCD_placeCursor(x,y);
  8926  010022  C078  F020         	movff	LCD_printString@y,LCD_placeCursor@y
  8927  010026  0102               	movlb	2	; () banked
  8928  010028  51DA               	movf	LCD_printString@x& (0+255),w,b
  8929  01002A  EC12  F085         	call	_LCD_placeCursor
  8930                           
  8931                           ;LCD.c: 322: for(int i = 0; input[i] != '\0' && i < 200; i++)
  8932  01002E  0E00               	movlw	0
  8933  010030  0102               	movlb	2	; () banked
  8934  010032  6FE2               	movwf	(LCD_printString@i+1)& (0+255),b
  8935  010034  0E00               	movlw	0
  8936  010036  6FE1               	movwf	LCD_printString@i& (0+255),b
  8937  010038  D0C0               	goto	l7276
  8938  01003A                     l7252:
  8939                           
  8940                           ; BSR set to: 2
  8941                           ;LCD.c: 323: {
  8942                           ;LCD.c: 324: if(input[i] == '%')
  8943  01003A  0102               	movlb	2	; () banked
  8944  01003C  51E1               	movf	LCD_printString@i& (0+255),w,b
  8945  01003E  0100               	movlb	0	; () banked
  8946  010040  2579               	addwf	LCD_printString@input& (0+255),w,b
  8947  010042  0100               	movlb	0	; () banked
  8948  010044  6F7F               	movwf	??_LCD_printString& (0+255),b
  8949  010046  0102               	movlb	2	; () banked
  8950  010048  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  8951  01004A  0100               	movlb	0	; () banked
  8952  01004C  217A               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  8953  01004E  0100               	movlb	0	; () banked
  8954  010050  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  8955  010052  C07F  FFF6         	movff	??_LCD_printString,tblptrl
  8956  010056  C080  FFF7         	movff	??_LCD_printString+1,tblptrh
  8957  01005A  0E00               	movlw	low (__mediumconst shr (0+16))
  8958  01005C  6EF8               	movwf	tblptru,c
  8959  01005E  0E0D               	movlw	(high __ramtop+-1)
  8960  010060  64F7               	cpfsgt	tblptrh,c
  8961  010062  D003               	bra	u5037
  8962  010064  0008               	tblrd		*
  8963  010066  50F5               	movf	tablat,w,c
  8964  010068  D005               	bra	u5030
  8965  01006A                     u5037:
  8966  01006A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8967  01006E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8968  010072  50EF               	movf	indf0,w,c
  8969  010074                     u5030:
  8970  010074  0A25               	xorlw	37
  8971  010076  A4D8               	btfss	status,2,c
  8972  010078  D06B               	goto	l7268
  8973                           
  8974                           ;LCD.c: 325: {
  8975                           ;LCD.c: 326: if(input[i+1] == '%')
  8976  01007A  0E01               	movlw	1
  8977  01007C  0102               	movlb	2	; () banked
  8978  01007E  25E1               	addwf	LCD_printString@i& (0+255),w,b
  8979  010080  0100               	movlb	0	; () banked
  8980  010082  6F7F               	movwf	??_LCD_printString& (0+255),b
  8981  010084  0E00               	movlw	0
  8982  010086  0102               	movlb	2	; () banked
  8983  010088  21E2               	addwfc	(LCD_printString@i+1)& (0+255),w,b
  8984  01008A  0100               	movlb	0	; () banked
  8985  01008C  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  8986  01008E  C079  F081         	movff	LCD_printString@input,??_LCD_printString+2
  8987  010092  C07A  F082         	movff	LCD_printString@input+1,??_LCD_printString+3
  8988  010096  0100               	movlb	0	; () banked
  8989  010098  517F               	movf	??_LCD_printString& (0+255),w,b
  8990  01009A  0100               	movlb	0	; () banked
  8991  01009C  2781               	addwf	(??_LCD_printString+2)& (0+255),f,b
  8992  01009E  0100               	movlb	0	; () banked
  8993  0100A0  5180               	movf	(??_LCD_printString+1)& (0+255),w,b
  8994  0100A2  0100               	movlb	0	; () banked
  8995  0100A4  2382               	addwfc	(??_LCD_printString+3)& (0+255),f,b
  8996  0100A6  C081  FFF6         	movff	??_LCD_printString+2,tblptrl
  8997  0100AA  C082  FFF7         	movff	??_LCD_printString+3,tblptrh
  8998  0100AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8999  0100B0  6EF8               	movwf	tblptru,c
  9000  0100B2  0E0D               	movlw	(high __ramtop+-1)
  9001  0100B4  64F7               	cpfsgt	tblptrh,c
  9002  0100B6  D003               	bra	u5057
  9003  0100B8  0008               	tblrd		*
  9004  0100BA  50F5               	movf	tablat,w,c
  9005  0100BC  D005               	bra	u5050
  9006  0100BE                     u5057:
  9007  0100BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  9008  0100C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  9009  0100C6  50EF               	movf	indf0,w,c
  9010  0100C8                     u5050:
  9011  0100C8  0A25               	xorlw	37
  9012  0100CA  A4D8               	btfss	status,2,c
  9013  0100CC  D00F               	goto	l7258
  9014                           
  9015                           ;LCD.c: 327: {
  9016                           ;LCD.c: 328: strcat(string, "%");
  9017  0100CE  0EC6               	movlw	low LCD_printString@string
  9018  0100D0  0100               	movlb	0	; () banked
  9019  0100D2  6F60               	movwf	strcat@to& (0+255),b
  9020  0100D4  0E02               	movlw	high LCD_printString@string
  9021  0100D6  0100               	movlb	0	; () banked
  9022  0100D8  6F61               	movwf	(strcat@to+1)& (0+255),b
  9023  0100DA  0EFC               	movlw	low STR_1
  9024  0100DC  0100               	movlb	0	; () banked
  9025  0100DE  6F62               	movwf	strcat@from& (0+255),b
  9026  0100E0  0EFF               	movlw	high STR_1
  9027  0100E2  0100               	movlb	0	; () banked
  9028  0100E4  6F63               	movwf	(strcat@from+1)& (0+255),b
  9029  0100E6  ECD9  F090         	call	_strcat	;wreg free
  9030                           
  9031                           ;LCD.c: 329: }
  9032  0100EA  D02E               	goto	l7266
  9033  0100EC                     l7258:
  9034                           
  9035                           ;LCD.c: 330: else
  9036                           ;LCD.c: 331: {
  9037                           ;LCD.c: 332: int val = (*(int *)__va_arg((*(int **)aptr), (int)0));
  9038  0100EC  C2DD  FFD9         	movff	LCD_printString@aptr,fsr2l
  9039  0100F0  C2DE  FFDA         	movff	LCD_printString@aptr+1,fsr2h
  9040  0100F4  CFDE F2DB          	movff	postinc2,LCD_printString@val
  9041  0100F8  CFDD F2DC          	movff	postdec2,LCD_printString@val+1
  9042  0100FC  0E02               	movlw	2
  9043  0100FE  0102               	movlb	2	; () banked
  9044  010100  27DD               	addwf	LCD_printString@aptr& (0+255),f,b
  9045  010102  0E00               	movlw	0
  9046  010104  23DE               	addwfc	(LCD_printString@aptr+1)& (0+255),f,b
  9047                           
  9048                           ; BSR set to: 2
  9049                           ;LCD.c: 333: char tempString[20];
  9050                           ;LCD.c: 334: sprintf(tempString,"%i",val);
  9051  010106  0EB2               	movlw	low LCD_printString@tempString
  9052  010108  0100               	movlb	0	; () banked
  9053  01010A  6F6B               	movwf	sprintf@sp& (0+255),b
  9054  01010C  0E02               	movlw	high LCD_printString@tempString
  9055  01010E  0100               	movlb	0	; () banked
  9056  010110  6F6C               	movwf	(sprintf@sp+1)& (0+255),b
  9057  010112  0EDD               	movlw	low (STR_8+12)
  9058  010114  0100               	movlb	0	; () banked
  9059  010116  6F6D               	movwf	sprintf@f& (0+255),b
  9060  010118  0EFF               	movlw	high (STR_8+12)
  9061  01011A  0100               	movlb	0	; () banked
  9062  01011C  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  9063  01011E  C2DB  F06F         	movff	LCD_printString@val,?_sprintf+4
  9064  010122  C2DC  F070         	movff	LCD_printString@val+1,?_sprintf+5
  9065  010126  EC36  F089         	call	_sprintf	;wreg free
  9066                           
  9067                           ;LCD.c: 335: strcat(string, tempString);
  9068  01012A  0EC6               	movlw	low LCD_printString@string
  9069  01012C  0100               	movlb	0	; () banked
  9070  01012E  6F60               	movwf	strcat@to& (0+255),b
  9071  010130  0E02               	movlw	high LCD_printString@string
  9072  010132  0100               	movlb	0	; () banked
  9073  010134  6F61               	movwf	(strcat@to+1)& (0+255),b
  9074  010136  0EB2               	movlw	low LCD_printString@tempString
  9075  010138  0100               	movlb	0	; () banked
  9076  01013A  6F62               	movwf	strcat@from& (0+255),b
  9077  01013C  0E02               	movlw	high LCD_printString@tempString
  9078  01013E  0100               	movlb	0	; () banked
  9079  010140  6F63               	movwf	(strcat@from+1)& (0+255),b
  9080  010142  ECD9  F090         	call	_strcat	;wreg free
  9081  010146  D000               	goto	l7266
  9082  010148                     l7266:
  9083                           
  9084                           ;LCD.c: 336: }
  9085                           ;LCD.c: 337: i++;
  9086  010148  0102               	movlb	2	; () banked
  9087  01014A  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  9088  01014C  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  9089                           
  9090                           ;LCD.c: 338: }
  9091  01014E  D031               	goto	l7274
  9092  010150                     l7268:
  9093                           
  9094                           ;LCD.c: 339: else
  9095                           ;LCD.c: 340: {
  9096                           ;LCD.c: 341: char tempString[2];
  9097                           ;LCD.c: 342: tempString[0] = input[i];
  9098  010150  0102               	movlb	2	; () banked
  9099  010152  51E1               	movf	LCD_printString@i& (0+255),w,b
  9100  010154  0100               	movlb	0	; () banked
  9101  010156  2579               	addwf	LCD_printString@input& (0+255),w,b
  9102  010158  0100               	movlb	0	; () banked
  9103  01015A  6F7F               	movwf	??_LCD_printString& (0+255),b
  9104  01015C  0102               	movlb	2	; () banked
  9105  01015E  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  9106  010160  0100               	movlb	0	; () banked
  9107  010162  217A               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  9108  010164  0100               	movlb	0	; () banked
  9109  010166  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  9110  010168  C07F  FFF6         	movff	??_LCD_printString,tblptrl
  9111  01016C  C080  FFF7         	movff	??_LCD_printString+1,tblptrh
  9112  010170  0E00               	movlw	low (__mediumconst shr (0+16))
  9113  010172  6EF8               	movwf	tblptru,c
  9114  010174  0E0D               	movlw	(high __ramtop+-1)
  9115  010176  64F7               	cpfsgt	tblptrh,c
  9116  010178  D003               	bra	u5077
  9117  01017A  0008               	tblrd		*
  9118  01017C  50F5               	movf	tablat,w,c
  9119  01017E  D005               	bra	u5070
  9120  010180                     u5077:
  9121  010180  CFF6 FFE9          	movff	tblptrl,fsr0l
  9122  010184  CFF7 FFEA          	movff	tblptrh,fsr0h
  9123  010188  50EF               	movf	indf0,w,c
  9124  01018A                     u5070:
  9125  01018A  0102               	movlb	2	; () banked
  9126  01018C  6FDF               	movwf	LCD_printString@tempString_590& (0+255),b
  9127                           
  9128                           ; BSR set to: 2
  9129                           ;LCD.c: 343: tempString[1] = '\0';
  9130  01018E  0E00               	movlw	0
  9131  010190  0102               	movlb	2	; () banked
  9132  010192  6FE0               	movwf	(LCD_printString@tempString_590+1)& (0+255),b
  9133                           
  9134                           ; BSR set to: 2
  9135                           ;LCD.c: 344: strcat(string,tempString);
  9136  010194  0EC6               	movlw	low LCD_printString@string
  9137  010196  0100               	movlb	0	; () banked
  9138  010198  6F60               	movwf	strcat@to& (0+255),b
  9139  01019A  0E02               	movlw	high LCD_printString@string
  9140  01019C  0100               	movlb	0	; () banked
  9141  01019E  6F61               	movwf	(strcat@to+1)& (0+255),b
  9142  0101A0  0EDF               	movlw	low LCD_printString@tempString_590
  9143  0101A2  0100               	movlb	0	; () banked
  9144  0101A4  6F62               	movwf	strcat@from& (0+255),b
  9145  0101A6  0E02               	movlw	high LCD_printString@tempString_590
  9146  0101A8  0100               	movlb	0	; () banked
  9147  0101AA  6F63               	movwf	(strcat@from+1)& (0+255),b
  9148  0101AC  ECD9  F090         	call	_strcat	;wreg free
  9149  0101B0  D000               	goto	l7274
  9150  0101B2                     l7274:
  9151  0101B2  0102               	movlb	2	; () banked
  9152  0101B4  4BE1               	infsnz	LCD_printString@i& (0+255),f,b
  9153  0101B6  2BE2               	incf	(LCD_printString@i+1)& (0+255),f,b
  9154  0101B8  D000               	goto	l7276
  9155  0101BA                     l7276:
  9156                           
  9157                           ; BSR set to: 2
  9158  0101BA  0102               	movlb	2	; () banked
  9159  0101BC  51E1               	movf	LCD_printString@i& (0+255),w,b
  9160  0101BE  0100               	movlb	0	; () banked
  9161  0101C0  2579               	addwf	LCD_printString@input& (0+255),w,b
  9162  0101C2  0100               	movlb	0	; () banked
  9163  0101C4  6F7F               	movwf	??_LCD_printString& (0+255),b
  9164  0101C6  0102               	movlb	2	; () banked
  9165  0101C8  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  9166  0101CA  0100               	movlb	0	; () banked
  9167  0101CC  217A               	addwfc	(LCD_printString@input+1)& (0+255),w,b
  9168  0101CE  0100               	movlb	0	; () banked
  9169  0101D0  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  9170  0101D2  C07F  FFF6         	movff	??_LCD_printString,tblptrl
  9171  0101D6  C080  FFF7         	movff	??_LCD_printString+1,tblptrh
  9172  0101DA  0E00               	movlw	low (__mediumconst shr (0+16))
  9173  0101DC  6EF8               	movwf	tblptru,c
  9174  0101DE  0E0D               	movlw	(high __ramtop+-1)
  9175  0101E0  64F7               	cpfsgt	tblptrh,c
  9176  0101E2  D003               	bra	u5087
  9177  0101E4  0008               	tblrd		*
  9178  0101E6  50F5               	movf	tablat,w,c
  9179  0101E8  D005               	bra	u5080
  9180  0101EA                     u5087:
  9181  0101EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  9182  0101EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  9183  0101F2  50EF               	movf	indf0,w,c
  9184  0101F4                     u5080:
  9185  0101F4  0900               	iorlw	0
  9186  0101F6  B4D8               	btfsc	status,2,c
  9187  0101F8  D00D               	goto	l7280
  9188  0101FA  0102               	movlb	2	; () banked
  9189  0101FC  BFE2               	btfsc	(LCD_printString@i+1)& (0+255),7,b
  9190  0101FE  D71D               	goto	l7252
  9191  010200  0102               	movlb	2	; () banked
  9192  010202  51E2               	movf	(LCD_printString@i+1)& (0+255),w,b
  9193  010204  E107               	bnz	l7280
  9194  010206  0EC8               	movlw	200
  9195  010208  0102               	movlb	2	; () banked
  9196  01020A  5DE1               	subwf	LCD_printString@i& (0+255),w,b
  9197  01020C  B0D8               	btfsc	status,0,c
  9198  01020E  D002               	goto	l7280
  9199  010210  D714               	goto	l7252
  9200                           
  9201                           ; BSR set to: 2
  9202  010212  D000               	goto	l7280
  9203  010214                     l7280:
  9204                           
  9205                           ;LCD.c: 345: }
  9206                           ;LCD.c: 346: }
  9207                           ;LCD.c: 348: ;
  9208                           ;LCD.c: 351: for(int i = 0; string[i] != '\0' && i < 200; i++)
  9209  010214  0E00               	movlw	0
  9210  010216  0102               	movlb	2	; () banked
  9211  010218  6FE4               	movwf	(LCD_printString@i_591+1)& (0+255),b
  9212  01021A  0E00               	movlw	0
  9213  01021C  6FE3               	movwf	LCD_printString@i_591& (0+255),b
  9214  01021E  D238               	goto	l7332
  9215  010220                     l7282:
  9216                           
  9217                           ; BSR set to: 2
  9218                           ;LCD.c: 352: {
  9219                           ;LCD.c: 353: if(string[i] == '\n')
  9220  010220  0EC6               	movlw	low LCD_printString@string
  9221  010222  0102               	movlb	2	; () banked
  9222  010224  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9223  010226  6ED9               	movwf	fsr2l,c
  9224  010228  0E02               	movlw	high LCD_printString@string
  9225  01022A  0102               	movlb	2	; () banked
  9226  01022C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9227  01022E  6EDA               	movwf	fsr2h,c
  9228  010230  0E0A               	movlw	10
  9229  010232  18DE               	xorwf	postinc2,w,c
  9230  010234  A4D8               	btfss	status,2,c
  9231  010236  D007               	goto	l7286
  9232                           
  9233                           ; BSR set to: 2
  9234                           ;LCD.c: 354: {
  9235                           ;LCD.c: 355: LCD_placeCursor(0,y+1);
  9236  010238  0100               	movlb	0	; () banked
  9237  01023A  2978               	incf	LCD_printString@y& (0+255),w,b
  9238  01023C  6E20               	movwf	LCD_placeCursor@y,c
  9239  01023E  0E00               	movlw	0
  9240  010240  EC12  F085         	call	_LCD_placeCursor
  9241                           
  9242                           ;LCD.c: 356: }
  9243  010244  D221               	goto	l7330
  9244  010246                     l7286:
  9245                           
  9246                           ;LCD.c: 357: else
  9247                           ;LCD.c: 358: {
  9248                           ;LCD.c: 359: delay_ms(2);
  9249  010246  0E02               	movlw	2
  9250  010248  0100               	movlb	0	; () banked
  9251  01024A  6F64               	movwf	delay_ms@x& (0+255),b
  9252  01024C  0E00               	movlw	0
  9253  01024E  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  9254  010250  0E00               	movlw	0
  9255  010252  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  9256  010254  0E00               	movlw	0
  9257  010256  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  9258  010258  EC0A  F091         	call	_delay_ms	;wreg free
  9259                           
  9260                           ;LCD.c: 360: PORTDbits.RD0 = 1;
  9261  01025C  8083               	bsf	3971,0,c	;volatile
  9262                           
  9263                           ;LCD.c: 362: switch(mode)
  9264  01025E  D1FF               	goto	l7324
  9265  010260                     l7290:
  9266                           
  9267                           ;LCD.c: 365: delay_us(40);;
  9268  010260  0E28               	movlw	40
  9269  010262  0100               	movlb	0	; () banked
  9270  010264  6F60               	movwf	delay_us@x& (0+255),b
  9271  010266  0E00               	movlw	0
  9272  010268  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9273  01026A  0E00               	movlw	0
  9274  01026C  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9275  01026E  0E00               	movlw	0
  9276  010270  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9277  010272  EC97  F091         	call	_delay_us	;wreg free
  9278                           
  9279                           ;LCD.c: 366: PORTEbits.RE4 = 1;
  9280  010276  8884               	bsf	3972,4,c	;volatile
  9281                           
  9282                           ;LCD.c: 367: { PORTHbits.RH5 = (((string[i] >> 4) >> 3) & 1); PORTEbits.RE1 = (((string[
      +                          i] >> 4) >> 2) & 1); PORTEbits.RE0 = (((string[i] >> 4) >> 1) & 1); PORTEbits.RE2 = ((st
      +                          ring[i] >> 4) & 1); };
  9283  010278  0EC6               	movlw	low LCD_printString@string
  9284  01027A  0102               	movlb	2	; () banked
  9285  01027C  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9286  01027E  6ED9               	movwf	fsr2l,c
  9287  010280  0E02               	movlw	high LCD_printString@string
  9288  010282  0102               	movlb	2	; () banked
  9289  010284  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9290  010286  6EDA               	movwf	fsr2h,c
  9291  010288  50DF               	movf	indf2,w,c
  9292  01028A  0100               	movlb	0	; () banked
  9293  01028C  6F7F               	movwf	??_LCD_printString& (0+255),b
  9294  01028E  0100               	movlb	0	; () banked
  9295  010290  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9296  010292  0E0F               	movlw	15
  9297  010294  177F               	andwf	??_LCD_printString& (0+255),f,b
  9298  010296  0100               	movlb	0	; () banked
  9299  010298  90D8               	bcf	status,0,c
  9300  01029A  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9301  01029C  0100               	movlb	0	; () banked
  9302  01029E  90D8               	bcf	status,0,c
  9303  0102A0  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9304  0102A2  0100               	movlb	0	; () banked
  9305  0102A4  90D8               	bcf	status,0,c
  9306  0102A6  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9307  0102A8  0E01               	movlw	1
  9308  0102AA  0100               	movlb	0	; () banked
  9309  0102AC  177F               	andwf	??_LCD_printString& (0+255),f,b
  9310  0102AE  0100               	movlb	0	; () banked
  9311  0102B0  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9312  0102B2  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9313  0102B4  5087               	movf	3975,w,c	;volatile
  9314  0102B6  0100               	movlb	0	; () banked
  9315  0102B8  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9316  0102BA  0BDF               	andlw	-33
  9317  0102BC  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9318  0102BE  6E87               	movwf	3975,c	;volatile
  9319                           
  9320                           ; BSR set to: 0
  9321  0102C0  0EC6               	movlw	low LCD_printString@string
  9322  0102C2  0102               	movlb	2	; () banked
  9323  0102C4  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9324  0102C6  6ED9               	movwf	fsr2l,c
  9325  0102C8  0E02               	movlw	high LCD_printString@string
  9326  0102CA  0102               	movlb	2	; () banked
  9327  0102CC  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9328  0102CE  6EDA               	movwf	fsr2h,c
  9329  0102D0  50DF               	movf	indf2,w,c
  9330  0102D2  0100               	movlb	0	; () banked
  9331  0102D4  6F7F               	movwf	??_LCD_printString& (0+255),b
  9332  0102D6  0100               	movlb	0	; () banked
  9333  0102D8  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9334  0102DA  0E0F               	movlw	15
  9335  0102DC  177F               	andwf	??_LCD_printString& (0+255),f,b
  9336  0102DE  0100               	movlb	0	; () banked
  9337  0102E0  90D8               	bcf	status,0,c
  9338  0102E2  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9339  0102E4  0100               	movlb	0	; () banked
  9340  0102E6  90D8               	bcf	status,0,c
  9341  0102E8  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9342  0102EA  0E01               	movlw	1
  9343  0102EC  0100               	movlb	0	; () banked
  9344  0102EE  177F               	andwf	??_LCD_printString& (0+255),f,b
  9345  0102F0  0100               	movlb	0	; () banked
  9346  0102F2  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9347  0102F4  5084               	movf	3972,w,c	;volatile
  9348  0102F6  0100               	movlb	0	; () banked
  9349  0102F8  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9350  0102FA  0BFD               	andlw	-3
  9351  0102FC  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9352  0102FE  6E84               	movwf	3972,c	;volatile
  9353                           
  9354                           ; BSR set to: 0
  9355  010300  0EC6               	movlw	low LCD_printString@string
  9356  010302  0102               	movlb	2	; () banked
  9357  010304  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9358  010306  6ED9               	movwf	fsr2l,c
  9359  010308  0E02               	movlw	high LCD_printString@string
  9360  01030A  0102               	movlb	2	; () banked
  9361  01030C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9362  01030E  6EDA               	movwf	fsr2h,c
  9363  010310  50DF               	movf	indf2,w,c
  9364  010312  0100               	movlb	0	; () banked
  9365  010314  6F7F               	movwf	??_LCD_printString& (0+255),b
  9366  010316  0100               	movlb	0	; () banked
  9367  010318  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9368  01031A  0E0F               	movlw	15
  9369  01031C  177F               	andwf	??_LCD_printString& (0+255),f,b
  9370  01031E  0100               	movlb	0	; () banked
  9371  010320  90D8               	bcf	status,0,c
  9372  010322  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9373  010324  0E01               	movlw	1
  9374  010326  0100               	movlb	0	; () banked
  9375  010328  177F               	andwf	??_LCD_printString& (0+255),f,b
  9376  01032A  5084               	movf	3972,w,c	;volatile
  9377  01032C  0100               	movlb	0	; () banked
  9378  01032E  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9379  010330  0BFE               	andlw	-2
  9380  010332  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9381  010334  6E84               	movwf	3972,c	;volatile
  9382                           
  9383                           ; BSR set to: 0
  9384  010336  0EC6               	movlw	low LCD_printString@string
  9385  010338  0102               	movlb	2	; () banked
  9386  01033A  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9387  01033C  6ED9               	movwf	fsr2l,c
  9388  01033E  0E02               	movlw	high LCD_printString@string
  9389  010340  0102               	movlb	2	; () banked
  9390  010342  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9391  010344  6EDA               	movwf	fsr2h,c
  9392  010346  50DF               	movf	indf2,w,c
  9393  010348  0100               	movlb	0	; () banked
  9394  01034A  6F7F               	movwf	??_LCD_printString& (0+255),b
  9395  01034C  0100               	movlb	0	; () banked
  9396  01034E  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9397  010350  0E0F               	movlw	15
  9398  010352  177F               	andwf	??_LCD_printString& (0+255),f,b
  9399  010354  0E01               	movlw	1
  9400  010356  0100               	movlb	0	; () banked
  9401  010358  177F               	andwf	??_LCD_printString& (0+255),f,b
  9402  01035A  0100               	movlb	0	; () banked
  9403  01035C  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9404  01035E  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9405  010360  5084               	movf	3972,w,c	;volatile
  9406  010362  0100               	movlb	0	; () banked
  9407  010364  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9408  010366  0BFB               	andlw	-5
  9409  010368  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9410  01036A  6E84               	movwf	3972,c	;volatile
  9411                           
  9412                           ;LCD.c: 368: delay_us(40);;
  9413  01036C  0E28               	movlw	40
  9414  01036E  0100               	movlb	0	; () banked
  9415  010370  6F60               	movwf	delay_us@x& (0+255),b
  9416  010372  0E00               	movlw	0
  9417  010374  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9418  010376  0E00               	movlw	0
  9419  010378  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9420  01037A  0E00               	movlw	0
  9421  01037C  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9422  01037E  EC97  F091         	call	_delay_us	;wreg free
  9423                           
  9424                           ;LCD.c: 369: PORTEbits.RE4 = 0;
  9425  010382  9884               	bcf	3972,4,c	;volatile
  9426                           
  9427                           ;LCD.c: 371: delay_us(40);;
  9428  010384  0E28               	movlw	40
  9429  010386  0100               	movlb	0	; () banked
  9430  010388  6F60               	movwf	delay_us@x& (0+255),b
  9431  01038A  0E00               	movlw	0
  9432  01038C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9433  01038E  0E00               	movlw	0
  9434  010390  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9435  010392  0E00               	movlw	0
  9436  010394  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9437  010396  EC97  F091         	call	_delay_us	;wreg free
  9438                           
  9439                           ;LCD.c: 372: PORTEbits.RE4 = 1;
  9440  01039A  8884               	bsf	3972,4,c	;volatile
  9441                           
  9442                           ;LCD.c: 373: { PORTHbits.RH5 = (((string[i] & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((strin
      +                          g[i] & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((string[i] & 0x0F) >> 1) & 1); PORTEbits.RE2 
      +                          = ((string[i] & 0x0F) & 1); };
  9443  01039C  0EC6               	movlw	low LCD_printString@string
  9444  01039E  0102               	movlb	2	; () banked
  9445  0103A0  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9446  0103A2  6ED9               	movwf	fsr2l,c
  9447  0103A4  0E02               	movlw	high LCD_printString@string
  9448  0103A6  0102               	movlb	2	; () banked
  9449  0103A8  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9450  0103AA  6EDA               	movwf	fsr2h,c
  9451  0103AC  50DF               	movf	indf2,w,c
  9452  0103AE  0100               	movlb	0	; () banked
  9453  0103B0  6F7F               	movwf	??_LCD_printString& (0+255),b
  9454  0103B2  0100               	movlb	0	; () banked
  9455  0103B4  90D8               	bcf	status,0,c
  9456  0103B6  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9457  0103B8  0100               	movlb	0	; () banked
  9458  0103BA  90D8               	bcf	status,0,c
  9459  0103BC  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9460  0103BE  0100               	movlb	0	; () banked
  9461  0103C0  90D8               	bcf	status,0,c
  9462  0103C2  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9463  0103C4  0E01               	movlw	1
  9464  0103C6  0100               	movlb	0	; () banked
  9465  0103C8  177F               	andwf	??_LCD_printString& (0+255),f,b
  9466  0103CA  0100               	movlb	0	; () banked
  9467  0103CC  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9468  0103CE  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9469  0103D0  5087               	movf	3975,w,c	;volatile
  9470  0103D2  0100               	movlb	0	; () banked
  9471  0103D4  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9472  0103D6  0BDF               	andlw	-33
  9473  0103D8  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9474  0103DA  6E87               	movwf	3975,c	;volatile
  9475                           
  9476                           ; BSR set to: 0
  9477  0103DC  0EC6               	movlw	low LCD_printString@string
  9478  0103DE  0102               	movlb	2	; () banked
  9479  0103E0  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9480  0103E2  6ED9               	movwf	fsr2l,c
  9481  0103E4  0E02               	movlw	high LCD_printString@string
  9482  0103E6  0102               	movlb	2	; () banked
  9483  0103E8  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9484  0103EA  6EDA               	movwf	fsr2h,c
  9485  0103EC  50DF               	movf	indf2,w,c
  9486  0103EE  0100               	movlb	0	; () banked
  9487  0103F0  6F7F               	movwf	??_LCD_printString& (0+255),b
  9488  0103F2  0100               	movlb	0	; () banked
  9489  0103F4  90D8               	bcf	status,0,c
  9490  0103F6  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9491  0103F8  0100               	movlb	0	; () banked
  9492  0103FA  90D8               	bcf	status,0,c
  9493  0103FC  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9494  0103FE  0E01               	movlw	1
  9495  010400  0100               	movlb	0	; () banked
  9496  010402  177F               	andwf	??_LCD_printString& (0+255),f,b
  9497  010404  0100               	movlb	0	; () banked
  9498  010406  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9499  010408  5084               	movf	3972,w,c	;volatile
  9500  01040A  0100               	movlb	0	; () banked
  9501  01040C  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9502  01040E  0BFD               	andlw	-3
  9503  010410  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9504  010412  6E84               	movwf	3972,c	;volatile
  9505                           
  9506                           ; BSR set to: 0
  9507  010414  0EC6               	movlw	low LCD_printString@string
  9508  010416  0102               	movlb	2	; () banked
  9509  010418  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9510  01041A  6ED9               	movwf	fsr2l,c
  9511  01041C  0E02               	movlw	high LCD_printString@string
  9512  01041E  0102               	movlb	2	; () banked
  9513  010420  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9514  010422  6EDA               	movwf	fsr2h,c
  9515  010424  50DF               	movf	indf2,w,c
  9516  010426  0100               	movlb	0	; () banked
  9517  010428  6F7F               	movwf	??_LCD_printString& (0+255),b
  9518  01042A  0100               	movlb	0	; () banked
  9519  01042C  90D8               	bcf	status,0,c
  9520  01042E  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9521  010430  0E01               	movlw	1
  9522  010432  0100               	movlb	0	; () banked
  9523  010434  177F               	andwf	??_LCD_printString& (0+255),f,b
  9524  010436  5084               	movf	3972,w,c	;volatile
  9525  010438  0100               	movlb	0	; () banked
  9526  01043A  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9527  01043C  0BFE               	andlw	-2
  9528  01043E  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9529  010440  6E84               	movwf	3972,c	;volatile
  9530                           
  9531                           ; BSR set to: 0
  9532  010442  0EC6               	movlw	low LCD_printString@string
  9533  010444  0102               	movlb	2	; () banked
  9534  010446  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9535  010448  6ED9               	movwf	fsr2l,c
  9536  01044A  0E02               	movlw	high LCD_printString@string
  9537  01044C  0102               	movlb	2	; () banked
  9538  01044E  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9539  010450  6EDA               	movwf	fsr2h,c
  9540  010452  50DF               	movf	indf2,w,c
  9541  010454  0100               	movlb	0	; () banked
  9542  010456  6F7F               	movwf	??_LCD_printString& (0+255),b
  9543  010458  0E01               	movlw	1
  9544  01045A  0100               	movlb	0	; () banked
  9545  01045C  177F               	andwf	??_LCD_printString& (0+255),f,b
  9546  01045E  0100               	movlb	0	; () banked
  9547  010460  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9548  010462  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9549  010464  5084               	movf	3972,w,c	;volatile
  9550  010466  0100               	movlb	0	; () banked
  9551  010468  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9552  01046A  0BFB               	andlw	-5
  9553  01046C  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9554  01046E  6E84               	movwf	3972,c	;volatile
  9555                           
  9556                           ;LCD.c: 374: delay_us(40);;
  9557  010470  0E28               	movlw	40
  9558  010472  0100               	movlb	0	; () banked
  9559  010474  6F60               	movwf	delay_us@x& (0+255),b
  9560  010476  0E00               	movlw	0
  9561  010478  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9562  01047A  0E00               	movlw	0
  9563  01047C  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9564  01047E  0E00               	movlw	0
  9565  010480  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9566  010482  EC97  F091         	call	_delay_us	;wreg free
  9567  010486  D0E9               	goto	l7320
  9568  010488                     l116:
  9569  010488  F000               	nop		;# 
  9570                           
  9571                           ;LCD.c: 380: PORTEbits.RE4 = 1;
  9572  01048A  8884               	bsf	3972,4,c	;volatile
  9573                           
  9574                           ;LCD.c: 381: { PORTHbits.RH5 = ((string[i] >> 7) & 1); PORTEbits.RE1 = ((string[i] >> 6)
      +                           & 1); PORTEbits.RE0 = ((string[i] >> 5) & 1); PORTEbits.RE2 = ((string[i] >> 4) & 1); P
      +                          ORTHbits.RH0 = ((string[i] >> 3) & 1); PORTHbits.RH1 = ((string[i] >> 2) & 1); PORTHbit
  9575  01048C  0EC6               	movlw	low LCD_printString@string
  9576  01048E  0102               	movlb	2	; () banked
  9577  010490  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9578  010492  6ED9               	movwf	fsr2l,c
  9579  010494  0E02               	movlw	high LCD_printString@string
  9580  010496  0102               	movlb	2	; () banked
  9581  010498  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9582  01049A  6EDA               	movwf	fsr2h,c
  9583  01049C  50DF               	movf	indf2,w,c
  9584  01049E  0100               	movlb	0	; () banked
  9585  0104A0  6F7F               	movwf	??_LCD_printString& (0+255),b
  9586  0104A2  0E00               	movlw	0
  9587  0104A4  BF7F               	btfsc	??_LCD_printString& (0+255),7,b
  9588  0104A6  0E01               	movlw	1
  9589  0104A8  6F7F               	movwf	??_LCD_printString& (0+255),b
  9590  0104AA  0E01               	movlw	1
  9591  0104AC  0100               	movlb	0	; () banked
  9592  0104AE  177F               	andwf	??_LCD_printString& (0+255),f,b
  9593  0104B0  0100               	movlb	0	; () banked
  9594  0104B2  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9595  0104B4  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9596  0104B6  5087               	movf	3975,w,c	;volatile
  9597  0104B8  0100               	movlb	0	; () banked
  9598  0104BA  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9599  0104BC  0BDF               	andlw	-33
  9600  0104BE  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9601  0104C0  6E87               	movwf	3975,c	;volatile
  9602  0104C2  0EC6               	movlw	low LCD_printString@string
  9603  0104C4  0102               	movlb	2	; () banked
  9604  0104C6  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9605  0104C8  6ED9               	movwf	fsr2l,c
  9606  0104CA  0E02               	movlw	high LCD_printString@string
  9607  0104CC  0102               	movlb	2	; () banked
  9608  0104CE  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9609  0104D0  6EDA               	movwf	fsr2h,c
  9610  0104D2  50DF               	movf	indf2,w,c
  9611  0104D4  0100               	movlb	0	; () banked
  9612  0104D6  6F7F               	movwf	??_LCD_printString& (0+255),b
  9613  0104D8  0E06               	movlw	6
  9614  0104DA  0100               	movlb	0	; () banked
  9615  0104DC  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  9616  0104DE                     u5125:
  9617  0104DE  0100               	movlb	0	; () banked
  9618  0104E0  90D8               	bcf	status,0,c
  9619  0104E2  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9620  0104E4  0100               	movlb	0	; () banked
  9621  0104E6  2F80               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  9622  0104E8  D7FA               	goto	u5125
  9623  0104EA  0E01               	movlw	1
  9624  0104EC  0100               	movlb	0	; () banked
  9625  0104EE  177F               	andwf	??_LCD_printString& (0+255),f,b
  9626  0104F0  0100               	movlb	0	; () banked
  9627  0104F2  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9628  0104F4  5084               	movf	3972,w,c	;volatile
  9629  0104F6  0100               	movlb	0	; () banked
  9630  0104F8  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9631  0104FA  0BFD               	andlw	-3
  9632  0104FC  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9633  0104FE  6E84               	movwf	3972,c	;volatile
  9634  010500  0EC6               	movlw	low LCD_printString@string
  9635  010502  0102               	movlb	2	; () banked
  9636  010504  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9637  010506  6ED9               	movwf	fsr2l,c
  9638  010508  0E02               	movlw	high LCD_printString@string
  9639  01050A  0102               	movlb	2	; () banked
  9640  01050C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9641  01050E  6EDA               	movwf	fsr2h,c
  9642  010510  50DF               	movf	indf2,w,c
  9643  010512  0100               	movlb	0	; () banked
  9644  010514  6F7F               	movwf	??_LCD_printString& (0+255),b
  9645  010516  0E05               	movlw	5
  9646  010518  0100               	movlb	0	; () banked
  9647  01051A  6F80               	movwf	(??_LCD_printString+1)& (0+255),b
  9648  01051C                     u5135:
  9649  01051C  0100               	movlb	0	; () banked
  9650  01051E  90D8               	bcf	status,0,c
  9651  010520  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9652  010522  0100               	movlb	0	; () banked
  9653  010524  2F80               	decfsz	(??_LCD_printString+1)& (0+255),f,b
  9654  010526  D7FA               	goto	u5135
  9655  010528  0E01               	movlw	1
  9656  01052A  0100               	movlb	0	; () banked
  9657  01052C  177F               	andwf	??_LCD_printString& (0+255),f,b
  9658  01052E  5084               	movf	3972,w,c	;volatile
  9659  010530  0100               	movlb	0	; () banked
  9660  010532  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9661  010534  0BFE               	andlw	-2
  9662  010536  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9663  010538  6E84               	movwf	3972,c	;volatile
  9664  01053A  0EC6               	movlw	low LCD_printString@string
  9665  01053C  0102               	movlb	2	; () banked
  9666  01053E  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9667  010540  6ED9               	movwf	fsr2l,c
  9668  010542  0E02               	movlw	high LCD_printString@string
  9669  010544  0102               	movlb	2	; () banked
  9670  010546  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9671  010548  6EDA               	movwf	fsr2h,c
  9672  01054A  50DF               	movf	indf2,w,c
  9673  01054C  0100               	movlb	0	; () banked
  9674  01054E  6F7F               	movwf	??_LCD_printString& (0+255),b
  9675  010550  0100               	movlb	0	; () banked
  9676  010552  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9677  010554  0E0F               	movlw	15
  9678  010556  177F               	andwf	??_LCD_printString& (0+255),f,b
  9679  010558  0E01               	movlw	1
  9680  01055A  0100               	movlb	0	; () banked
  9681  01055C  177F               	andwf	??_LCD_printString& (0+255),f,b
  9682  01055E  0100               	movlb	0	; () banked
  9683  010560  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9684  010562  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9685  010564  5084               	movf	3972,w,c	;volatile
  9686  010566  0100               	movlb	0	; () banked
  9687  010568  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9688  01056A  0BFB               	andlw	-5
  9689  01056C  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9690  01056E  6E84               	movwf	3972,c	;volatile
  9691  010570  0EC6               	movlw	low LCD_printString@string
  9692  010572  0102               	movlb	2	; () banked
  9693  010574  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9694  010576  6ED9               	movwf	fsr2l,c
  9695  010578  0E02               	movlw	high LCD_printString@string
  9696  01057A  0102               	movlb	2	; () banked
  9697  01057C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9698  01057E  6EDA               	movwf	fsr2h,c
  9699  010580  50DF               	movf	indf2,w,c
  9700  010582  0100               	movlb	0	; () banked
  9701  010584  6F7F               	movwf	??_LCD_printString& (0+255),b
  9702  010586  0100               	movlb	0	; () banked
  9703  010588  90D8               	bcf	status,0,c
  9704  01058A  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9705  01058C  0100               	movlb	0	; () banked
  9706  01058E  90D8               	bcf	status,0,c
  9707  010590  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9708  010592  0100               	movlb	0	; () banked
  9709  010594  90D8               	bcf	status,0,c
  9710  010596  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9711  010598  0E01               	movlw	1
  9712  01059A  0100               	movlb	0	; () banked
  9713  01059C  177F               	andwf	??_LCD_printString& (0+255),f,b
  9714  01059E  5087               	movf	3975,w,c	;volatile
  9715  0105A0  0100               	movlb	0	; () banked
  9716  0105A2  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9717  0105A4  0BFE               	andlw	-2
  9718  0105A6  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9719  0105A8  6E87               	movwf	3975,c	;volatile
  9720  0105AA  0EC6               	movlw	low LCD_printString@string
  9721  0105AC  0102               	movlb	2	; () banked
  9722  0105AE  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9723  0105B0  6ED9               	movwf	fsr2l,c
  9724  0105B2  0E02               	movlw	high LCD_printString@string
  9725  0105B4  0102               	movlb	2	; () banked
  9726  0105B6  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9727  0105B8  6EDA               	movwf	fsr2h,c
  9728  0105BA  50DF               	movf	indf2,w,c
  9729  0105BC  0100               	movlb	0	; () banked
  9730  0105BE  6F7F               	movwf	??_LCD_printString& (0+255),b
  9731  0105C0  0100               	movlb	0	; () banked
  9732  0105C2  90D8               	bcf	status,0,c
  9733  0105C4  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9734  0105C6  0100               	movlb	0	; () banked
  9735  0105C8  90D8               	bcf	status,0,c
  9736  0105CA  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9737  0105CC  0E01               	movlw	1
  9738  0105CE  0100               	movlb	0	; () banked
  9739  0105D0  177F               	andwf	??_LCD_printString& (0+255),f,b
  9740  0105D2  0100               	movlb	0	; () banked
  9741  0105D4  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9742  0105D6  5087               	movf	3975,w,c	;volatile
  9743  0105D8  0100               	movlb	0	; () banked
  9744  0105DA  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9745  0105DC  0BFD               	andlw	-3
  9746  0105DE  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9747  0105E0  6E87               	movwf	3975,c	;volatile
  9748  0105E2  0EC6               	movlw	low LCD_printString@string
  9749  0105E4  0102               	movlb	2	; () banked
  9750  0105E6  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9751  0105E8  6ED9               	movwf	fsr2l,c
  9752  0105EA  0E02               	movlw	high LCD_printString@string
  9753  0105EC  0102               	movlb	2	; () banked
  9754  0105EE  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9755  0105F0  6EDA               	movwf	fsr2h,c
  9756  0105F2  50DF               	movf	indf2,w,c
  9757  0105F4  0100               	movlb	0	; () banked
  9758  0105F6  6F7F               	movwf	??_LCD_printString& (0+255),b
  9759  0105F8  0100               	movlb	0	; () banked
  9760  0105FA  90D8               	bcf	status,0,c
  9761  0105FC  337F               	rrcf	??_LCD_printString& (0+255),f,b
  9762  0105FE  0E01               	movlw	1
  9763  010600  0100               	movlb	0	; () banked
  9764  010602  177F               	andwf	??_LCD_printString& (0+255),f,b
  9765  010604  0100               	movlb	0	; () banked
  9766  010606  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9767  010608  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9768  01060A  5087               	movf	3975,w,c	;volatile
  9769  01060C  0100               	movlb	0	; () banked
  9770  01060E  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9771  010610  0BFB               	andlw	-5
  9772  010612  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9773  010614  6E87               	movwf	3975,c	;volatile
  9774  010616  0EC6               	movlw	low LCD_printString@string
  9775  010618  0102               	movlb	2	; () banked
  9776  01061A  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9777  01061C  6ED9               	movwf	fsr2l,c
  9778  01061E  0E02               	movlw	high LCD_printString@string
  9779  010620  0102               	movlb	2	; () banked
  9780  010622  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9781  010624  6EDA               	movwf	fsr2h,c
  9782  010626  50DF               	movf	indf2,w,c
  9783  010628  0100               	movlb	0	; () banked
  9784  01062A  6F7F               	movwf	??_LCD_printString& (0+255),b
  9785  01062C  0E01               	movlw	1
  9786  01062E  0100               	movlb	0	; () banked
  9787  010630  177F               	andwf	??_LCD_printString& (0+255),f,b
  9788  010632  0100               	movlb	0	; () banked
  9789  010634  3B7F               	swapf	??_LCD_printString& (0+255),f,b
  9790  010636  477F               	rlncf	??_LCD_printString& (0+255),f,b
  9791  010638  5084               	movf	3972,w,c	;volatile
  9792  01063A  0100               	movlb	0	; () banked
  9793  01063C  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9794  01063E  0BDF               	andlw	-33
  9795  010640  197F               	xorwf	??_LCD_printString& (0+255),w,b
  9796  010642  6E84               	movwf	3972,c	;volatile
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;LCD.c: 382: delay_us(40);;
  9800  010644  0E28               	movlw	40
  9801  010646  0100               	movlb	0	; () banked
  9802  010648  6F60               	movwf	delay_us@x& (0+255),b
  9803  01064A  0E00               	movlw	0
  9804  01064C  6F61               	movwf	(delay_us@x+1)& (0+255),b
  9805  01064E  0E00               	movlw	0
  9806  010650  6F62               	movwf	(delay_us@x+2)& (0+255),b
  9807  010652  0E00               	movlw	0
  9808  010654  6F63               	movwf	(delay_us@x+3)& (0+255),b
  9809  010656  EC97  F091         	call	_delay_us	;wreg free
  9810  01065A                     l7320:
  9811                           
  9812                           ;LCD.c: 383: PORTEbits.RE4 = 0;
  9813  01065A  9884               	bcf	3972,4,c	;volatile
  9814                           
  9815                           ;LCD.c: 385: }
  9816                           
  9817                           ;LCD.c: 384: break;
  9818  01065C  D008               	goto	l7326
  9819  01065E                     l7324:
  9820  01065E  5039               	movf	_mode,w,c	;volatile
  9821                           
  9822                           ; Switch size 1, requested type "space"
  9823                           ; Number of cases is 2, Range of values is 1 to 2
  9824                           ; switch strategies available:
  9825                           ; Name         Instructions Cycles
  9826                           ; simple_byte            7     4 (average)
  9827                           ;	Chosen strategy is simple_byte
  9828  010660  0A01               	xorlw	1	; case 1
  9829  010662  B4D8               	btfsc	status,2,c
  9830  010664  D5FD               	goto	l7290
  9831  010666  0A03               	xorlw	3	; case 2
  9832  010668  B4D8               	btfsc	status,2,c
  9833  01066A  D70E               	goto	l116
  9834  01066C  D000               	goto	l7326
  9835  01066E                     l7326:
  9836                           
  9837                           ;LCD.c: 386: delay_ms(2);
  9838  01066E  0E02               	movlw	2
  9839  010670  0100               	movlb	0	; () banked
  9840  010672  6F64               	movwf	delay_ms@x& (0+255),b
  9841  010674  0E00               	movlw	0
  9842  010676  6F65               	movwf	(delay_ms@x+1)& (0+255),b
  9843  010678  0E00               	movlw	0
  9844  01067A  6F66               	movwf	(delay_ms@x+2)& (0+255),b
  9845  01067C  0E00               	movlw	0
  9846  01067E  6F67               	movwf	(delay_ms@x+3)& (0+255),b
  9847  010680  EC0A  F091         	call	_delay_ms	;wreg free
  9848                           
  9849                           ;LCD.c: 387: PORTDbits.RD0 = 0;
  9850  010684  9083               	bcf	3971,0,c	;volatile
  9851  010686  D000               	goto	l7330
  9852  010688                     l7330:
  9853  010688  0102               	movlb	2	; () banked
  9854  01068A  4BE3               	infsnz	LCD_printString@i_591& (0+255),f,b
  9855  01068C  2BE4               	incf	(LCD_printString@i_591+1)& (0+255),f,b
  9856  01068E  D000               	goto	l7332
  9857  010690                     l7332:
  9858                           
  9859                           ; BSR set to: 2
  9860  010690  0EC6               	movlw	low LCD_printString@string
  9861  010692  0102               	movlb	2	; () banked
  9862  010694  25E3               	addwf	LCD_printString@i_591& (0+255),w,b
  9863  010696  6ED9               	movwf	fsr2l,c
  9864  010698  0E02               	movlw	high LCD_printString@string
  9865  01069A  0102               	movlb	2	; () banked
  9866  01069C  21E4               	addwfc	(LCD_printString@i_591+1)& (0+255),w,b
  9867  01069E  6EDA               	movwf	fsr2h,c
  9868  0106A0  50DF               	movf	indf2,w,c
  9869  0106A2  B4D8               	btfsc	status,2,c
  9870  0106A4  0012               	return	
  9871                           
  9872                           ; BSR set to: 2
  9873  0106A6  0102               	movlb	2	; () banked
  9874  0106A8  BFE4               	btfsc	(LCD_printString@i_591+1)& (0+255),7,b
  9875  0106AA  D5BA               	goto	l7282
  9876  0106AC  0102               	movlb	2	; () banked
  9877  0106AE  51E4               	movf	(LCD_printString@i_591+1)& (0+255),w,b
  9878  0106B0  E107               	bnz	l120
  9879  0106B2  0EC8               	movlw	200
  9880  0106B4  0102               	movlb	2	; () banked
  9881  0106B6  5DE3               	subwf	LCD_printString@i_591& (0+255),w,b
  9882  0106B8  B0D8               	btfsc	status,0,c
  9883  0106BA  0012               	return	
  9884  0106BC  D5B1               	goto	l7282
  9885                           
  9886                           ; BSR set to: 2
  9887  0106BE  0012               	return	
  9888  0106C0                     l120:
  9889                           
  9890                           ; BSR set to: 2
  9891  0106C0  0012               	return		;funcret
  9892  0106C2                     __end_of_LCD_printString:
  9893                           	opt stack 0
  9894                           tblptru	equ	0xFF8
  9895                           tblptrh	equ	0xFF7
  9896                           tblptrl	equ	0xFF6
  9897                           tablat	equ	0xFF5
  9898                           prodh	equ	0xFF4
  9899                           prodl	equ	0xFF3
  9900                           intcon	equ	0xFF2
  9901                           intcon2	equ	0xFF1
  9902                           intcon3	equ	0xFF0
  9903                           indf0	equ	0xFEF
  9904                           postinc0	equ	0xFEE
  9905                           fsr0h	equ	0xFEA
  9906                           fsr0l	equ	0xFE9
  9907                           wreg	equ	0xFE8
  9908                           indf1	equ	0xFE7
  9909                           postdec1	equ	0xFE5
  9910                           plusw1	equ	0xFE3
  9911                           fsr1h	equ	0xFE2
  9912                           fsr1l	equ	0xFE1
  9913                           indf2	equ	0xFDF
  9914                           postinc2	equ	0xFDE
  9915                           postdec2	equ	0xFDD
  9916                           plusw2	equ	0xFDB
  9917                           fsr2h	equ	0xFDA
  9918                           fsr2l	equ	0xFD9
  9919                           status	equ	0xFD8
  9920                           
  9921 ;; *************** function _strcat *****************
  9922 ;; Defined at:
  9923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcat.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  to              2    0[BANK0 ] PTR unsigned char 
  9926 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  9927 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  9928 ;;		 -> UART_transmitString@tempString_1918(2), UART_transmitString@tempString(20), STR_11(2), LCD_printString@tempStrin
      +g_590(2), 
  9929 ;;		 -> LCD_printString@tempString(20), STR_1(2), 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  cp              2   31[COMRAM] PTR unsigned char 
  9932 ;;		 -> UART_transmitString@string(200), LCD_printString@string(20), 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    0[BANK0 ] PTR unsigned char 
  9935 ;; Registers used:
  9936 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;Total ram usage:        6 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    3
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_LCD_printString
  9953 ;;		_UART_transmitString
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text39
  9958  0121B2                     __ptext39:
  9959                           	opt stack 0
  9960  0121B2                     _strcat:
  9961                           	opt stack 25
  9962                           
  9963                           ; BSR set to: 2
  9964                           ;incstack = 0
  9965  0121B2  C060  F020         	movff	strcat@to,strcat@cp
  9966  0121B6  C061  F021         	movff	strcat@to+1,strcat@cp+1
  9967  0121BA  D003               	goto	l6688
  9968  0121BC                     l6686:
  9969  0121BC  4A20               	infsnz	strcat@cp,f,c
  9970  0121BE  2A21               	incf	strcat@cp+1,f,c
  9971  0121C0  D000               	goto	l6688
  9972  0121C2                     l6688:
  9973  0121C2  C020  FFD9         	movff	strcat@cp,fsr2l
  9974  0121C6  C021  FFDA         	movff	strcat@cp+1,fsr2h
  9975  0121CA  50DF               	movf	indf2,w,c
  9976  0121CC  B4D8               	btfsc	status,2,c
  9977  0121CE  D008               	goto	l6692
  9978  0121D0  D7F5               	goto	l6686
  9979  0121D2  D006               	goto	l6692
  9980  0121D4                     l6690:
  9981  0121D4  4A20               	infsnz	strcat@cp,f,c
  9982  0121D6  2A21               	incf	strcat@cp+1,f,c
  9983  0121D8  0100               	movlb	0	; () banked
  9984  0121DA  4B62               	infsnz	strcat@from& (0+255),f,b
  9985  0121DC  2B63               	incf	(strcat@from+1)& (0+255),f,b
  9986  0121DE  D000               	goto	l6692
  9987  0121E0                     l6692:
  9988  0121E0  C062  FFF6         	movff	strcat@from,tblptrl
  9989  0121E4  C063  FFF7         	movff	strcat@from+1,tblptrh
  9990  0121E8  0E00               	movlw	low (__mediumconst shr (0+16))
  9991  0121EA  6EF8               	movwf	tblptru,c
  9992  0121EC  C020  FFD9         	movff	strcat@cp,fsr2l
  9993  0121F0  C021  FFDA         	movff	strcat@cp+1,fsr2h
  9994  0121F4  0E0D               	movlw	(high __ramtop+-1)
  9995  0121F6  64F7               	cpfsgt	tblptrh,c
  9996  0121F8  D003               	bra	u4507
  9997  0121FA  0008               	tblrd		*
  9998  0121FC  50F5               	movf	tablat,w,c
  9999  0121FE  D005               	bra	u4500
 10000  012200                     u4507:
 10001  012200  CFF6 FFE9          	movff	tblptrl,fsr0l
 10002  012204  CFF7 FFEA          	movff	tblptrh,fsr0h
 10003  012208  50EF               	movf	indf0,w,c
 10004  01220A                     u4500:
 10005  01220A  6EDF               	movwf	indf2,c
 10006  01220C  50DF               	movf	indf2,w,c
 10007  01220E  A4D8               	btfss	status,2,c
 10008  012210  D7E1               	goto	l6690
 10009                           
 10010                           ;	Return value of _strcat is never used
 10011  012212  0012               	return		;funcret
 10012  012214                     __end_of_strcat:
 10013                           	opt stack 0
 10014                           tblptru	equ	0xFF8
 10015                           tblptrh	equ	0xFF7
 10016                           tblptrl	equ	0xFF6
 10017                           tablat	equ	0xFF5
 10018                           prodh	equ	0xFF4
 10019                           prodl	equ	0xFF3
 10020                           intcon	equ	0xFF2
 10021                           intcon2	equ	0xFF1
 10022                           intcon3	equ	0xFF0
 10023                           indf0	equ	0xFEF
 10024                           postinc0	equ	0xFEE
 10025                           fsr0h	equ	0xFEA
 10026                           fsr0l	equ	0xFE9
 10027                           wreg	equ	0xFE8
 10028                           indf1	equ	0xFE7
 10029                           postdec1	equ	0xFE5
 10030                           plusw1	equ	0xFE3
 10031                           fsr1h	equ	0xFE2
 10032                           fsr1l	equ	0xFE1
 10033                           indf2	equ	0xFDF
 10034                           postinc2	equ	0xFDE
 10035                           postdec2	equ	0xFDD
 10036                           plusw2	equ	0xFDB
 10037                           fsr2h	equ	0xFDA
 10038                           fsr2l	equ	0xFD9
 10039                           status	equ	0xFD8
 10040                           
 10041 ;; *************** function _sprintf *****************
 10042 ;; Defined at:
 10043 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  sp              2   11[BANK0 ] PTR unsigned char 
 10046 ;;		 -> UART_transmitString@tempString(20), LCD_printString@tempString(20), 
 10047 ;;  f               2   13[BANK0 ] PTR const unsigned char 
 10048 ;;		 -> STR_12(3), STR_2(3), 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  tmpval          4    0        struct .
 10051 ;;  cp              3    0        PTR const unsigned char 
 10052 ;;  val             2   21[BANK0 ] unsigned int 
 10053 ;;  ap              2   17[BANK0 ] PTR void [1]
 10054 ;;		 -> ?_sprintf(2), 
 10055 ;;  len             2    0        unsigned int 
 10056 ;;  c               1   23[BANK0 ] char 
 10057 ;;  prec            1   20[BANK0 ] char 
 10058 ;;  flag            1   19[BANK0 ] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  2   11[BANK0 ] int 
 10061 ;; Registers used:
 10062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10068 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10071 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10072 ;;Total ram usage:       14 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    4
 10075 ;; This function calls:
 10076 ;;		___lwdiv
 10077 ;;		___lwmod
 10078 ;; This function is called by:
 10079 ;;		_LCD_printString
 10080 ;;		_UART_transmitString
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text40
 10085  01126C                     __ptext40:
 10086                           	opt stack 0
 10087  01126C                     _sprintf:
 10088                           	opt stack 24
 10089                           
 10090                           ;doprnt.c: 494: va_list ap;
 10091                           ;doprnt.c: 499: signed char c;
 10092                           ;doprnt.c: 506: signed char prec;
 10093                           ;doprnt.c: 508: unsigned char flag;
 10094                           ;doprnt.c: 523: union {
 10095                           ;doprnt.c: 524: unsigned long vd;
 10096                           ;doprnt.c: 525: double integ;
 10097                           ;doprnt.c: 526: } tmpval;
 10098                           ;doprnt.c: 528: unsigned int val;
 10099                           ;doprnt.c: 529: unsigned len;
 10100                           ;doprnt.c: 530: const char * cp;
 10101                           ;doprnt.c: 533: *ap = __va_start();
 10102                           
 10103                           ;incstack = 0
 10104  01126C  0E6F               	movlw	low (?_sprintf+4)
 10105  01126E  0100               	movlb	0	; () banked
 10106  011270  6F71               	movwf	sprintf@ap& (0+255),b
 10107  011272  0E00               	movlw	high (?_sprintf+4)
 10108  011274  0100               	movlb	0	; () banked
 10109  011276  6F72               	movwf	(sprintf@ap+1)& (0+255),b
 10110                           
 10111                           ;doprnt.c: 536: while(c = *f++) {
 10112  011278  D0B9               	goto	l6748
 10113  01127A                     l6696:
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;doprnt.c: 538: if(c != '%')
 10117  01127A  0E25               	movlw	37
 10118  01127C  0100               	movlb	0	; () banked
 10119  01127E  1977               	xorwf	sprintf@c& (0+255),w,b
 10120  011280  B4D8               	btfsc	status,2,c
 10121  011282  D00A               	goto	l6702
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;doprnt.c: 540: {
 10125                           ;doprnt.c: 541: ((*sp++ = (c)));
 10126  011284  C06B  FFD9         	movff	sprintf@sp,fsr2l
 10127  011288  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
 10128  01128C  C077  FFDF         	movff	sprintf@c,indf2
 10129                           
 10130                           ; BSR set to: 0
 10131  011290  0100               	movlb	0	; () banked
 10132  011292  4B6B               	infsnz	sprintf@sp& (0+255),f,b
 10133  011294  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
 10134                           
 10135                           ;doprnt.c: 542: continue;
 10136  011296  D0AA               	goto	l6748
 10137  011298                     l6702:
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;doprnt.c: 543: }
 10141                           ;doprnt.c: 548: flag = 0;
 10142  011298  0E00               	movlw	0
 10143  01129A  0100               	movlb	0	; () banked
 10144  01129C  6F73               	movwf	sprintf@flag& (0+255),b
 10145                           
 10146                           ;doprnt.c: 635: switch(c = *f++) {
 10147  01129E  D004               	goto	l6706
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;doprnt.c: 638: goto alldone;
 10151                           
 10152                           ;doprnt.c: 637: case 0:
 10153  0112A0  D0B7               	goto	l6750
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;doprnt.c: 698: case 'i':
 10157                           ;doprnt.c: 699: break;
 10158                           
 10159                           ; BSR set to: 0
 10160                           
 10161                           ;doprnt.c: 697: case 'd':
 10162  0112A2  D019               	goto	l6708
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;doprnt.c: 813: continue;
 10166                           
 10167                           ;doprnt.c: 802: default:
 10168  0112A4  D0A3               	goto	l6748
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;doprnt.c: 822: }
 10172  0112A6  D017               	goto	l6708
 10173  0112A8                     l6706:
 10174                           
 10175                           ; BSR set to: 0
 10176  0112A8  C06D  FFF6         	movff	sprintf@f,tblptrl
 10177  0112AC  C06E  FFF7         	movff	sprintf@f+1,tblptrh
 10178  0112B0  0100               	movlb	0	; () banked
 10179  0112B2  4B6D               	infsnz	sprintf@f& (0+255),f,b
 10180  0112B4  2B6E               	incf	(sprintf@f+1)& (0+255),f,b
 10181  0112B6                     	if	0	;tblptru may be non-zero
 10182  0112B6                     	endif
 10183  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10184  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10185  0112B8  6EF8               	movwf	tblptru,c
 10186  0112BA                     	endif
 10187  0112BA  0008               	tblrd		*
 10188  0112BC  CFF5 F077          	movff	tablat,sprintf@c
 10189  0112C0  0100               	movlb	0	; () banked
 10190  0112C2  5177               	movf	sprintf@c& (0+255),w,b
 10191                           
 10192                           ; Switch size 1, requested type "space"
 10193                           ; Number of cases is 3, Range of values is 0 to 105
 10194                           ; switch strategies available:
 10195                           ; Name         Instructions Cycles
 10196                           ; simple_byte           10     6 (average)
 10197                           ;	Chosen strategy is simple_byte
 10198  0112C4  0A00               	xorlw	0	; case 0
 10199  0112C6  B4D8               	btfsc	status,2,c
 10200  0112C8  D0A3               	goto	l6750
 10201  0112CA  0A64               	xorlw	100	; case 100
 10202  0112CC  B4D8               	btfsc	status,2,c
 10203  0112CE  D003               	goto	l6708
 10204  0112D0  0A0D               	xorlw	13	; case 105
 10205  0112D2  A4D8               	btfss	status,2,c
 10206  0112D4  D08B               	goto	l6748
 10207  0112D6                     l6708:
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;doprnt.c: 1253: {
 10211                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10212  0112D6  C071  FFD9         	movff	sprintf@ap,fsr2l
 10213  0112DA  C072  FFDA         	movff	sprintf@ap+1,fsr2h
 10214  0112DE  CFDE F075          	movff	postinc2,sprintf@val
 10215  0112E2  CFDD F076          	movff	postdec2,sprintf@val+1
 10216                           
 10217                           ; BSR set to: 0
 10218  0112E6  0E02               	movlw	2
 10219  0112E8  0100               	movlb	0	; () banked
 10220  0112EA  2771               	addwf	sprintf@ap& (0+255),f,b
 10221  0112EC  0E00               	movlw	0
 10222  0112EE  2372               	addwfc	(sprintf@ap+1)& (0+255),f,b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;doprnt.c: 1261: if((int)val < 0) {
 10226  0112F0  0100               	movlb	0	; () banked
 10227  0112F2  AF76               	btfss	(sprintf@val+1)& (0+255),7,b
 10228  0112F4  D009               	goto	l6718
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;doprnt.c: 1262: flag |= 0x03;
 10232  0112F6  0E03               	movlw	3
 10233  0112F8  0100               	movlb	0	; () banked
 10234  0112FA  1373               	iorwf	sprintf@flag& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;doprnt.c: 1263: val = -val;
 10238  0112FC  0100               	movlb	0	; () banked
 10239  0112FE  6D75               	negf	sprintf@val& (0+255),b
 10240  011300  1F76               	comf	(sprintf@val+1)& (0+255),f,b
 10241  011302  B0D8               	btfsc	status,0,c
 10242  011304  2B76               	incf	(sprintf@val+1)& (0+255),f,b
 10243  011306  D000               	goto	l6718
 10244  011308                     l6718:
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;doprnt.c: 1264: }
 10248                           ;doprnt.c: 1266: }
 10249                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10250  011308  0E01               	movlw	1
 10251  01130A  0100               	movlb	0	; () banked
 10252  01130C  6F77               	movwf	sprintf@c& (0+255),b
 10253  01130E                     l6720:
 10254                           
 10255                           ; BSR set to: 0
 10256  01130E  0E05               	movlw	5
 10257  011310  0100               	movlb	0	; () banked
 10258  011312  1977               	xorwf	sprintf@c& (0+255),w,b
 10259  011314  B4D8               	btfsc	status,2,c
 10260  011316  D01D               	goto	l6732
 10261  011318  D001               	goto	l6724
 10262                           
 10263                           ; BSR set to: 0
 10264  01131A  D01B               	goto	l6732
 10265  01131C                     l6724:
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;doprnt.c: 1306: if(val < dpowers[c])
 10269  01131C  0100               	movlb	0	; () banked
 10270  01131E  5177               	movf	sprintf@c& (0+255),w,b
 10271  011320  0D02               	mullw	2
 10272  011322  0E17               	movlw	low _dpowers
 10273  011324  24F3               	addwf	prodl,w,c
 10274  011326  6EF6               	movwf	tblptrl,c
 10275  011328  0EFF               	movlw	high _dpowers
 10276  01132A  20F4               	addwfc	prodh,w,c
 10277  01132C  6EF7               	movwf	tblptrh,c
 10278  01132E                     	if	1	;There are 3 active tblptr bytes
 10279  01132E  6AF8               	clrf	tblptru,c
 10280  011330  0E00               	movlw	low (__mediumconst shr (0+16))
 10281  011332  22F8               	addwfc	tblptru,f,c
 10282  011334                     	endif
 10283  011334  0009               	tblrd		*+
 10284  011336  50F5               	movf	tablat,w,c
 10285  011338  0100               	movlb	0	; () banked
 10286  01133A  5D75               	subwf	sprintf@val& (0+255),w,b
 10287  01133C  0009               	tblrd		*+
 10288  01133E  50F5               	movf	tablat,w,c
 10289  011340  0100               	movlb	0	; () banked
 10290  011342  5976               	subwfb	(sprintf@val+1)& (0+255),w,b
 10291  011344  A0D8               	btfss	status,0,c
 10292  011346  D005               	goto	l6732
 10293  011348  D001               	goto	l6728
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;doprnt.c: 1307: break;
 10297  01134A  D003               	goto	l6732
 10298  01134C                     l6728:
 10299                           
 10300                           ; BSR set to: 0
 10301  01134C  0100               	movlb	0	; () banked
 10302  01134E  2B77               	incf	sprintf@c& (0+255),f,b
 10303  011350  D7DE               	goto	l6720
 10304  011352                     l6732:
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;doprnt.c: 1422: {
 10308                           ;doprnt.c: 1438: if(flag & 0x03)
 10309  011352  C073  F021         	movff	sprintf@flag,??_sprintf
 10310  011356  0E03               	movlw	3
 10311  011358  1621               	andwf	??_sprintf,f,c
 10312  01135A  B4D8               	btfsc	status,2,c
 10313  01135C  D00A               	goto	l6738
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10317  01135E  C06B  FFD9         	movff	sprintf@sp,fsr2l
 10318  011362  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
 10319  011366  0E2D               	movlw	45
 10320  011368  6EDF               	movwf	indf2,c
 10321                           
 10322                           ; BSR set to: 0
 10323  01136A  0100               	movlb	0	; () banked
 10324  01136C  4B6B               	infsnz	sprintf@sp& (0+255),f,b
 10325  01136E  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
 10326  011370  D000               	goto	l6738
 10327  011372                     l6738:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;doprnt.c: 1469: }
 10331                           ;doprnt.c: 1472: prec = c;
 10332  011372  C077  F074         	movff	sprintf@c,sprintf@prec
 10333                           
 10334                           ;doprnt.c: 1474: while(prec--) {
 10335  011376  D032               	goto	l6746
 10336  011378                     l6740:
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;doprnt.c: 1478: {
 10340                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10341  011378  0100               	movlb	0	; () banked
 10342  01137A  5174               	movf	sprintf@prec& (0+255),w,b
 10343  01137C  0D02               	mullw	2
 10344  01137E  0E17               	movlw	low _dpowers
 10345  011380  24F3               	addwf	prodl,w,c
 10346  011382  6EF6               	movwf	tblptrl,c
 10347  011384  0EFF               	movlw	high _dpowers
 10348  011386  20F4               	addwfc	prodh,w,c
 10349  011388  6EF7               	movwf	tblptrh,c
 10350  01138A                     	if	1	;There are 3 active tblptr bytes
 10351  01138A  6AF8               	clrf	tblptru,c
 10352  01138C  0E00               	movlw	low (__mediumconst shr (0+16))
 10353  01138E  22F8               	addwfc	tblptru,f,c
 10354  011390                     	endif
 10355  011390  0009               	tblrd		*+
 10356  011392  CFF5 F062          	movff	tablat,___lwdiv@divisor
 10357  011396  000A               	tblrd		*-
 10358  011398  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 10359  01139C  C075  F060         	movff	sprintf@val,___lwdiv@dividend
 10360  0113A0  C076  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 10361  0113A4  EC76  F08F         	call	___lwdiv	;wreg free
 10362  0113A8  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 10363  0113AC  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 10364  0113B0  0E00               	movlw	0
 10365  0113B2  0100               	movlb	0	; () banked
 10366  0113B4  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 10367  0113B6  0E0A               	movlw	10
 10368  0113B8  6F69               	movwf	___lwmod@divisor& (0+255),b
 10369  0113BA  ECA6  F090         	call	___lwmod	;wreg free
 10370  0113BE  0100               	movlb	0	; () banked
 10371  0113C0  5167               	movf	?___lwmod& (0+255),w,b
 10372  0113C2  0F30               	addlw	48
 10373  0113C4  0100               	movlb	0	; () banked
 10374  0113C6  6F77               	movwf	sprintf@c& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;doprnt.c: 1523: }
 10378                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10379  0113C8  C06B  FFD9         	movff	sprintf@sp,fsr2l
 10380  0113CC  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
 10381  0113D0  C077  FFDF         	movff	sprintf@c,indf2
 10382                           
 10383                           ; BSR set to: 0
 10384  0113D4  0100               	movlb	0	; () banked
 10385  0113D6  4B6B               	infsnz	sprintf@sp& (0+255),f,b
 10386  0113D8  2B6C               	incf	(sprintf@sp+1)& (0+255),f,b
 10387  0113DA  D000               	goto	l6746
 10388  0113DC                     l6746:
 10389                           
 10390                           ; BSR set to: 0
 10391  0113DC  0100               	movlb	0	; () banked
 10392  0113DE  0774               	decf	sprintf@prec& (0+255),f,b
 10393  0113E0  0100               	movlb	0	; () banked
 10394  0113E2  2974               	incf	sprintf@prec& (0+255),w,b
 10395  0113E4  B4D8               	btfsc	status,2,c
 10396  0113E6  D002               	goto	l6748
 10397  0113E8  D7C7               	goto	l6740
 10398                           
 10399                           ; BSR set to: 0
 10400  0113EA  D000               	goto	l6748
 10401  0113EC                     l6748:
 10402                           
 10403                           ; BSR set to: 0
 10404  0113EC  C06D  FFF6         	movff	sprintf@f,tblptrl
 10405  0113F0  C06E  FFF7         	movff	sprintf@f+1,tblptrh
 10406  0113F4  0100               	movlb	0	; () banked
 10407  0113F6  4B6D               	infsnz	sprintf@f& (0+255),f,b
 10408  0113F8  2B6E               	incf	(sprintf@f+1)& (0+255),f,b
 10409  0113FA                     	if	0	;tblptru may be non-zero
 10410  0113FA                     	endif
 10411  0113FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10412  0113FA  0E00               	movlw	low (__mediumconst shr (0+16))
 10413  0113FC  6EF8               	movwf	tblptru,c
 10414  0113FE                     	endif
 10415  0113FE  0008               	tblrd		*
 10416  011400  CFF5 F077          	movff	tablat,sprintf@c
 10417  011404  0100               	movlb	0	; () banked
 10418  011406  5177               	movf	sprintf@c& (0+255),w,b
 10419  011408  B4D8               	btfsc	status,2,c
 10420  01140A  D002               	goto	l6750
 10421  01140C  D736               	goto	l6696
 10422                           
 10423                           ; BSR set to: 0
 10424  01140E  D000               	goto	l6750
 10425  011410                     l6750:
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;doprnt.c: 1538: *sp = 0;
 10429  011410  C06B  FFD9         	movff	sprintf@sp,fsr2l
 10430  011414  C06C  FFDA         	movff	sprintf@sp+1,fsr2h
 10431  011418  0E00               	movlw	0
 10432  01141A  6EDF               	movwf	indf2,c
 10433  01141C  0012               	return	
 10434                           
 10435                           ; BSR set to: 0
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;doprnt.c: 1540: return 0;
 10439                           ;	Return value of _sprintf is never used
 10440  01141E  0012               	return		;funcret
 10441  011420                     __end_of_sprintf:
 10442                           	opt stack 0
 10443                           tblptru	equ	0xFF8
 10444                           tblptrh	equ	0xFF7
 10445                           tblptrl	equ	0xFF6
 10446                           tablat	equ	0xFF5
 10447                           prodh	equ	0xFF4
 10448                           prodl	equ	0xFF3
 10449                           intcon	equ	0xFF2
 10450                           intcon2	equ	0xFF1
 10451                           intcon3	equ	0xFF0
 10452                           indf0	equ	0xFEF
 10453                           postinc0	equ	0xFEE
 10454                           fsr0h	equ	0xFEA
 10455                           fsr0l	equ	0xFE9
 10456                           wreg	equ	0xFE8
 10457                           indf1	equ	0xFE7
 10458                           postdec1	equ	0xFE5
 10459                           plusw1	equ	0xFE3
 10460                           fsr1h	equ	0xFE2
 10461                           fsr1l	equ	0xFE1
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           plusw2	equ	0xFDB
 10466                           fsr2h	equ	0xFDA
 10467                           fsr2l	equ	0xFD9
 10468                           status	equ	0xFD8
 10469                           
 10470 ;; *************** function ___lwmod *****************
 10471 ;; Defined at:
 10472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  dividend        2    7[BANK0 ] unsigned int 
 10475 ;;  divisor         2    9[BANK0 ] unsigned int 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  counter         1   31[COMRAM] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  2    7[BANK0 ] unsigned int 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;Total ram usage:        5 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    3
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_sprintf
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text41
 10502  01214C                     __ptext41:
 10503                           	opt stack 0
 10504  01214C                     ___lwmod:
 10505                           	opt stack 24
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;incstack = 0
 10509  01214C  0100               	movlb	0	; () banked
 10510  01214E  5169               	movf	___lwmod@divisor& (0+255),w,b
 10511  012150  0100               	movlb	0	; () banked
 10512  012152  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 10513  012154  B4D8               	btfsc	status,2,c
 10514  012156  D028               	goto	l1965
 10515                           
 10516                           ; BSR set to: 0
 10517  012158  0E01               	movlw	1
 10518  01215A  6E20               	movwf	___lwmod@counter,c
 10519  01215C  D006               	goto	l6634
 10520  01215E                     l6632:
 10521                           
 10522                           ; BSR set to: 0
 10523  01215E  0100               	movlb	0	; () banked
 10524  012160  90D8               	bcf	status,0,c
 10525  012162  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 10526  012164  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 10527  012166  2A20               	incf	___lwmod@counter,f,c
 10528  012168  D000               	goto	l6634
 10529  01216A                     l6634:
 10530                           
 10531                           ; BSR set to: 0
 10532  01216A  0100               	movlb	0	; () banked
 10533  01216C  BF6A               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 10534  01216E  D002               	goto	l6636
 10535  012170  D7F6               	goto	l6632
 10536                           
 10537                           ; BSR set to: 0
 10538  012172  D000               	goto	l6636
 10539  012174                     l6636:
 10540                           
 10541                           ; BSR set to: 0
 10542  012174  0100               	movlb	0	; () banked
 10543  012176  5169               	movf	___lwmod@divisor& (0+255),w,b
 10544  012178  0100               	movlb	0	; () banked
 10545  01217A  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 10546  01217C  0100               	movlb	0	; () banked
 10547  01217E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10548  012180  0100               	movlb	0	; () banked
 10549  012182  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 10550  012184  A0D8               	btfss	status,0,c
 10551  012186  D009               	goto	l6640
 10552                           
 10553                           ; BSR set to: 0
 10554  012188  0100               	movlb	0	; () banked
 10555  01218A  5169               	movf	___lwmod@divisor& (0+255),w,b
 10556  01218C  0100               	movlb	0	; () banked
 10557  01218E  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 10558  012190  0100               	movlb	0	; () banked
 10559  012192  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 10560  012194  0100               	movlb	0	; () banked
 10561  012196  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 10562  012198  D000               	goto	l6640
 10563  01219A                     l6640:
 10564                           
 10565                           ; BSR set to: 0
 10566  01219A  0100               	movlb	0	; () banked
 10567  01219C  90D8               	bcf	status,0,c
 10568  01219E  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 10569  0121A0  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 10570                           
 10571                           ; BSR set to: 0
 10572  0121A2  2E20               	decfsz	___lwmod@counter,f,c
 10573  0121A4  D7E7               	goto	l6636
 10574  0121A6  D000               	goto	l1965
 10575  0121A8                     l1965:
 10576                           
 10577                           ; BSR set to: 0
 10578  0121A8  C067  F067         	movff	___lwmod@dividend,?___lwmod
 10579  0121AC  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 10580                           
 10581                           ; BSR set to: 0
 10582  0121B0  0012               	return		;funcret
 10583  0121B2                     __end_of___lwmod:
 10584                           	opt stack 0
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           intcon	equ	0xFF2
 10592                           intcon2	equ	0xFF1
 10593                           intcon3	equ	0xFF0
 10594                           indf0	equ	0xFEF
 10595                           postinc0	equ	0xFEE
 10596                           fsr0h	equ	0xFEA
 10597                           fsr0l	equ	0xFE9
 10598                           wreg	equ	0xFE8
 10599                           indf1	equ	0xFE7
 10600                           postdec1	equ	0xFE5
 10601                           plusw1	equ	0xFE3
 10602                           fsr1h	equ	0xFE2
 10603                           fsr1l	equ	0xFE1
 10604                           indf2	equ	0xFDF
 10605                           postinc2	equ	0xFDE
 10606                           postdec2	equ	0xFDD
 10607                           plusw2	equ	0xFDB
 10608                           fsr2h	equ	0xFDA
 10609                           fsr2l	equ	0xFD9
 10610                           status	equ	0xFD8
 10611                           
 10612 ;; *************** function ___lwdiv *****************
 10613 ;; Defined at:
 10614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;  dividend        2    0[BANK0 ] unsigned int 
 10617 ;;  divisor         2    2[BANK0 ] unsigned int 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;  quotient        2    5[BANK0 ] unsigned int 
 10620 ;;  counter         1    4[BANK0 ] unsigned char 
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  2    0[BANK0 ] unsigned int 
 10623 ;; Registers used:
 10624 ;;		wreg, status,2, status,0
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10631 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10633 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10634 ;;Total ram usage:        7 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:    3
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_sprintf
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text42
 10645  011EEC                     __ptext42:
 10646                           	opt stack 0
 10647  011EEC                     ___lwdiv:
 10648                           	opt stack 24
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;incstack = 0
 10652  011EEC  0E00               	movlw	0
 10653  011EEE  0100               	movlb	0	; () banked
 10654  011EF0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10655  011EF2  0E00               	movlw	0
 10656  011EF4  6F65               	movwf	___lwdiv@quotient& (0+255),b
 10657                           
 10658                           ; BSR set to: 0
 10659  011EF6  0100               	movlb	0	; () banked
 10660  011EF8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10661  011EFA  0100               	movlb	0	; () banked
 10662  011EFC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10663  011EFE  B4D8               	btfsc	status,2,c
 10664  011F00  D031               	goto	l1955
 10665                           
 10666                           ; BSR set to: 0
 10667  011F02  0E01               	movlw	1
 10668  011F04  0100               	movlb	0	; () banked
 10669  011F06  6F64               	movwf	___lwdiv@counter& (0+255),b
 10670  011F08  D007               	goto	l6614
 10671  011F0A                     l6612:
 10672                           
 10673                           ; BSR set to: 0
 10674  011F0A  0100               	movlb	0	; () banked
 10675  011F0C  90D8               	bcf	status,0,c
 10676  011F0E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 10677  011F10  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10678  011F12  0100               	movlb	0	; () banked
 10679  011F14  2B64               	incf	___lwdiv@counter& (0+255),f,b
 10680  011F16  D000               	goto	l6614
 10681  011F18                     l6614:
 10682                           
 10683                           ; BSR set to: 0
 10684  011F18  0100               	movlb	0	; () banked
 10685  011F1A  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 10686  011F1C  D002               	goto	l6616
 10687  011F1E  D7F5               	goto	l6612
 10688                           
 10689                           ; BSR set to: 0
 10690  011F20  D000               	goto	l6616
 10691  011F22                     l6616:
 10692                           
 10693                           ; BSR set to: 0
 10694  011F22  0100               	movlb	0	; () banked
 10695  011F24  90D8               	bcf	status,0,c
 10696  011F26  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 10697  011F28  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10698                           
 10699                           ; BSR set to: 0
 10700  011F2A  0100               	movlb	0	; () banked
 10701  011F2C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10702  011F2E  0100               	movlb	0	; () banked
 10703  011F30  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 10704  011F32  0100               	movlb	0	; () banked
 10705  011F34  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10706  011F36  0100               	movlb	0	; () banked
 10707  011F38  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10708  011F3A  A0D8               	btfss	status,0,c
 10709  011F3C  D00B               	goto	l6624
 10710                           
 10711                           ; BSR set to: 0
 10712  011F3E  0100               	movlb	0	; () banked
 10713  011F40  5162               	movf	___lwdiv@divisor& (0+255),w,b
 10714  011F42  0100               	movlb	0	; () banked
 10715  011F44  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 10716  011F46  0100               	movlb	0	; () banked
 10717  011F48  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10718  011F4A  0100               	movlb	0	; () banked
 10719  011F4C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10720                           
 10721                           ; BSR set to: 0
 10722  011F4E  0100               	movlb	0	; () banked
 10723  011F50  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 10724  011F52  D000               	goto	l6624
 10725  011F54                     l6624:
 10726                           
 10727                           ; BSR set to: 0
 10728  011F54  0100               	movlb	0	; () banked
 10729  011F56  90D8               	bcf	status,0,c
 10730  011F58  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10731  011F5A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 10732                           
 10733                           ; BSR set to: 0
 10734  011F5C  0100               	movlb	0	; () banked
 10735  011F5E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 10736  011F60  D7E0               	goto	l6616
 10737  011F62  D000               	goto	l1955
 10738  011F64                     l1955:
 10739                           
 10740                           ; BSR set to: 0
 10741  011F64  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 10742  011F68  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10743                           
 10744                           ; BSR set to: 0
 10745  011F6C  0012               	return		;funcret
 10746  011F6E                     __end_of___lwdiv:
 10747                           	opt stack 0
 10748                           tblptru	equ	0xFF8
 10749                           tblptrh	equ	0xFF7
 10750                           tblptrl	equ	0xFF6
 10751                           tablat	equ	0xFF5
 10752                           prodh	equ	0xFF4
 10753                           prodl	equ	0xFF3
 10754                           intcon	equ	0xFF2
 10755                           intcon2	equ	0xFF1
 10756                           intcon3	equ	0xFF0
 10757                           indf0	equ	0xFEF
 10758                           postinc0	equ	0xFEE
 10759                           fsr0h	equ	0xFEA
 10760                           fsr0l	equ	0xFE9
 10761                           wreg	equ	0xFE8
 10762                           indf1	equ	0xFE7
 10763                           postdec1	equ	0xFE5
 10764                           plusw1	equ	0xFE3
 10765                           fsr1h	equ	0xFE2
 10766                           fsr1l	equ	0xFE1
 10767                           indf2	equ	0xFDF
 10768                           postinc2	equ	0xFDE
 10769                           postdec2	equ	0xFDD
 10770                           plusw2	equ	0xFDB
 10771                           fsr2h	equ	0xFDA
 10772                           fsr2l	equ	0xFD9
 10773                           status	equ	0xFD8
 10774                           
 10775 ;; *************** function _LCD_placeCursor *****************
 10776 ;; Defined at:
 10777 ;;		line 279 in file "LCD.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;  x               1    wreg     unsigned char 
 10780 ;;  y               1   31[COMRAM] unsigned char 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  x               1   12[BANK0 ] unsigned char 
 10783 ;;  address         1   13[BANK0 ] unsigned char 
 10784 ;; Return value:  Size  Location     Type
 10785 ;;		None               void
 10786 ;; Registers used:
 10787 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10793 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10795 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;Total ram usage:        7 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:    5
 10800 ;; This function calls:
 10801 ;;		_delay_ms
 10802 ;;		_delay_us
 10803 ;; This function is called by:
 10804 ;;		_LCD_printString
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text43
 10809  010A24                     __ptext43:
 10810                           	opt stack 0
 10811  010A24                     _LCD_placeCursor:
 10812                           	opt stack 23
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;incstack = 0
 10816                           ;LCD_placeCursor@x stored from wreg
 10817  010A24  0100               	movlb	0	; () banked
 10818  010A26  6F6C               	movwf	LCD_placeCursor@x& (0+255),b
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;LCD.c: 283: char address = 0x80 + x + (0x40 * y);
 10822  010A28  5020               	movf	LCD_placeCursor@y,w,c
 10823  010A2A  0D40               	mullw	64
 10824  010A2C  50F3               	movf	prodl,w,c
 10825  010A2E  0100               	movlb	0	; () banked
 10826  010A30  256C               	addwf	LCD_placeCursor@x& (0+255),w,b
 10827  010A32  0F80               	addlw	128
 10828  010A34  0100               	movlb	0	; () banked
 10829  010A36  6F6D               	movwf	LCD_placeCursor@address& (0+255),b
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;LCD.c: 284: delay_ms(3);
 10833  010A38  0E03               	movlw	3
 10834  010A3A  0100               	movlb	0	; () banked
 10835  010A3C  6F64               	movwf	delay_ms@x& (0+255),b
 10836  010A3E  0E00               	movlw	0
 10837  010A40  6F65               	movwf	(delay_ms@x+1)& (0+255),b
 10838  010A42  0E00               	movlw	0
 10839  010A44  6F66               	movwf	(delay_ms@x+2)& (0+255),b
 10840  010A46  0E00               	movlw	0
 10841  010A48  6F67               	movwf	(delay_ms@x+3)& (0+255),b
 10842  010A4A  EC0A  F091         	call	_delay_ms	;wreg free
 10843                           
 10844                           ;LCD.c: 285: switch(mode)
 10845  010A4E  D18D               	goto	l6682
 10846  010A50                     l6648:
 10847                           
 10848                           ;LCD.c: 288: delay_us(40);;
 10849  010A50  0E28               	movlw	40
 10850  010A52  0100               	movlb	0	; () banked
 10851  010A54  6F60               	movwf	delay_us@x& (0+255),b
 10852  010A56  0E00               	movlw	0
 10853  010A58  6F61               	movwf	(delay_us@x+1)& (0+255),b
 10854  010A5A  0E00               	movlw	0
 10855  010A5C  6F62               	movwf	(delay_us@x+2)& (0+255),b
 10856  010A5E  0E00               	movlw	0
 10857  010A60  6F63               	movwf	(delay_us@x+3)& (0+255),b
 10858  010A62  EC97  F091         	call	_delay_us	;wreg free
 10859                           
 10860                           ;LCD.c: 289: PORTEbits.RE4 = 1;
 10861  010A66  8884               	bsf	3972,4,c	;volatile
 10862                           
 10863                           ;LCD.c: 290: { PORTHbits.RH5 = ((0x80 + (address >> 4) >> 3) & 1); PORTEbits.RE1 = ((0x8
      +                          0 + (address >> 4) >> 2) & 1); PORTEbits.RE0 = ((0x80 + (address >> 4) >> 1) & 1); PORTE
      +                          bits.RE2 = (0x80 + (address >> 4) & 1); };
 10864  010A68  0100               	movlb	0	; () banked
 10865  010A6A  396D               	swapf	LCD_placeCursor@address& (0+255),w,b
 10866  010A6C  0B0F               	andlw	15
 10867  010A6E  0100               	movlb	0	; () banked
 10868  010A70  6F68               	movwf	??_LCD_placeCursor& (0+255),b
 10869  010A72  6B69               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10870  010A74  0E80               	movlw	128
 10871  010A76  0100               	movlb	0	; () banked
 10872  010A78  2768               	addwf	??_LCD_placeCursor& (0+255),f,b
 10873  010A7A  0E00               	movlw	0
 10874  010A7C  2369               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10875  010A7E  0100               	movlb	0	; () banked
 10876  010A80  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10877  010A82  3369               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10878  010A84  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10879  010A86  0100               	movlb	0	; () banked
 10880  010A88  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10881  010A8A  3369               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10882  010A8C  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10883  010A8E  0100               	movlb	0	; () banked
 10884  010A90  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10885  010A92  3369               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10886  010A94  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10887  010A96  0E01               	movlw	1
 10888  010A98  0100               	movlb	0	; () banked
 10889  010A9A  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 10890  010A9C  0100               	movlb	0	; () banked
 10891  010A9E  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 10892  010AA0  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10893  010AA2  5087               	movf	3975,w,c	;volatile
 10894  010AA4  0100               	movlb	0	; () banked
 10895  010AA6  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10896  010AA8  0BDF               	andlw	-33
 10897  010AAA  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10898  010AAC  6E87               	movwf	3975,c	;volatile
 10899                           
 10900                           ; BSR set to: 0
 10901  010AAE  0100               	movlb	0	; () banked
 10902  010AB0  396D               	swapf	LCD_placeCursor@address& (0+255),w,b
 10903  010AB2  0B0F               	andlw	15
 10904  010AB4  0100               	movlb	0	; () banked
 10905  010AB6  6F68               	movwf	??_LCD_placeCursor& (0+255),b
 10906  010AB8  6B69               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10907  010ABA  0E80               	movlw	128
 10908  010ABC  0100               	movlb	0	; () banked
 10909  010ABE  2768               	addwf	??_LCD_placeCursor& (0+255),f,b
 10910  010AC0  0E00               	movlw	0
 10911  010AC2  2369               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10912  010AC4  0100               	movlb	0	; () banked
 10913  010AC6  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10914  010AC8  3369               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10915  010ACA  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10916  010ACC  0100               	movlb	0	; () banked
 10917  010ACE  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10918  010AD0  3369               	rrcf	(??_LCD_placeCursor+1)& (0+255),f,b
 10919  010AD2  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 10920  010AD4  0E01               	movlw	1
 10921  010AD6  0100               	movlb	0	; () banked
 10922  010AD8  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 10923  010ADA  0100               	movlb	0	; () banked
 10924  010ADC  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10925  010ADE  5084               	movf	3972,w,c	;volatile
 10926  010AE0  0100               	movlb	0	; () banked
 10927  010AE2  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10928  010AE4  0BFD               	andlw	-3
 10929  010AE6  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10930  010AE8  6E84               	movwf	3972,c	;volatile
 10931                           
 10932                           ; BSR set to: 0
 10933  010AEA  0100               	movlb	0	; () banked
 10934  010AEC  396D               	swapf	LCD_placeCursor@address& (0+255),w,b
 10935  010AEE  0B0F               	andlw	15
 10936  010AF0  0100               	movlb	0	; () banked
 10937  010AF2  6F68               	movwf	??_LCD_placeCursor& (0+255),b
 10938  010AF4  6B69               	clrf	(??_LCD_placeCursor+1)& (0+255),b
 10939  010AF6  0E80               	movlw	128
 10940  010AF8  0100               	movlb	0	; () banked
 10941  010AFA  2768               	addwf	??_LCD_placeCursor& (0+255),f,b
 10942  010AFC  0E00               	movlw	0
 10943  010AFE  2369               	addwfc	(??_LCD_placeCursor+1)& (0+255),f,b
 10944  010B00  0100               	movlb	0	; () banked
 10945  010B02  3569               	rlcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10946  010B04  3169               	rrcf	(??_LCD_placeCursor+1)& (0+255),w,b
 10947  010B06  0100               	movlb	0	; () banked
 10948  010B08  6F6B               	movwf	(??_LCD_placeCursor+3)& (0+255),b
 10949  010B0A  0100               	movlb	0	; () banked
 10950  010B0C  3168               	rrcf	??_LCD_placeCursor& (0+255),w,b
 10951  010B0E  0100               	movlb	0	; () banked
 10952  010B10  6F6A               	movwf	(??_LCD_placeCursor+2)& (0+255),b
 10953  010B12  0E01               	movlw	1
 10954  010B14  0100               	movlb	0	; () banked
 10955  010B16  176A               	andwf	(??_LCD_placeCursor+2)& (0+255),f,b
 10956  010B18  5084               	movf	3972,w,c	;volatile
 10957  010B1A  0100               	movlb	0	; () banked
 10958  010B1C  196A               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
 10959  010B1E  0BFE               	andlw	-2
 10960  010B20  196A               	xorwf	(??_LCD_placeCursor+2)& (0+255),w,b
 10961  010B22  6E84               	movwf	3972,c	;volatile
 10962                           
 10963                           ; BSR set to: 0
 10964  010B24  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 10965  010B28  0100               	movlb	0	; () banked
 10966  010B2A  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 10967  010B2C  0E0F               	movlw	15
 10968  010B2E  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 10969  010B30  0E80               	movlw	128
 10970  010B32  0100               	movlb	0	; () banked
 10971  010B34  2768               	addwf	??_LCD_placeCursor& (0+255),f,b
 10972  010B36  0E01               	movlw	1
 10973  010B38  0100               	movlb	0	; () banked
 10974  010B3A  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 10975  010B3C  0100               	movlb	0	; () banked
 10976  010B3E  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10977  010B40  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 10978  010B42  5084               	movf	3972,w,c	;volatile
 10979  010B44  0100               	movlb	0	; () banked
 10980  010B46  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10981  010B48  0BFB               	andlw	-5
 10982  010B4A  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 10983  010B4C  6E84               	movwf	3972,c	;volatile
 10984                           
 10985                           ;LCD.c: 291: delay_us(40);;
 10986  010B4E  0E28               	movlw	40
 10987  010B50  0100               	movlb	0	; () banked
 10988  010B52  6F60               	movwf	delay_us@x& (0+255),b
 10989  010B54  0E00               	movlw	0
 10990  010B56  6F61               	movwf	(delay_us@x+1)& (0+255),b
 10991  010B58  0E00               	movlw	0
 10992  010B5A  6F62               	movwf	(delay_us@x+2)& (0+255),b
 10993  010B5C  0E00               	movlw	0
 10994  010B5E  6F63               	movwf	(delay_us@x+3)& (0+255),b
 10995  010B60  EC97  F091         	call	_delay_us	;wreg free
 10996                           
 10997                           ;LCD.c: 292: PORTEbits.RE4 = 0;
 10998  010B64  9884               	bcf	3972,4,c	;volatile
 10999                           
 11000                           ;LCD.c: 294: delay_us(40);;
 11001  010B66  0E28               	movlw	40
 11002  010B68  0100               	movlb	0	; () banked
 11003  010B6A  6F60               	movwf	delay_us@x& (0+255),b
 11004  010B6C  0E00               	movlw	0
 11005  010B6E  6F61               	movwf	(delay_us@x+1)& (0+255),b
 11006  010B70  0E00               	movlw	0
 11007  010B72  6F62               	movwf	(delay_us@x+2)& (0+255),b
 11008  010B74  0E00               	movlw	0
 11009  010B76  6F63               	movwf	(delay_us@x+3)& (0+255),b
 11010  010B78  EC97  F091         	call	_delay_us	;wreg free
 11011                           
 11012                           ;LCD.c: 295: PORTEbits.RE4 = 1;
 11013  010B7C  8884               	bsf	3972,4,c	;volatile
 11014                           
 11015                           ;LCD.c: 296: { PORTHbits.RH5 = (((address & 0x0F) >> 3) & 1); PORTEbits.RE1 = (((address
      +                           & 0x0F) >> 2) & 1); PORTEbits.RE0 = (((address & 0x0F) >> 1) & 1); PORTEbits.RE2 = ((ad
      +                          dress & 0x0F) & 1); };
 11016  010B7E  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11017  010B82  0100               	movlb	0	; () banked
 11018  010B84  90D8               	bcf	status,0,c
 11019  010B86  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11020  010B88  0100               	movlb	0	; () banked
 11021  010B8A  90D8               	bcf	status,0,c
 11022  010B8C  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11023  010B8E  0100               	movlb	0	; () banked
 11024  010B90  90D8               	bcf	status,0,c
 11025  010B92  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11026  010B94  0E01               	movlw	1
 11027  010B96  0100               	movlb	0	; () banked
 11028  010B98  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11029  010B9A  0100               	movlb	0	; () banked
 11030  010B9C  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 11031  010B9E  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11032  010BA0  5087               	movf	3975,w,c	;volatile
 11033  010BA2  0100               	movlb	0	; () banked
 11034  010BA4  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11035  010BA6  0BDF               	andlw	-33
 11036  010BA8  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11037  010BAA  6E87               	movwf	3975,c	;volatile
 11038                           
 11039                           ; BSR set to: 0
 11040  010BAC  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11041  010BB0  0100               	movlb	0	; () banked
 11042  010BB2  90D8               	bcf	status,0,c
 11043  010BB4  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11044  010BB6  0100               	movlb	0	; () banked
 11045  010BB8  90D8               	bcf	status,0,c
 11046  010BBA  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11047  010BBC  0E01               	movlw	1
 11048  010BBE  0100               	movlb	0	; () banked
 11049  010BC0  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11050  010BC2  0100               	movlb	0	; () banked
 11051  010BC4  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11052  010BC6  5084               	movf	3972,w,c	;volatile
 11053  010BC8  0100               	movlb	0	; () banked
 11054  010BCA  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11055  010BCC  0BFD               	andlw	-3
 11056  010BCE  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11057  010BD0  6E84               	movwf	3972,c	;volatile
 11058                           
 11059                           ; BSR set to: 0
 11060  010BD2  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11061  010BD6  0100               	movlb	0	; () banked
 11062  010BD8  90D8               	bcf	status,0,c
 11063  010BDA  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11064  010BDC  0E01               	movlw	1
 11065  010BDE  0100               	movlb	0	; () banked
 11066  010BE0  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11067  010BE2  5084               	movf	3972,w,c	;volatile
 11068  010BE4  0100               	movlb	0	; () banked
 11069  010BE6  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11070  010BE8  0BFE               	andlw	-2
 11071  010BEA  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11072  010BEC  6E84               	movwf	3972,c	;volatile
 11073                           
 11074                           ; BSR set to: 0
 11075  010BEE  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11076  010BF2  0E01               	movlw	1
 11077  010BF4  0100               	movlb	0	; () banked
 11078  010BF6  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11079  010BF8  0100               	movlb	0	; () banked
 11080  010BFA  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11081  010BFC  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11082  010BFE  5084               	movf	3972,w,c	;volatile
 11083  010C00  0100               	movlb	0	; () banked
 11084  010C02  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11085  010C04  0BFB               	andlw	-5
 11086  010C06  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11087  010C08  6E84               	movwf	3972,c	;volatile
 11088                           
 11089                           ;LCD.c: 297: delay_us(40);;
 11090  010C0A  0E28               	movlw	40
 11091  010C0C  0100               	movlb	0	; () banked
 11092  010C0E  6F60               	movwf	delay_us@x& (0+255),b
 11093  010C10  0E00               	movlw	0
 11094  010C12  6F61               	movwf	(delay_us@x+1)& (0+255),b
 11095  010C14  0E00               	movlw	0
 11096  010C16  6F62               	movwf	(delay_us@x+2)& (0+255),b
 11097  010C18  0E00               	movlw	0
 11098  010C1A  6F63               	movwf	(delay_us@x+3)& (0+255),b
 11099  010C1C  EC97  F091         	call	_delay_us	;wreg free
 11100                           
 11101                           ;LCD.c: 298: PORTEbits.RE4 = 0;
 11102  010C20  9884               	bcf	3972,4,c	;volatile
 11103                           
 11104                           ;LCD.c: 299: break;
 11105  010C22  0012               	return	
 11106  010C24                     l94:
 11107  010C24  F000               	nop		;# 
 11108                           
 11109                           ;LCD.c: 303: PORTEbits.RE4 = 1;
 11110  010C26  8884               	bsf	3972,4,c	;volatile
 11111                           
 11112                           ;LCD.c: 304: { PORTHbits.RH5 = ((address >> 7) & 1); PORTEbits.RE1 = ((address >> 6) & 1
      +                          ); PORTEbits.RE0 = ((address >> 5) & 1); PORTEbits.RE2 = ((address >> 4) & 1); PORTHbits
      +                          .RH0 = ((address >> 3) & 1); PORTHbits.RH1 = ((address >> 2) & 1); PORTHbits.RH2 = ((ad
 11113  010C28  0100               	movlb	0	; () banked
 11114  010C2A  6B68               	clrf	??_LCD_placeCursor& (0+255),b
 11115  010C2C  AF6D               	btfss	LCD_placeCursor@address& (0+255),7,b
 11116  010C2E  D002               	bra	u4465
 11117  010C30  0100               	movlb	0	; () banked
 11118  010C32  2B68               	incf	??_LCD_placeCursor& (0+255),f,b
 11119  010C34                     u4465:
 11120  010C34  0E01               	movlw	1
 11121  010C36  0100               	movlb	0	; () banked
 11122  010C38  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11123  010C3A  0100               	movlb	0	; () banked
 11124  010C3C  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 11125  010C3E  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11126  010C40  5087               	movf	3975,w,c	;volatile
 11127  010C42  0100               	movlb	0	; () banked
 11128  010C44  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11129  010C46  0BDF               	andlw	-33
 11130  010C48  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11131  010C4A  6E87               	movwf	3975,c	;volatile
 11132  010C4C  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11133  010C50  0E06               	movlw	6
 11134  010C52  0100               	movlb	0	; () banked
 11135  010C54  6F69               	movwf	(??_LCD_placeCursor+1)& (0+255),b
 11136  010C56                     u4475:
 11137  010C56  0100               	movlb	0	; () banked
 11138  010C58  90D8               	bcf	status,0,c
 11139  010C5A  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11140  010C5C  0100               	movlb	0	; () banked
 11141  010C5E  2F69               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
 11142  010C60  D7FA               	goto	u4475
 11143  010C62  0E01               	movlw	1
 11144  010C64  0100               	movlb	0	; () banked
 11145  010C66  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11146  010C68  0100               	movlb	0	; () banked
 11147  010C6A  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11148  010C6C  5084               	movf	3972,w,c	;volatile
 11149  010C6E  0100               	movlb	0	; () banked
 11150  010C70  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11151  010C72  0BFD               	andlw	-3
 11152  010C74  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11153  010C76  6E84               	movwf	3972,c	;volatile
 11154  010C78  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11155  010C7C  0E05               	movlw	5
 11156  010C7E  0100               	movlb	0	; () banked
 11157  010C80  6F69               	movwf	(??_LCD_placeCursor+1)& (0+255),b
 11158  010C82                     u4485:
 11159  010C82  0100               	movlb	0	; () banked
 11160  010C84  90D8               	bcf	status,0,c
 11161  010C86  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11162  010C88  0100               	movlb	0	; () banked
 11163  010C8A  2F69               	decfsz	(??_LCD_placeCursor+1)& (0+255),f,b
 11164  010C8C  D7FA               	goto	u4485
 11165  010C8E  0E01               	movlw	1
 11166  010C90  0100               	movlb	0	; () banked
 11167  010C92  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11168  010C94  5084               	movf	3972,w,c	;volatile
 11169  010C96  0100               	movlb	0	; () banked
 11170  010C98  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11171  010C9A  0BFE               	andlw	-2
 11172  010C9C  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11173  010C9E  6E84               	movwf	3972,c	;volatile
 11174  010CA0  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11175  010CA4  0100               	movlb	0	; () banked
 11176  010CA6  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 11177  010CA8  0E0F               	movlw	15
 11178  010CAA  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11179  010CAC  0E01               	movlw	1
 11180  010CAE  0100               	movlb	0	; () banked
 11181  010CB0  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11182  010CB2  0100               	movlb	0	; () banked
 11183  010CB4  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11184  010CB6  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11185  010CB8  5084               	movf	3972,w,c	;volatile
 11186  010CBA  0100               	movlb	0	; () banked
 11187  010CBC  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11188  010CBE  0BFB               	andlw	-5
 11189  010CC0  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11190  010CC2  6E84               	movwf	3972,c	;volatile
 11191  010CC4  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11192  010CC8  0100               	movlb	0	; () banked
 11193  010CCA  90D8               	bcf	status,0,c
 11194  010CCC  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11195  010CCE  0100               	movlb	0	; () banked
 11196  010CD0  90D8               	bcf	status,0,c
 11197  010CD2  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11198  010CD4  0100               	movlb	0	; () banked
 11199  010CD6  90D8               	bcf	status,0,c
 11200  010CD8  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11201  010CDA  0E01               	movlw	1
 11202  010CDC  0100               	movlb	0	; () banked
 11203  010CDE  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11204  010CE0  5087               	movf	3975,w,c	;volatile
 11205  010CE2  0100               	movlb	0	; () banked
 11206  010CE4  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11207  010CE6  0BFE               	andlw	-2
 11208  010CE8  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11209  010CEA  6E87               	movwf	3975,c	;volatile
 11210  010CEC  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11211  010CF0  0100               	movlb	0	; () banked
 11212  010CF2  90D8               	bcf	status,0,c
 11213  010CF4  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11214  010CF6  0100               	movlb	0	; () banked
 11215  010CF8  90D8               	bcf	status,0,c
 11216  010CFA  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11217  010CFC  0E01               	movlw	1
 11218  010CFE  0100               	movlb	0	; () banked
 11219  010D00  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11220  010D02  0100               	movlb	0	; () banked
 11221  010D04  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11222  010D06  5087               	movf	3975,w,c	;volatile
 11223  010D08  0100               	movlb	0	; () banked
 11224  010D0A  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11225  010D0C  0BFD               	andlw	-3
 11226  010D0E  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11227  010D10  6E87               	movwf	3975,c	;volatile
 11228  010D12  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11229  010D16  0100               	movlb	0	; () banked
 11230  010D18  90D8               	bcf	status,0,c
 11231  010D1A  3368               	rrcf	??_LCD_placeCursor& (0+255),f,b
 11232  010D1C  0E01               	movlw	1
 11233  010D1E  0100               	movlb	0	; () banked
 11234  010D20  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11235  010D22  0100               	movlb	0	; () banked
 11236  010D24  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11237  010D26  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11238  010D28  5087               	movf	3975,w,c	;volatile
 11239  010D2A  0100               	movlb	0	; () banked
 11240  010D2C  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11241  010D2E  0BFB               	andlw	-5
 11242  010D30  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11243  010D32  6E87               	movwf	3975,c	;volatile
 11244  010D34  C06D  F068         	movff	LCD_placeCursor@address,??_LCD_placeCursor
 11245  010D38  0E01               	movlw	1
 11246  010D3A  0100               	movlb	0	; () banked
 11247  010D3C  1768               	andwf	??_LCD_placeCursor& (0+255),f,b
 11248  010D3E  0100               	movlb	0	; () banked
 11249  010D40  3B68               	swapf	??_LCD_placeCursor& (0+255),f,b
 11250  010D42  4768               	rlncf	??_LCD_placeCursor& (0+255),f,b
 11251  010D44  5084               	movf	3972,w,c	;volatile
 11252  010D46  0100               	movlb	0	; () banked
 11253  010D48  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11254  010D4A  0BDF               	andlw	-33
 11255  010D4C  1968               	xorwf	??_LCD_placeCursor& (0+255),w,b
 11256  010D4E  6E84               	movwf	3972,c	;volatile
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;LCD.c: 305: delay_us(40);;
 11260  010D50  0E28               	movlw	40
 11261  010D52  0100               	movlb	0	; () banked
 11262  010D54  6F60               	movwf	delay_us@x& (0+255),b
 11263  010D56  0E00               	movlw	0
 11264  010D58  6F61               	movwf	(delay_us@x+1)& (0+255),b
 11265  010D5A  0E00               	movlw	0
 11266  010D5C  6F62               	movwf	(delay_us@x+2)& (0+255),b
 11267  010D5E  0E00               	movlw	0
 11268  010D60  6F63               	movwf	(delay_us@x+3)& (0+255),b
 11269  010D62  EC97  F091         	call	_delay_us	;wreg free
 11270                           
 11271                           ;LCD.c: 306: PORTEbits.RE4 = 0;
 11272  010D66  9884               	bcf	3972,4,c	;volatile
 11273                           
 11274                           ;LCD.c: 308: }
 11275                           
 11276                           ;LCD.c: 307: break;
 11277  010D68  0012               	return	
 11278  010D6A                     l6682:
 11279  010D6A  5039               	movf	_mode,w,c	;volatile
 11280                           
 11281                           ; Switch size 1, requested type "space"
 11282                           ; Number of cases is 2, Range of values is 1 to 2
 11283                           ; switch strategies available:
 11284                           ; Name         Instructions Cycles
 11285                           ; simple_byte            7     4 (average)
 11286                           ;	Chosen strategy is simple_byte
 11287  010D6C  0A01               	xorlw	1	; case 1
 11288  010D6E  B4D8               	btfsc	status,2,c
 11289  010D70  D66F               	goto	l6648
 11290  010D72  0A03               	xorlw	3	; case 2
 11291  010D74  A4D8               	btfss	status,2,c
 11292  010D76  0012               	return	
 11293  010D78  D755               	goto	l94
 11294  010D7A  0012               	return		;funcret
 11295  010D7C                     __end_of_LCD_placeCursor:
 11296                           	opt stack 0
 11297                           tblptru	equ	0xFF8
 11298                           tblptrh	equ	0xFF7
 11299                           tblptrl	equ	0xFF6
 11300                           tablat	equ	0xFF5
 11301                           prodh	equ	0xFF4
 11302                           prodl	equ	0xFF3
 11303                           intcon	equ	0xFF2
 11304                           intcon2	equ	0xFF1
 11305                           intcon3	equ	0xFF0
 11306                           indf0	equ	0xFEF
 11307                           postinc0	equ	0xFEE
 11308                           fsr0h	equ	0xFEA
 11309                           fsr0l	equ	0xFE9
 11310                           wreg	equ	0xFE8
 11311                           indf1	equ	0xFE7
 11312                           postdec1	equ	0xFE5
 11313                           plusw1	equ	0xFE3
 11314                           fsr1h	equ	0xFE2
 11315                           fsr1l	equ	0xFE1
 11316                           indf2	equ	0xFDF
 11317                           postinc2	equ	0xFDE
 11318                           postdec2	equ	0xFDD
 11319                           plusw2	equ	0xFDB
 11320                           fsr2h	equ	0xFDA
 11321                           fsr2l	equ	0xFD9
 11322                           status	equ	0xFD8
 11323                           
 11324 ;; *************** function _delay_ms *****************
 11325 ;; Defined at:
 11326 ;;		line 62 in file "delays.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;  x               4    4[BANK0 ] long 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;		None
 11331 ;; Return value:  Size  Location     Type
 11332 ;;		None               void
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0, cstack
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;Total ram usage:        4 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:    4
 11347 ;; This function calls:
 11348 ;;		_delay_us
 11349 ;; This function is called by:
 11350 ;;		_LCD_init4bit
 11351 ;;		_LCD_placeCursor
 11352 ;;		_LCD_printString
 11353 ;;		_RCMode
 11354 ;;		_PS2_readGamepad
 11355 ;;		_PS2_sendCommandString
 11356 ;;		_LCD_init8bit
 11357 ;;		_delay_s
 11358 ;;		_FONA_init
 11359 ;;		_FONA_Text
 11360 ;;		_FONA_CheckStrength
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text44
 11365  012214                     __ptext44:
 11366                           	opt stack 0
 11367  012214                     _delay_ms:
 11368                           	opt stack 0
 11369                           
 11370                           ;incstack = 0
 11371  012214  D00B               	goto	l6500
 11372  012216                     l6498:
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;delays.c: 66: {
 11376                           ;delays.c: 67: delay_us(1000);
 11377  012216  0EE8               	movlw	232
 11378  012218  0100               	movlb	0	; () banked
 11379  01221A  6F60               	movwf	delay_us@x& (0+255),b
 11380  01221C  0E03               	movlw	3
 11381  01221E  6F61               	movwf	(delay_us@x+1)& (0+255),b
 11382  012220  0E00               	movlw	0
 11383  012222  6F62               	movwf	(delay_us@x+2)& (0+255),b
 11384  012224  0E00               	movlw	0
 11385  012226  6F63               	movwf	(delay_us@x+3)& (0+255),b
 11386  012228  EC97  F091         	call	_delay_us	;wreg free
 11387  01222C                     l6500:
 11388                           
 11389                           ;delays.c: 68: x--;
 11390  01222C  0EFF               	movlw	255
 11391  01222E  0100               	movlb	0	; () banked
 11392  012230  2764               	addwf	delay_ms@x& (0+255),f,b
 11393  012232  0EFF               	movlw	255
 11394  012234  2365               	addwfc	(delay_ms@x+1)& (0+255),f,b
 11395  012236  0EFF               	movlw	255
 11396  012238  2366               	addwfc	(delay_ms@x+2)& (0+255),f,b
 11397  01223A  0EFF               	movlw	255
 11398  01223C  2367               	addwfc	(delay_ms@x+3)& (0+255),f,b
 11399  01223E  D000               	goto	l6502
 11400  012240                     l6502:
 11401                           
 11402                           ; BSR set to: 0
 11403  012240  0100               	movlb	0	; () banked
 11404  012242  BF67               	btfsc	(delay_ms@x+3)& (0+255),7,b
 11405  012244  0012               	return	
 11406  012246  0100               	movlb	0	; () banked
 11407  012248  5167               	movf	(delay_ms@x+3)& (0+255),w,b
 11408  01224A  0100               	movlb	0	; () banked
 11409  01224C  1166               	iorwf	(delay_ms@x+2)& (0+255),w,b
 11410  01224E  0100               	movlb	0	; () banked
 11411  012250  1165               	iorwf	(delay_ms@x+1)& (0+255),w,b
 11412  012252  E1E1               	bnz	l6498
 11413  012254  0100               	movlb	0	; () banked
 11414  012256  0564               	decf	delay_ms@x& (0+255),w,b
 11415  012258  B0D8               	btfsc	status,0,c
 11416  01225A  D7DD               	goto	l6498
 11417                           
 11418                           ; BSR set to: 0
 11419                           
 11420                           ; BSR set to: 0
 11421  01225C  0012               	return		;funcret
 11422  01225E                     __end_of_delay_ms:
 11423                           	opt stack 0
 11424                           tblptru	equ	0xFF8
 11425                           tblptrh	equ	0xFF7
 11426                           tblptrl	equ	0xFF6
 11427                           tablat	equ	0xFF5
 11428                           prodh	equ	0xFF4
 11429                           prodl	equ	0xFF3
 11430                           intcon	equ	0xFF2
 11431                           intcon2	equ	0xFF1
 11432                           intcon3	equ	0xFF0
 11433                           indf0	equ	0xFEF
 11434                           postinc0	equ	0xFEE
 11435                           fsr0h	equ	0xFEA
 11436                           fsr0l	equ	0xFE9
 11437                           wreg	equ	0xFE8
 11438                           indf1	equ	0xFE7
 11439                           postdec1	equ	0xFE5
 11440                           plusw1	equ	0xFE3
 11441                           fsr1h	equ	0xFE2
 11442                           fsr1l	equ	0xFE1
 11443                           indf2	equ	0xFDF
 11444                           postinc2	equ	0xFDE
 11445                           postdec2	equ	0xFDD
 11446                           plusw2	equ	0xFDB
 11447                           fsr2h	equ	0xFDA
 11448                           fsr2l	equ	0xFD9
 11449                           status	equ	0xFD8
 11450                           
 11451 ;; *************** function _delay_us *****************
 11452 ;; Defined at:
 11453 ;;		line 51 in file "delays.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  x               4    0[BANK0 ] long 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;		None               void
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;Total ram usage:        4 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    3
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_LCD_init4bit
 11478 ;;		_LCD_placeCursor
 11479 ;;		_LCD_printString
 11480 ;;		_delay_ms
 11481 ;;		_PS2_init
 11482 ;;		_PS2_readGamepad
 11483 ;;		_PS2_shiftInOut
 11484 ;;		_LCD_init8bit
 11485 ;;		_LCD_clearDisplay
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text45
 11490  01232E                     __ptext45:
 11491                           	opt stack 0
 11492  01232E                     _delay_us:
 11493                           	opt stack 25
 11494                           
 11495                           ;delays.c: 53: x -= 3;
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;incstack = 0
 11499  01232E  0EFD               	movlw	253
 11500  012330  D005               	goto	L4
 11501  012332                     l6490:
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;delays.c: 55: {
 11505                           ;delays.c: 56: _delay((unsigned long)((1)*(64000000/4000000.0)));
 11506  012332  0E05               	movlw	5
 11507  012334                     u5907:
 11508  012334  2EE8               	decfsz	wreg,f,c
 11509  012336  D7FE               	goto	u5907
 11510  012338  F000               	nop	
 11511                           
 11512                           ;delays.c: 57: x -= 2;
 11513  01233A  0EFE               	movlw	254
 11514  01233C                     L4:
 11515  01233C  0100               	movlb	0	; () banked
 11516  01233E  2760               	addwf	delay_us@x& (0+255),f,b
 11517  012340  0EFF               	movlw	255
 11518  012342  2361               	addwfc	(delay_us@x+1)& (0+255),f,b
 11519  012344  0EFF               	movlw	255
 11520  012346  2362               	addwfc	(delay_us@x+2)& (0+255),f,b
 11521  012348  0EFF               	movlw	255
 11522  01234A  2363               	addwfc	(delay_us@x+3)& (0+255),f,b
 11523  01234C  D000               	goto	l6494
 11524  01234E                     l6494:
 11525                           
 11526                           ; BSR set to: 0
 11527  01234E  0100               	movlb	0	; () banked
 11528  012350  BF63               	btfsc	(delay_us@x+3)& (0+255),7,b
 11529  012352  0012               	return	
 11530  012354  0100               	movlb	0	; () banked
 11531  012356  5163               	movf	(delay_us@x+3)& (0+255),w,b
 11532  012358  0100               	movlb	0	; () banked
 11533  01235A  1162               	iorwf	(delay_us@x+2)& (0+255),w,b
 11534  01235C  0100               	movlb	0	; () banked
 11535  01235E  1161               	iorwf	(delay_us@x+1)& (0+255),w,b
 11536  012360  E1E8               	bnz	l6490
 11537  012362  0100               	movlb	0	; () banked
 11538  012364  0560               	decf	delay_us@x& (0+255),w,b
 11539  012366  B0D8               	btfsc	status,0,c
 11540  012368  D7E4               	goto	l6490
 11541                           
 11542                           ; BSR set to: 0
 11543                           
 11544                           ; BSR set to: 0
 11545  01236A  0012               	return		;funcret
 11546  01236C                     __end_of_delay_us:
 11547                           	opt stack 0
 11548                           tblptru	equ	0xFF8
 11549                           tblptrh	equ	0xFF7
 11550                           tblptrl	equ	0xFF6
 11551                           tablat	equ	0xFF5
 11552                           prodh	equ	0xFF4
 11553                           prodl	equ	0xFF3
 11554                           intcon	equ	0xFF2
 11555                           intcon2	equ	0xFF1
 11556                           intcon3	equ	0xFF0
 11557                           indf0	equ	0xFEF
 11558                           postinc0	equ	0xFEE
 11559                           fsr0h	equ	0xFEA
 11560                           fsr0l	equ	0xFE9
 11561                           wreg	equ	0xFE8
 11562                           indf1	equ	0xFE7
 11563                           postdec1	equ	0xFE5
 11564                           plusw1	equ	0xFE3
 11565                           fsr1h	equ	0xFE2
 11566                           fsr1l	equ	0xFE1
 11567                           indf2	equ	0xFDF
 11568                           postinc2	equ	0xFDE
 11569                           postdec2	equ	0xFDD
 11570                           plusw2	equ	0xFDB
 11571                           fsr2h	equ	0xFDA
 11572                           fsr2l	equ	0xFD9
 11573                           status	equ	0xFD8
 11574                           
 11575 ;; *************** function _encoderInterrupt *****************
 11576 ;; Defined at:
 11577 ;;		line 40 in file "encoders.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;		None
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;		None
 11582 ;; Return value:  Size  Location     Type
 11583 ;;		None               void
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11593 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11594 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11595 ;;Total ram usage:       17 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    2
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		Interrupt level 1
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	intcodelo
 11606  000018                     __pintcodelo:
 11607                           	opt stack 0
 11608  000018                     _encoderInterrupt:
 11609                           	opt stack 21
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;incstack = 0
 11613  000018  CFD8 F001          	movff	status,??_encoderInterrupt
 11614  00001C  CFE8 F002          	movff	wreg,??_encoderInterrupt+1
 11615  000020  CFE0 F003          	movff	bsr,??_encoderInterrupt+2
 11616  000024  CFFA F004          	movff	pclath,??_encoderInterrupt+3
 11617  000028  CFFB F005          	movff	pclatu,??_encoderInterrupt+4
 11618  00002C  CFE9 F006          	movff	fsr0l,??_encoderInterrupt+5
 11619  000030  CFEA F007          	movff	fsr0h,??_encoderInterrupt+6
 11620  000034  CFE1 F008          	movff	fsr1l,??_encoderInterrupt+7
 11621  000038  CFE2 F009          	movff	fsr1h,??_encoderInterrupt+8
 11622  00003C  CFD9 F00A          	movff	fsr2l,??_encoderInterrupt+9
 11623  000040  CFDA F00B          	movff	fsr2h,??_encoderInterrupt+10
 11624  000044  CFF3 F00C          	movff	prodl,??_encoderInterrupt+11
 11625  000048  CFF4 F00D          	movff	prodh,??_encoderInterrupt+12
 11626  00004C  CFF6 F00E          	movff	tblptrl,??_encoderInterrupt+13
 11627  000050  CFF7 F00F          	movff	tblptrh,??_encoderInterrupt+14
 11628  000054  CFF8 F010          	movff	tblptru,??_encoderInterrupt+15
 11629  000058  CFF5 F011          	movff	tablat,??_encoderInterrupt+16
 11630                           
 11631                           ;encoders.c: 42: if(INT1IF == 1)
 11632  00005C  A0F0               	btfss	intcon3,0,c	;volatile
 11633  00005E  D013               	goto	i1l379
 11634                           
 11635                           ;encoders.c: 43: {
 11636                           ;encoders.c: 44: if(PORTBbits.RB0 == 1)
 11637  000060  A081               	btfss	3969,0,c	;volatile
 11638  000062  D008               	goto	i1l4026
 11639                           
 11640                           ;encoders.c: 45: {
 11641                           ;encoders.c: 46: left_count--;
 11642  000064  0EFF               	movlw	255
 11643  000066  2622               	addwf	_left_count,f,c	;volatile
 11644  000068  0EFF               	movlw	255
 11645  00006A  2223               	addwfc	_left_count+1,f,c	;volatile
 11646  00006C  0EFF               	movlw	255
 11647  00006E  2224               	addwfc	_left_count+2,f,c	;volatile
 11648  000070  0EFF               	movlw	255
 11649  000072  D005               	goto	L5
 11650  000074                     i1l4026:
 11651                           
 11652                           ;encoders.c: 48: else
 11653                           ;encoders.c: 49: {
 11654                           ;encoders.c: 50: left_count++;
 11655  000074  0E01               	movlw	1
 11656  000076  2622               	addwf	_left_count,f,c	;volatile
 11657  000078  0E00               	movlw	0
 11658  00007A  2223               	addwfc	_left_count+1,f,c	;volatile
 11659  00007C  2224               	addwfc	_left_count+2,f,c	;volatile
 11660  00007E                     L5:
 11661  00007E  2225               	addwfc	_left_count+3,f,c	;volatile
 11662  000080  D000               	goto	i1l4028
 11663  000082                     i1l4028:
 11664                           
 11665                           ;encoders.c: 51: }
 11666                           ;encoders.c: 52: INT1IF = 0;
 11667  000082  90F0               	bcf	intcon3,0,c	;volatile
 11668                           
 11669                           ;encoders.c: 53: }
 11670  000084  D015               	goto	i1l386
 11671  000086                     i1l379:
 11672                           
 11673                           ;encoders.c: 54: else if(INT3IF == 1)
 11674  000086  A4F0               	btfss	intcon3,2,c	;volatile
 11675  000088  D013               	goto	i1l386
 11676                           
 11677                           ;encoders.c: 55: {
 11678                           ;encoders.c: 56: if(PORTBbits.RB2 == 1)
 11679  00008A  A481               	btfss	3969,2,c	;volatile
 11680  00008C  D008               	goto	i1l4034
 11681                           
 11682                           ;encoders.c: 57: {
 11683                           ;encoders.c: 58: right_count--;
 11684  00008E  0EFF               	movlw	255
 11685  000090  262A               	addwf	_right_count,f,c	;volatile
 11686  000092  0EFF               	movlw	255
 11687  000094  222B               	addwfc	_right_count+1,f,c	;volatile
 11688  000096  0EFF               	movlw	255
 11689  000098  222C               	addwfc	_right_count+2,f,c	;volatile
 11690  00009A  0EFF               	movlw	255
 11691  00009C  D005               	goto	L6
 11692  00009E                     i1l4034:
 11693                           
 11694                           ;encoders.c: 60: else
 11695                           ;encoders.c: 61: {
 11696                           ;encoders.c: 62: right_count++;
 11697  00009E  0E01               	movlw	1
 11698  0000A0  262A               	addwf	_right_count,f,c	;volatile
 11699  0000A2  0E00               	movlw	0
 11700  0000A4  222B               	addwfc	_right_count+1,f,c	;volatile
 11701  0000A6  222C               	addwfc	_right_count+2,f,c	;volatile
 11702  0000A8                     L6:
 11703  0000A8  222D               	addwfc	_right_count+3,f,c	;volatile
 11704  0000AA  D000               	goto	i1l4036
 11705  0000AC                     i1l4036:
 11706                           
 11707                           ;encoders.c: 63: }
 11708                           ;encoders.c: 64: INT3IF = 0;
 11709  0000AC  94F0               	bcf	intcon3,2,c	;volatile
 11710  0000AE  D000               	goto	i1l386
 11711  0000B0                     i1l386:
 11712  0000B0  C011  FFF5         	movff	??_encoderInterrupt+16,tablat
 11713  0000B4  C010  FFF8         	movff	??_encoderInterrupt+15,tblptru
 11714  0000B8  C00F  FFF7         	movff	??_encoderInterrupt+14,tblptrh
 11715  0000BC  C00E  FFF6         	movff	??_encoderInterrupt+13,tblptrl
 11716  0000C0  C00D  FFF4         	movff	??_encoderInterrupt+12,prodh
 11717  0000C4  C00C  FFF3         	movff	??_encoderInterrupt+11,prodl
 11718  0000C8  C00B  FFDA         	movff	??_encoderInterrupt+10,fsr2h
 11719  0000CC  C00A  FFD9         	movff	??_encoderInterrupt+9,fsr2l
 11720  0000D0  C009  FFE2         	movff	??_encoderInterrupt+8,fsr1h
 11721  0000D4  C008  FFE1         	movff	??_encoderInterrupt+7,fsr1l
 11722  0000D8  C007  FFEA         	movff	??_encoderInterrupt+6,fsr0h
 11723  0000DC  C006  FFE9         	movff	??_encoderInterrupt+5,fsr0l
 11724  0000E0  C005  FFFB         	movff	??_encoderInterrupt+4,pclatu
 11725  0000E4  C004  FFFA         	movff	??_encoderInterrupt+3,pclath
 11726  0000E8  C003  FFE0         	movff	??_encoderInterrupt+2,bsr
 11727  0000EC  C002  FFE8         	movff	??_encoderInterrupt+1,wreg
 11728  0000F0  C001  FFD8         	movff	??_encoderInterrupt,status
 11729  0000F4  0010               	retfie	
 11730  0000F6                     __end_of_encoderInterrupt:
 11731                           	opt stack 0
 11732                           pclatu	equ	0xFFB
 11733                           pclath	equ	0xFFA
 11734                           tblptru	equ	0xFF8
 11735                           tblptrh	equ	0xFF7
 11736                           tblptrl	equ	0xFF6
 11737                           tablat	equ	0xFF5
 11738                           prodh	equ	0xFF4
 11739                           prodl	equ	0xFF3
 11740                           intcon	equ	0xFF2
 11741                           intcon2	equ	0xFF1
 11742                           intcon3	equ	0xFF0
 11743                           indf0	equ	0xFEF
 11744                           postinc0	equ	0xFEE
 11745                           fsr0h	equ	0xFEA
 11746                           fsr0l	equ	0xFE9
 11747                           wreg	equ	0xFE8
 11748                           indf1	equ	0xFE7
 11749                           postdec1	equ	0xFE5
 11750                           plusw1	equ	0xFE3
 11751                           fsr1h	equ	0xFE2
 11752                           fsr1l	equ	0xFE1
 11753                           bsr	equ	0xFE0
 11754                           indf2	equ	0xFDF
 11755                           postinc2	equ	0xFDE
 11756                           postdec2	equ	0xFDD
 11757                           plusw2	equ	0xFDB
 11758                           fsr2h	equ	0xFDA
 11759                           fsr2l	equ	0xFD9
 11760                           status	equ	0xFD8
 11761                           
 11762 ;; *************** function _communicationInterruptHandler *****************
 11763 ;; Defined at:
 11764 ;;		line 143 in file "main.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;		None
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;		None
 11769 ;; Return value:  Size  Location     Type
 11770 ;;		None               void
 11771 ;; Registers used:
 11772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11780 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11781 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11782 ;;Total ram usage:       14 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    1
 11785 ;; This function calls:
 11786 ;;		_tickMillis
 11787 ;; This function is called by:
 11788 ;;		Interrupt level 2
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	intcode
 11793  000008                     __pintcode:
 11794                           	opt stack 0
 11795  000008                     _communicationInterruptHandler:
 11796                           	opt stack 21
 11797                           
 11798                           ;incstack = 0
 11799  000008  CFFA F012          	movff	pclath,??_communicationInterruptHandler
 11800  00000C  CFFB F013          	movff	pclatu,??_communicationInterruptHandler+1
 11801  000010  CFE9 F014          	movff	fsr0l,??_communicationInterruptHandler+2
 11802  000014  EFEE  F08C         	goto	int_func
 11803                           pclatu	equ	0xFFB
 11804                           pclath	equ	0xFFA
 11805                           tblptru	equ	0xFF8
 11806                           tblptrh	equ	0xFF7
 11807                           tblptrl	equ	0xFF6
 11808                           tablat	equ	0xFF5
 11809                           prodh	equ	0xFF4
 11810                           prodl	equ	0xFF3
 11811                           intcon	equ	0xFF2
 11812                           intcon2	equ	0xFF1
 11813                           intcon3	equ	0xFF0
 11814                           indf0	equ	0xFEF
 11815                           postinc0	equ	0xFEE
 11816                           fsr0h	equ	0xFEA
 11817                           fsr0l	equ	0xFE9
 11818                           wreg	equ	0xFE8
 11819                           indf1	equ	0xFE7
 11820                           postdec1	equ	0xFE5
 11821                           plusw1	equ	0xFE3
 11822                           fsr1h	equ	0xFE2
 11823                           fsr1l	equ	0xFE1
 11824                           bsr	equ	0xFE0
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           plusw2	equ	0xFDB
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833                           	psect	intcode_body
 11834  0119DC                     __pintcode_body:
 11835                           	opt stack 21
 11836  0119DC                     int_func:
 11837                           	opt stack 21
 11838  0119DC  CFEA F015          	movff	fsr0h,??_communicationInterruptHandler+3
 11839  0119E0  CFE1 F016          	movff	fsr1l,??_communicationInterruptHandler+4
 11840  0119E4  CFE2 F017          	movff	fsr1h,??_communicationInterruptHandler+5
 11841  0119E8  CFD9 F018          	movff	fsr2l,??_communicationInterruptHandler+6
 11842  0119EC  CFDA F019          	movff	fsr2h,??_communicationInterruptHandler+7
 11843  0119F0  CFF3 F01A          	movff	prodl,??_communicationInterruptHandler+8
 11844  0119F4  CFF4 F01B          	movff	prodh,??_communicationInterruptHandler+9
 11845  0119F8  CFF6 F01C          	movff	tblptrl,??_communicationInterruptHandler+10
 11846  0119FC  CFF7 F01D          	movff	tblptrh,??_communicationInterruptHandler+11
 11847  011A00  CFF8 F01E          	movff	tblptru,??_communicationInterruptHandler+12
 11848  011A04  CFF5 F01F          	movff	tablat,??_communicationInterruptHandler+13
 11849                           
 11850                           ;main.c: 145: if(TMR0IF == 1)
 11851  011A08  A4F2               	btfss	intcon,2,c	;volatile
 11852  011A0A  D008               	goto	i2l270
 11853                           
 11854                           ;main.c: 146: {
 11855                           ;main.c: 147: TMR0L = 193;
 11856  011A0C  0EC1               	movlw	193
 11857  011A0E  6ED6               	movwf	4054,c	;volatile
 11858                           
 11859                           ;main.c: 148: TMR0IF = 0;
 11860  011A10  94F2               	bcf	intcon,2,c	;volatile
 11861                           
 11862                           ;main.c: 149: TMR0IE = 1;
 11863  011A12  8AF2               	bsf	intcon,5,c	;volatile
 11864                           
 11865                           ;main.c: 150: tickMillis();
 11866  011A14  EC00  F093         	call	_tickMillis	;wreg free
 11867                           
 11868                           ;main.c: 151: return;
 11869  011A18  D02C               	goto	i2l268
 11870                           
 11871                           ;main.c: 152: }
 11872                           ;main.c: 157: if(0) {
 11873  011A1A  D000               	goto	i2l270
 11874  011A1C                     i2l270:
 11875                           
 11876                           ;main.c: 164: }
 11877                           ;main.c: 165: if(PIR1bits.RC1IF)
 11878  011A1C  AA9E               	btfss	3998,5,c	;volatile
 11879  011A1E  D00C               	goto	i2l6254
 11880                           
 11881                           ;main.c: 166: {
 11882                           ;main.c: 167: FONA_BUFF[FONA_INDEX] = RCREG1;
 11883  011A20  5034               	movf	_FONA_INDEX,w,c	;volatile
 11884  011A22  0D01               	mullw	1
 11885  011A24  0E00               	movlw	low _FONA_BUFF
 11886  011A26  24F3               	addwf	prodl,w,c
 11887  011A28  6ED9               	movwf	fsr2l,c
 11888  011A2A  0E01               	movlw	high _FONA_BUFF
 11889  011A2C  20F4               	addwfc	prodh,w,c
 11890  011A2E  6EDA               	movwf	fsr2h,c
 11891  011A30  CFAE FFDF          	movff	4014,indf2	;volatile
 11892                           
 11893                           ;main.c: 168: FONA_INDEX++;
 11894  011A34  2A34               	incf	_FONA_INDEX,f,c	;volatile
 11895  011A36  D000               	goto	i2l6254
 11896  011A38                     i2l6254:
 11897                           
 11898                           ;main.c: 169: }
 11899                           ;main.c: 170: if(PIR3bits.RC2IF)
 11900  011A38  50A4               	movf	4004,w,c	;volatile
 11901                           
 11902                           ;main.c: 173: }
 11903                           ;main.c: 174: if(PIR6bits.RC3IF)
 11904                           
 11905                           ;main.c: 171: {
 11906  011A3A  AAA6               	btfss	4006,5,c	;volatile
 11907  011A3C  D00C               	goto	i2l6260
 11908                           
 11909                           ;main.c: 175: {
 11910                           ;main.c: 176: PIXY_BUFF[PIXY_INDEX] = RCREG3;
 11911  011A3E  5035               	movf	_PIXY_INDEX,w,c	;volatile
 11912  011A40  0D01               	mullw	1
 11913  011A42  0EC8               	movlw	low _PIXY_BUFF
 11914  011A44  24F3               	addwf	prodl,w,c
 11915  011A46  6ED9               	movwf	fsr2l,c
 11916  011A48  0E03               	movlw	high _PIXY_BUFF
 11917  011A4A  20F4               	addwfc	prodh,w,c
 11918  011A4C  6EDA               	movwf	fsr2h,c
 11919  011A4E  CF2A FFDF          	movff	3882,indf2	;volatile
 11920                           
 11921                           ;main.c: 177: PIXY_INDEX++;
 11922  011A52  2A35               	incf	_PIXY_INDEX,f,c	;volatile
 11923  011A54  D000               	goto	i2l6260
 11924  011A56                     i2l6260:
 11925                           
 11926                           ;main.c: 178: }
 11927                           ;main.c: 179: if(PIR6bits.RC4IF)
 11928  011A56  AEA6               	btfss	4006,7,c	;volatile
 11929  011A58  D00C               	goto	i2l268
 11930                           
 11931                           ;main.c: 180: {
 11932                           ;main.c: 181: USB_BUFF[USB_INDEX] = RCREG4;
 11933  011A5A  5037               	movf	_USB_INDEX,w,c	;volatile
 11934  011A5C  0D01               	mullw	1
 11935  011A5E  0EBC               	movlw	low _USB_BUFF
 11936  011A60  24F3               	addwf	prodl,w,c
 11937  011A62  6ED9               	movwf	fsr2l,c
 11938  011A64  0E05               	movlw	high _USB_BUFF
 11939  011A66  20F4               	addwfc	prodh,w,c
 11940  011A68  6EDA               	movwf	fsr2h,c
 11941  011A6A  CEFA FFDF          	movff	3834,indf2	;volatile
 11942                           
 11943                           ;main.c: 182: USB_INDEX++;
 11944  011A6E  2A37               	incf	_USB_INDEX,f,c	;volatile
 11945  011A70  D000               	goto	i2l268
 11946  011A72                     i2l268:
 11947  011A72  C01F  FFF5         	movff	??_communicationInterruptHandler+13,tablat
 11948  011A76  C01E  FFF8         	movff	??_communicationInterruptHandler+12,tblptru
 11949  011A7A  C01D  FFF7         	movff	??_communicationInterruptHandler+11,tblptrh
 11950  011A7E  C01C  FFF6         	movff	??_communicationInterruptHandler+10,tblptrl
 11951  011A82  C01B  FFF4         	movff	??_communicationInterruptHandler+9,prodh
 11952  011A86  C01A  FFF3         	movff	??_communicationInterruptHandler+8,prodl
 11953  011A8A  C019  FFDA         	movff	??_communicationInterruptHandler+7,fsr2h
 11954  011A8E  C018  FFD9         	movff	??_communicationInterruptHandler+6,fsr2l
 11955  011A92  C017  FFE2         	movff	??_communicationInterruptHandler+5,fsr1h
 11956  011A96  C016  FFE1         	movff	??_communicationInterruptHandler+4,fsr1l
 11957  011A9A  C015  FFEA         	movff	??_communicationInterruptHandler+3,fsr0h
 11958  011A9E  C014  FFE9         	movff	??_communicationInterruptHandler+2,fsr0l
 11959  011AA2  C013  FFFB         	movff	??_communicationInterruptHandler+1,pclatu
 11960  011AA6  C012  FFFA         	movff	??_communicationInterruptHandler,pclath
 11961  011AAA  0011               	retfie		f
 11962  011AAC                     __end_of_communicationInterruptHandler:
 11963                           	opt stack 0
 11964                           pclatu	equ	0xFFB
 11965                           pclath	equ	0xFFA
 11966                           tblptru	equ	0xFF8
 11967                           tblptrh	equ	0xFF7
 11968                           tblptrl	equ	0xFF6
 11969                           tablat	equ	0xFF5
 11970                           prodh	equ	0xFF4
 11971                           prodl	equ	0xFF3
 11972                           intcon	equ	0xFF2
 11973                           intcon2	equ	0xFF1
 11974                           intcon3	equ	0xFF0
 11975                           indf0	equ	0xFEF
 11976                           postinc0	equ	0xFEE
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           indf1	equ	0xFE7
 11981                           postdec1	equ	0xFE5
 11982                           plusw1	equ	0xFE3
 11983                           fsr1h	equ	0xFE2
 11984                           fsr1l	equ	0xFE1
 11985                           bsr	equ	0xFE0
 11986                           indf2	equ	0xFDF
 11987                           postinc2	equ	0xFDE
 11988                           postdec2	equ	0xFDD
 11989                           plusw2	equ	0xFDB
 11990                           fsr2h	equ	0xFDA
 11991                           fsr2l	equ	0xFD9
 11992                           status	equ	0xFD8
 11993                           
 11994 ;; *************** function _tickMillis *****************
 11995 ;; Defined at:
 11996 ;;		line 126 in file "delays.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;		None
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;		None
 12001 ;; Return value:  Size  Location     Type
 12002 ;;		None               void
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;Total ram usage:        0 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_communicationInterruptHandler
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text48
 12024  012600                     __ptext48:
 12025                           	opt stack 0
 12026  012600                     _tickMillis:
 12027                           	opt stack 21
 12028                           
 12029                           ;delays.c: 128: ++millisCount;
 12030                           
 12031                           ;incstack = 0
 12032  012600  0E01               	movlw	1
 12033  012602  2626               	addwf	_millisCount,f,c
 12034  012604  0E00               	movlw	0
 12035  012606  2227               	addwfc	_millisCount+1,f,c
 12036  012608  2228               	addwfc	_millisCount+2,f,c
 12037  01260A  2229               	addwfc	_millisCount+3,f,c
 12038  01260C  0012               	return		;funcret
 12039  01260E                     __end_of_tickMillis:
 12040                           	opt stack 0
 12041                           pclatu	equ	0xFFB
 12042                           pclath	equ	0xFFA
 12043                           tblptru	equ	0xFF8
 12044                           tblptrh	equ	0xFF7
 12045                           tblptrl	equ	0xFF6
 12046                           tablat	equ	0xFF5
 12047                           prodh	equ	0xFF4
 12048                           prodl	equ	0xFF3
 12049                           intcon	equ	0xFF2
 12050                           intcon2	equ	0xFF1
 12051                           intcon3	equ	0xFF0
 12052                           indf0	equ	0xFEF
 12053                           postinc0	equ	0xFEE
 12054                           fsr0h	equ	0xFEA
 12055                           fsr0l	equ	0xFE9
 12056                           wreg	equ	0xFE8
 12057                           indf1	equ	0xFE7
 12058                           postdec1	equ	0xFE5
 12059                           plusw1	equ	0xFE3
 12060                           fsr1h	equ	0xFE2
 12061                           fsr1l	equ	0xFE1
 12062                           bsr	equ	0xFE0
 12063                           indf2	equ	0xFDF
 12064                           postinc2	equ	0xFDE
 12065                           postdec2	equ	0xFDD
 12066                           plusw2	equ	0xFDB
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           pclatu	equ	0xFFB
 12071                           pclath	equ	0xFFA
 12072                           tblptru	equ	0xFF8
 12073                           tblptrh	equ	0xFF7
 12074                           tblptrl	equ	0xFF6
 12075                           tablat	equ	0xFF5
 12076                           prodh	equ	0xFF4
 12077                           prodl	equ	0xFF3
 12078                           intcon	equ	0xFF2
 12079                           intcon2	equ	0xFF1
 12080                           intcon3	equ	0xFF0
 12081                           indf0	equ	0xFEF
 12082                           postinc0	equ	0xFEE
 12083                           fsr0h	equ	0xFEA
 12084                           fsr0l	equ	0xFE9
 12085                           wreg	equ	0xFE8
 12086                           indf1	equ	0xFE7
 12087                           postdec1	equ	0xFE5
 12088                           plusw1	equ	0xFE3
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           bsr	equ	0xFE0
 12092                           indf2	equ	0xFDF
 12093                           postinc2	equ	0xFDE
 12094                           postdec2	equ	0xFDD
 12095                           plusw2	equ	0xFDB
 12096                           fsr2h	equ	0xFDA
 12097                           fsr2l	equ	0xFD9
 12098                           status	equ	0xFD8
 12099                           
 12100                           	psect	rparam
 12101  0000                     pclatu	equ	0xFFB
 12102                           pclath	equ	0xFFA
 12103                           tblptru	equ	0xFF8
 12104                           tblptrh	equ	0xFF7
 12105                           tblptrl	equ	0xFF6
 12106                           tablat	equ	0xFF5
 12107                           prodh	equ	0xFF4
 12108                           prodl	equ	0xFF3
 12109                           intcon	equ	0xFF2
 12110                           intcon2	equ	0xFF1
 12111                           intcon3	equ	0xFF0
 12112                           indf0	equ	0xFEF
 12113                           postinc0	equ	0xFEE
 12114                           fsr0h	equ	0xFEA
 12115                           fsr0l	equ	0xFE9
 12116                           wreg	equ	0xFE8
 12117                           indf1	equ	0xFE7
 12118                           postdec1	equ	0xFE5
 12119                           plusw1	equ	0xFE3
 12120                           fsr1h	equ	0xFE2
 12121                           fsr1l	equ	0xFE1
 12122                           bsr	equ	0xFE0
 12123                           indf2	equ	0xFDF
 12124                           postinc2	equ	0xFDE
 12125                           postdec2	equ	0xFDD
 12126                           plusw2	equ	0xFDB
 12127                           fsr2h	equ	0xFDA
 12128                           fsr2l	equ	0xFD9
 12129                           status	equ	0xFD8


Data Sizes:
    Strings     188
    Constant    1579
    Data        89
    BSS         1643
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160     71     155
    BANK1           256      0     239
    BANK2           256     51     229
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString_1918(COMRAM[2]), UART_transmitString@tempString(COMRAM[20]), STR_11(CODE[2]), LCD_printString@tempString_590(BANK2[2]), 
		 -> LCD_printString@tempString(BANK2[20]), STR_1(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> UART_transmitString@tempString(COMRAM[20]), LCD_printString@tempString(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    I2C_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> compass_pixyInit@data_3283(BANK0[4]), 

    PS2_sendCommandString@string	PTR unsigned char  size(2) Largest target is 9
		 -> exit_config(BANK0[9]), set_mode(BANK0[9]), enter_config(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 21
		 -> FONA_CheckStrength@genString(COMRAM[21]), FONA_Text@genString(COMRAM[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 200
		 -> UART_transmitString@string(BANK1[200]), LCD_printString@string(BANK2[20]), 

    LCD_printString@input	PTR unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[18]), STR_9(CODE[18]), STR_8(CODE[15]), STR_7(CODE[18]), 
		 -> STR_6(CODE[17]), STR_5(CODE[16]), STR_4(CODE[18]), STR_3(CODE[18]), 
		 -> LCD_printBin@string(COMRAM[9]), LCD_printVal@temp(COMRAM[3]), LCD_printChar@string(COMRAM[2]), 

    LCD_printString@aptr	PTR void [1] size(2) Largest target is 0
		 -> ?_LCD_printString(BANK0[0]), 


Critical Paths under _main in COMRAM

    _motorDrive_init->_OpenEPWM1
    _motorDrive_init->_OpenEPWM3
    _motorDrive_init->_SetDCEPWM1
    _motorDrive_init->_SetDCEPWM3
    _motorDrive_setSpeeds->_SetDCEPWM1
    _motorDrive_setSpeeds->_SetDCEPWM3
    _motorDrive_setSpeeds->___wmul
    ___awdiv->___wmul
    _PS2_init->_PS2_shiftInOut
    _PS2_readGamepad->_PS2_shiftInOut
    _PS2_sendCommandString->_PS2_shiftInOut
    _LCD_printString->_sprintf
    _LCD_printString->_strcat
    _sprintf->___lwmod

Critical Paths under _communicationInterruptHandler in COMRAM

    None.

Critical Paths under _encoderInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RCMode
    _wanderMode->_LCD_printString
    _selfTest->_LCD_printString
    _motorDrive_init->_motorDrive_setSpeeds
    _LCD_init4bit->_delay_ms
    _competitionMode->_LCD_printString
    _compass_pixyInit->_I2C_write
    _RCMode->_PS2_init
    _motorDrive_setSpeeds->___awdiv
    ___awdiv->___wmul
    _PS2_init->_PS2_readGamepad
    _PS2_reconfig->_PS2_sendCommandString
    _PS2_sendCommandString->_delay_ms
    _PS2_shiftInOut->_delay_us
    _LCD_printString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_placeCursor->_delay_ms
    _delay_ms->_delay_us

Critical Paths under _communicationInterruptHandler in BANK0

    None.

Critical Paths under _encoderInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _communicationInterruptHandler in BANK1

    None.

Critical Paths under _encoderInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_LCD_printString
    _wanderMode->_LCD_printString
    _selfTest->_LCD_printString
    _competitionMode->_LCD_printString
    _RCMode->_LCD_printString

Critical Paths under _communicationInterruptHandler in BANK2

    None.

Critical Paths under _encoderInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _communicationInterruptHandler in BANK3

    None.

Critical Paths under _encoderInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _communicationInterruptHandler in BANK4

    None.

Critical Paths under _encoderInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _communicationInterruptHandler in BANK5

    None.

Critical Paths under _encoderInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _communicationInterruptHandler in BANK6

    None.

Critical Paths under _encoderInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _communicationInterruptHandler in BANK7

    None.

Critical Paths under _encoderInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _communicationInterruptHandler in BANK8

    None.

Critical Paths under _encoderInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _communicationInterruptHandler in BANK9

    None.

Critical Paths under _encoderInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _communicationInterruptHandler in BANK10

    None.

Critical Paths under _encoderInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _communicationInterruptHandler in BANK11

    None.

Critical Paths under _encoderInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _communicationInterruptHandler in BANK12

    None.

Critical Paths under _encoderInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _communicationInterruptHandler in BANK13

    None.

Critical Paths under _encoderInterrupt in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  227129
                                             70 BANK0      1     1      0
                    _LCD_printString
                             _RCMode
                   _compass_pixyInit
                    _competitionMode
                               _init
                           _selfTest
                      _settings_auto
                _settings_readButton
                  _settings_selfTest
                    _settings_wander
                         _wanderMode
 ---------------------------------------------------------------------------------
 (1) _wanderMode                                           0     0      0   26198
                    _LCD_printString
 ---------------------------------------------------------------------------------
 (1) _settings_wander                                      1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _settings_selfTest                                    1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _settings_auto                                        1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _selfTest                                             0     0      0   26221
                    _LCD_printString
                _settings_readButton
 ---------------------------------------------------------------------------------
 (1) _settings_readButton                                  1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0   15247
                           _I2C_init
                       _LCD_init4bit
                          _UART_init
                        _clearMillis
                      _encoders_init
                           _fft_init
                    _motorDrive_init
                      _settings_init
 ---------------------------------------------------------------------------------
 (2) _settings_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorDrive_init                                      0     0      0    5720
                          _OpenEPWM1
                          _OpenEPWM3
                         _SetDCEPWM1
                         _SetDCEPWM3
                     _SetOutputEPWM1
                     _SetOutputEPWM3
               _motorDrive_setSpeeds
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM3                                       3     2      1     340
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _SetOutputEPWM1                                       3     2      1     340
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM3                                            3     2      1     232
                                             31 COMRAM     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenEPWM1                                            3     2      1     232
                                             31 COMRAM     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _fft_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encoders_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearMillis                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init4bit                                         0     0      0    9505
                         _delay_init
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _competitionMode                                      0     0      0   26198
                    _LCD_printString
 ---------------------------------------------------------------------------------
 (1) _compass_pixyInit                                     7     7      0     831
                                              8 BANK0      7     7      0
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            8     4      4     655
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RCMode                                               7     7      0  106107
                                             63 BANK0      7     7      0
                    _LCD_printString
                         _PS2_analog
                           _PS2_init
                    _PS2_readGamepad
                       _PS2_readType
                            ___awdiv
                           _delay_ms
               _motorDrive_setSpeeds
 ---------------------------------------------------------------------------------
 (3) _motorDrive_setSpeeds                                24    23      1    4070
                                             12 BANK0     24    23      1
                         _SetDCEPWM1
                         _SetDCEPWM3
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1230
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1215
                                              4 BANK0      8     4      4
                         _PS2_analog (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM3                                           6     4      2     253
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _SetDCEPWM1                                           6     4      2     253
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _PS2_readType                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PS2_init                                            13    13      0   44037
                                             50 BANK0     13    13      0
                    _PS2_readGamepad
              _PS2_sendCommandString
                     _PS2_shiftInOut
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _PS2_readGamepad                                     34    34      0   24854
                                             16 BANK0     34    34      0
                       _PS2_reconfig
                     _PS2_shiftInOut
                           _delay_ms
                           _delay_us
                             _millis
 ---------------------------------------------------------------------------------
 (3) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _PS2_reconfig                                         0     0      0   10757
              _PS2_sendCommandString
 ---------------------------------------------------------------------------------
 (4) _PS2_sendCommandString                                8     5      3   10757
                                              8 BANK0      8     5      3
                     _PS2_shiftInOut
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _PS2_shiftInOut                                       5     5      0    4162
                                             31 COMRAM     2     2      0
                                              4 BANK0      3     3      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _PS2_analog                                           1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_printString                                     62    55      7   26198
                                             24 BANK0     11     4      7
                                              0 BANK2     51    51      0
                    _LCD_placeCursor
                         _PS2_analog (ARG)
                           _delay_ms
                           _delay_us
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    1067
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    17      6    1785
                                             32 COMRAM     1     1      0
                                             11 BANK0     13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_placeCursor                                      7     6      1   10220
                                             31 COMRAM     1     0      1
                                              8 BANK0      6     6      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             4     0      4    5541
                                              4 BANK0      4     0      4
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             4     0      4    3964
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _encoderInterrupt                                    17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _communicationInterruptHandler                       14    14      0       0
                                             17 COMRAM    14    14      0
                         _tickMillis
 ---------------------------------------------------------------------------------
 (10) _tickMillis                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_printString
     _LCD_placeCursor
       _delay_ms
         _delay_us
       _delay_us
     _PS2_analog (ARG)
     _delay_ms (ARG)
       _delay_us
     _delay_us (ARG)
     _sprintf (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strcat (ARG)
   _RCMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _delay_us
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _delay_us
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
     _PS2_analog
     _PS2_init
       _PS2_readGamepad
         _PS2_reconfig
           _PS2_sendCommandString
             _PS2_shiftInOut
               _delay_us
             _delay_ms
               _delay_us
         _PS2_shiftInOut
           _delay_us
         _delay_ms
           _delay_us
         _delay_us
         _millis
       _PS2_sendCommandString
         _PS2_shiftInOut
           _delay_us
         _delay_ms
           _delay_us
       _PS2_shiftInOut
         _delay_us
       _delay_us
     _PS2_readGamepad
       _PS2_reconfig
         _PS2_sendCommandString
           _PS2_shiftInOut
             _delay_us
           _delay_ms
             _delay_us
       _PS2_shiftInOut
         _delay_us
       _delay_ms
         _delay_us
       _delay_us
       _millis
     _PS2_readType
     ___awdiv
       _PS2_analog (ARG)
       ___wmul (ARG)
     _delay_ms
       _delay_us
     _motorDrive_setSpeeds
       _SetDCEPWM1
       _SetDCEPWM3
       ___awdiv
         _PS2_analog (ARG)
         ___wmul (ARG)
       ___wmul
   _compass_pixyInit
     _I2C_write
   _competitionMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _delay_us
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _delay_us
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
   _init
     _I2C_init
     _LCD_init4bit
       _delay_init
       _delay_ms
         _delay_us
       _delay_us
     _UART_init
     _clearMillis
     _encoders_init
     _fft_init
     _motorDrive_init
       _OpenEPWM1
       _OpenEPWM3
       _SetDCEPWM1
       _SetDCEPWM3
       _SetOutputEPWM1
       _SetOutputEPWM3
       _motorDrive_setSpeeds
         _SetDCEPWM1
         _SetDCEPWM3
         ___awdiv
           _PS2_analog (ARG)
           ___wmul (ARG)
         ___wmul
     _settings_init
   _selfTest
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _delay_us
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _delay_us
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)
     _settings_readButton
   _settings_auto
   _settings_readButton
   _settings_selfTest
   _settings_wander
   _wanderMode
     _LCD_printString
       _LCD_placeCursor
         _delay_ms
           _delay_us
         _delay_us
       _PS2_analog (ARG)
       _delay_ms (ARG)
         _delay_us
       _delay_us (ARG)
       _sprintf (ARG)
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _strcat (ARG)

 _encoderInterrupt (ROOT)

 _communicationInterruptHandler (ROOT)
   _tickMillis

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0     3E8      33       28.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     33      E5      10       89.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9B       5       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     377       8        0.0%
DATA                 0      0     75F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 06 03:51:19 2015

                            __CFG_BW$16 000000                             __CFG_ABW$MM 000000  
                                    l94 0C24                            ___awdiv@sign 0069  
                                    bsr 000FE0                     ___wmul@multiplicand 0062  
                           __CFG_BORV$1 000000                          _SetOutputEPWM1 1C0C  
                        _SetOutputEPWM3 1B62                            __CFG_CP0$OFF 000000  
                    __size_of_I2C_write 0124                                     l120 06C0  
                                   l116 0488                                     l311 2452  
                                   l242 2580                                     l236 2564  
                                   l905 1528                                     l934 1D2E  
                                   l918 1248                                     l935 1CE6  
                                   l936 1CE8                                     _RG0 007C30  
                                   _RG1 007C31                                     _RG2 007C32  
                                   _RG3 007C33                                     _RG4 007C34  
                                   _RL1 007721                                     _RL2 007722  
                                   _RL3 007723                                     _PR2 000FCB  
                                   _PR4 000F05                                     _PR6 000F3E  
                                   _PR8 000F3B                         FONA_init@F16396 01DB  
                      _compass_pixyInit 1FEE                                     prod 000FF3  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                            _TXSTA2bits 000F32                              _TXSTA3bits 000F2E  
                            _TXSTA4bits 000EFE                                    l1103 1710  
                                  l1104 1762                                    l1121 1792  
                                  l1122 17F4                                    l1115 1772  
                                  l1107 1738                                    l1116 1778  
                                  l1220 1CA8                                    l1125 17BE  
                                  l1213 1C7C                                    l1218 1C92  
                                  l1219 1CA4                                    l1096 176A  
                                  l1280 1C02                                    l1097 16F4  
                                  l1281 1C06                                    l1098 16FA  
                                  l1274 1BDA                                    l1279 1BF0  
                                  l1955 1F64                                    l1965 21A8  
                                  l6500 222C                                    l6502 2240  
                                  l6510 1CC2                                    l7320 065A  
                                  l6520 1D20                                    l7330 0688  
                                  l6602 19D0                                    l6612 1F0A  
                                  l7324 065E                                    l7332 0690  
                                  l7252 003A                                    l6524 1D26  
                                  l6540 210C                                    l6614 1F18  
                                  l6702 1298                                    l7326 066E  
                                  l7414 14EC                                    l5590 23C6  
                                  l5582 23B8                                    l6624 1F54  
                                  l6616 1F22                                    l6640 219A  
                                  l6632 215E                                    l6720 130E  
                                  l7280 0214                                    l6536 20EA  
                                  l6490 2332                                    l6634 216A  
                                  l6706 12A8                                    l7290 0260  
                                  l7282 0220                                    l7274 01B2  
                                  l7266 0148                                    l7258 00EC  
                                  l7434 157E                                    l6570 192A  
                                  l6810 0DFA                                    l5498 2388  
                                  l6636 2174                                    l6740 1378  
                                  l6732 1352                                    l6724 131C  
                                  l6708 12D6                                    l7268 0150  
                                  l7276 01BA                                    l7428 156C  
                                  l5596 23D6                                    l6820 0E36  
                                  l6812 0E0A                                    l6494 234E  
                                  l6718 1308                                    l6750 1410  
                                  l7286 0246                                    l7438 1598  
                                  l7390 1456                                    l6582 1960  
                                  l7550 1644                                    l6910 1C62  
                                  l7526 23F8                                    l6648 0A50  
                                  l6728 134C                                    l6760 10A6  
                                  l6584 196E                                    l6576 1942  
                                  l7544 15FC                                    l7464 1748  
                                  l7456 171C                                    l6904 1C4C  
                                  l7528 2406                                    l6498 2216  
                                  l6682 0D6A                                    l6746 13DC  
                                  l6738 1372                                    l6690 21D4  
                                  l6594 19AA                                    l6586 1978  
                                  l6850 0F3C                                    l6842 0EE8  
                                  l6834 0E7E                                    l6826 0E52  
                                  l6818 0E26                                    l7538 15BC  
                                  l7466 174E                                    l6906 1C54  
                                  l6748 13EC                                    l6692 21E0  
                                  l6764 1136                                    l7396 1480  
                                  l6836 0E8E                                    l6828 0E62  
                                  l7572 203A                                    l7564 1FFA  
                                  l6940 1E32                                    l6686 21BC  
                                  l6782 11A2                                    l6598 19BA  
                                  l6846 0EFE                                    l7494 17D6  
                                  l7486 17A0                                    l6918 1C80  
                                  _ADRC 00745F                                    l6696 127A  
                                  l6688 21C2                                    l6792 11E8  
                                  l6856 0F7A                                    l6848 0F32  
                                  l7496 17DC                                    l6944 1E4C  
                                  l6936 1E18                                    l7904 1DBA  
                                  l6778 1188                                    l6858 0F96  
                                  l7586 2064                                    l7578 2056  
                                  l6882 1FB8                                    l6962 1BAA  
                                  l6796 1202                                    l6788 11D4  
                                  l6964 1BB2                                    l7908 1DCA  
                                  _ADON 007E0F                                    l6886 1FD2  
                                  l6878 1F9E                                    l6976 1BDE  
                                  l6968 1BC0                                    l7896 1D86  
                                  l7898 1DA0                                    STR_1 FFFC  
                                  STR_2 FFDD                                    STR_3 FF9E  
                                  STR_4 FF68                                    STR_5 FFC1  
                                  STR_6 FFB0                                    STR_7 FF56  
                                  STR_8 FFD1                                    STR_9 FF8C  
                                  _ASAM 007E02                                    _CPEN 0076C7  
                                  _ALTS 007460                                    _LCDA 0076D5  
                                  _DONE 007E00                                    u5021 000E  
                                  u5030 0074                                    _IPEN 007E87  
                                  u5050 00C8                                    u5210 1528  
                                  u4500 220A                                    u5125 04DE  
                                  u5037 006A                                    u4325 22B0  
                                  u5070 018A                                    u5135 051C  
                                  u4335 2268                                    u5080 01F4  
                                  u4264 1CD2                                    u4600 10A0  
                                  u5057 00BE                                    u4265 1CCE  
                                  u4507 2200                                    u5077 0180  
                                  u4621 1164                                    u4294 1D14  
                                  u5190 147E                                    u5087 01EA  
                                  u4295 1D10                                    u4631 1176  
                                  u4465 0C34                                    u4705 0DBC  
                                  u4475 0C56                                    u4485 0C82  
                                  u4755 0E9C                                    u4695 0D8A  
                                  u4785 0F4A                                    u5907 2334  
                                  _main 1D4E                                    _init 24A6  
                                  _mode 0039                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                                    fsr1l 000FE1  
                                  indf2 000FDF                                    fsr2l 000FD9  
                                  pclat 000FFA                           __CFG_BOREN$ON 000000  
                      __end_of_I2C_init 23A8                                    prodh 000FF4  
                                  prodl 000FF3                      __CFG_WDTWIN$PS25_0 000000  
                                  start 00F6                           __CFG_IESO$OFF 000000  
                    __CFG_LS48MHZ$SYSX2 000000                         _motorDrive_init 1E68  
                          ___param_bank 000010                  __end_of_SetOutputEPWM1 1CAE  
                __end_of_SetOutputEPWM3 1C0C             __end_of_settings_readButton 25E4  
                      RCMode@left_speed 00A0                           I2C_write@data 0061  
                          _BAUDCON1bits 000F67                         _competitionMode 2568  
                          _BAUDCON2bits 000F31                            _BAUDCON3bits 000F2D  
                          _BAUDCON4bits 000EFD                           __CFG_WAIT$OFF 000000  
                           ?_PS2_analog 0001                                   ?_main 0001  
                                 ?_init 0001                         __end_of___awdiv 19DC  
                 OpenEPWM3@timer_source 0020                                   STR_10 FF7A  
                                 STR_13 FFE0                                   STR_14 FFF3  
                                 STR_15 FF42                                   STR_16 FFEA  
                                 _RD163 007D8F                                   _CSS14 00741E  
                                 _CSCNA 00746A                                   _T0CON 000FD5  
                       ___awdiv@divisor 0066                                   _LCDMD 00778B  
                                 _RC1IE 007CED                                   _RC2IE 007D1D  
                                 _RC3IE 007B0D                                   _RC4IE 007B0F  
                                 _FORM0 007E08                                   _FORM1 007E09  
                       __end_of___lwdiv 1F6E                         __end_of___lwmod 21B2  
                                 i1l386 00B0                                   i1l379 0086  
                                 i2l270 1A1C                                   i2l268 1A72  
                       ___awdiv@counter 0068                                   _TX1IE 007CEC  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TX2IE 007D1C                                   _TMR3L 000FB2  
                                 _TX3IE 007B0C                                   _TX4IE 007B0E  
                         ?_LCD_init4bit 0001                           __CFG_WPSA$128 000000  
                      __end_of_PS2_init 159E                          __CFG_EASHFT$ON 000000  
                       ??_encoders_init 0020                      __size_of_UART_init 010A  
                       __end_of_dpowers FF21                         ??_settings_auto 0020  
                       ??_settings_init 0020                                   _errno 002E  
                                 _spbrg 0030                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                         __end_of_sprintf 1420  
                     __end_of_I2C_write 1802                              _SetDCEPWM1 22A6  
                            _SetDCEPWM3 225E                    __size_of_clearMillis 0016  
                       __initialization 1AAC                     PS2_readGamepad@temp 008A  
                          __end_of_main 1DDE                            __end_of_init 24D0  
               __size_of_PS2_shiftInOut 00A0                         ?_SetOutputEPWM1 0020  
                       ?_SetOutputEPWM3 0020                                  ??_main 0022  
                                ??_init 0022                           __activetblptr 000003  
                        ??_LCD_init4bit 0020                        __end_of_SineWave FF17  
                   __CFG_WPEND$WPENDMEM 000000                          __CFG_RETEN$OFF 000000  
              __size_of_PS2_readGamepad 0244                          I2C_write@retry 0067  
                  _motorDrive_setSpeeds 0D7C                                  _CH0NA0 007435  
                                _CH0NA1 007436                                  _CH0NA2 007437  
                                _CH0SA0 007430                                  _CH0SA1 007431  
                                _CH0SA2 007432                                  _CH0SA3 007433  
                                _CH0SA4 007434                                  _CCPR1L 000FBA  
                                _CCPR3L 000F4A                          __CFG_VBTBOR$ON 000000  
                                _ANCON1 000E47                                  _ANCON2 000E46  
                                _ANCON3 000E45                        ___awdiv@dividend 0064  
              __size_of_LCD_placeCursor 0358                                  _ANSEL6 00723E  
                                _ANSEL9 007231                                  _INT1IF 007F80  
                                _INT3IF 007F82                                  _MODE12 007E0A  
                                i1l4034 009E                                  i1l4026 0074  
                                i1l4036 00AC                                  i1l4028 0082  
                                _IOLOCK 007B36                          __CFG_WDTEN$OFF 000000  
                                i2l6260 1A56                                  i2l6254 1A38  
                                _RCREG1 000FAE                                  _RCREG3 000F2A  
                                _RCREG4 000EFA                        _encoderInterrupt 0018  
                                _NVCFG0 00746D                                  _PVCFG0 00746E  
                                _PVCFG1 00746F                 __end_of_motorDrive_init 1EEC  
                                _TMR0IE 007F95                                  _SPBRG1 000FAF  
                                _TMR0IF 007F92                                  _SPBRG2 000F1F  
                                _SPBRG3 000F2B                                  _SPBRG4 000EFB  
                                _TMR0IP 007F8A                                  _TMR3IE 007D01  
                                _TMR3ON 007D88                                  _TMR4ON 007822  
                                _TMR6ON 0079EA                                  _RCMode 159E  
                                _TRISE0 007CB0                                  _TRISE1 007CB1  
                                _TRISE2 007CB2                                  _TRISE3 007CB3  
                                _TRISE4 007CB4                                  _TRISE5 007CB5  
                                _TRISH0 007CC8                                  _TRISE6 007CB6  
                                _TRISH1 007CC9                                  _TRISE7 007CB7  
                                _TRISH2 007CCA                                  _TRISH3 007CCB  
                                _TRISG7 007CC7                                  _TRISK1 007749  
                                _TRISL0 007730                     __size_of_PS2_analog 0018  
                                _TXREG1 000FAD                                  _TXREG2 000F1D  
                                _TXREG4 000EF9                        __end_of_delay_ms 225E  
                      __end_of_delay_us 236C                          __CFG_XINST$OFF 000000  
               __end_of_competitionMode 2584                      __size_of_OpenEPWM1 0080  
                    __size_of_OpenEPWM3 008A                        __end_of_fft_init 20DC  
                        settings_auto@t 0020                                  ___wmul 2412  
        __size_of_PS2_sendCommandString 0070                       __end_of_UART_init 190C  
                             ??___awdiv 0022                          __CFG_STVREN$ON 000000  
         __end_of_PS2_sendCommandString 214C                               ??___lwdiv 0020  
                  settings_readButton@t 0020                               ??___lwmod 0020  
                                _config 0038                                  _millis 25B2  
                                clear_0 1AB4                                  clear_1 1AC6  
                                clear_2 1AD2                                  clear_3 1ADE  
                                clear_4 1AEA                                  clear_5 1AF6  
                      ___awdiv@quotient 006A                         __CFG_CLKOEN$OFF 000000  
                                _strcat 21B2                        __end_of_selfTest 2412  
                          __pdataCOMRAM 003A                   ?_motorDrive_setSpeeds 006C  
                          __mediumconst F916                               ?_I2C_init 0001  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                         __CFG_DSBITEN$ON 000000  
                             ??_sprintf 0021                         __CFG_DSBOREN$ON 000000  
                            __accesstop 0060                 __end_of__initialization 1B5C  
                    __CFG_DSWDTOSC$LPRC 000000                           ___rparam_used 000001  
                       __CFG_T5GSEL$T5G 000000                __end_of_compass_pixyInit 206A  
                       __CFG_IOL1WAY$ON 000000                             ?_SetDCEPWM1 0020  
                           ?_SetDCEPWM3 0020                    PS2_readGamepad@dword 0081  
                        __pcstackCOMRAM 0001                            __pidataBANK0 24FA  
                          __pidataBANK1 2523                               ?_PS2_init 0001  
                LCD_placeCursor@address 006D                __size_of_settings_wander 000E  
                       __CFG_DSWDTEN$ON 000000                       RCMode@right_speed 00A2  
                     __CFG_PLLDIV$NODIV 000000                         OpenEPWM1@period 0060  
                       OpenEPWM3@period 0060                              ??_I2C_init 0020  
                     __end_of_OpenEPWM1 1FEE                       __end_of_OpenEPWM3 1E68  
              __size_of_LCD_printString 06C2                              __pbssBANK0 00A7  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            __pbssBANK3 0300                         I2C_write@x_4006 0066  
                     ??_PS2_readGamepad 0070                        ?_motorDrive_init 0001  
                               ?_RCMode 0001                         I2C_write@length 0063  
                     ??_LCD_placeCursor 0068                    __end_of_LCD_init4bit 0A24  
                            _delay_init 2446                        ?_competitionMode 0001  
                        _PS2_shiftInOut 1CAE                              ??_PS2_init 0022  
                               ?___wmul 0060                      settings_selfTest@t 0020  
                               _ADCSS0H 000E83                                 _ADCSS1H 000E85  
                               _ADCSS0L 000E82                                 _ADCSS1L 000E84  
                               _CCP1CON 000FB9                                 _CCP3CON 000F49  
                             PS2_init@i 009D                               PS2_init@y 009B  
                               ?_millis 0060                            ??_PS2_analog 0020  
                               _ANSEL10 007232                                 _ANSEL11 007233  
                               _ANSEL21 00722D                                 _ANSEL22 00722E  
                               _ANSEL16 007228                                 _ANSEL17 007229  
                               _ANSEL18 00722A                                 _ANSEL19 00722B  
                               ?_strcat 0060                           ?_PS2_readType 0001  
                               _T3CKPS0 007D8C                                 _T3CKPS1 007D8D  
                               _T4CKPS1 007821                                 _PADCFG1 000F54  
                               _T6CKPS1 0079E9                  ??_motorDrive_setSpeeds 006D  
                         ?_PS2_reconfig 0001                         __CFG_WDTCLK$FRC 000000  
                             ?_delay_ms 0064                               ?_delay_us 0060  
                   __size_of_SetDCEPWM1 0044                     __size_of_SetDCEPWM3 0048  
                               _TMR3CS0 007D8E                                 _TMR3CS1 007D8F  
                               _SPBRGH1 000F30                                 _SPBRGH2 000F20  
                               _SPBRGH3 000F2C                                 _SPBRGH4 000EFC  
                               _PS2data 00A7                                 _SSP1ADD 000FC8  
                               _SSP2ADD 000F02                                 _SSP1BUF 000FC9  
                               _SSP2BUF 000F03                               ?_fft_init 0001  
              SetOutputEPWM1@outputmode 0020                      PS2_shiftInOut@byte 0064  
                            I2C_write@x 0065                         __size_of_RCMode 0140  
                    __end_of_PS2_analog 259C                        PS2_readGamepad@i 008E  
                      ??_SetOutputEPWM1 0021                        ??_SetOutputEPWM3 0021  
                            _left_count 0022                  __end_of_PS2_shiftInOut 1D4E  
                             ?_selfTest 0001                                 __Hparam 0000  
                               __Lparam 0000                               _I2C_write 16DE  
                               ___awdiv 190C                         __size_of___wmul 0034  
                               ___lwdiv 1EEC                                 ___lwmod 214C  
                               __pcinit 1AAC                              _read_delay 00D1  
                       __size_of_millis 0012                                 __ramtop 0E00  
              __end_of_encoderInterrupt 00F6                          ??_PS2_readType 0020  
                      delay_init@config 0032                                 __ptext0 1D4E  
                               __ptext1 254C                                 __ptext2 25E4  
                               __ptext3 25F2                                 __ptext4 25C4  
                               __ptext5 23DE                                 __ptext6 25D4  
                               __ptext7 24A6                                 __ptext8 2478  
                               __ptext9 1E68                         PS2_shiftInOut@i 0066  
                       __size_of_strcat 0062                          ??_PS2_reconfig 0022  
                               _dpowers FF17                               _T2CONbits 000FCA  
                     ??_settings_wander 0020            __size_of_settings_readButton 0010  
                               _buttons 00CC                               _FONA_BUFF 0100  
                             _T4CONbits 000F04                              ??_delay_ms 0020  
                            ??_delay_us 0020                               _T6CONbits 000F3D  
                             _T8CONbits 000F3A                              ??_fft_init 0020  
                               _sprintf 126C                        LCD_placeCursor@x 006C  
                      LCD_placeCursor@y 0020                    compass_pixyInit@data 006C  
                        __pintcode_body 19DC                    end_of_initialization 1B5C  
                 __end_of_encoders_init 24FA                   __end_of_settings_auto 25D4  
                 __end_of_settings_init 24A6                SetOutputEPWM3@outputmode 0020  
             LCD_printString@tempString 02B2                                 int_func 19DC  
                         ??_clearMillis 0020                              _tickMillis 2600  
                  LCD_printString@i_591 02E3                         _controller_type 00D0  
                     ??_LCD_printString 007F               motorDrive_setSpeeds@templ 0071  
             motorDrive_setSpeeds@tempr 0073                              ??_selfTest 0022  
                       ?_PS2_shiftInOut 0001                             ?_delay_init 0001  
                  LCD_printString@input 0079                              ?_I2C_write 0060  
                               postdec1 000FE5                                 postdec2 000FDD  
                            _wanderMode 254C                                 postinc0 000FEE  
                               postinc2 000FDE                               _RPOR10_11 000E17  
                      __CFG_FSCM$CSDCMD 000000                               _RPOR12_13 000E18  
                             _RPOR30_31 000E21                               _RPOR22_23 000E1D  
                             _RPOR34_35 000E23                  PS2_sendCommandString@y 006E  
              FONA_CheckStrength@F16408 01C6                               _PIXY_BUFF 03C8  
                             _PORTBbits 000F81                               _UART_init 1802  
                             _PORTDbits 000F83                               _PORTEbits 000F84  
                             _PORTFbits 000F85                               _PORTGbits 000F86  
                             _PORTHbits 000F87                   PS2_readGamepad@F16091 00D2  
                 PS2_readGamepad@F16093 00BC                               _PORTJbits 000F88  
                             _PORTKbits 000EE7                               _PORTLbits 000EE4  
                      __CFG_FOSC$FRCPLL 000000                               _TRISBbits 000F93  
                             _USB_INDEX 0037                               _TRISCbits 000F94  
            motorDrive_setSpeeds@lSpeed 0083                               _TRISDbits 000F95  
                             _TRISEbits 000F96                               _TRISFbits 000F97  
                             _TRISGbits 000F98                               _TRISHbits 000F99  
                             _TRISJbits 000F9A                               _TRISLbits 000EE6  
            motorDrive_setSpeeds@rSpeed 006C                       __size_of_I2C_init 003C  
                  __CFG_CINASEL$DEFAULT 000000                   __size_of_LCD_init4bit 0362  
                 PS2_readGamepad@i_2507 0090                              main@retVal 00A6  
                        __end_of_RCMode 16DE                            ??_SetDCEPWM1 0060  
                          ??_SetDCEPWM3 0060                       ?_compass_pixyInit 0001  
                 PS2_readGamepad@dword2 0075                       __CFG_WPFP$WPFP255 000000  
                   __end_of_clearMillis 25B2                      ??_compass_pixyInit 0020  
                        __end_of___wmul 2446                       __size_of_PS2_init 017E  
                         __pidataCOMRAM 260E                   _PS2_sendCommandString 20DC  
                            ?_UART_init 0001                          __end_of_millis 25C4  
 __end_of_communicationInterruptHandler 1AAC  __size_of_communicationInterruptHandler 1AA4  
         _communicationInterruptHandler 0008                         _PS2_readGamepad 1028  
                        __end_of_strcat 2214                            _LCD_init4bit 06C2  
                   start_initialization 1AAC                     __size_of_delay_init 0032  
                       _LCD_placeCursor 0A24                      __end_of_SetDCEPWM1 22EA  
                    __end_of_SetDCEPWM3 22A6                    SetOutputEPWM1@eccpmx 0060  
                          _enter_config 00F6                    SetOutputEPWM3@eccpmx 0060  
                             _OpenEPWM1 1F6E                               _OpenEPWM3 1DDE  
                              ??_RCMode 009F                             ?_tickMillis 0001  
                  __end_of_PS2_readType 23DE                    __end_of_PS2_reconfig 232E  
                           ??_I2C_write 0020                        _imaginaryNumbers 0232  
                           ?_wanderMode 0001                                ??___wmul 0020  
                           __pdataBANK0 00D2                             __pdataBANK1 01C6  
                              ??_millis 0020                                ??_strcat 0020  
                          _last_buttons 00CE                             __pbssBIGRAM 03C8  
                           __pbssCOMRAM 0022                        I2C_write@address 0060  
                         __pcstackBANK0 0060                           __pcstackBANK2 02B2  
                      I2C_write@channel 0064                     SetDCEPWM1@dutycycle 0020  
                     __size_of_delay_ms 004A                       __size_of_delay_us 003E  
                            ?_OpenEPWM1 0020                              ?_OpenEPWM3 0020  
                     __size_of_fft_init 0072                             sprintf@flag 0073  
                           sprintf@prec 0074                             _clearMillis 259C  
                   _settings_readButton 25D4                        ___lwdiv@dividend 0060  
                             __pintcode 0008                         _settings_wander 25E4  
                     __size_of_selfTest 0034                           __pmediumconst F916  
              __size_of_motorDrive_init 0084                                ?___awdiv 0064  
                   SetDCEPWM3@dutycycle 0020                       _settings_selfTest 25F2  
               __end_of_PS2_readGamepad 126C                                ?___lwdiv 0060  
                              ?___lwmod 0067                  ?_PS2_sendCommandString 0068  
                           __pintcodelo 0018                      ?_settings_selfTest 0001  
                           ??_UART_init 0020                __size_of_competitionMode 001C  
                     ?_encoderInterrupt 0001                 __end_of_LCD_placeCursor 0D7C  
                     PS2_shiftInOut@tmp 0065                     __size_of_tickMillis 000E  
                  ?_settings_readButton 0001                        __CFG_POSCMD$NONE 000000  
            SetOutputEPWM1@outputconfig 0061                      ??_encoderInterrupt 0001  
                              _I2C_init 236C                     ??_settings_selfTest 0020  
         __size_of_motorDrive_setSpeeds 02AC                                _CCPTMRS0 000F36  
                       _LCD_printString 0000                             _PADCFG1bits 000F54  
        ?_communicationInterruptHandler 0001                               _last_read 00C8  
                      ___lwdiv@quotient 0065                                ?_sprintf 006B  
                              _BUFREGEN 00746B                     __size_of_wanderMode 001C  
                    LCD_printVal@F16365 003E                        ??_PS2_shiftInOut 0020  
                            RCMode@done 00A5                          ___wmul@product 0020  
                             delay_ms@x 0064                              RCMode@type 00A4  
                             delay_us@x 0060                  compass_pixyInit@F16129 003A  
                          ??_delay_init 0020                     LCD_printString@aptr 02DD  
                              _PIR1bits 000F9E                                _PIR3bits 000FA4  
           PS2_sendCommandString@string 0068               __end_of_settings_selfTest 2600  
                              _PIR6bits 000FA6               compass_pixyInit@data_3283 0068  
                       I2C_init@channel 0020                        __CFG_WDTPS$32768 000000  
                              _PS2_init 1420                                _RPINR0_1 000E2A  
                              _RPINR4_5 000E2C                                _RPINR6_7 000E2D  
                              _SSP1CON1 000FC6                                _SSP1CON3 000F69  
                              _SSP2CON1 000F19                                _SSP2CON2 000F18  
                              _SSP2CON3 000F39                                _SSP1STAT 000FC7  
                              _SSP2STAT 000F1A                                _USB_BUFF 05BC  
                      PS2_analog@button 0020                       ___wmul@multiplier 0060  
                      __CFG_SOSCSEL$DIG 000000                   ??_settings_readButton 0020  
                            _CM1CONbits 000F53                     __end_ofatan@coeff_a FF33  
                   __end_ofatan@coeff_b FF42                        __CFG_WPDIS$WPDIS 000000  
                    __end_of_delay_init 2478                            PS2_init@temp 0092  
                 __size_of_PS2_readType 0036                             _INTCON2bits 000FF1  
                           _INTCON3bits 000FF0                               copy_data0 1B10  
                             copy_data1 1B30                               copy_data2 1B50  
                             _type_read 00DB                  compass_pixyInit@retVal 006D  
                           ??_OpenEPWM1 0021                             ??_OpenEPWM3 0021  
                 __size_of_PS2_reconfig 0044                 __end_of_settings_wander 25F2  
                              __Hrparam 0000                                _SineWave F917  
                      SetDCEPWM1@DCycle 0062                                __Lrparam 0000  
                      SetDCEPWM3@DCycle 0062                        ?_PS2_readGamepad 0001  
                      __size_of___awdiv 00D0                        __size_of___lwdiv 0082  
                      __size_of___lwmod 0066                  __size_of_encoders_init 002A  
                 OpenEPWM1@timer_source 0020                  __size_of_settings_auto 0010  
                __size_of_settings_init 002E                 __size_of_SetOutputEPWM1 00A2  
               __size_of_SetOutputEPWM3 00AA                 __end_of_LCD_printString 06C2  
                      ?_LCD_placeCursor 0020                       ??_motorDrive_init 0022  
                          _PS2_readType 23A8                              sprintf@val 0075  
             UART_transmitString@F16323 0300               __size_of_compass_pixyInit 007C  
                          _PS2_reconfig 22EA                              strcat@from 0062  
                              _delay_ms 2214                                _delay_us 232E  
                       ___lwdiv@divisor 0062                         ___lwdiv@counter 0064  
                              __ptext10 1B62                                __ptext11 1C0C  
                              __ptext20 236C                                __ptext12 1DDE  
                              __ptext21 2568                                __ptext13 1F6E  
                              __ptext30 23A8                                __ptext22 1FEE  
                              __ptext14 206A                                __ptext31 1420  
                              __ptext23 16DE                                __ptext15 24D0  
                              __ptext40 126C                                __ptext32 1028  
                              __ptext24 159E                                __ptext16 259C  
                              __ptext41 214C                                __ptext33 25B2  
                              __ptext25 0D7C                                __ptext17 1802  
                     ??_competitionMode 0022                                __ptext42 1EEC  
                              __ptext34 22EA                                __ptext26 2412  
                              __ptext18 06C2                                __ptext43 0A24  
                              __ptext35 20DC                                __ptext27 190C  
                              __ptext19 2446                                __ptext44 2214  
                              __ptext36 1CAE                                __ptext28 225E  
                              __ptext45 232E                                __ptext37 2584  
                              __ptext29 22A6                                __ptext38 0000  
                              __ptext39 21B2                                __ptext48 2600  
                          _SSP1CON1bits 000FC6                            _SSP1CON2bits 000FC5  
                          _SSP1CON3bits 000F69                              _LCDCONbits 000ED9  
                           _realNumbers 0146                                _fft_init 206A  
                      settings_wander@t 0020                             _exit_config 00E4  
                          _SSP2CON1bits 000F19                            _SSP2CON2bits 000F18  
                          _SSP2CON3bits 000F39                        __size_of_sprintf 01B4  
                          ??_tickMillis 0012                           __size_of_main 0090  
                         __size_of_init 002A                             _millisCount 0026  
                            _FONA_INDEX 0034                      __CFG_MSSPMSK1$MSK7 000000  
                    __CFG_MSSPMSK2$MSK7 000000                                _selfTest 23DE  
                    LCD_printString@val 02DB              __size_of_settings_selfTest 000E  
                              _set_mode 00ED                            ??_wanderMode 0022  
                           _UART4_INDEX 0036                              _MEMCONbits 000EE3  
             _motorDrive_setSpeeds$2380 0081               _motorDrive_setSpeeds$2374 0075  
             _motorDrive_setSpeeds$2375 0077               _motorDrive_setSpeeds$2376 0079  
             _motorDrive_setSpeeds$2377 007B               _motorDrive_setSpeeds$2378 007D  
             _motorDrive_setSpeeds$2379 007F                   LCD_printString@F16347 0132  
                          _SSP1STATbits 000FC7                            _SSP2STATbits 000F1A  
                           atan@coeff_a FF21                             atan@coeff_b FF33  
                 compass_pixyInit@retry 006E                              _INTCONbits 000FF2  
                    __end_of_tickMillis 260E                                intlevel1 0000  
                              intlevel2 0000                               sprintf@ap 0071  
                    __end_of_wanderMode 2568                               sprintf@sp 006B  
                         _encoders_init 24D0                           _settings_auto 25C4  
                         _settings_init 2478                        ___lwmod@dividend 0067  
                           _right_count 002A                PS2_sendCommandString@len 006A  
                          ?_clearMillis 0001                        ?_settings_wander 0001  
                            _RCSTA1bits 000FAB                              _RCSTA2bits 000F33  
                            _RCSTA3bits 000F2F                              _RCSTA4bits 000EFF  
                 LCD_printString@string 02C6                 ??_PS2_sendCommandString 006B  
                            _PS2_analog 2584                              _RPINR26_27 000E37  
                            _RPINR28_29 000E38                        ?_LCD_printString 0078  
                          _ADCBUF0Hbits 000FC3                                sprintf@c 0077  
                              sprintf@f 006D                                strcat@cp 0020  
                          _ADCBUF0Lbits 000FC2                                strcat@to 0060  
                       ___lwmod@divisor 0069                         ___lwmod@counter 0020  
                            _PIXY_INDEX 0035              SetOutputEPWM3@outputconfig 0061  
                      LCD_printString@i 02E1                              _PSPCONbits 000FA7  
                      LCD_printString@x 02DA                        LCD_printString@y 0078  
                           _USART4_BUFF 0200                          ?_encoders_init 0001  
                   __CFG_WPCFG$WPCFGDIS 000000                          ?_settings_auto 0001  
                        ?_settings_init 0001           LCD_printString@tempString_590 02DF  
                    __CFG_WINDIS$WDTSTD 000000               __size_of_encoderInterrupt 00DE  
          __end_of_motorDrive_setSpeeds 1028                  __CFG_DSWDTPS$DSWDTPS1F 000000  
       ??_communicationInterruptHandler 0012  
